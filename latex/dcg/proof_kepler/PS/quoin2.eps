%!PS-Adobe-2.0 EPSF-1.2
%%Title: quoin2.s
%%Creator: FreeHand 7.0
%%CreationDate: 4/23/97 10:13 PM
%%BoundingBox: 0 0 157 160
%%FHPathName:Merlin:Graphics:FreeHand 7:Fust Ä:quoin2.s
%ALDOriginalFile:Merlin:Graphics:FreeHand 7:Fust Ä:quoin2.s
%ALDBoundingBox: -158 -520 454 272
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%DocumentNeededResources: font Times-Italic
%%+ font Times-Roman
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%DocumentNeededFonts: Times-Italic
%%+ Times-Roman
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t=<u^::f"!!"II!!3-(<,$2\ErZ1?!!iQH0f^sD#?*Rp
%:!!!Y/!!"W23A<0D2E*?M3$9t30KB+5/iGRA0K([?0ekTe!!N?7!!#]$F*'fg@od;TG=,qZFCdc]EWH.@!!+eT!!N?6]`D&A@;KM,&HVqC!')hf#;@8T0JUcO3&3M<!&+C21<T\!!!E929jqO5Bl7I"G8($UBmNY\!<`B)!"3=KF(96)DugPmBl@kh!$2+?GQ7gG!([)\!<<*"!nm](s5F";!r2me"%EGB$n2;V!!3-#MZMH3P8-d&
%:-icgAA,lT1!!!+]#64`)-P%p46NIAk?jH`M!K\?&!':HF$37k<EbTE5;Is>?!&4LN:ddceC^:#P:18!"$NgA5!)<N4!-/'V!!*(.!,MW<!"W">FED57B;#A.J-#]UE,]>^!!#(f#;\@r1,1[0!AFL6!XqG=F*)>;;e'iZANUHQJ,fQR!"8ic!&->7DuaSP/c[\\@Q=EB!+Z(&!!<3-2$Bo\"TSk^#AFqR!."W!#ll[e1EBS0LCWB]
%:ATC7_DIW[&TfiA[!),<PF9$D=!-0e""`RmhCE<IQ"98]-5la^]:d4tL3sIYE0KfFtGR&1S%rVIR!#l(As8N-#d1nAO2]YY)G7ib'F_NQM:gn!-#VuKE,Q[re!$M=akPtYa58l`g*<6'R!"T&;!#,D5#$\qV!!#.b*$b`Y!<=)j"u$&X*&I^g*!F=_*'=<?!<=*,!!#.a*)$D6!ZZ1]J,gPh!$$B-",'ST!Z[$s+92bG6obJZi+;K#
%:!<<-l2[9in!WY"fB4Z,b!"Ju?!"Ju=!!"5D+oiM])#tKR(B>!]('#(.#nm:O!"f2B!!!No!=_+.<GW%%"UQsu#<*_.0cU9Y&d\OB57Gj\+95Ss<&5>83>Vbt"#i/*4WRr2@fU9E!!<3O!%8[$'bq>o!!,.a!&FU,!!#"jV.'c3.5_,+!(d8l2'Hg$"@`b+!!b4Z$34Z<!Y,eB.f]PZ:Dl5+%O=%A!rsl;"9:^s/-#_R+TNhhZ*so_
%:!#=Mr!#=d]-3F5_ncAdm(&7k1('F^>((1*B56ht>!B1ks!#?OS!?%:*!#?g[!It.M?m$4F"uQVc(,Q!kk%6IO49,B*b_1j2!(6ee^]4?M9Nqi((0#DV>QXsAnrQuo2$-2W!!!dVI0#!'!#CLp!!3pu!+?!X1BLW#!!3q@!!!'9\H"*>!5SYuUcAi!aT2AWe9_;Q!rs*^%2S:3!!3p%!:^$h!Z*9c/O(!^<+U;r6tKs1LgbFB6UHuL
%:F?t"jE_@&G!%A$N"5OoX+DCrZ!BV8*F*)G@CJ65\!!m7H#CpW&FDl%i!6kR0&-Mt7!!HnJCi$OP!WW<W+itf.1D3>R2#oQJ!&6Vo1&q:UW;A:R!]*"?56*A;0/Gcm!%Aoi9*8lK3I)VF!3:T0*>ebV,!.4g4"BnD(69C^)[J;,h\mj\!08!N(]n3f3'.q-(chWs.i/H.(HkAX(K5F$BOaOt1F7r/2(1Qe4#8\p0`V1R!Co-]1BZuS
%:4UqGq3rqg,.T]V]!,"GpDZFn[DDtAq2];]])uqnL(48%@+Ya**1DaU96$3iL0aIaZ,8L8/!"^DM!"_(8!#B>s!#D:2!#DR9!%TDs68K1'"Y1r=!#IHl#\IlQ!Z*is2bOrA!/`6+!!3sN!!!?h%4D3t1CYls8pN9G+I<g'!%ICp8cM!Y2#mj]*<7$78KB$<V>C5mE-X'#%n/HR*rl:1!(?kf3C48W!0^Ue!!WB]BE1O6!!#Ll.`ZuC
%:!Au)f1^a9e>;\2:'/MEE!#,P93rf6^;)L?7#G3e?#gBf2!$VC^QUr5+#G"!Xb.*'/]ZT.<d_Gl@!DO^<R@+%Ms8N''AmbU3(_-OETI`6:+u(N<!&\+XF"n7,0pk3+!#!3qPQ1\N?kU[h2ZOJ5=;'D;!9+%[!YPS`q#F"e!#%@O70+&1!rs!Y8J<'D,m"AP1M7@HFT=3"!#%a#$I%!W"&.4#9c>kh<!*+6EF]_l!WW98Bg7ITg\Uc-
%:'77tM!!"`B'8$8b70'Ck!#)^A!#*"l"N(9@&5!!;d/a4\g^)@M4(8la!rs!Q@K:55'1jZ6D\PKA!!!]ABd+6)!!"_S'Q[UqmJoa#7mo]m"Z]C,8-Ur=<,$2\F"L:.D-#k/4IlgBRKPE296sBX8H8`T>R1<0!Y.4IGQ:Q!81d@R;(Y<f.f]QT83:Kj84?N5n,i;8eOKcC/Oua",8NQcm71.V;ZHeq&c_n`7g)j(!!'e77is<QmF]%S
%:"pP&.#>!(7#`)@H!!EWs!B^>^!XD1X!/=A>#>Wk.#`^bCo\3(]a$ppV!/F$G=%4;42.$=`=#\AO7N>Pi6755Pop7f[4Tdbi!<<c\7KQaT!@L>bNjq)5'.66P4USYfg9Fd)-Unn%0oI97<\#C]"*5\R^L'30,=2H>!+#X*C]I`R!!"61"CViA!$af?Bepk;W46UC""0`O@mXfk!2d8A#B!^M#d-#c,=;Dlc7IGZ1%S+q+*0bXVf?N=
%:!'*(lL`8G#'/MR!LaP>(2*`BQ$8LP$;D!\RY9(kI"X?>H=X#(WQ$OZA^M4u["`"*0gh>Lj&c_nV63M*9!!"61$8]m+4l?;AWQZEF=j0*F#T*Z`!&L$1:PH^e1C$YGi!@Oa!@^A9C+jNC%KMQDDI8)=GscEKB.;%FD`p*06Rk5;4Thsf.74G^3rq!g.*Q:e3s-p!]Qbkm^NM%n"a9rh[f?C.F:nQR.745_&-)\Z6OH9'b%?kDM)!_U
%:6gIqV-j'R<DhZ7q!(#pT#LE@q#Y?lS,=2C[IMiUqK0jl_65su4GlVn166.dC081o>)E0c'64/,*O?3J-"^R%=!!!$_!3?8&'=7iA'>+;P."TUl2$(Sr!!3h]!<<eg#YIt+1BH_E,=3&8+tnWT.0KVQh)u?DbQ%VDD't,.I]EH1C4BM&(k!%t56*K<#mZ/'rs5F??p6B#!/1CQ!!rm+s4g]WK`H5q1Cd%]2O+7B!&4ID"bB_Ym!AqC
%:($>`>#Fh-[#hLkCFD-@.K`D)QBE:JgCet.d!&X`V`=)c'<IcbL$itu:$\V^g,3oFj$m"42UsZ7KE"7SU!+c.!%%D"U#g!t:#DE/#!8@\X.\iE!.g?$/3sLIE"qg/*)d!\IAjD%MK`I1;8I`R*cr1U3!-J:j'1E=d<s9,$"]#sj(O?C=+IWY;h\ZX6Q8AXL#Bp:U\7Kaf&n8107#_0H"U>&-rrN0lM$)QRG6.^c3</9E!<@fR:5djM
%:K`D)QBE3P_K`Hf,!<<-MWp0Nb!/1E,!!$4)s8QR2K`FOA!!$m=?ig?/N<"8?4'%7>:b#'Q!!!$t&S<;I3Ym]O&IV56!WW;^j"UQr,"3k=ba;9DK`Et18esquci>b%!JLOH%lF>e"c=s'"cl^g#q#lV3bC2S6l^m\FT=o8+(*E`bZFn"!-J:n"[j>m<s9K)"fWDk)g)-S.-p@U2@.J;810U&"V`<f!'h&\$\\S'!(R3Gn(.gRl8Zsj
%:0VjHA#DE/#!!!Z4%P[qa!!*(a!!!"^!0@2@!/^c4!/1E)!.Y%L:ji=a!+l48!)3_!!s&D#p&G'1!'Lep!3#Pj2BMo%!"M\2H"D"b!9%I&F@0t_DfPgXB+"_?QN3<O2Dh+(!!!4-!gNaM!(d:q3jD13F_Lhd!,83>86Z?"RfrflrrN0];ZNV:!<AW$!!)HlE8R5g!&QAo".]F\!'_\m!rtUe!!#^r%fl&#5]ECu!!E9%s8N(lo%6X[
%:!!#"^3\q*C63'l2@6!Xi0WB'mD`nJG4UVJp@0CEN7h;Et!6%2d%Pn6`!2E[1$9o.1!<<-D!2]aj2,F:F;]Q)C"#U9Q58Rlg&T.RK!s#8"j0Uuf!!$R6#67Bs!,2E5!0@9_9b^AZ"(;11IVq.PAMFt#IQ(m@"opkS>mF.61*-Js6N^JKs"t!s!,O_*G;B?&!WN-"@fnk)!!$.%57:NpMCSZ,"98Ze+^n@TD?+cC&-+WkY($IV2:DJA
%:!r=?/!0[aY!<E0X!!5.k6NDBr!cC4'YQ-lj?=<eo,Qb.U!<=tX3ro<g3tQ0?('(T>Y6+%jXT5C%W<`J/#67O$!!!'^$-5ll<h+R=!<<(Q!+c-3!**#!<tL&cK`F#<85=\h!8%%#!!<5$@o*/Z!/1DO!`Bgm;2#!M!!*("<G2C4EJ4CH!&>%&#VQJb5UQ[7Qjj3];M/3k!!*'!W]j_g:JFrF!+c-2!,WT7$3U?g!!"q`WiJGn!b6X$
%:9*9kJ70*-/)#sX\$4r/&K`GZa7^<'qC8u+e,PPaLZ!H2iAH2]1l8SeF!(?l\!pZfcs1(l+!,=InM>fIP!3ogE#p]1U!'L^cD+aqE"onWe2['3]?9\Aj!!58166\G!!!*'!.Qe>>(khs$!!3-CmJ[4gK`Hf,!(-j%&h5^O8/#P73!BKd/-Z,/Q<"(f>Q4[S"uutp!1X6"[3C88K`Hf,!!$[473Y58K`F^[s7\Z"5VN0<3\1=4,M*16
%:K`D)Q=9(,YK`Hf,!!!'d*<6(n!<;A=!!!!T!`g4n!/1CQ!&sr[!/1E,!!#"ll8fYm$3.5&"&B7m!!!!i!!*(R!/1D-6O,=G!s"5Z\,ZML[fEi:[/dQ6ZNL7o(dS-%!&Jp$pU<_&78?,K:mV/R!C6]MC,9T)5l^lb$ig8p!C6_]^Hhic!'pTR"$lne!&"?Y@g*,<!)3M\!':nq!(T!HcV"7(!+>q!!'pTN!!##W5lde`!!#:fcd*`#
%:8HqZe5l_]$!!#Oi!"(dt;,RAo_Z7OR_#V7N!"lsG^&YhH]E#PD\igE0!)bUZ'h;m:BfC3W;dsi/!,jl,!s$:B&NO8i"Wf6!s8N'!Ba"_A6"sC#BJBU22$?QY`rl@TKl[=rUB=!d5l`V>$9'Y=#ltb@a??-7$iiOXaY<h7!4`*8!2hPj4odJ@2ZQtI,mXJq!WYRoaoE\G"p"]tb5MVG8M:B9&=os4!!6[d$98.j!&62>@2CKq=jg+]
%:!"o838K@d2!C6]:!!#7a4;.Ht(B>lb=9&C%rr=`BBl%?h@VfTU,=2Yl6;:C#EYJLfDJ)*G!<H[1!"f239gi]*F9-sn;c<Ys5X7?m4oe8jF*%B_F'cXL0`a&b!!Z.m@;TQV!'UA`<db$5!ep\3"T],6&mYPs#nR(;7S#pc@n6eNART+\E^'X+5]^FF$"e!i"(hXV6R3L9F#F=*&MXN0:L\'M2$c#A'`eo(!+2'N!'gN_F#=/6cZss4
%:!!*i9'iT'iVuUM!2E1kP2$![X*!$X>@<>oX9L&RXD%$Fe!>.b:ASl!rF9"QU(u\/0ErmR@"X!gf70-Hs1CaF/!?bX=&?l."F$B9u+orf?#AcR/AtL@M,"Db<Ec6)>!(d5?!?XdFB6A5YSOik`"=jL$:gnHZ0aIa[F"Tf^AcMi3KId-S6#q!aG?FrYF$i;N#;ZAcJ.YIhDIkL&3s%/G0E<p1&OL;P@j(hf!!ki%Ao)9F!]9uj^i!f^
%::i^JaARH6`8-V3W2?>[%@<6-m1E:4R$9)o)b`P6r?NXnP4r$'Z70#m]E(i//.O?B)!$2/1!C]`n4p5<q0EFZE78n;RCh8.u5S-1L!_<>67s/NVATL'BF)rW-!"8m?@q0Q[!D*8T<_Yjt!!!$l(]XS.<_<K>'`gr.8lTAHF@L1hD&`plFEB2Y!'iFH9E>`)@:CnjCbQMX'"]8C%o"_Y2ZbrLCJ#s0(BI8n%UjBdB6#GO@;ngQ[=YrK
%:5Wf;QF$(9?AcMj-!"r70k2pt>!-8,b,q]6D4U"\n'qPR/Aoi"qAigQ9!TQEi!!,su91K:O"umAP"&o;!9`Qpi+Q.BZ9W.tn!!-)Z"Y^9;%p/fq5t;^#6q2)S,:*@8!W^D-`<JU.5la1N!##B:n/O._=$ZgL!#%%H'067^!'pTN!##B&!>0iQ!"qKs7KFeo'Lr-l!=o34!DJBQ0`Vsi2DY>80`Xd0!B3:I!Aa^=!(SmKU;B\,m?aZ[
%:=>9mk!CpJu8MpNO!Wc!r8MCfR+S5\(2[)AG;#sWZ!(.#R!]^9T3ri"VgK%MZGl^J]!=%Qb!/C\-!X(GF#V/1@!G;CB!(K*,!@p/_W;oWm0`V1d4AeTZ+[6<>%lXS61BC_37QEA.FT=]=(-M[a!'pTN!#@F%/3a8'!'pSb!"T)d!Aaa4!Aaa4!Aaa4!<n'2!Aaa40`kE15X>A\!Ajfg!WRq"ekNo,
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh 
%%IncludeResource: font Times-Italic
MacVec 256 array copy
/f0 /|______Times-Italic dup RF findfont def
%%IncludeResource: font Times-Roman
MacVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
_efh 
end %. AltsysDict
%%EndSetup
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop setcmykcolor}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {1692 1584 2304 2376 } def 
/bleed 0 def 
/clpr {1692 1584 2304 2376 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1850 -2104 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
 dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
 setlinewidth vc newpath 
 /ts{{false charpath stroke}ta}def exec 
 xt setlinewidth}bdf 
 
/strk{/textopf currentoverprint def vc setoverprint
 /ts{{false charpath stroke}ta}def exec 
 textopf setoverprint
 }bdf 
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1] vc
vms
1871.9995 2126.3994 m
1924.9369 2212.5264 L
0.6 w
1 J
1 j
3.863693 M
S 
n
1987.2688 2212.7742 m
1925.1094 2212.7742 L
1.2 w
S 
n
1850.3992 2126.3994 m
2001.6008 2126.3994 L
0.6 w
0 J
0 j
S 
n
true eomode
2001.2841 2126.3994 m
2001.2841 2128.2994 L
2006.034 2126.3994 L
2001.2841 2124.4995 L
2001.2841 2126.3994 L
f 
n
1871.9995 2104.7992 m
1871.9995 2256.0007 L
S 
n
1871.9995 2255.6841 m
1870.0995 2255.6841 L
1871.9995 2260.4339 L
1873.8994 2255.6841 L
1871.9995 2255.6841 L
f 
n
1947.4172 2249.101 m
1962.8715 2239.5862 1976.3963 2227.2354 1987.2688 2212.7742 C
1.2 w
1 J
1 j
S 
n
1871.9995 2126.3994 m
1987.2688 2212.7742 L
0.6 w
S 
n
1925.1167 2212.819 m
1947.4172 2249.101 L
1.2 w
S 
n
1947.6002 2263.2008 m
1947.6002 2115.5993 L
0.3 w
S 
n
1925.1094 2212.7742 m
1871.9995 2212.7742 L
S 
n
1997.9915 2122.3193 m
1994.4007 2122.3193 L
1994.4007 2113.3194 L
1997.9915 2113.3194 L
1997.9915 2122.3193 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1994.400696 2115.919357 m
0 0 32 0 0 (x) ts
}
true
[0 0 0 1]sts
Q
1867.9526 2252.4007 m
1864.7994 2252.4007 L
1864.7994 2243.4008 L
1867.9526 2243.4008 L
1867.9526 2252.4007 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1864.799377 2246.000778 m
0 0 32 0 0 (z) ts
}
true
[0 0 0 1]sts
Q
1900.353 2223.1203 m
1897.1997 2223.1203 L
1897.1997 2214.1204 L
1900.353 2214.1204 L
1900.353 2223.1203 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1897.199707 2216.720383 m
0 0 32 0 0 (s) ts
}
true
[0 0 0 1]sts
Q
1868.8394 2190.72 m
1864.7994 2190.72 L
1864.7994 2181.7201 L
1868.8394 2181.7201 L
1868.8394 2190.72 L
n
q
%%IncludeResource: font Times-Roman
{
f1 [8 0 0 8 0 0] makesetfont
1864.799377 2184.320053 m
0 0 32 0 0 (1) ts
}
true
[0 0 0 1]sts
Q
1978.7925 2259.1207 m
1951.2003 2259.1207 L
1951.2003 2250.1208 L
1978.7925 2250.1208 L
1978.7925 2259.1207 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1951.200256 2252.720749 m
0 0 32 0 0 (\(su, y) ts
-0.439941 0 rmoveto }
true
[0 0 0 1]sts
{
f0 [8 0 0 8 0 0] makesetfont
0 0 32 0 0 (, u\)) ts
}
true
[0 0 0 1]sts
Q
vmr
vmr
end
%%Trailer
%%DocumentNeededResources: font Times-Italic
%%+ font Times-Roman
%%DocumentFonts: Times-Italic
%%+ Times-Roman
%%DocumentNeededFonts: Times-Italic
%%+ Times-Roman