%!PS-Adobe-2.0 EPSF-1.2
%%Title: quoin1.s
%%Creator: FreeHand 7.0
%%CreationDate: 4/24/97 4:09 PM
%%BoundingBox: 0 0 179 180
%%FHPathName:Merlin:Graphics:FreeHand 7:Fust Ä:quoin1.s
%ALDOriginalFile:Merlin:Graphics:FreeHand 7:Fust Ä:quoin1.s
%ALDBoundingBox: -129 -483 483 309
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%DocumentNeededResources: font Times-Italic
%%DocumentFonts: Times-Italic
%%DocumentNeededFonts: Times-Italic
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t=<u^::f"!!"F9!!3-(<,$2\ErZ1?!!iQH0f_-N#?*G!
%:!!!W/#S8UC1,T1g+>PZ-3A-g%0E;(V!!!!29OW!a6uQR9Bk;KUASr'8FCfIn!!*'#1][R[!"cgE;e'5YKPY3$!"T&i1G/nd+>GQ)bQ'UX9E7)s!&cUU!<E0'!"DY2@omA^A-DsOG>i4%;?[((!!<3/A7]glEWALAE-,f4D?'YX!!%6D!rr<l!'gNT!<<2T!\"*-s5F+U!_*8]!t#2["8i-#!!%oXfE*H$8H`Q(!!-S\!!!*$H&$S"
%:!!+GX0`aWB"or$:!#Yg!*WQ2U0KTP!$;bbWDKJcf@fl]c!DlT\7KNR(Ch6@MD)ht+!!WEu!,hjX!!!"9!+>kD!!E94;e:&mBl62/B;#A.!!dI^A5*%(3sl3K3AWDr!&6Ac!'()h6ZmHlDf&E_Eb/W$ANUG&!!WE3!&ag22["("B`Kb/(]Z?P!&+C`!)!:o!!tLcWWE>($&*o_#AF0a!&+]Z0a]]W=Cu,b7WiSm-t<6?!!WEsM!Rna
%:2Z\"#F>Eo;0aIr%@6bNGCE<TY#QR-j:]O<V!C]'S2ul^F0KfFAE'b(R!=&TD"T\T&!W^U_0bu\g:'>fQG=Qdi0cX"uB1N:a!Bh\0!$2+`3WK.%!WYG'56Do+!#,DD!"/c@!!"^+#$V'-4Tl`M#+P\o*%V:J!<=)r5r&L5)ups@!uM%=*(']+4TcZt!WW9%TH%qO)uosYHufCC;Zd(@M#\YIOT5_K#7:J3!D,3T%fcY21D"21s.k7]
%:Erc7D!"Ju=!"Ju/,6/nf)?:WT(]X[B(B>3N'fQF4!"o8D!"],1%mL(p>7EY3$TA4q1D:!P*sFA="$I8'!!YXrcQF!r+95@s(O.qV!rrE^2aTYJ@/sd;COc`l!!<3L(`3u&&eY0F3s5O>!%mG;!!#"j$32M4!<<*k"&q-$D*J.m$OQk=J/L'B$31,;&HF<]!"MdB3tVrJ3=;\d!rsN"(EYFB!WsSG-3+#\ir]8r8<`<@!#>&+b!.a0
%:!!3o2!<<l<!rs)E!!#4g?iUs$)$'^Q)up!WR/d4&,QIjqYRgd7(-)RV#65Mr!!).n2$#f>!6dbubV]Ag!!'e7!#A74$31i@FT>YK!-q*N=WB:#71T@u(3Fs*KED2iMuit\(6JTS!%.aJ(:aDp1B>5k/3a3cG66Qq5m%*&FUT&P!WW9;nGiOj(F]>93u%_q&6*4cF@9\P@<HC.6$.3hLlb+>!!"GN!!D$rD]/WW2#mi%FE/K/cIJ$(
%:Dehln!rrU?@;KOtDf/2JblTs;J@5R\!WW@8Bl%Se!!>A+`?#+G&4]>M8uM_G&HFOG1bo%2!\jl\5<Jp1!&+C+pJjF?+WLPR"(<0/E?"rY0cV#1!$X3I'eL@+(5Eh+4>.QX0aQAK0,O\E(ag+03<0$p-Pm!5(,\ZZ(/o="Z[#qf:Hgib4XN5j3]f(u0`V1R!Co!Y2^52Q$igGm!CgEpAH6@#<,VbZ!,b"rbo.T6!AcDf0hiQ\LO4fE
%:'K,pk0`XFB'ES8"!'u.!!!"2C!<<'#!)EUq)[E=!oEZ@"DmM6R!/1CQ3!$D1pfIQN!-J;!+^YER!4<#("9LFg9cHEK#")`%+TMNBrr`<V2[KK"#IM_H#]I^pK`Et1oE\ld'`\46!!rn/Js-I3]V>_94oGXc3&,2ZN;tsg8J21,!#Brf/L_hE#QOri&\89C4[s]?3<hJe#QOiS!"],A0er_E;,a9+1BaES!#DR9!!3q@!!&iPJ+epm
%:7lrQL!<=8`#=&FmgGAmH1]RenC]FMQ3CuXUB3,dD!Z,PN!!PA9-ie<I3?UO).I[E.`2b[#"99GB)a@7A!&$g78j*jb!!"W9%Rid<cUSiQ!)!;`!!$/W%KN,4!!!3&1NX--7g*Z/!HB@m!!QRm1B8(I2?3^k3rf6^;1Jd0'`eQ?bjl$/StH&oQqoIB#='-*4TImATEi/A/dP-.!DOX:R@+%)!)ERo!![%C!)OLB!%^8^+uq&HP/!_>
%:huZn=0lSiZ!!#^n70!<#_uKd5C(a*'b[!(+&pm:bgjK1^!WW97q#F1j14fK>6S(/h'+=sC'73^m)up9E5B.?5/L5H=1BRUj6i[S<e27>%9c>kh<!*+k/JEPM'4M"C!Y]8J;*+f*!!#XqK)bnIU.#'`!rs"A!rs"IHN_4f!!3h]!<<cF9ABeI5!]/^j9#AqDf,Og8Las",=,t+:B1A/$u$n"'*&"e!>KTj'MAE+77BQl2?_&j0BZ$J
%:G=F#KC]ON\ha.PJ.7:%7.748?!*'"!E?P_j\,n*H"BZ38!(.\S6O!_p!=-S(KEu3R/H\BAQU=(@#K&\)AUjacb0[p0D)D??@gE&7_a54N!/!UA;aMB&0j=VX=TDAF66.r+HUe_o67P,:2*cX6'-fgF56)?A67?^5?o\B863KFYI7Y,;5QLj@6<PKW6Bug@6GHqR63Ufu2&cO&&c_p9#U;Y=@h8V?,=2ladcq)Vs31OF*rl?IN@nmJ
%:5T4c.!#Ya\#CU>6#Ttu*,=;AY44Yt1q`XU>`>N_`A,op\66.fN,=3nD)E0c'64.?e!@'oZ):9U>/NX%Z6G.@.bJshf.>4X9,=2QN!,DQ7C]J2_!!"61"E"bN!$af?UU3&f@R'ek""0`NBnW0C!+8%i#H6C##\Z'r,=;A[;aOE4E*7i2F$adF3UncB)f[er3I+-90?,5")Ee0I64.5PE]X:H67?NE>rr-565)p7.>3t-,=9.h^(<=k
%:,=2QY!*]JI!!%-S!!"61"F1OY!$af?PlMR*EN=t\69lQT4TKE$M?fRt;@%J(!@'r2;aPh06:LSaF$b0QF=Dk`HoF#067P,:4Tcoq$@Ou:,=3f'1]S-Q3s-]o/h$o'"5Omr!1B2S!!0o=D'so'IfKNMJ6`g(I1lTF!'Ll4#;d,'!!mML1PGg_!!!!<#H3OP#YDp[/,Y)$K`F&49*I3R!&4I<2$AM4"V[4+8Hh<V!!um37g29`1'%kZ
%:K`Et1!-eMl"U$+[!<<*k#)*J=3<rTHKj+`jRg&pK!@eEa"U>&-rrN0%!!N?>Hir1E1B7FUs8VAb!<@fRK`D)QBE3P_j/7S2K`D,R!@k)N!/1E,!!$4)s8QR2K`FOAqTT!?D?F8J!<A)Z!+c[r1^Q;ak%"Mn`=Ib\(0_i:<=]C/!s/H(0`a-B*LU;@)he97!)4ET5I4sp=94*UFT=Q;8HirM7g4fP"YiOIrrN1E"cn^7+iYDKQn3W[
%:?Qb%&2#p,M8-'T%P?7j>!&Xa@#f&_t"(qdj!&"=)!0(+b)up!=rrW6$!!b;9#RE'F3sW.:p^"*S.guCX'EARs!!*'#!0.&<!/^c2!!!"O!.b-!!-8-R!*oS&!(6fu!'q"n<VWNc0a.R]!3#Pj!<<'!"98H&%SU;VATC4MBll^\Ci;I`_'+4:!<A5^O8tFF!!WEr!fm=F!(d:o<!*+)!(R$32htoubB"!jPm%0fs5TFI!)Efodto#Z
%:?i^7n&-)])'h&0(!)Efd!WY,,56D)]QN36M$NL/6!!#:b3'%ZP!:L#Z!WW?'#64c(rrAJf!'(0E.gc8C!+>k;!!,5u!+u:P!,k".D?+Aq!rua4V$N[p!5r8.%Pn6Z!1btZ!!!?j&lf2<+TS/8)R,_3R9^^9!!>(_7lplc2%`Kc!s#%qj0UQU!!$R6#67Bs!,2E5!0@9_9b^AZ"(;115AiIfAMFsrE%ko+"oo/6!*K:^#WPBW4mL_d
%:!(-iWIp"W5C]J95%!OK0V?-\s!*94\$3:-0!(-k)<'^Ka!!E9,!)5<^B/]p11LX\l!!<4NU8U]c0`YDZ2[#<O0`_=U2#m\B"@E073<O1!YWi.O49>I\&Pl&l#lt#f!_F183tQ0?('(B8!HtFBVZ<OnUBgi)#67O$!!!'^$-G`f:-M\Z!<<(Q!+c-3!**#!<tL&cK`EeN8k+@"r.P-)!!<5$2%'EbK`Hf,;Z]i53(\f(<<*%"p;];C
%:<E9(ZBE3_dK`Ek<D[8!&!C/"8!1457<#>T8s8T)Q<_lQkT7m8V!!*(:)*/*-!0$sY2[HFa64-?fK`FOA)#s[-9-O]SN`Li6AH53*!WZu8D&4GkAH8ts].t28$NU7m2us$[70#s^lDjma\P<2+C,c2\![mfK?"sZjpLO=f$`7K.!bhi=!'W=F!<<'#!,2624=<H>#$NDSs!g,D:DeccAH2c3+9V[u!4VcX!!#@gBG)dO'1`dJFb/Gf
%:!&t,d!%\<T5CZ]9!!"PS3Gj*L#6:7u#rZWPG"DZs/HA6rK`Hf,!!!'d*<6*>on<C"!!!!T!`g4n!/1CQ!&sr[!/1E,!!#"ll8f[[?q2c%!+c-1!/qqP!/1D;<<k5Y!s")VZ2h-0irH:`Y5k^*XTSVi(dS-%!#Yb:8R_X;2-r45!<>Oh5la1N5ADuh!'pSb!"8i-6NKIQ5lg][5la1NW<4dS#Y@_j!!iQ)9`dT\CH"aB9)q6X&?#+\
%:@05of7fYgT5l^ml#YP=o!'pTn"A]"f"$lne!([(iDu^5,%T-+(!5/BF!4r6B!4`*>!!-*/!4Dm8!44ls$o*0A2.:2`I<8Cs;9*c;GAfKN!s$(<&N2=5"U4r+!!$^:#6:b_6"sC\JS@2PAH2]4!5Sd;EruE;"%N>W!3iCV!"(Y=<=&[@!5^sd^^L4\0`eugZNpp=X8nqKE'41Z!&jm(#QQ%M!(.&02T,S@2[09_(]XR9rW`EpROan"
%:0*soU$ig@;\MJL53<B<`0ej5J(G,Ue&c_o'*<6'?/-#YQ!'gNH')?D[!%J"O!!3-"7VMj1Ch7$aCh3Sk,6.^"6;:C#EbQp%DJ)*G!<H[1!"f239gi]*F8uCH;c<Ys5X7<V4oe8jF*%B_F'^R%JXeI7!!Z.m@;SdQ1lhZ<I0)S61^*mj0E;(c>llnj&-)`#847B+87c4?0em6[56CmNF(8\dAo)8cAcm*A6ZY-l+N+9m0aDYn!*6UD
%:@VTI3#W)Z!!>/\*2?6PW5QF`(2$RXm!>Y\N;fHYgR5R#.5QYOT!<<-?!>._.FC>/C!,W,F!!")A&OgMID.RU,!'i#-F*#A-![BE'+9<QQ!ETUa%KR^R+C(K<5]_X01ReCh!?a'$Cd&)9T-XL^7riNj+:N2h8HL:@+%BsWF`M%M#<2i9!<I^!:Ng/_!'gQs4THu5-r=>oBS6@X!<I6o6N^p#!A"7%6#q!aGD$3(!G6C?6T>-'dMqkZ
%:!>/">DIkL&3s%/HJ0?TH1]\1TCi<g!!!ki%Ao)9F!WZUc!>/.KDe!?h8-_9X2?>[%@3*R5Bk&q>3sSan2fJdb"^_@DAj-tj!_!*O*_?HQ9K!k?,pb_T7KGqQ%mC,*!AFOE!C-ZS;fm;$AUskI706!\+%LHf&--6PF$BtPF!UeeAn,=l!!,Y"(]Za#9gKZt!!,[m8QJFd,8L;Q!D3>3<+U;r7W3<a@<?TF+94Yb###%)/eM&kXt2"8
%:@P@du0GFKfF#4D%0EF*63"KfG$;)^-$is*c%UjBdB6%F"8eaNQ#Q\<nF$(<@AcMj-!"r70H7Ju:!$`dB![G7+4U"\n'qPR/Aoi"qAigQ95U-70;?;$`91K:O"umAP"&o;!9`QpjF_sgO!ET7\"T_V_"Y^9;%p/fq5t==4D`B!g!@*X0!W^1>'/DO5!'pTN!##AQ!#%Hs5l_SV7V`$_!/1CR7KH$[&i0SY!@9Z=7fYsZ.KL%\@:?"E
%:<rkuL!#>Sn1B:N3!(fBU2jtpT!tt\k!'L<P2$6n\=?cj#!CpDs2jR<*!%S([!(fBU3<9.T1B^91'2JWu0a7W,4onL];uoPk8`]st!<sbL"sX-Q;ZUM97T_/AJI!fP#YtFi!@e'^0N&Q=$6_D9;%M7N8H:OI7QiY2FT=i@(-M[a!'pTN!#@X*/3bo*!'pTN!"T)d!Aaa4!Aaa4!Aa`W?o%g>!Aaa40`kE55X>A\!AjfgJ,fWMP(,h7
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh 
%%IncludeResource: font Times-Italic
MacVec 256 array copy
/f0 /|______Times-Italic dup RF findfont def
_efh 
end %. AltsysDict
%%EndSetup
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop setcmykcolor}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {1692 1584 2304 2376 } def 
/bleed 0 def 
/clpr {1692 1584 2304 2376 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-1821 -2067 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
 dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
 setlinewidth vc newpath 
 /ts{{false charpath stroke}ta}def exec 
 xt setlinewidth}bdf 
 
/strk{/textopf currentoverprint def vc setoverprint
 /ts{{false charpath stroke}ta}def exec 
 textopf setoverprint
 }bdf 
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1] vc
vms
1843.1993 2159.7 m
1843.1993 2195.4888 1872.2111 2224.5007 1908 2224.5007 C
1943.7889 2224.5007 1972.8007 2195.4888 1972.8007 2159.7 C
1972.8007 2123.9111 1943.7889 2094.8993 1908 2094.8993 C
1872.2111 2094.8993 1843.1993 2123.9111 1843.1993 2159.7 C
0.6 w
3.863693 M
s 
n
1908 2246.1009 m
1908 2073.2991 L
0.9 w
S 
n
true eomode
1908 2073.6908 m
1910.3499 2073.6908 L
1908 2067.816 L
1905.6501 2073.6908 L
1908 2073.6908 L
f 
n
1821.5991 2159.7 m
1994.4009 2159.7 L
S 
n
1994.0092 2159.7 m
1994.0092 2162.0499 L
1999.884 2159.7 L
1994.0092 2157.3501 L
1994.0092 2159.7 L
f 
n
0.6 w
S 
n
1960.5428 2159.7 m
1960.5428 2121.7656 L
1.2 w
1 J
1 j
S 
n
1908 2159.7 m
1960.5428 2121.7656 L
0.6 w
S 
n
1944.1536 2168.07 m
1941.0003 2168.07 L
1941.0003 2159.0701 L
1944.1536 2159.0701 L
1944.1536 2168.07 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1941.000336 2161.670074 m
0 0 32 0 0 (s) ts
}
true
[0 0 0 1]sts
Q
1958.8573 2152.6499 m
1955.704 2152.6499 L
1955.704 2143.65 L
1958.8573 2143.65 L
1958.8573 2152.6499 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1955.70401 2146.249954 m
0 0 32 0 0 (r) ts
}
true
[0 0 0 1]sts
Q
1915.4146 2081.3991 m
1911.8239 2081.3991 L
1911.8239 2072.3992 L
1915.4146 2072.3992 L
1915.4146 2081.3991 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1911.823883 2074.999222 m
0 0 32 0 0 (y) ts
}
true
[0 0 0 1]sts
Q
1992.8154 2157.8999 m
1989.2247 2157.8999 L
1989.2247 2148.9 L
1992.8154 2148.9 L
1992.8154 2157.8999 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1989.22467 2151.5 m
0 0 32 0 0 (x) ts
}
true
[0 0 0 1]sts
Q
1979.3952 2125.0195 m
1963.8006 2125.0195 L
1963.8006 2116.0196 L
1979.3952 2116.0196 L
1979.3952 2125.0195 L
n
q
%%IncludeResource: font Times-Italic
{
f0 [8 0 0 8 0 0] makesetfont
1963.800568 2118.619629 m
0 0 32 0 0 (\(s, r\)) ts
}
true
[0 0 0 1]sts
Q
1972.8006 2159.775 m
1972.8006 2145.5589 1968.2421 2132.4195 1960.5101 2121.7369 C
1.2 w
0 J
0 j
[0 0 0 1]  vc
false setoverprint
S 
n
1960.5428 2159.7 m
1972.8007 2159.7 L
1 J
1 j
S 
n
vmr
vmr
end
%%Trailer
%%DocumentNeededResources: font Times-Italic
%%DocumentFonts: Times-Italic
%%DocumentNeededFonts: Times-Italic