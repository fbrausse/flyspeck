(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.2'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[    356255,       6916]*)
(*NotebookOutlinePosition[    357304,       6951]*)
(*  CellTagsIndexPosition[    357170,       6944]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["\<\
Dense Sphere Packings:
A Formal Blueprint 2010\
\>", "Title"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ << \ \
"\</Users/thomashales/Desktop/googlecode/flyspeck/mathematica/sphere.m\>" . \
\[IndentingNewLine]\ \ \ \ I\ have\ set\ up\ automatic\ initialization\ with\ \
init . m\ *) \)\)\)], "Input",
  CellLabel->"SphereIn[104]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(Names["\<Sphere`*\>"]\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[4]:="],

Cell[BoxData[
    \({"arc", "bisect", "bisection", "chi", "Chi", "cosarc", "CrossDiag", 
      "Delta", "DeltaX", "Dihedral", "Dihedral2", "Dihedral3", "DihedralAlt", 
      "dihR", "Distance", "doct", "Enclosed", "eta", "ExtremePoint", 
      "FarFrom", "flatTable", "guid", "interp", "norm", "Ns", "NullVector", 
      "Rad", "randomint", "Rho", "SimplexCoordinates", "Slope", "Solid", 
      "solR", "solRAlt", "Ups", "Vertex", "volR", 
      "$SpherePrecision"}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["General Utilities", "Section"],

Cell[BoxData[{
    \(\(failures = {};\)\), "\[IndentingNewLine]", 
    \(\(Assert[x_, s_] := \ 
        If[x, "\<OK\>", AppendTo[failures, s]; 
          s];\)\), "\[IndentingNewLine]", 
    \(\(ResetAssert[
          f_] := \ \((failures = \ 
            f)\);\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(Clear[HolForm, infix, parenJoin];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_Symbol]\  := \ ToString[x];\)\), "\[IndentingNewLine]", 
    \(\(negform[x_] := \ 
        parenJoin["\<-- \>", HolForm[\(-x\)]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_Integer]\  := \ 
        If[x \[GreaterEqual] \ 0, StringJoin["\<&\>", ToString[x]], 
          negform[x]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_Real]\  := \[IndentingNewLine]If[
          N[x]\  \[GreaterEqual] \ 0, StringJoin["\< #\>", ToString[x]], 
          negform[x]];\)\), "\[IndentingNewLine]", 
    \(\(parenJoin[x___] := \ 
        StringJoin["\<(\>", x, "\<)\>"];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_\ /\ y_] := \ 
        parenJoin[HolForm[x]\ , "\</\>", 
          HolForm[y]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_^y_Integer] := 
        If[y \[GreaterEqual] \ 0, 
          parenJoin[HolForm[x], "\< pow \>", 
            ToString[y]], \[IndentingNewLine]parenJoin["\<&1 /\>", 
            HolForm[x^\((\(-y\))\)]]];\)\), "\[IndentingNewLine]", 
    \(\(infix[s_, {x_, y__}] := \ 
        StringJoin[HolForm[x], s, HolForm[y]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_\  + \ y_] := \ 
        parenJoin[infix["\< + \>", {x, y}]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_\ *\ y_] := \ 
        parenJoin[infix["\< * \>", {x, y}]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[Rational[x_, y_]] := \ 
        parenJoin[HolForm[x], "\< / \>", 
          HolForm[y]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[Sqrt[x_]] := \ 
        parenJoin["\<sqrt \>", 
          parenJoin[HolForm[x]]];\)\), "\[IndentingNewLine]", 
    \(\(HolForm[x_^\((3/2)\)] := \ 
        parenJoin[
          HolForm[Sqrt[
              x]], "\< pow 3\>"];\)\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\)}], "Input",
  CellLabel->"Sphere`Private`SphereIn[6169]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing Chapter and Marchal's objective function", "Section"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ 
      renamings\[IndentingNewLine]{Delta0\  \[Rule] \ 
            sol0, \[IndentingNewLine]\ \ \ mar1\  \[Rule] \ 
            mm1, \[IndentingNewLine]\ \ \ \ mar2\  \[Rule] \ mm2, 
          Mfun \[Rule] marchalQuartic, 
          hmax \[Rule] \(hplus\[IndentingNewLine]Kmar \[Rule] \ 
              K\)\ , \[IndentingNewLine]\t
          Mmar\  \[Rule] \ M, \[IndentingNewLine]d \[Rule] 
            tameTableD}\[IndentingNewLine]*) \)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\( (*\[IndentingNewLine]formal\ text\ \(dictionary : \
\[IndentingNewLine]\[IndentingNewLine]_?\ 
                  in\ identifier\ is\ translated\ to\ no\ undescore\  + \ 
              uppercase\[IndentingNewLine]marchal_quartic\ \((hol\ light)\)\)\
\  \[Rule] \ 
        marchQuartic\ \((Mathematica)\)\[IndentingNewLine]*) \)\)\)], "Input"],

Cell[CellGroupData[{

Cell["KM-Definitions", "Subsection"],

Cell[BoxData[""], "Input",
  CellLabel->"Sphere`Private`SphereIn[1896]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ 
      Marchal' s\ constants\ *) \)\(\[IndentingNewLine]\)\(\(Clear[r, h, 
        marchalQuartic, Lfun, M2fun];\)\[IndentingNewLine]\[IndentingNewLine]
    \(sqrt2\  = \ Sqrt[2];\)\[IndentingNewLine]
    \(sqrt8\  = \ Sqrt[8];\)\[IndentingNewLine]
    \(sol0\  = \ Solid[2, 2, 2, 2, 2, 2];\)\[IndentingNewLine]
    \(tau0\  := \ 4  Pi\  - \ 20\ sol0;\)\[IndentingNewLine]
    \(mm1\  := \ sol0\ 2  Sqrt[2]/tau0;\)\[IndentingNewLine]
    \(mm2\  := \ \((6\ sol0\  - \ Pi)\)\ Sqrt[
              2]/\((6\ tau0)\);\)\[IndentingNewLine]
    \(rad2X[
          x1___] := \ \ \ \ \((Rad\  @@ \ \(({x1} // 
                  Sqrt)\))\)^2;\)\[IndentingNewLine]
    \({"\<constant test\>", mm1\ \  - \ 12  mm2\ \  - \ Sqrt[1/2]} // N\) // 
      Chop\[IndentingNewLine]\[IndentingNewLine]
    Module[{alpha, K, M}, \[IndentingNewLine]alpha\  := \ 
        ArcCos[1/3]; \[IndentingNewLine]K\  := \ \((3  alpha - Pi)\) 
          Sqrt[2]/\((12  Pi\  - \ 
                30  alpha)\); \[IndentingNewLine]M\  := \ \((18  alpha\  - \ 
              7\ Pi)\) 
          Sqrt[2]/\((144  Pi\  - \ 
                360  alpha)\); \[IndentingNewLine]\({"\<Constants in \
Marchal's paper\>", K - mm1, M - mm2} // N\) // 
        Chop]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    \(marchalQuartic[
          h_] := \ \((Sqrt[2] - h)\)\ \((h - 
              13254/10^4)\)\ \((9  h^2\  - \ 17  h\  + \ 
                3)\)/\((\((1627/
                    10^3 \((Sqrt[2] - 1)\))\))\);\)\[IndentingNewLine]
    \(interp[x_, {x1_, y1_}, {x2_, y2_}] := \ 
        y1\  + \ \((x\  - \ 
                x1)\)\ \((y2 - y1)\)/\((x2 - x1)\);\)\[IndentingNewLine]
    \(hmid = \ 126/100;\)\ \[IndentingNewLine]
    \(Lfun[h_] := \ interp[h, {1, 1}, {hmid, 0}];\)\ \[IndentingNewLine]
    \(Lmfun[h_] := \ Max[0, Lfun[h]];\)\[IndentingNewLine]
    \(hminus\  = \ 
        Select[\((h /. 
                NSolve[marchalQuartic[h] \[Equal] Lfun[h], 
                  h])\), \((\((# > 1.01)\) && \((# < 1.3)\))\) &] // 
          First;\)\[IndentingNewLine]
    hplus\  = \ 13254/10^4; \  (*\ 
      From\ Marchal' 
        s\ paper\ \
*) \[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine] (*\ 
      coeff\ of\ azim\ in\ tau\ *) \[IndentingNewLine]rho[y_] := \ 
      1\  + \ sol0/Pi\  - \ Lfun[y/2]*sol0/Pi;\[IndentingNewLine]
    \(taumarAlt[y1_, y2_, y3_, y4_, y5_, 
          y6_] := \[IndentingNewLine]rho[y1]\ Dihedral[y1, y2, y3, y4, y5, 
              y6] + \[IndentingNewLine]rho[y2]\ Dihedral[y2, y3, y1, y5, y6, 
              y4] + \[IndentingNewLine]rho[y3]\ Dihedral[y3, y1, y2, y6, y4, 
              y5] - \((Pi + sol0)\);\)\[IndentingNewLine]\[IndentingNewLine]
    \(taumar[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        Module[{ad, area, d1, d2, d3, delE, cc}, \[IndentingNewLine]cc\  = \ 
              sol0/Pi; \[IndentingNewLine]d1\  = \ 
              Dihedral[y1, y2, y3, y4, y5, y6]; \[IndentingNewLine]d2\  = \ 
              Dihedral[y2, y3, y1, y5, y6, y4]; \[IndentingNewLine]d3\  = \ 
              Dihedral[y3, y1, y2, y6, y4, y5]; \[IndentingNewLine]area\  = \ 
              d1\  + \ d2\  + \ d3 - 
                Pi; \[IndentingNewLine]\((area\  - sol0)\)\  - \ 
              cc\ d1\ \((Lfun[y1/2] - 1)\)\ \  - 
              cc\ d2\ \((Lfun[y2/2] - 1)\)\  - \ 
              cc\ d3\ \((Lfun[y3/2] - 1)\)\ ] // N;\)\[IndentingNewLine]
    {"\<tau zero point\>", 
      taumar[2, 2, 2, 2, 2, 2]}\[IndentingNewLine]\[IndentingNewLine] (*\ 
      compare\ the\ two\ formulas\ for\ tau\ *) \[IndentingNewLine]
    \(randhmid\  := \ Random[Real, {2, 2  hmid}];\)\[IndentingNewLine]
    \(randompt = \ {randhmid, randhmid, randhmid, randhmid, randhmid, 
          randhmid};\)\[IndentingNewLine]
    {"\<tau check\>", \((taumar\  @@ \ randompt)\)\  - \ \((taumarAlt\  @@ \ 
              randompt)\)}\  // Chop\[IndentingNewLine]\[IndentingNewLine]
    \(rhazim[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        rho[y1]\ Dihedral[y1, y2, y3, y4, y5, y6];\)\[IndentingNewLine]
    {"\<tau alt\>", 
      taumarAlt[2.01, 2.02, 2.03, 2.04, 2.05, 2.06] - 
          taumar[2.01, 2.02, 2.03, 2.04, 2.05, 2.06] // 
        Chop}\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Four - cell\ functions\ *) \[IndentingNewLine]
    \(volY[y1_, y2_, y3_, y4_, y5_, 
          y6_] := \[IndentingNewLine]Sqrt[Delta[y1, y2, y3, y4, y5, y6]]/
          12;\)\[IndentingNewLine]
    \(vol4f[y1_, y2_, y3_, y4_, y5_, y6_, mfun_] := \ 
        Module[{d1, d2, d3, d4, d5, d6}, \[IndentingNewLine]d1\  = \ 
            Dihedral[y1, y2, y3, y4, y5, y6]; \[IndentingNewLine]d2\  = \ 
            Dihedral[y2, y3, y1, y5, y6, y4]; \[IndentingNewLine]d3\  = \ 
            Dihedral[y3, y1, y2, y6, y4, y5]; \[IndentingNewLine]d4\  = \ 
            Dihedral[y4, y2, y6, y1, y5, y3]; \[IndentingNewLine]d5\  = \ 
            Dihedral[y5, y3, y4, y2, y6, y1]; \[IndentingNewLine]d6\  = \ 
            Dihedral[y6, y1, y5, y3, y4, 
              y2]; \[IndentingNewLine]8 \((\((mm1/\((2  Pi)\))\)\ \((d1 + 
                        d2 + d3 + d4 + d5 + d6)\)\  - \ 
                  mm1\  - \ \((mm2/\((Pi)\))\)\ \((d1\ mfun[y1/2]\  + \ 
                        d2\ mfun[y2/2]\  + \ d3\ mfun[y3/2]\  + \ 
                        d4\ mfun[y4/2]\  + \ d5\ mfun[y5/2]\  + \ 
                        d6\ mfun[y6/2])\))\) // N];\)\[IndentingNewLine]
    \(gamma4L[y___] := \ 
        volY[y] - vol4f[y, Lmfun];\)\[IndentingNewLine] (*\ \(Plot[
          gamma4L[y, 2, 2, 2, 2, 2], {y, 2, 
            sqrt8}];\)\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      3 - cell\ functions\ *) \[IndentingNewLine]
    \(vol3r[y1_, y2_, y3_, r_] := \ 
        volY[r, r, r, y1, y2, y3];\)\[IndentingNewLine]
    \(vol3f[y1_, y2_, y3_, r_, mfun_] := \ 
        Module[{sol1, sol2, sol3, d1, d2, d3}, \[IndentingNewLine]sol1\  = \ 
            Solid[y1, y2, r, r, r, y3]; \[IndentingNewLine]sol2\  = \ 
            Solid[y2, y3, r, r, r, y1]; \[IndentingNewLine]sol3\  = \ 
            Solid[y3, y1, r, r, r, y2]; \[IndentingNewLine]d1\  = \ 
            Dihedral[y1, y2, r, r, r, y3]; \[IndentingNewLine]d2\  = \ 
            Dihedral[y2, y3, r, r, r, y1]; \[IndentingNewLine]d3\  = \ 
            Dihedral[y3, y1, r, r, r, 
              y2]; \[IndentingNewLine]\((2\ mm1/Pi)\)\ \((sol1 + sol2 + 
                  sol3)\)\  - \ \((4  mm2/Pi)\)*2*\((d1*mfun[y1/2] + 
                  d2*mfun[y2/2] + 
                  d3*mfun[y3/2])\)\[IndentingNewLine]];\)\[IndentingNewLine]
    \(gamma3L[y1_, y2_, y3_] := \ 
        vol3r[y1, y2, y3, sqrt2] - 
          vol3f[y1, y2, y3, sqrt2, Lmfun];\)\[IndentingNewLine] (*\ \(Plot[
          gamma3L[2  h\ , 2, 2], {h, 1.21, 
            1.324}];\)\ *) \[IndentingNewLine] (*\ \(Plot[
          vol3r[2  h, 2, 2, sqrt2] - 
            vol3f[2  h, 2, 2, sqrt2, marchalQuartic], {h, 1, 
            sqrt2}];\)\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      2 - cell\ functions\ *) \[IndentingNewLine] (*\ 
      2 - cell\ within\ a\ two\ stacked\ Rogers\ *) \[IndentingNewLine] (*\ 
      for\ a\ 2 - cell\ of\ dih\  = alpha, \ 
      the\ contribution\ is\ alpha*gamma2Ldivalpha\ *) \[IndentingNewLine]
    \(gamma2Ldivalpha[h_] := \ 
        2*\((\((2 - h^2)\)\ h/
                  6\  (*\ \(=\)\(\ \)\(volume\ term\)\ *) \  - \ \((2 
                     mm1/Pi)\)\ \((1 - h/sqrt2)\)\  (*\ 
                sol\ term\ *) \  + \ \((4\ mm2/Pi)\)*
                Lmfun[h])\);\)\[IndentingNewLine]
    \(vol2r[y_, r_] := \ 
        2\ Pi\ \((r^2\  - \ \((y/2)\)^2)\)/3;\)\[IndentingNewLine]
    \(vol2f[y_, r_, 
          f_] := \ \((2\ mm1/Pi)\)\ 2\ Pi\ \((1 - 
                y/\((2\ r)\))\)\  - \ \((8\ mm2/Pi)\)\ \((2\ Pi)\)\ f[
              y/2];\)\[IndentingNewLine]
    Plot[Module[{r = 1.375}, vol2r[y, r] - vol2f[y, r, marchalQuartic]], {y, 
        2, 2\ 1.375}]\[IndentingNewLine]\[IndentingNewLine] (*\ \(Plot[
          gamma2Ldivalpha[h], {h, hminus, 
            hplus}];\)\ *) \[IndentingNewLine] (*\ 
      as\ long\ as\ supercell\ inequalities\ \[IndentingNewLine]gamma \
\((cell)\)\  \[GreaterEqual] \ 
          a\  + \ b\ dih\ \[IndentingNewLine]have\ slope\ bigger\ than\ this\ \
\[IndentingNewLine]then\ we\ want\ to\ make\ rad\  = \ \(\(sqrt2\)\(:\)\)\ \
*) \[IndentingNewLine]
    {"\<gamma2Ldivalpha quarter min\>", 
      gamma2Ldivalpha[hplus]}\[IndentingNewLine]\[IndentingNewLine]
    \(gamma23L[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        Module[{d1, d2, sqrt2, \ alpha}, \[IndentingNewLine]sqrt2\  = \ 
            Sqrt[2]; \[IndentingNewLine]d1\  = \ 
            Dihedral[y1, y2, sqrt2, sqrt2, sqrt2, 
              y6]; \[IndentingNewLine]d2\  = \ 
            Dihedral[y1, y3, sqrt2, sqrt2, sqrt2, 
              y5]; \[IndentingNewLine]alpha\  = \ 
            Dihedral[y1, y2, y3, y4, y5, y6] - d1 - 
              d2; \[IndentingNewLine]gamma2Ldivalpha[y1/2]\ alpha\  + \ 
            gamma3L[y1, y2, y6] + 
            gamma3L[y1, y3, 
              y5]];\)\ \[IndentingNewLine]\[IndentingNewLine] (*\ 
      1 - cell\ *) \[IndentingNewLine]
    {"\<cell1\>", \ \((Pi/6)\)\ Sqrt[2]^3\  > \ mm1}\[IndentingNewLine]
    \((6\ mm1/Pi)\)^{1/3}\[IndentingNewLine]
    {\((Pi/6)\)\ Sqrt[2.0], 
      mm1}\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Tame\ Tables\ *) \[IndentingNewLine] (*\ 
      function\ d\ *) \[IndentingNewLine]
    \(tameTableD[r_, s_] := \ 
        If[r + 2  s \[LessEqual] \ 3, 0, 
          0.103\ \((2 - s)\)\  + \ 
            0.2759*\((r + 2  s - 
                  4)\)];\)\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[4746]:="],

Cell[BoxData[
    \({"constant test", 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4754]="],

Cell[BoxData[
    \({"Constants in Marchal's paper", 0, 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4755]="],

Cell[BoxData[
    \({"tau zero point", 0.`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4765]="],

Cell[BoxData[
    \({"tau check", 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4768]="],

Cell[BoxData[
    \({"tau alt", 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4770]="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-2.51587 1.26984 0.0166954 0.502304 [
[.15079 .0042 -9 -9 ]
[.15079 .0042 9 0 ]
[.27778 .0042 -9 -9 ]
[.27778 .0042 9 0 ]
[.40476 .0042 -9 -9 ]
[.40476 .0042 9 0 ]
[.53175 .0042 -9 -9 ]
[.53175 .0042 9 0 ]
[.65873 .0042 -9 -9 ]
[.65873 .0042 9 0 ]
[.78571 .0042 -9 -9 ]
[.78571 .0042 9 0 ]
[.9127 .0042 -9 -9 ]
[.9127 .0042 9 0 ]
[.01131 .11716 -18 -4.5 ]
[.01131 .11716 0 4.5 ]
[.01131 .21762 -18 -4.5 ]
[.01131 .21762 0 4.5 ]
[.01131 .31808 -18 -4.5 ]
[.01131 .31808 0 4.5 ]
[.01131 .41854 -18 -4.5 ]
[.01131 .41854 0 4.5 ]
[.01131 .519 -6 -4.5 ]
[.01131 .519 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.15079 .0167 m
.15079 .02295 L
s
[(2.1)] .15079 .0042 0 1 Mshowa
.27778 .0167 m
.27778 .02295 L
s
[(2.2)] .27778 .0042 0 1 Mshowa
.40476 .0167 m
.40476 .02295 L
s
[(2.3)] .40476 .0042 0 1 Mshowa
.53175 .0167 m
.53175 .02295 L
s
[(2.4)] .53175 .0042 0 1 Mshowa
.65873 .0167 m
.65873 .02295 L
s
[(2.5)] .65873 .0042 0 1 Mshowa
.78571 .0167 m
.78571 .02295 L
s
[(2.6)] .78571 .0042 0 1 Mshowa
.9127 .0167 m
.9127 .02295 L
s
[(2.7)] .9127 .0042 0 1 Mshowa
.125 Mabswid
.04921 .0167 m
.04921 .02045 L
s
.0746 .0167 m
.0746 .02045 L
s
.1 .0167 m
.1 .02045 L
s
.1254 .0167 m
.1254 .02045 L
s
.17619 .0167 m
.17619 .02045 L
s
.20159 .0167 m
.20159 .02045 L
s
.22698 .0167 m
.22698 .02045 L
s
.25238 .0167 m
.25238 .02045 L
s
.30317 .0167 m
.30317 .02045 L
s
.32857 .0167 m
.32857 .02045 L
s
.35397 .0167 m
.35397 .02045 L
s
.37937 .0167 m
.37937 .02045 L
s
.43016 .0167 m
.43016 .02045 L
s
.45556 .0167 m
.45556 .02045 L
s
.48095 .0167 m
.48095 .02045 L
s
.50635 .0167 m
.50635 .02045 L
s
.55714 .0167 m
.55714 .02045 L
s
.58254 .0167 m
.58254 .02045 L
s
.60794 .0167 m
.60794 .02045 L
s
.63333 .0167 m
.63333 .02045 L
s
.68413 .0167 m
.68413 .02045 L
s
.70952 .0167 m
.70952 .02045 L
s
.73492 .0167 m
.73492 .02045 L
s
.76032 .0167 m
.76032 .02045 L
s
.81111 .0167 m
.81111 .02045 L
s
.83651 .0167 m
.83651 .02045 L
s
.8619 .0167 m
.8619 .02045 L
s
.8873 .0167 m
.8873 .02045 L
s
.9381 .0167 m
.9381 .02045 L
s
.96349 .0167 m
.96349 .02045 L
s
.98889 .0167 m
.98889 .02045 L
s
.25 Mabswid
0 .0167 m
1 .0167 L
s
.02381 .11716 m
.03006 .11716 L
s
[(0.2)] .01131 .11716 1 0 Mshowa
.02381 .21762 m
.03006 .21762 L
s
[(0.4)] .01131 .21762 1 0 Mshowa
.02381 .31808 m
.03006 .31808 L
s
[(0.6)] .01131 .31808 1 0 Mshowa
.02381 .41854 m
.03006 .41854 L
s
[(0.8)] .01131 .41854 1 0 Mshowa
.02381 .519 m
.03006 .519 L
s
[(1)] .01131 .519 1 0 Mshowa
.125 Mabswid
.02381 .04181 m
.02756 .04181 L
s
.02381 .06693 m
.02756 .06693 L
s
.02381 .09204 m
.02756 .09204 L
s
.02381 .14227 m
.02756 .14227 L
s
.02381 .16739 m
.02756 .16739 L
s
.02381 .1925 m
.02756 .1925 L
s
.02381 .24273 m
.02756 .24273 L
s
.02381 .26785 m
.02756 .26785 L
s
.02381 .29296 m
.02756 .29296 L
s
.02381 .34319 m
.02756 .34319 L
s
.02381 .36831 m
.02756 .36831 L
s
.02381 .39342 m
.02756 .39342 L
s
.02381 .44365 m
.02756 .44365 L
s
.02381 .46877 m
.02756 .46877 L
s
.02381 .49388 m
.02756 .49388 L
s
.02381 .54412 m
.02756 .54412 L
s
.02381 .56923 m
.02756 .56923 L
s
.02381 .59435 m
.02756 .59435 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .60332 m
.06244 .57622 L
.10458 .54687 L
.14415 .51954 L
.18221 .4935 L
.22272 .46606 L
.26171 .43995 L
.30316 .41254 L
.34309 .38647 L
.3815 .36173 L
.42237 .33576 L
.46172 .31112 L
.49955 .28774 L
.53984 .2632 L
.57861 .23991 L
.61984 .21549 L
.65954 .19227 L
.69774 .17021 L
.73838 .14699 L
.77751 .12487 L
.81909 .10157 L
.85916 .07929 L
.89771 .05796 L
.93871 .03536 L
.97619 .01472 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  CellLabel->"From Sphere`Private`SphereIn[4746]:=",
  ImageSize->{288, 177.938},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003ooooooomY
ooooo`00oooooomYooooo`00oooooomYooooo`00>_ooool5o`0000Gooooo0_lQ8B45ooooo`Co0000
00?o410@ooooooooool05?ooool5o`0000Gooooo0_lQ8B44ooooo`Go00005_ooool5o`0000Gooooo
0_lQ8B44ooooo`05oiRHV?l@413o0000oc8b<_o<c<`05_ooool5o`0000Gooooo0_lQ8B46ooooo`;o
000000?o410@ooooooooool05?ooool5o`0000Gooooo0_lQ8B45ooooo`05odA4A?l0003o0000oc8b
<_oMgMd05_ooool5o`0000Gooooo0_lQ8B44ooooo`05onk^k_lb<S;o0000oa0@4?o<c<`05_ooool5
o`0000Gooooo0_lQ8B46ooooo`03o`000?o^k^kooooo01Gooooo000jooooo`05oiRHV?lQ8B7ok^k^
oooooom4A4@01Oooool2ob4Q8@Oooooo00?o0000ooooooooool05_ooool01OnHV9So8B4Qonk^k_oo
ooooA4A400Gooooo0_lQ8B44ooooo`05oiRHV?lQ8B7ok^k^oooooom4A4@05_ooool01OnHV9So8B4Q
onk^k_ooooooA4A400Gooooo0_lQ8B44ooooo`05oa0@4?nj^[[oooooogMgMolb<S805_ooool01OnH
V9So8B4Qonk^k_ooooooA4A400Gooooo0_lQ8B47ooooo`03o`000?oooooooooo01Gooooo00GoV9RH
ob4Q8Oo^k^koooooodA4A005ooooo`;o8B4Q2?ooool00omgMgOo<S8booooo`0Eooooo`05oiRHV?lQ
8B7ok^k^oooooom4A4@01Oooool2ob4Q8@Cooooo00GoEEEEogMgMoooooooV9RHob4Q8@0Fooooo`05
oiRHV?lQ8B7ok^k^oooooom4A4@01Oooool2ob4Q8@Kooooo00?oEEEEojVYZOooool05Oooool003_o
oooo00?oV9RHob4Q8Oo^k^h03oooool00ol0003oooooooooo`0Gooooo`03oiRHV?lQ8B7ok^k^00go
oooo00?oV9RHob4Q8Oo^k^h06?ooool00onHV9So8B4Qonk^kP0@ooooo`03o`000?oooooooooo01Go
oooo00?oV9RHob4Q8Oo^k^h03?ooool5o`0001Oooooo00?oV9RHob4Q8Oo^k^h04Oooool00ol0003o
ooooooooo`0Eooooo`03oiRHV?lQ8B7ok^k^00cooooo00Go0000ooooooooooooooooo`00000Goooo
o`03oiRHV?lQ8B7ok^k^00kooooo00?oZJVYoeEEEOooool05Oooool003cooooo00?oV9RHob4Q8Oo^
k^h03_ooool00ol0003oooooooooo`0Hooooo`03oiRHV?lQ8B7ok^k^00gooooo00?oV9RHob4Q8Oo^
k^h06?ooool00onHV9So8B4Qonk^kP0>ooooo`03ojVYZOl@413ooooo01Oooooo00?oV9RHob4Q8Oo^
k^h02oooool01?m4A4CogMgMooooool0000Iooooo`03oiRHV?lQ8B7ok^k^00oooooo00?oMgMgoc8b
<_ooool05oooool00onHV9So8B4Qonk^kP0;ooooo`05o`000?nHV9SooooooiRHV?lQ8B406?ooool0
0onHV9So8B4Qonk^kP0>ooooo`03ob4Q8Ooooooooooo01Cooooo000mooooo`03ogMgMomVIVKooooo
00gooooo00?o0000ooooooooool06Oooool00omgMgOoIVIVooooo`0=ooooo`03ogMgMomVIVKooooo
01Sooooo00?oMgMgofIVI_ooool03?ooool00ol@413o0000okZj^P0Iooooo`03ogMgMomVIVKooooo
00[ooooo00CogMgMoeEEEOoooooo00006_ooool00omgMgOoIVIVooooo`0;ooooo`05o`000?lQ8B7o
0000oc8b<_o<c<`06Oooool00omgMgOoIVIVooooo`0:ooooo`05o`000?mEEEGo0000oa0@4?o<c<`0
6Oooool00omgMgOoIVIVooooo`0=ooooo`03oeEEEOo<c<cooooo01Cooooo000nooooo`03o`000?oo
oooooooo00cooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0=ooooo`03o`000?oo
oooooooo01Sooooo00?o0000ooooooooool03?ooool00onj^[[o8B4Qooooo`0Iooooo`03o`000?oo
oooooooo00[ooooo00?oMgMgolc<c?l000006oooool00ol0003oooooooooo`0:ooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool02Oooool00omEEEGoQhN7ooooo`0Looooo`03o`000?oo
oooooooo00cooooo00?oZJVYogMgMoooool05?ooool003[ooooo00Go0000okZj^_ooooooV9RHoa0@
400>ooooo`03o`000?oooooooooo01Kooooo00Go0000okZj^_ooooooV9RHoa0@400;ooooo`05o`00
0?nj^[[ooooooiRHV?l@41005_ooool01Ol0003o^[ZjoooooonHV9So410@00_ooooo00Go410@oiRH
V?oooooo^[Zjo`00000Fooooo`05o`000?nj^[[ooooooiRHV?l@41003?ooool00oo^k^koA4A4o`00
000Gooooo`05o`000?nj^[[ooooooiRHV?l@41003?ooool00ol0003oooooooooo`0Hooooo`05o`00
0?nj^[[ooooooiRHV?l@41002oooool00ooMgMgo410@oiRHV00Hooooo`05o`000?nj^[[ooooooiRH
V?l@41002oooool01Ol@413ooooooooooooooooo<S8b01Gooooo000jooooo`05oiRHV?l@413o0000
ob4Q8Oo<c<`03?ooool00omEEEGoIVIVo`00000Hooooo`05oiRHV?l@413o0000ob4Q8Oo<c<`02ooo
ool01OnHV9So410@o`000?lQ8B7oc<c<01Kooooo00GoV9RHoa0@4?l0003o8B4Qolc<c00;ooooo`05
ojVYZOl@413o0000oa0@4?nYZJT05_ooool01OnHV9So410@o`000?lQ8B7oc<c<00gooooo00?oMgMg
o`000?ooool05_ooool01OnHV9So410@o`000?lQ8B7oc<c<00cooooo1?l0000Gooooo`05oiRHV?l@
413o0000ob4Q8Oo<c<`03?ooool01?o<c<coA4A4o`000?l@410Fooooo`05oiRHV?l@413o0000ob4Q
8Oo<c<`02oooool5o`0001Gooooo000Jooooo`03o`000?oooooooooo0?ooooooC?ooool001[ooooo
00?o0000ooooooooool0oooooom<ooooo`006_ooool00ol0003oooooooooo`3oooooodcooooo000J
ooooo`03o`000?oooooooooo0?ooooooC?ooool001[ooooo00?o0000ooooooooool0oooooom<oooo
o`004_ooooooo`0005Oo0000000Jooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1Oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1Oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1Oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1Oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1Oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool0
1_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00Kooooo0ol00006ooooo`03o`00
0?oooooooooo00;ooooo000Jooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01Ooo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01Ooo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01Ooo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01Ooo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01Ooo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`02ooooo`006_ooool00ol0003oooooooooo`3ooooooccooooo0_l0000>
ooooo`006_ooool00ol0003oooooooooo`3ooooooc[ooooo0_l0000@ooooo`006_ooool00ol0003o
ooooooooo`3oooooocWooooo00?o0000ooooooooool04?ooool001[ooooo00?o0000ooooooooool0
oooooolgooooo`;o00004oooool001[ooooo00?o0000ooooooooool0ooooooleooooo`;o00005Ooo
ool001[ooooo00?o0000ooooooooool0oooooolcooooo`;o00005oooool001[ooooo0ol0003ooooo
oc7ooooo0_l0000Iooooo`006_ooool00ol0003oooooooooo`3ooooooboooooo0_l0000Kooooo`00
6_ooool00ol0003oooooooooo`3oooooobgooooo0_l0000Mooooo`006_ooool00ol0003ooooooooo
o`3oooooob_ooooo0_l0000Oooooo`006_ooool00ol0003oooooooooo`3oooooobWooooo0_l0000Q
ooooo`006_ooool00ol0003oooooooooo`3oooooobOooooo0_l0000Sooooo`006_ooool00ol0003o
ooooooooo`3oooooobKooooo00?o0000ooooooooool08oooool001[ooooo00?o0000ooooooooool0
oooooolTooooo`;o00009_ooool001[ooooo0ol0003oooooob;ooooo0_l0000Xooooo`006_ooool0
0ol0003oooooooooo`3oooooob7ooooo00?o0000ooooooooool0:?ooool001[ooooo00?o0000oooo
ooooool0oooooolOooooo`;o0000:oooool001[ooooo00?o0000ooooooooool0oooooolMooooo`;o
0000;Oooool001[ooooo00?o0000ooooooooool0oooooolLooooo`03o`000?oooooooooo02gooooo
000Jooooo`03o`000?oooooooooo0?oooooo6_ooool2o`00033ooooo000Jooooo`03o`000?oooooo
oooo0?oooooo6?ooool2o`0003;ooooo000Jooooo`03o`000?oooooooooo0?oooooo5_ooool2o`00
03Cooooo000Jooooo`03o`000?oooooooooo0?oooooo5?ooool2o`0003Kooooo000Jooooo`?o0000
oooooolBooooo`;o0000>?ooool001[ooooo00?o0000ooooooooool0ooooool@ooooo`;o0000>_oo
ool001[ooooo00?o0000ooooooooool0ooooool>ooooo`;o0000??ooool001[ooooo00?o0000oooo
ooooool0ooooool<ooooo`;o0000?_ooool001[ooooo00?o0000ooooooooool0ooooool:ooooo`;o
0000@?ooool001[ooooo00?o0000ooooooooool0ooooool9ooooo`03o`000?oooooooooo043ooooo
00001?lb<S;o0000oc8b<_o^k^h5ooooo`;o8B4Q1?ooool5o`0000Kooooo00?o0000ooooooooool0
ooooool7ooooo`;o0000@oooool00004oiRHV?ooooooV9RHogMgM`Gooooo0_lQ8B44ooooo`05oiRH
V?lQ8B7ok^k^oooooom4A4@01_ooool00ol0003oooooooooo`3oooooo`Gooooo0_l00015ooooo`00
0oooool00ol@413oooooooooo`0:ooooo`03oiRHV?lQ8B7ok^k^00Oooooo0ol0003oooooo`?ooooo
0_l00017ooooo`000oooool00ol0003oooooooooo`0;ooooo`03oiRHV?lQ8B7ok^k^00Kooooo00?o
0000ooooooooool0ooooool2ooooo`03o`000?oooooooooo04Oooooo0003ooooo`03o`000?oooooo
oooo00cooooo00?oMgMgofIVI_ooool01Oooool00ol0003oooooooooo`3oooooo`;o0000B_ooool0
00?ooooo00?o410@ooooooooool03Oooool00ol0003oooooooooo`04ooooo`03o`000?oooooooooo
0?gooooo0_l0001<ooooo`0000CoV9RHoooooonHV9SoMgMg2oooool01Ol0003o^[ZjoooooonHV9So
410@00Kooooo00?o0000ooooooooool0noooool2o`0004kooooo00001?lb<S;o0000oc8b<_o^k^h;
ooooo`05oiRHV?l@413o0000ob4Q8Oo<c<`01_ooool00ol0003oooooooooo`3jooooo`03o`000?oo
oooooooo04kooooo000Jooooo`03o`000?oooooooooo0?Sooooo0_l0001Aooooo`006_ooool00ol0
003oooooooooo`3fooooo`;o0000Doooool001[ooooo00?o0000ooooooooool0m?ooool2o`0005Go
oooo000Jooooo`?o0000loooool00ol0003oooooooooo`1Eooooo`006_ooool00ol0003ooooooooo
o`3aooooo`;o0000F?ooool001[ooooo00?o0000ooooooooool0koooool2o`0005[ooooo000Joooo
o`03o`000?oooooooooo0>gooooo0_l0001Looooo`006_ooool00ol0003oooooooooo`3[ooooo`;o
0000G_ooool001[ooooo00?o0000ooooooooool0jOooool2o`00063ooooo000Jooooo`03o`000?oo
oooooooo0>Sooooo00?o0000ooooooooool0H?ooool001[ooooo00?o0000ooooooooool0i_ooool2
o`0006?ooooo000Jooooo`03o`000?oooooooooo0>Cooooo0_l0001Uooooo`006_ooool3o`000>;o
oooo0_l0001Wooooo`006_ooool00ol0003oooooooooo`3Qooooo`03o`000?oooooooooo06Oooooo
000Jooooo`03o`000?oooooooooo0=oooooo0_l0001Zooooo`006_ooool00ol0003oooooooooo`3M
ooooo`;o0000K?ooool001[ooooo00?o0000ooooooooool0g?ooool00ol0003oooooooooo`1/oooo
o`006_ooool00ol0003oooooooooo`3Jooooo`;o0000Koooool001[ooooo00?o0000ooooooooool0
f?ooool2o`00077ooooo000Jooooo`03o`000?oooooooooo0=Oooooo00?o0000ooooooooool0LOoo
ool001[ooooo0ol0003Eooooo`;o0000M?ooool001[ooooo00?o0000ooooooooool0doooool2o`00
07Kooooo000Jooooo`03o`000?oooooooooo0=;ooooo00?o0000ooooooooool0M_ooool001[ooooo
00?o0000ooooooooool0d?ooool2o`0007Wooooo000Jooooo`03o`000?oooooooooo0<kooooo0_l0
001kooooo`006_ooool00ol0003oooooooooo`3<ooooo`;o0000OOooool00004oc8b<_l0003o<S8b
onk^kPGooooo0_lQ8B46ooooo`;o000000?o410@ooooooooool01?ooool00ol0003oooooooooo`3;
ooooo`03o`000?oooooooooo07gooooo00001?nHV9SooooooiRHV?mgMgL5ooooo`;o8B4Q1oooool0
0ol0003oooooooooo`05ooooo`03o`000?oooooooooo0<Wooooo0_l00020ooooo`000oooool00ol@
413oooooooooo`09ooooo`Go00001_ooool00ol0003oooooooooo`37ooooo`;o0000P_ooool000?o
oooo00?o0000ooooooooool02Oooool01?m4A4CogMgMooooool00007ooooo`?o0000aOooool2o`00
08Cooooo0003ooooo`03o`000?oooooooooo00Wooooo00CogMgMoeEEEOoooooo00001oooool00ol0
003oooooooooo`34ooooo`03o`000?oooooooooo08Cooooo0003ooooo`03oa0@4?oooooooooo00[o
oooo00?oMgMgolc<c?l000001oooool00ol0003oooooooooo`32ooooo`;o0000Qoooool00004oiRH
V?ooooooV9RHogMgM`cooooo00?ok^k^odA4A?l000001oooool00ol0003oooooooooo`30ooooo`;o
0000ROooool00004oc8b<_l0003o<S8bonk^kPgooooo00?oMgMgo`000?ooool01_ooool00ol0003o
ooooooooo`2nooooo`;o0000Roooool001[ooooo00?o0000ooooooooool0_Oooool00ol0003ooooo
ooooo`2;ooooo`006_ooool00ol0003oooooooooo`2kooooo`;o0000S_ooool001[ooooo00?o0000
ooooooooool0^Oooool2o`00093ooooo000Jooooo`?o0000^?ooool00ol0003oooooooooo`2@oooo
o`006_ooool00ol0003oooooooooo`2fooooo`;o0000Toooool001[ooooo00?o0000ooooooooool0
]?ooool2o`0009Gooooo000Jooooo`03o`000?oooooooooo0;?ooooo00?o0000ooooooooool0UOoo
ool001[ooooo00?o0000ooooooooool0/Oooool2o`0009Sooooo000Jooooo`03o`000?oooooooooo
0:oooooo0_l0002Jooooo`006_ooool00ol0003oooooooooo`2^ooooo`03o`000?oooooooooo09[o
oooo000Jooooo`03o`000?oooooooooo0:cooooo0_l0002Mooooo`006_ooool00ol0003ooooooooo
o`2Zooooo`;o0000Woooool001[ooooo0ol0002Yooooo`03o`000?oooooooooo09oooooo000Joooo
o`03o`000?oooooooooo0:Oooooo0_l0002Rooooo`006_ooool00ol0003oooooooooo`2Uooooo`;o
0000Y?ooool001[ooooo00?o0000ooooooooool0Xoooool2o`000:Kooooo000Jooooo`03o`000?oo
oooooooo0:;ooooo00?o0000ooooooooool0Y_ooool001[ooooo00?o0000ooooooooool0X?ooool2
o`000:Wooooo000Jooooo`03o`000?oooooooooo09kooooo0_l0002[ooooo`006_ooool00ol0003o
ooooooooo`2Mooooo`03o`000?oooooooooo0:_ooooo000Jooooo`?o0000Voooool2o`000:kooooo
000Jooooo`03o`000?oooooooooo09Wooooo0_l0002`ooooo`006_ooool00ol0003oooooooooo`2H
ooooo`03o`000?oooooooooo0;3ooooo000Jooooo`03o`000?oooooooooo09Kooooo0_l0002coooo
o`006_ooool00ol0003oooooooooo`2Dooooo`;o0000]Oooool001[ooooo00?o0000ooooooooool0
Toooool00ol0003oooooooooo`2eooooo`0000Co<S8bo`000?lb<S;ok^k^1Oooool2ob4Q8@Cooooo
00Gok^k^oc8b<_l0003o410@olc<c006ooooo`03o`000?oooooooooo097ooooo0_l0002hooooo`00
00CoV9RHoooooonHV9SoMgMg1Oooool2ob4Q8@Cooooo00GoEEEEogMgMoooooooV9RHob4Q8@06oooo
o`03o`000?oooooooooo093ooooo00?o0000ooooooooool0^?ooool000?ooooo00?o410@oooooooo
ool02Oooool01Ol0003ooooooooooooooooo000000Kooooo00?o0000ooooooooool0S_ooool2o`00
0;_ooooo0003ooooo`03o`000?oooooooooo00Wooooo00Go0000oiRHV?ooooooV9RHob4Q8@06oooo
o`?o0000SOooool00ol0003oooooooooo`2kooooo`000oooool00ol0003oooooooooo`09ooooo`05
o`000?mEEEGo0000oa0@4?o<c<`01_ooool00ol0003oooooooooo`2;ooooo`;o0000__ooool000?o
oooo00?o410@ooooooooool02Oooool00omEEEGoQhN7ooooo`08ooooo`03o`000?oooooooooo08[o
oooo00?o0000ooooooooool0__ooool00004oiRHV?ooooooV9RHogMgM`_ooooo00?ogMgMoa0@4?nH
V9P02?ooool00ol0003oooooooooo`29ooooo`03o`000?oooooooooo0;oooooo00001?lb<S;o0000
oc8b<_o^k^h<ooooo`04olc<c?m4A4Co0000oa0@40Kooooo00?o0000ooooooooool0Qoooool2o`00
0<;ooooo000Jooooo`03o`000?oooooooooo08Kooooo00?o0000ooooooooool0`_ooool001[ooooo
00?o0000ooooooooool0Q?ooool2o`000<Gooooo000Jooooo`03o`000?oooooooooo08?ooooo00?o
0000ooooooooool0aOooool001[ooooo0ol00021ooooo`;o0000b?ooool001[ooooo00?o0000oooo
ooooool0P?ooool00ol0003oooooooooo`38ooooo`006_ooool00ol0003oooooooooo`1nooooo`;o
0000boooool001[ooooo00?o0000ooooooooool0O?ooool2o`000<gooooo000Jooooo`03o`000?oo
oooooooo07_ooooo00?o0000ooooooooool0cOooool001[ooooo00?o0000ooooooooool0NOooool2
o`000=3ooooo000Jooooo`03o`000?oooooooooo07Sooooo00?o0000ooooooooool0d?ooool001[o
oooo00?o0000ooooooooool0M_ooool2o`000=?ooooo000Jooooo`03o`000?oooooooooo07Gooooo
00?o0000ooooooooool0doooool001[ooooo0ol0001cooooo`;o0000e_ooool001[ooooo00?o0000
ooooooooool0LOooool2o`000=Sooooo000Jooooo`03o`000?oooooooooo073ooooo00?o0000oooo
ooooool0f?ooool001[ooooo00?o0000ooooooooool0K_ooool2o`000=_ooooo000Jooooo`03o`00
0?oooooooooo06cooooo0_l0003Mooooo`006_ooool00ol0003oooooooooo`1[ooooo`03o`000?oo
oooooooo0=gooooo000Jooooo`03o`000?oooooooooo06Wooooo0_l0003Pooooo`006_ooool00ol0
003oooooooooo`1Xooooo`03o`000?oooooooooo0>3ooooo000Jooooo`?o0000I_ooool2o`000>?o
oooo000Jooooo`03o`000?oooooooooo06Gooooo00?o0000ooooooooool0hoooool001[ooooo00?o
0000ooooooooool0Hoooool2o`000>Kooooo000Jooooo`03o`000?oooooooooo067ooooo0_l0003X
ooooo`006_ooool00ol0003oooooooooo`1Pooooo`03o`000?oooooooooo0>Sooooo000Jooooo`03
o`000?oooooooooo05kooooo0_l0003[ooooo`0000Co<S8bo`000?lb<S;ok^k^1Oooool2ob4Q8@Co
oooo00Goc<c<ob4Q8Ol0003o8B4Qolc<c006ooooo`03o`000?oooooooooo05gooooo00?o0000oooo
ooooool0joooool00004oiRHV?ooooooV9RHogMgM`Gooooo0_lQ8B44ooooo`05ob4Q8OnHV9Sooooo
oiRHV?lQ8B401_ooool00ol0003oooooooooo`1Kooooo`;o0000k_ooool000?ooooo00?o410@oooo
ooooool02Oooool01Ol0003ooooooooooooooooo000000Kooooo00?o0000ooooooooool0F_ooool0
0ol0003oooooooooo`3^ooooo`000oooool00ol0003oooooooooo`09ooooo`05oc8b<_nHV9Sooooo
oiRHV?lb<S801_ooool3o`0005Sooooo0_l0003aooooo`000oooool00ol0003oooooooooo`09oooo
o`05olc<c?l0003o0000o`000?o<c<`01_ooool00ol0003oooooooooo`1Gooooo`03o`000?oooooo
oooo0?7ooooo0003ooooo`03oa0@4?oooooooooo00Wooooo00Go410@okZj^_oooooo^[Zjoa0@4006
ooooo`03o`000?oooooooooo05Gooooo0_l0003dooooo`0000CoV9RHoooooonHV9SoMgMg2oooool0
1Ol0003o^[Zjoooooonj^[[o000000Kooooo00?o0000ooooooooool0Doooool2o`000?Kooooo0000
1?lb<S;o0000oc8b<_o^k^h;ooooo`05ojVYZOl@413o0000oa0@4?nYZJT01_ooool00ol0003ooooo
ooooo`1Booooo`03o`000?oooooooooo0?Kooooo000Jooooo`03o`000?oooooooooo053ooooo0_l0
003iooooo`006_ooool00ol0003oooooooooo`1?ooooo`03o`000?oooooooooo0?Wooooo000Joooo
o`03o`000?oooooooooo04gooooo0_l0003looooo`006_ooool00ol0003oooooooooo`1<ooooo`03
o`000?oooooooooo0?cooooo000Jooooo`?o0000B_ooool2o`000?oooooo000Jooooo`03o`000?oo
oooooooo04Wooooo00?o0000ooooooooool0ooooool001[ooooo00?o0000ooooooooool0Aoooool2
o`000?oooooo0oooool001[ooooo00?o0000ooooooooool0A_ooool00ol0003oooooooooo`3ooooo
o`?ooooo000Jooooo`03o`000?oooooooooo04Gooooo00?o0000ooooooooool0ooooool4ooooo`00
6_ooool00ol0003oooooooooo`13ooooo`;o0000ooooool7ooooo`006_ooool00ol0003ooooooooo
o`12ooooo`03o`000?oooooooooo0?oooooo1oooool001[ooooo00?o0000ooooooooool0@?ooool2
o`000?oooooo2_ooool001[ooooo0ol0000oooooo`03o`000?oooooooooo0?oooooo2_ooool001[o
oooo00?o0000ooooooooool0?Oooool2o`000?oooooo3Oooool001[ooooo00?o0000ooooooooool0
??ooool00ol0003oooooooooo`3oooooo`gooooo000Jooooo`03o`000?oooooooooo03_ooooo00?o
0000ooooooooool0ooooool>ooooo`006_ooool00ol0003oooooooooo`0iooooo`;o0000oooooolA
ooooo`006_ooool00ol0003oooooooooo`0hooooo`03o`000?oooooooooo0?oooooo4Oooool001[o
oooo00?o0000ooooooooool0=_ooool2o`000?oooooo5?ooool001[ooooo00?o0000ooooooooool0
=Oooool00ol0003oooooooooo`3ooooooaCooooo000Jooooo`03o`000?oooooooooo03Cooooo00?o
0000ooooooooool0oooooolEooooo`006_ooool3o`0003;ooooo0_l0003ooooooaSooooo000Joooo
o`03o`000?oooooooooo037ooooo00?o0000ooooooooool0oooooolHooooo`006_ooool00ol0003o
ooooooooo`0_ooooo`;o0000oooooolKooooo`006_ooool00ol0003oooooooooo`0]ooooo`;o0000
oooooolMooooo`006_ooool00ol0003oooooooooo`0/ooooo`03o`000?oooooooooo0?oooooo7Ooo
ool001[ooooo00?o0000ooooooooool0:_ooool2o`000?oooooo8?ooool0013ooooo1?l000000ol@
413oooooooooo`03ooooo`03o`000?oooooooooo02Sooooo0_l0003oooooob;ooooo000Booooo`03
o`000?oooooooooo00Gooooo00?o0000ooooooooool09oooool00ol0003oooooooooo`3oooooob;o
oooo000Booooo`03o`000?oooooooooo00Gooooo0ol0000Uooooo`;o0000oooooolUooooo`004_oo
ool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo02Cooooo00?o0000ooooooooool0oooo
oolUooooo`004_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo02?ooooo00?o0000
ooooooooool0oooooolVooooo`004_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo
027ooooo0_l0003oooooobWooooo000Booooo`03o`000?oooooooooo00Gooooo00?o0000oooooooo
ool08?ooool00ol0003oooooooooo`3oooooobWooooo000@ooooo`03oeEEEOmVIVKo000000Oooooo
00?o0000ooooooooool07oooool00ol0003oooooooooo`3oooooob[ooooo000Jooooo`03o`000?oo
oooooooo01kooooo00?o0000ooooooooool0ooooool[ooooo`006_ooool00ol0003oooooooooo`0L
ooooo`;o0000ooooool^ooooo`006_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo
0?oooooo;_ooool001[ooooo0ol0000Jooooo`03o`000?oooooooooo0?oooooo;oooool001[ooooo
00?o0000ooooooooool06?ooool2o`000?oooooo<_ooool001[ooooo00?o0000ooooooooool05ooo
ool00ol0003oooooooooo`3ooooooc;ooooo000Jooooo`03o`000?oooooooooo01Gooooo0_l0003o
ooooocGooooo000Jooooo`03o`000?oooooooooo01Cooooo00?o0000ooooooooool0ooooooleoooo
o`006_ooool00ol0003oooooooooo`0Booooo`;o0000oooooolhooooo`006_ooool00ol0003ooooo
ooooo`0Aooooo`03o`000?oooooooooo0?oooooo>?ooool001[ooooo00?o0000ooooooooool03ooo
ool2o`000?oooooo>oooool001[ooooo0ol0000>ooooo`03o`000?oooooooooo0?oooooo>oooool0
01[ooooo00?o0000ooooooooool03?ooool2o`000?oooooo?_ooool001[ooooo00?o0000oooooooo
ool02oooool00ol0003oooooooooo`3oooooockooooo000Jooooo`03o`000?oooooooooo00Wooooo
0_l0003ooooood7ooooo000Jooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool0oooo
oom1ooooo`006_ooool00ol0003oooooooooo`06ooooo`;o0000oooooom4ooooo`006_ooool00ol0
003oooooooooo`05ooooo`03o`000?oooooooooo0?ooooooA?ooool001[ooooo00?o0000oooooooo
ool00oooool2o`000?ooooooAoooool001[ooooo00?o0000ooooooooool00_ooool00ol0003ooooo
ooooo`3oooooodOooooo000Jooooo`?o000000?oooooo`000?ooool0oooooom9ooooo`006_ooool0
1?l0003oooooo`000?l0003ooooood_ooooo000Jooooo`;o0000oooooom=ooooo`006_ooool00ol0
003oooooooooo`3oooooodcooooo000Jooooo`03o`000?oooooooooo0?ooooooC?ooool001[ooooo
00?o0000ooooooooool0oooooom<ooooo`006_ooool00ol0003oooooooooo`3oooooodcooooo000J
ooooo`03o`000?oooooooooo0?ooooooC?ooool001[ooooo00?o0000ooooooooool0oooooom<oooo
o`00\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {1.93809, -0.0942223, \
0.00289228, 0.00731177}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output",
  CellLabel->"Sphere`Private`SphereOut[4780]="],

Cell[BoxData[
    \({"gamma2Ldivalpha quarter min", 
      0.0265702071567397786562782474`14.604801875385682}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4781]="],

Cell[BoxData[
    \({"cell1", True}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4783]="],

Cell[BoxData[
    \({1.2456772445193635764992569404`15.565617816108281}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4784]="],

Cell[BoxData[
    \({0.740480489693061`, 
      1.0120808684206546604839662313`15.088496561388622}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4785]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["gamma bump defined on k-cells", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(wt[x___] := \ 
        Module[{k}, 
          k = Length[
              Select[{x}, \((\((# >= \ 2\ hminus)\) && \((# <= 
                          2\ hplus)\))\) &]]; \[IndentingNewLine]If[
            k \[Equal] 0, Print["\<gamma: null weight\>"], 
            1/k]];\)\[IndentingNewLine]\[IndentingNewLine]
    \(bump[r_] := \ 
        Module[{s, bmpweight}, \[IndentingNewLine]bmpweight := 
            0.005; \[IndentingNewLine]s\  = \ \((r - hmid)\)/\((hplus - 
                  hmid)\); \[IndentingNewLine]bmpweight*\((1 - 
                s*s)\)];\)\[IndentingNewLine]
    \ \(Plot[
        bump[r], {r, hminus, 
          hplus}];\)\ \[IndentingNewLine]\[IndentingNewLine]
    \(hasbump[y1_, y2_, y3_, y4_, y5_, 
          y6_] := \[IndentingNewLine]\((wt[y1, y2, y3, y4, y5, y6] == 
              1/2\ )\) && \[IndentingNewLine]\((y1\  \[GreaterEqual] \ 
              2\ hminus)\)\  && \ \((y1\  \[LessEqual] \ 
              2\ hplus)\)\  && \[IndentingNewLine]\((y4\  \[GreaterEqual] \ 
              2\ hminus)\)\  && \ \((y4\  \[LessEqual] \ 
              2\ hplus)\);\)\[IndentingNewLine]\[IndentingNewLine]
    \(betaBumpY[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        Module[{}, 
          If[hasbump[y1, y2, y3, y4, y5, y6], \((bump[y1/2] - bump[y4/2])\), 
            0]];\)\[IndentingNewLine]
    \(betaBumpForceY[y1_, y2_, y3_, y4_, y5_, 
          y6_] := \ \((bump[y1/2] - 
            bump[y4/2])\);\)\[IndentingNewLine]\[IndentingNewLine]
    \(gamma4Lwt[x__] := \ gamma4L[x]\ *\ wt[x];\)\[IndentingNewLine]
    \(gamma4Lbwt[x__] := \ 
        gamma4Lwt[x]\  + \ betaBumpY[x];\)\[IndentingNewLine]
    \(gamma4Lbump[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        gamma4L[y1, y2, y3, y4, y5, y6]\ /2\ \  + \ 
          betaBumpForceY[y1, y2, y3, y4, y5, y6];\)\[IndentingNewLine]
    {"\<sample\>", gamma4Lwt[2.5, 2.05, 2.1, 2.55, 2.15, 2.2], 
        gamma4Lbwt[2.5, 2.05, 2.1, 2.55, 2.15, 2.2], 
        gamma4Lbump[2.5, 2.05, 2.1, 2.55, 2.15, 2.2]} // 
      FullForm\[IndentingNewLine]\[IndentingNewLine]
    bump[2.65/
        2]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[1426]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
-12.5032 10.1701 -0.25621 171.906 [
[.10767 .0751 -12 -9 ]
[.10767 .0751 12 0 ]
[.31107 .0751 -12 -9 ]
[.31107 .0751 12 0 ]
[.51447 .0751 -12 -9 ]
[.51447 .0751 12 0 ]
[.92127 .0751 -12 -9 ]
[.92127 .0751 12 0 ]
[.70537 .00165 -36 -4.5 ]
[.70537 .00165 0 4.5 ]
[.70537 .17355 -36 -4.5 ]
[.70537 .17355 0 4.5 ]
[.70537 .25951 -30 -4.5 ]
[.70537 .25951 0 4.5 ]
[.70537 .34546 -36 -4.5 ]
[.70537 .34546 0 4.5 ]
[.70537 .43141 -30 -4.5 ]
[.70537 .43141 0 4.5 ]
[.70537 .51737 -36 -4.5 ]
[.70537 .51737 0 4.5 ]
[.70537 .60332 -30 -4.5 ]
[.70537 .60332 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.10767 .0876 m
.10767 .09385 L
s
[(1.24)] .10767 .0751 0 1 Mshowa
.31107 .0876 m
.31107 .09385 L
s
[(1.26)] .31107 .0751 0 1 Mshowa
.51447 .0876 m
.51447 .09385 L
s
[(1.28)] .51447 .0751 0 1 Mshowa
.92127 .0876 m
.92127 .09385 L
s
[(1.32)] .92127 .0751 0 1 Mshowa
.125 Mabswid
.15852 .0876 m
.15852 .09135 L
s
.20937 .0876 m
.20937 .09135 L
s
.26022 .0876 m
.26022 .09135 L
s
.36192 .0876 m
.36192 .09135 L
s
.41277 .0876 m
.41277 .09135 L
s
.46362 .0876 m
.46362 .09135 L
s
.56532 .0876 m
.56532 .09135 L
s
.61617 .0876 m
.61617 .09135 L
s
.66702 .0876 m
.66702 .09135 L
s
.76872 .0876 m
.76872 .09135 L
s
.81957 .0876 m
.81957 .09135 L
s
.87042 .0876 m
.87042 .09135 L
s
.05682 .0876 m
.05682 .09135 L
s
.00597 .0876 m
.00597 .09135 L
s
.97212 .0876 m
.97212 .09135 L
s
.25 Mabswid
0 .0876 m
1 .0876 L
s
.71787 .00165 m
.72412 .00165 L
s
[(0.0015)] .70537 .00165 1 0 Mshowa
.71787 .17355 m
.72412 .17355 L
s
[(0.0025)] .70537 .17355 1 0 Mshowa
.71787 .25951 m
.72412 .25951 L
s
[(0.003)] .70537 .25951 1 0 Mshowa
.71787 .34546 m
.72412 .34546 L
s
[(0.0035)] .70537 .34546 1 0 Mshowa
.71787 .43141 m
.72412 .43141 L
s
[(0.004)] .70537 .43141 1 0 Mshowa
.71787 .51737 m
.72412 .51737 L
s
[(0.0045)] .70537 .51737 1 0 Mshowa
.71787 .60332 m
.72412 .60332 L
s
[(0.005)] .70537 .60332 1 0 Mshowa
.125 Mabswid
.71787 .01884 m
.72162 .01884 L
s
.71787 .03603 m
.72162 .03603 L
s
.71787 .05322 m
.72162 .05322 L
s
.71787 .07041 m
.72162 .07041 L
s
.71787 .10479 m
.72162 .10479 L
s
.71787 .12198 m
.72162 .12198 L
s
.71787 .13917 m
.72162 .13917 L
s
.71787 .15636 m
.72162 .15636 L
s
.71787 .19075 m
.72162 .19075 L
s
.71787 .20794 m
.72162 .20794 L
s
.71787 .22513 m
.72162 .22513 L
s
.71787 .24232 m
.72162 .24232 L
s
.71787 .2767 m
.72162 .2767 L
s
.71787 .29389 m
.72162 .29389 L
s
.71787 .31108 m
.72162 .31108 L
s
.71787 .32827 m
.72162 .32827 L
s
.71787 .36265 m
.72162 .36265 L
s
.71787 .37984 m
.72162 .37984 L
s
.71787 .39703 m
.72162 .39703 L
s
.71787 .41422 m
.72162 .41422 L
s
.71787 .4486 m
.72162 .4486 L
s
.71787 .46579 m
.72162 .46579 L
s
.71787 .48299 m
.72162 .48299 L
s
.71787 .50018 m
.72162 .50018 L
s
.71787 .53456 m
.72162 .53456 L
s
.71787 .55175 m
.72162 .55175 L
s
.71787 .56894 m
.72162 .56894 L
s
.71787 .58613 m
.72162 .58613 L
s
.25 Mabswid
.71787 0 m
.71787 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .44299 m
.06244 .48322 L
.10458 .52048 L
.14415 .54919 L
.18221 .57106 L
.20342 .5808 L
.22272 .58815 L
.24276 .59425 L
.26171 .59859 L
.27141 .60026 L
.28168 .60164 L
.29046 .60249 L
.29545 .60285 L
.30012 .60309 L
.3027 .60318 L
.30509 .60325 L
.30646 .60328 L
.30771 .6033 L
.3084 .60331 L
.30915 .60331 L
.30985 .60332 L
.3105 .60332 L
.31169 .60332 L
.31279 .60331 L
.314 .6033 L
.3153 .60328 L
.31666 .60326 L
.31795 .60323 L
.32037 .60315 L
.32261 .60306 L
.32498 .60294 L
.32924 .60268 L
.33383 .60231 L
.3389 .60182 L
.34899 .60053 L
.35824 .599 L
.3791 .59433 L
.39802 .58863 L
.41872 .5808 L
.45928 .56064 L
.49833 .53519 L
.53983 .50165 L
.57981 .463 L
.61828 .41995 L
.65919 .36785 L
.6986 .31153 L
.73648 .25169 L
.77682 .18184 L
.81565 .10865 L
.85692 .02441 L
Mistroke
Mfstroke
.85692 .02441 m
.86803 0 L
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  CellLabel->"From Sphere`Private`SphereIn[1426]:=",
  ImageSize->{288, 177.938},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000gR000`400?l00000o`00003ooooooomY
ooooo`00oooooomYooooo`00oooooomYooooo`00c?ooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00Go
oooo0_lQ8B44ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h00oooool01Oo^k^ko<S8bo`000?lb<S;o
k^k^00Cooooo1?l000001Ol@413oooooooooooooooooA4A400;o000000?o<S8bomgMgOooool0KOoo
ool00<cooooo00GoMgMgoiRHV?ooooooV9RHogMgM`05ooooo`;o8B4Q1?ooool01OmgMgOoV9RHoooo
oonHV9SoMgMg00?ooooo00GoMgMgoiRHV?ooooooV9RHogMgM`06ooooo`03o`000?oooooooooo00Ko
oooo00?oMgMgoc8b<_ooool0KOooool00<cooooo00Go410@oooooooooooooooooa0@400;ooooo`05
oa0@4?ooooooooooooooool@41000oooool01Ol@413ooooooooooooooooo410@00Kooooo00?o0000
ooooooooool01oooool00ol0003oooooooooo`03ooooo`03o`000?oooooooooo03;ooooo00?o0000
ooooooooool0<Oooool00<cooooo00Go0000ooooooooooooooooo`00000;ooooo`05o`000?oooooo
ooooooooool000000oooool01Ol0003ooooooooooooooooo000000Kooooo00?o0000ooooooooool0
1_ooool00omgMgOo<S8booooo`04ooooo`?o0000<_ooool00ol0003oooooooooo`0aooooo`00c?oo
ool01Ol0003ooooooooooooooooo000000_ooooo00Go0000ooooooooooooooooo`000003ooooo`05
o`000?ooooooooooooooool000001_ooool00ol0003oooooooooo`03ooooo`05o`000?lQ8B7o0000
oc8b<_o<c<`01Oooool00ol0003oooooooooo`0aooooo`03o`000?oooooooooo03;ooooo003<oooo
o`05oa0@4?ooooooooooooooool@41002oooool01Ol@413ooooooooooooooooo410@00?ooooo00Go
410@oooooooooooooooooa0@4006ooooo`03o`000?oooooooooo00?ooooo00?o0000ooooooooool0
1oooool00ol0003oooooooooo`0aooooo`03o`000?oooooooooo03;ooooo003<ooooo`05ogMgMonH
V9SooooooiRHV?mgMgL02oooool01OmgMgOoV9RHoooooonHV9SoMgMg00?ooooo00GoMgMgoiRHV?oo
ooooV9RHogMgM`06ooooo`03o`000?oooooooooo00?ooooo00?o0000ooooooooool01oooool00ol0
003oooooooooo`0`ooooo`03o`000?oooooooooo03?ooooo003<ooooo`05onk^k_lb<S;o0000oc8b
<_o^k^h02oooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00?ooooo00Gok^k^oc8b<_l0003o<S8bonk^
kP04ooooo`03oeEEEOmVIVKo000000Gooooo1?l00006ooooo`03o`000?oooooooooo033ooooo00?o
0000ooooooooool0<oooool00?oooooo00?o0000ooooooooool0<?ooool00ol0003oooooooooo`0c
ooooo`00ooooool2o`00033ooooo00?o0000ooooooooool0=?ooool00?oooooo00?o0000oooooooo
ool0;oooool00ol0003oooooooooo`0dooooo`00ooooool00ol0003oooooooooo`0^ooooo`03o`00
0?oooooooooo03Gooooo003oooooo`03o`000?oooooooooo02kooooo00?o0000ooooooooool0=Ooo
ool00?oooooo00?o0000ooooooooool0;Oooool00ol0003oooooooooo`0fooooo`00ooooool00ol0
003oooooooooo`0]ooooo`03o`000?oooooooooo03Kooooo003oooooo`;o0000;Oooool00ol0003o
ooooooooo`0gooooo`00ooooool00ol0003oooooooooo`0/ooooo`03o`000?oooooooooo03Oooooo
003oooooo`03o`000?oooooooooo02_ooooo00?o0000ooooooooool0>?ooool00?oooooo00?o0000
ooooooooool0:oooool00ol0003oooooooooo`0hooooo`007?ooool4o`000003oa0@4?oooooooooo
00;ooooo0_lQ8B44ooooo`Go00001Oooool2o`000003oa0@4?oooooooooo02Wooooo1?l000000ol@
413oooooooooo`02ooooo`;o8B4Q1?ooool5o`0000?ooooo00Gok^k^oc8b<_l0003o410@olc<c00[
ooooo`Co000000?o410@ooooooooool00_ooool2ob4Q8@Cooooo1Ol00003ooooo`05olc<c?lQ8B7o
0000ob4Q8Oo<c<`0>Oooool00ol0003oooooooooo`0Zooooo`03o`000?oooooooooo00Wooooo1?l0
00000ol@413oooooooooo`02ooooo`;o8B4Q1?ooool01OnHV9So410@o`000?lb<S;oc<c<00?ooooo
1Ol0000Dooooo`007_ooool00ol0003oooooooooo`04ooooo`;o8B4Q1?ooool01OnHV9So8B4Qonk^
k_ooooooA4A400Kooooo00?o0000ooooooooool0;?ooool00ol0003oooooooooo`04ooooo`;o8B4Q
1?ooool01OnHV9So8B4Qonk^k_ooooooA4A400?ooooo00GoEEEEogMgMoooooooV9RHob4Q8@0]oooo
o`03o`000?oooooooooo00Cooooo0_lQ8B44ooooo`05oiRHV?lQ8B7ok^k^oooooom4A4@00oooool0
1OlQ8B7oV9RHoooooonHV9So8B4Q03Wooooo00?o0000ooooooooool0:_ooool00ol0003ooooooooo
o`0;ooooo`03o`000?oooooooooo00Cooooo0_lQ8B44ooooo`05oa0@4?nj^[[oooooogMgMolb<S80
0oooool01OnHV9So8B4Qonk^k_ooooooA4A401Cooooo000Nooooo`03o`000?oooooooooo00_ooooo
00?oV9RHob4Q8Oo^k^h01?ooool5o`0002gooooo00?o0000ooooooooool02oooool00onHV9So8B4Q
onk^kP04ooooo`05o`000?ooooooooooooooool00000;Oooool00ol0003oooooooooo`0;ooooo`03
oiRHV?lQ8B7ok^k^00Cooooo00Go0000ooooooooooooooooo`00000iooooo`;o0000:_ooool00ol0
003oooooooooo`0<ooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool00_ooool00onH
V9So8B4Qonk^kP0Eooooo`007_ooool00ol0003oooooooooo`0<ooooo`03oiRHV?lQ8B7ok^k^00?o
oooo00CoA4A4omgMgOoooooo0000;_ooool00ol0003oooooooooo`0<ooooo`03oiRHV?lQ8B7ok^k^
00?ooooo00Go0000oiRHV?ooooooV9RHob4Q8@0]ooooo`03o`000?oooooooooo00cooooo00?oV9RH
ob4Q8Oo^k^h00oooool01Olb<S;oV9RHoooooonHV9So<S8b03Wooooo00?o0000ooooooooool0:Ooo
ool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo00gooooo00?oZJVYoa0@4?ooool01?oo
ool00onHV9So8B4Qonk^kP0Dooooo`007_ooool00ol0003oooooooooo`0=ooooo`03ogMgMomVIVKo
oooo00;ooooo00CogMgMoeEEEOoooooo0000;_ooool00ol0003oooooooooo`0=ooooo`03ogMgMomV
IVKooooo00;ooooo00Go0000oeEEEOl0003o410@olc<c00]ooooo`03o`000?oooooooooo00gooooo
00?oMgMgofIVI_ooool00_ooool01Oo<c<co0000o`000?l0003oc<c<03Wooooo00?o0000oooooooo
ool0:?ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo00cooooo00?o410@o`000?nj
^[X01_ooool00omgMgOoIVIVooooo`0Cooooo`007_ooool00ol0003oooooooooo`0>ooooo`03o`00
0?oooooooooo00;ooooo00?oMgMgolc<c?l00000;_ooool00ol0003oooooooooo`0>ooooo`06o`00
0?oooooooooooooooomEEEGoQhN7<?ooool00ol0003oooooooooo`0>ooooo`09o`000?oooooooooo
ooooool@413o^[Zjoooooonj^[[o410@03Wooooo00?o0000ooooooooool0:?ooool00ol0003ooooo
ooooo`0=ooooo`03o`000?oooooooooo00gooooo00?o^[Zjob4Q8Oooool01_ooool00ol0003ooooo
ooooo`0Booooo`007_ooool00ol0003oooooooooo`0:ooooo`05o`000?nj^[[ooooooiRHV?l@4100
1?ooool00oo^k^koA4A4o`00000^ooooo`03o`000?oooooooooo00[ooooo00Go0000okZj^_oooooo
V9RHoa0@4003ooooo`03omgMgOl@413oV9RH02oooooo00?o0000ooooooooool02_ooool01Ol0003o
^[ZjoooooonHV9So410@00?ooooo00Go0000okZj^_oooooo^[Zjo`00000iooooo`03o`000?oooooo
oooo02Oooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0:ooooo`05oa0@4?nHV9So
oooookZj^_l000000oooool01Ol0003o^[ZjoooooonHV9So410@01Cooooo000Looooo`03oeEEEOmV
IVKo000000cooooo00GoV9RHoa0@4?l0003o8B4Qolc<c005ooooo`03ogMgMol0003ooooo02_ooooo
00?oEEEEofIVI_l000003?ooool01OnHV9So410@o`000?lQ8B7oc<c<00Cooooo00Coc<c<odA4A?l0
003o410@:oooool00omEEEGoIVIVo`00000<ooooo`05oiRHV?l@413o0000ob4Q8Oo<c<`00oooool0
1OnYZJWo410@o`000?l@413oZJVY03Wooooo00?o0000ooooooooool09_ooool00ol0003ooooooooo
o`0=ooooo`03oeEEEOmVIVKo000000cooooo00GoZJVYoa0@4?l0003o410@ojVYZ@03ooooo`05oiRH
V?l@413o0000ob4Q8Oo<c<`05?ooool00?oooooo0_l0000Wooooo`03o`000?oooooooooo03gooooo
003oooooo`03o`000?oooooooooo02Gooooo00?o0000ooooooooool0?_ooool00?oooooo00?o0000
ooooooooool09Oooool00ol0003oooooooooo`0nooooo`00ooooool00ol0003oooooooooo`0Toooo
o`03o`000?oooooooooo03oooooo003oooooo`03o`000?oooooooooo02Cooooo00?o0000oooooooo
ool0?oooool00?oooooo00?o0000ooooooooool08oooool00ol0003oooooooooo`10ooooo`001?oo
ooooo`00063o00001Oooool000Kooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0?
ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0>
ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0?
ooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0?
ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0?
ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool03oooool2o`0000oooooo00?o0000
ooooooooool03oooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo00gooooo000Zoooo
o`03o`000?oooooooooo04Cooooo00?o0000ooooooooool0A?ooool00ol0003oooooooooo`14oooo
o`03o`000?oooooooooo02;ooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`0Ooooo
o`00ooooool00ol0003oooooooooo`0Qooooo`03o`000?oooooooooo04;ooooo003oooooo`03o`00
0?oooooooooo027ooooo00?o0000ooooooooool0@_ooool00?oooooo00?o0000ooooooooool08?oo
ool00ol0003oooooooooo`13ooooo`00ooooool2o`00027ooooo00?o0000ooooooooool0@oooool0
0?oooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`14ooooo`00ooooool00ol0003o
ooooooooo`0Oooooo`03o`000?oooooooooo04Cooooo003oooooo`03o`000?oooooooooo01kooooo
00?o0000ooooooooool0AOooool00?oooooo00?o0000ooooooooool07_ooool00ol0003ooooooooo
o`15ooooo`00ooooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo04Kooooo003ooooo
o`;o00007_ooool00ol0003oooooooooo`16ooooo`00ooooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo04Oooooo003oooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0
Aoooool00?oooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`18ooooo`00ooooool0
0ol0003oooooooooo`0Kooooo`03o`000?oooooooooo04Sooooo003oooooo`03o`000?oooooooooo
01[ooooo00?o0000ooooooooool0BOooool00?oooooo0_l0000Kooooo`03o`000?oooooooooo04Wo
oooo003oooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool0B_ooool00?oooooo00?o
0000ooooooooool06Oooool00ol0003oooooooooo`1:ooooo`00ooooool00ol0003oooooooooo`0H
ooooo`03o`000?oooooooooo04_ooooo003oooooo`03o`000?oooooooooo01Sooooo00?o0000oooo
ooooool0Boooool00?oooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`1<ooooo`00
ooooool2o`0001Sooooo00?o0000ooooooooool0C?ooool00?oooooo00?o0000ooooooooool05_oo
ool00ol0003oooooooooo`1=ooooo`00ooooool00ol0003oooooooooo`0Fooooo`03o`000?oooooo
oooo04gooooo003<ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h01Oooool2ob4Q8@Cooooo00Gok^k^
oc8b<_l0003o<S8bonk^kP03ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h00oooool5o`0000Cooooo
00GoA4A4o`000?l0003o<S8bomgMg@05ooooo`03o`000?oooooooooo01Gooooo00?o0000oooooooo
ool0C_ooool00<cooooo00GoMgMgoiRHV?ooooooV9RHogMgM`05ooooo`;o8B4Q1?ooool01OmgMgOo
V9RHoooooonHV9SoMgMg00?ooooo00GoMgMgoiRHV?ooooooV9RHogMgM`03ooooo`05oiRHV?lQ8B7o
k^k^oooooom4A4@01oooool00omgMgOo<S8booooo`04ooooo`03o`000?oooooooooo01Gooooo00?o
0000ooooooooool0C_ooool00<cooooo00Go410@oooooooooooooooooa0@400;ooooo`05oa0@4?oo
ooooooooooooool@41000oooool01Ol@413ooooooooooooooooo410@00Cooooo00?oV9RHob4Q8Oo^
k^h02Oooool00ol0003oooooooooo`03ooooo`03o`000?oooooooooo01Cooooo00?o0000oooooooo
ool0Coooool00<cooooo00Go0000ooooooooooooooooo`00000;ooooo`05o`000?oooooooooooooo
ool000000oooool01Ol0003ooooooooooooooooo000000Gooooo00?oV9RHob4Q8Oo^k^h01oooool0
0omgMgOo<S8booooo`04ooooo`?o00005?ooool00ol0003oooooooooo`1?ooooo`00c?ooool01Ol0
003ooooooooooooooooo000000_ooooo00Go0000ooooooooooooooooo`000003ooooo`05o`000?oo
ooooooooooooool000001_ooool00omgMgOoIVIVooooo`03ooooo`05o`000?lQ8B7o0000oc8b<_o<
c<`01Oooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo053ooooo003<ooooo`05oa0@
4?ooooooooooooooool@41002oooool01Ol@413ooooooooooooooooo410@00?ooooo00Go410@oooo
oooooooooooooa0@4007ooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool01oooool0
0ol0003oooooooooo`0Cooooo`03o`000?oooooooooo053ooooo003<ooooo`05ogMgMonHV9Sooooo
oiRHV?mgMgL02oooool01OmgMgOoV9RHoooooonHV9SoMgMg00?ooooo00GoMgMgoiRHV?ooooooV9RH
ogMgM`03ooooo`05o`000?nj^[[ooooooiRHV?l@41001?ooool00ol0003oooooooooo`07ooooo`03
o`000?oooooooooo01;ooooo00?o0000ooooooooool0DOooool00<cooooo00Gok^k^oc8b<_l0003o
<S8bonk^kP0;ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h00oooool01Oo^k^ko<S8bo`000?lb<S;o
k^k^00?ooooo00GoV9RHoa0@4?l0003o8B4Qolc<c004ooooo`Co00001_ooool00ol0003ooooooooo
o`0Booooo`03o`000?oooooooooo057ooooo003oooooo`03o`000?oooooooooo017ooooo00?o0000
ooooooooool0D_ooool00?oooooo0_l0000Booooo`03o`000?oooooooooo05;ooooo003oooooo`03
o`000?oooooooooo013ooooo00?o0000ooooooooool0Doooool00?oooooo00?o0000ooooooooool0
3oooool00ol0003oooooooooo`1Dooooo`00ooooool00ol0003oooooooooo`0?ooooo`03o`000?oo
oooooooo05Cooooo003oooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool0EOooool0
0?oooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`1Eooooo`00ooooool2o`0000ko
oooo00?o0000ooooooooool0E_ooool00?oooooo00?o0000ooooooooool03?ooool00ol0003ooooo
ooooo`1Gooooo`00ooooool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo05Oooooo003o
ooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool0F?ooool00?oooooo00?o0000oooo
ooooool02oooool00ol0003oooooooooo`1Hooooo`00ooooool00ol0003oooooooooo`0:ooooo`03
o`000?oooooooooo05Wooooo003oooooo`;o00002oooool00ol0003oooooooooo`1Iooooo`00oooo
ool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo05[ooooo003oooooo`03o`000?oooooo
oooo00Sooooo00?o0000ooooooooool0Foooool00?oooooo00?o0000ooooooooool02?ooool00ol0
003oooooooooo`1Kooooo`00ooooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo05co
oooo003oooooo`03o`000?oooooooooo00Oooooo00?o0000ooooooooool0G?ooool00?oooooo0_l0
0007ooooo`03o`000?oooooooooo05gooooo003oooooo`03o`000?oooooooooo00Gooooo00?o0000
ooooooooool0G_ooool00?oooooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`1Noooo
o`00e?ooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00Gooooo0_lQ8B44ooooo`05onk^k_lb<S;o0000
oc8b<_o^k^h00oooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00?ooooo00GoV9RHoa0@4?l0003o<S8b
olc<c006ooooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool0Goooool00=Cooooo00Go
MgMgoiRHV?ooooooV9RHogMgM`05ooooo`;o8B4Q1?ooool01OmgMgOoV9RHoooooonHV9SoMgMg00?o
oooo00GoMgMgoiRHV?ooooooV9RHogMgM`03ooooo`05oa0@4?nj^[[oooooogMgMolb<S801_ooool0
0ol0003oooooooooo`04ooooo`03o`000?oooooooooo05oooooo003Dooooo`05oa0@4?oooooooooo
ooooool@41002oooool01Ol@413ooooooooooooooooo410@00?ooooo00Go410@oooooooooooooooo
oa0@4007ooooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool00oooool00ol0003ooooo
ooooo`1Pooooo`00e?ooool01Ol0003ooooooooooooooooo000000_ooooo00Go0000oooooooooooo
ooooo`000003ooooo`05o`000?ooooooooooooooool000001_ooool00onYZJWo410@ooooo`05oooo
o`?o00000_ooool00ol0003oooooooooo`1Qooooo`00e?ooool01Ol0003ooooooooooooooooo0000
00_ooooo00Go0000ooooooooooooooooo`000003ooooo`05o`000?ooooooooooooooool000001Ooo
ool00ol@413o0000okZj^P06ooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool0HOoo
ool00=Cooooo00Go410@oooooooooooooooooa0@400;ooooo`05oa0@4?ooooooooooooooool@4100
0oooool01Ol@413ooooooooooooooooo410@00Kooooo00?o^[Zjob4Q8Oooool01Oooool01Ol0003o
oooooooooooooooo000006Cooooo003Dooooo`05ogMgMonHV9SooooooiRHV?mgMgL02oooool01Omg
MgOoV9RHoooooonHV9SoMgMg00?ooooo00GoMgMgoiRHV?ooooooV9RHogMgM`03ooooo`05oa0@4?nH
V9SooooookZj^_l000001_ooool01?l0003oooooooooool0001Uooooo`00e?ooool01Oo^k^ko<S8b
o`000?lb<S;ok^k^00_ooooo00Gok^k^oc8b<_l0003o<S8bonk^kP03ooooo`05onk^k_lb<S;o0000
oc8b<_o^k^h00oooool01OnYZJWo410@o`000?l@413oZJVY00Kooooo00Co0000oooooooooooo0000
IOooool00?oooooo00?o0000ooooool00000I_ooool00?oooooo0_l0001Wooooo`00ooooool2o`00
06Oooooo003oooooo`03o`000?oooooooooo06Kooooo003nooooo`;o0000J?ooool00?kooooo0_l0
001Xooooo`00oOooool00ol0003oooooo`00001Xooooo`00o?ooool00ol0003oooooooooo`02o`00
06Oooooo003looooo`04o`000?ooooooooooo`0006Sooooo003kooooo`05o`000?oooooooooooooo
ool00000J?ooool00?[ooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`1Vooooo`00
n_ooool00ol0003oooooooooo`02ooooo`03o`000?oooooooooo06Kooooo003iooooo`03o`000?oo
oooooooo00?ooooo00?o0000ooooooooool0I_ooool00?Sooooo00?o0000ooooooooool01?ooool2
o`0006Oooooo003hooooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool0I_ooool00?Oo
oooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`1Vooooo`00m_ooool00ol0003ooooo
ooooo`06ooooo`03o`000?oooooooooo06Kooooo003fooooo`03o`000?oooooooooo00Kooooo00?o
0000ooooooooool0I_ooool00?Gooooo00?o0000ooooooooool01oooool00ol0003oooooooooo`1V
ooooo`00m?ooool00ol0003oooooooooo`08ooooo`;o0000Ioooool00?Cooooo00?o0000oooooooo
ool02?ooool00ol0003oooooooooo`1Vooooo`00loooool00ol0003oooooooooo`09ooooo`03o`00
0?oooooooooo06Kooooo003<ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h01Oooool2ob4Q8@Cooooo
00Gok^k^oc8b<_l0003o<S8bonk^kP03ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h00oooool01onH
V9So410@o`000?lb<S;oc<c<ooooool000000_ooool01Om4A4Co0000o`000?lb<S;ogMgM00Gooooo
00?o0000ooooooooool0I_ooool00<cooooo00GoMgMgoiRHV?ooooooV9RHogMgM`05ooooo`;o8B4Q
1?ooool01OmgMgOoV9RHoooooonHV9SoMgMg00?ooooo00GoMgMgoiRHV?ooooooV9RHogMgM`03oooo
o`07oa0@4?nj^[[oooooogMgMolb<S;oooooo`000005ooooo`03ogMgMolb<S;ooooo00Cooooo00?o
0000ooooooooool0I_ooool00<cooooo00Go410@oooooooooooooooooa0@400;ooooo`05oa0@4?oo
ooooooooooooool@41000oooool01Ol@413ooooooooooooooooo410@00Oooooo0_l00007ooooo`03
o`000?oooooooooo00?ooooo00?o0000ooooooooool0I_ooool00<cooooo00Go0000oooooooooooo
ooooo`00000;ooooo`05o`000?ooooooooooooooool000000oooool01Ol0003ooooooooooooooooo
000000Kooooo00?oZJVYoa0@4?l000001_ooool00omgMgOo<S8booooo`04ooooo`?o0000I_ooool0
0<cooooo00Go0000ooooooooooooooooo`00000;ooooo`05o`000?ooooooooooooooool000000ooo
ool01Ol0003ooooooooooooooooo000000Gooooo00?o410@o`000?l000001?ooool01Ol0003o8B4Q
o`000?lb<S;oc<c<00Gooooo00?o0000ooooooooool0I_ooool00<cooooo00Go410@oooooooooooo
oooooa0@400;ooooo`05oa0@4?ooooooooooooooool@41000oooool01Ol@413ooooooooooooooooo
410@00Kooooo00?o0000ob4Q8Oooool00oooool00ol0003oooooooooo`07ooooo`03o`000?oooooo
oooo06Kooooo003<ooooo`05ogMgMonHV9SooooooiRHV?mgMgL02oooool01OmgMgOoV9RHoooooonH
V9SoMgMg00?ooooo00GoMgMgoiRHV?ooooooV9RHogMgM`03ooooo`03oa0@4?nHV9Sooooo00;o0000
1?ooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo06Kooooo003<ooooo`05onk^k_lb
<S;o0000oc8b<_o^k^h02oooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00?ooooo00Gok^k^oc8b<_l0
003o<S8bonk^kP03ooooo`05ojVYZOl@413o0000oa0@4?nYZJT01?ooool4o`0000Kooooo00?o0000
ooooooooool0I_ooool00>gooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`1Voooo
o`00kOooool00ol0003oooooooooo`0?ooooo`;o0000Ioooool00>cooooo00?o0000ooooooooool0
4?ooool00ol0003oooooooooo`1Vooooo`00joooool00ol0003oooooooooo`0Aooooo`03o`000?oo
oooooooo06Kooooo003[ooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool0I_ooool0
0>[ooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`1Vooooo`00jOooool00ol0003o
ooooooooo`0Cooooo`03o`000?oooooooooo06Kooooo003Xooooo`03o`000?oooooooooo01Cooooo
0_l0001Wooooo`00ioooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo06Kooooo003V
ooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool0I_ooool00>Kooooo00?o0000oooo
ooooool05_ooool00ol0003oooooooooo`1Vooooo`00iOooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo06Kooooo003Tooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool0
I_ooool00>?ooooo00?o0000ooooooooool06Oooool2o`0006Oooooo003Rooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool0I_ooool00>7ooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`1Vooooo`00hOooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo06Ko
oooo003Pooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0I_ooool00=oooooo00?o
0000ooooooooool07Oooool00ol0003oooooooooo`1Vooooo`00g_ooool00ol0003oooooooooo`0N
ooooo`;o0000Ioooool00=gooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`1Voooo
o`00g?ooool00ol0003oooooooooo`0Pooooo`03o`000?oooooooooo06Kooooo003Dooooo`05onk^
k_lb<S;o0000oc8b<_o^k^h00oooool01?l0003oooooob4Q8OlQ8B44ooooo`05onk^k_lb<S;o0000
oc8b<_o^k^h00oooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00Gooooo0_l000000ol@413ooooooooo
o`04ooooo`03o`000?oooooooooo06Kooooo003Dooooo`05ogMgMonHV9SooooooiRHV?mgMgL00_oo
ool00ol0003oooooooooo`02ob4Q8@Cooooo00GoMgMgoiRHV?ooooooV9RHogMgM`03ooooo`05ogMg
MonHV9SooooooiRHV?mgMgL01_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo06Ko
oooo003Dooooo`07oa0@4?ooooooooooooooool@413oooooo`000009ooooo`05oa0@4?oooooooooo
ooooool@41000oooool01Ol@413ooooooooooooooooo410@00?ooooo1Ol00006ooooo`03o`000?oo
oooooooo06Kooooo003Dooooo`04o`000?ooooooooooooooo`;o00002_ooool01Ol0003ooooooooo
oooooooo000000?ooooo00Go0000ooooooooooooooooo`000003ooooo`04odA4A?oMgMgoooooo`00
00Oooooo0ol0001Vooooo`00e?ooool01Ol0003ooooooooooooooooo000000_ooooo00Go0000oooo
ooooooooooooo`000003ooooo`05o`000?ooooooooooooooool000000oooool01?oMgMgoEEEEoooo
ool00007ooooo`03o`000?oooooooooo06Kooooo003Dooooo`05oa0@4?ooooooooooo`000?l@4100
2oooool01Ol@413ooooooooooooooooo410@00?ooooo00Go410@oooooooooooooooooa0@4004oooo
o`03ogMgMoo<c<co000000Oooooo00?o0000ooooooooool0I_ooool00=Cooooo00GoMgMgoiRHV?l0
003oV9RHogMgM`0;ooooo`05ogMgMonHV9SooooooiRHV?mgMgL00oooool01OmgMgOoV9RHoooooonH
V9SoMgMg00Cooooo00?ok^k^odA4A?l000001oooool00ol0003oooooooooo`1Vooooo`003Oooool0
0ol0003oooooooooo`34ooooo`05onk^k_l0003o0000oc8b<_o^k^h02oooool01Oo^k^ko<S8bo`00
0?lb<S;ok^k^00?ooooo00Gok^k^oc8b<_l0003o<S8bonk^kP05ooooo`03ogMgMol0003ooooo00Ko
oooo00?o0000ooooooooool0I_ooool000gooooo00?o0000ooooooooool0aOooool00ol0003ooooo
ooooo`0Wooooo`03o`000?oooooooooo06Kooooo000>ooooo`03o`000?oooooooooo0<?ooooo00?o
0000ooooooooool0:?ooool2o`0006Oooooo000?ooooo`03o`000?oooooooooo0<7ooooo00?o0000
ooooooooool0:Oooool00ol0003oooooooooo`1Vooooo`004?ooool00ol0003oooooooooo`2ooooo
o`03o`000?oooooooooo02[ooooo00?o0000ooooooooool0I_ooool0017ooooo00?o0000oooooooo
ool0_Oooool00ol0003oooooooooo`0[ooooo`03o`000?oooooooooo06Kooooo000Booooo`03o`00
0?oooooooooo0;_ooooo00?o0000ooooooooool0;?ooool00ol0003oooooooooo`1Vooooo`004ooo
ool00ol0003oooooooooo`2hooooo`;o0000;oooool00ol0003oooooooooo`1Vooooo`005?ooool0
0ol0003oooooooooo`2fooooo`03o`000?oooooooooo02oooooo0_l0001Wooooo`005Oooool00ol0
003oooooooooo`2dooooo`03o`000?oooooooooo033ooooo00?o0000ooooooooool0I_ooool001Ko
oooo00?o0000ooooooooool0/_ooool00ol0003oooooooooo`0aooooo`03o`000?oooooooooo06Ko
oooo000Gooooo`03o`000?oooooooooo0;3ooooo00?o0000ooooooooool0<_ooool00ol0003ooooo
ooooo`1Vooooo`006?ooool00ol0003oooooooooo`2^ooooo`03o`000?oooooooooo03?ooooo00?o
0000ooooooooool0I_ooool001Wooooo00?o0000ooooooooool0[?ooool00ol0003oooooooooo`0d
ooooo`03o`000?oooooooooo06Kooooo000Jooooo`;o0000Zoooool00ol0003oooooooooo`0eoooo
o`;o0000Ioooool001cooooo00?o0000ooooooooool0Yoooool00ol0003oooooooooo`0fooooo`03
o`000?oooooooooo06Kooooo000Mooooo`03o`000?oooooooooo0:Gooooo00?o0000ooooooooool0
=oooool00ol0003oooooooooo`1Vooooo`007_ooool00ol0003oooooooooo`2Sooooo`03o`000?oo
oooooooo03Sooooo00?o0000ooooooooool0I_ooool001oooooo00?o0000ooooooooool0XOooool0
0ol0003oooooooooo`0iooooo`03o`000?oooooooooo06Kooooo000Pooooo`03o`000?oooooooooo
09oooooo00?o0000ooooooooool0>_ooool00ol0003oooooooooo`1Vooooo`008Oooool2o`0009go
oooo0_l0000mooooo`;o0000Ioooool002?ooooo00?o0000ooooooooool0VOooool00ol0003ooooo
ooooo`0mooooo`03o`000?oooooooooo06Kooooo000Tooooo`03o`000?oooooooooo09Oooooo00?o
0000ooooooooool0?_ooool00ol0003oooooooooo`1Vooooo`009Oooool00ol0003oooooooooo`2E
ooooo`03o`000?oooooooooo00cooooo00Gok^k^oc8b<_l0003o<S8bonk^kP05ooooo`;o8B4Q1?oo
ool01Oo^k^ko<S8bo`000?lb<S;ok^k^00?ooooo00Gok^k^oc8b<_l0003o<S8bonk^kP05ooooo`;o
000000?o410@ooooooooool00_ooool01Om4A4Co0000o`000?lb<S;ogMgM00Gooooo00?o0000oooo
ooooool0I_ooool002Kooooo00?o0000ooooooooool0T_ooool2o`0000oooooo00GoMgMgoiRHV?oo
ooooV9RHogMgM`05ooooo`;o8B4Q1?ooool01OmgMgOoV9RHoooooonHV9SoMgMg00?ooooo00GoMgMg
oiRHV?ooooooV9RHogMgM`06ooooo`03o`000?oooooooooo00Kooooo00?oMgMgoc8b<_ooool01?oo
ool00ol0003oooooooooo`1Vooooo`009oooool00ol0003oooooooooo`2@ooooo`03o`000?oooooo
oooo00oooooo00Go410@oooooooooooooooooa0@400;ooooo`05oa0@4?ooooooooooooooool@4100
0oooool01Ol@413ooooooooooooooooo410@00?ooooo1Ol00008ooooo`03o`000?oooooooooo00?o
oooo00?o0000ooooooooool0I_ooool002Sooooo00?o0000ooooooooool0S_ooool00ol0003ooooo
ooooo`0@ooooo`05o`000?ooooooooooooooool000002oooool01Ol0003ooooooooooooooooo0000
00?ooooo00Go0000ooooooooooooooooo`000003ooooo`04odA4A?oMgMgoooooo`0000Sooooo00?o
MgMgoc8b<_ooool01?ooool3o`0006Kooooo000Yooooo`;o0000SOooool00ol0003oooooooooo`0A
ooooo`05o`000?ooooooooooooooool000002oooool01Ol0003ooooooooooooooooo000000?ooooo
00Go0000ooooooooooooooooo`000003ooooo`04omgMgOmEEEGoooooo`0000Gooooo00Go0000ob4Q
8Ol0003o<S8bolc<c005ooooo`03o`000?oooooooooo06Kooooo000[ooooo`03o`000?oooooooooo
08Sooooo0_l0000Dooooo`05oa0@4?ooooooooooooooool@41002oooool01Ol@413ooooooooooooo
oooo410@00?ooooo00Go410@oooooooooooooooooa0@4004ooooo`03ogMgMoo<c<co000000Gooooo
00?o0000ooooooooool01oooool00ol0003oooooooooo`1Vooooo`00;?ooool2o`0008Oooooo00?o
0000ooooooooool05?ooool01OmgMgOoV9RHoooooonHV9SoMgMg00_ooooo00GoMgMgoiRHV?oooooo
V9RHogMgM`03ooooo`05ogMgMonHV9SooooooiRHV?mgMgL01?ooool00oo^k^koA4A4o`000005oooo
o`03o`000?oooooooooo00Oooooo00?o0000ooooooooool0I_ooool002kooooo00?o0000oooooooo
ool0Poooool00ol0003oooooooooo`0Eooooo`05onk^k_lb<S;o0000oc8b<_o^k^h02oooool01Oo^
k^ko<S8bo`000?lb<S;ok^k^00?ooooo00Gok^k^oc8b<_l0003o<S8bonk^kP05ooooo`03ogMgMol0
003ooooo00Cooooo1?l00006ooooo`03o`000?oooooooooo06Kooooo000_ooooo`03o`000?oooooo
oooo087ooooo00?o0000ooooooooool0BOooool00ol0003oooooooooo`1Vooooo`00<?ooool2o`00
07oooooo0_l0001<ooooo`;o0000Ioooool003;ooooo00?o0000ooooooooool0Noooool00ol0003o
ooooooooo`1<ooooo`03o`000?oooooooooo06Kooooo000cooooo`;o0000NOooool2o`0004oooooo
00?o0000ooooooooool0I_ooool003Gooooo00?o0000ooooooooool0MOooool00ol0003ooooooooo
o`1?ooooo`03o`000?oooooooooo06Kooooo000fooooo`03o`000?oooooooooo07;ooooo0_l0001B
ooooo`03o`000?oooooooooo06Kooooo000gooooo`;o0000LOooool00ol0003oooooooooo`1Boooo
o`03o`000?oooooooooo06Kooooo000iooooo`03o`000?oooooooooo06gooooo00?o0000oooooooo
ool0Doooool2o`0006Oooooo000jooooo`;o0000Joooool2o`0005Kooooo00?o0000ooooooooool0
I_ooool003cooooo0_l0001Xooooo`03o`000?oooooooooo05Kooooo00?o0000ooooooooool0I_oo
ool003kooooo00?o0000ooooooooool0Hoooool2o`0005Wooooo00?o0000ooooooooool0I_ooool0
03oooooo0_l0001Qooooo`;o0000Foooool00ol0003oooooooooo`1Vooooo`00@Oooool2o`0005go
oooo0_l0001Mooooo`03o`000?oooooooooo06Kooooo0013ooooo`03o`000?oooooooooo05Sooooo
0_l0001Oooooo`;o0000Ioooool004Cooooo0_l0001Fooooo`;o0000HOooool00ol0003ooooooooo
o`1Vooooo`00A_ooool3o`00057ooooo0_l0001Sooooo`03o`000?oooooooooo06Kooooo0019oooo
o`;o0000COooool2o`0006Gooooo00?o0000ooooooooool0I_ooool004_ooooo0_l00019ooooo`;o
0000Ioooool00ol0003oooooooooo`1Vooooo`00COooool3o`0004?ooooo0ol0001Yooooo`03o`00
0?oooooooooo06Kooooo001@ooooo`;o0000?_ooool3o`0006cooooo0_l0001Wooooo`00D_ooool3
o`0003Wooooo0_l0001_ooooo`03o`000?oooooooooo06Kooooo001Eooooo`?o0000<oooool3o`00
077ooooo00?o0000ooooooooool0I_ooool005Sooooo1_l0000Wooooo`Ko0000BOooool01Oo^k^ko
<S8bo`000?lb<S;ok^k^00Gooooo0_lQ8B44ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h00oooool0
1Oo^k^ko<S8bo`000?lb<S;ok^k^00Cooooo00GoA4A4o`000?l0003o<S8bomgMg@05ooooo`03o`00
0?oooooooooo06Kooooo001Nooooo`Go00007Oooool5o`0004oooooo00GoMgMgoiRHV?ooooooV9RH
ogMgM`05ooooo`;o8B4Q1?ooool01OmgMgOoV9RHoooooonHV9SoMgMg00?ooooo00GoMgMgoiRHV?oo
ooooV9RHogMgM`07ooooo`03ogMgMolb<S;ooooo00Cooooo00?o0000ooooooooool0I_ooool006?o
oooo1ol0000@ooooo`Ko0000E?ooool01Ol@413ooooooooooooooooo410@00_ooooo00Go410@oooo
oooooooooooooa0@4003ooooo`05oa0@4?ooooooooooooooool@41002?ooool00ol0003ooooooooo
o`03ooooo`03o`000?oooooooooo06Kooooo001Zoooooa3o0000F_ooool01Ol0003ooooooooooooo
oooo000000_ooooo00Go0000ooooooooooooooooo`000003ooooo`05o`000?ooooooooooooooool0
00001oooool00omgMgOo<S8booooo`04ooooo`?o0000I_ooool00=Cooooo00Go0000oooooooooooo
ooooo`00000;ooooo`05o`000?ooooooooooooooool000000oooool01Ol0003ooooooooooooooooo
000000Cooooo00Go0000ob4Q8Ol0003o<S8bolc<c005ooooo`03o`000?oooooooooo06Kooooo003D
ooooo`05oa0@4?ooooooooooooooool@41002oooool01Ol@413ooooooooooooooooo410@00?ooooo
00Go410@oooooooooooooooooa0@4004ooooo`03o`000?oooooooooo00Oooooo00?o0000oooooooo
ool0I_ooool00=Cooooo00GoMgMgoiRHV?ooooooV9RHogMgM`0;ooooo`05ogMgMonHV9SooooooiRH
V?mgMgL00oooool01OmgMgOoV9RHoooooonHV9SoMgMg00Cooooo00?o0000ooooooooool01oooool0
0ol0003oooooooooo`1Vooooo`00e?ooool01Oo^k^ko<S8bo`000?lb<S;ok^k^00_ooooo00Gok^k^
oc8b<_l0003o<S8bonk^kP03ooooo`05onk^k_lb<S;o0000oc8b<_o^k^h01?ooool4o`0000Kooooo
00?o0000ooooooooool0I_ooool00?oooooo00?o0000ooooooooool0I_ooool00001\
\>"],
  ImageRangeCache->{{{0, 359}, {221.375, 0}} -> {1.22803, 0.00140629, \
0.000351941, 2.08211*^-5}}],

Cell[BoxData[
    TagBox[
      StyleBox[\(List["\<sample\>", 0.0557397281697839`, 
          0.05588585316861489`, 0.05588585316861489`]\),
        ShowSpecialCharacters->False,
        ShowStringCharacters->True,
        NumberMarks->True],
      FullForm]], "Output",
  CellLabel->"Sphere`Private`SphereOut[1435]//FullForm="],

Cell[BoxData[
    \(0.00006097503951220773`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[1436]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
4 blades , 3Q + q halfwt, find nonlinear inequalities for each \
simplex\
\>", "Subsection"],

Cell[BoxData[
    \( (*\ Plot3D[
        gamma4Lbwt[y1, 2, 2, y4, 2, 2], {y1, 2  hminus, 2  hplus}, {y4, 
          2  hminus, 2  hplus}]\ \ *) \)], "Input",
  CellLabel->"SphereIn[167]:="],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[ineq, machineEps, Test, ineqY, tab, lis, test, run, y1, y2, y3, 
        y4, y5, y6];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Generate\ and\ run\ a\ linear\ program\ to\ find\ coefficients\ of\ \
inequalities\ on\ a\ simplex\ that\ give\ the\ desired\ bound\ on\ the\ 3  
          quarter + 
        1  halfwt\ \(\(config\)\(.\)\)\ *) \[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(ineq[is_, s1_, s4_, inq_] := \ 
        Module[{y, 
            s}, \[IndentingNewLine]s\  = \ {2, 
              2  hminus, "\<_\>"}; \[IndentingNewLine]y = \ 
            Inner[Part, {s1, s, s, s4, s, s}, is, 
              List]; \[IndentingNewLine]inq\ @\ 
            y\[IndentingNewLine]];\)\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(iny[i_, y_] := \ 
        Module[{r, j, g, d, y1, y2, y3, y4, y5, 
            y6}, \[IndentingNewLine]{y1, y2, y3, y4, y5, y6} = 
            y; \[IndentingNewLine]g\  = \ 
            If[i \[Equal] 1, gamma4Lbump, gamma4L]\  @@ \ 
              y; \[IndentingNewLine]d\  = \ 
            Dihedral\  @@ \ y; \[IndentingNewLine]r[j_] := \ 
            If[i \[Equal] j, {y1, y2 + y3 + y5 + y6, 1}, {0, 0, 0}]; \ \  (*\ 
            b, c, d\ coefficients\ *) \[IndentingNewLine]{Join[{1, d}, r[1], 
              r[2], r[3], 
              r[4]], \(-g\)}\[IndentingNewLine]];\)\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(valiny[i_, y_, coeff_] := \ 
        Module[{c, mg}, \[IndentingNewLine]{c, mg}\  = \ 
            iny[i, y]; \[IndentingNewLine]c[\([1]\)] = 0; \  (*\ 
            kill\ epsilon\ *) \[IndentingNewLine]\(-mg\)\  + \ 
            c . coeff\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ for\ debugging\ *) \), "\[IndentingNewLine]", 
    \(\(holdiny[i_, y_] := \ 
        Module[{ZERO, r, j, g, d, y1, y2, y3, y4, y5, 
            y6}, \[IndentingNewLine]{y1, y2, y3, y4, y5, y6} = 
            y; \[IndentingNewLine]ZERO = 0; \  (*\ 
            kill\ epsilon\ *) \[IndentingNewLine]g\  = \ 
            If[i \[Equal] 1, HoldForm[gamma4Lbump], HoldForm[gamma4L]]\  @@ \ 
              y; \[IndentingNewLine]d\  = \ 
            HoldForm[Dihedral]\  @@ \ y; \[IndentingNewLine]r[j_] := \ 
            If[i \[Equal] j, {y1, y2 + y3 + y5 + y6, 1}, {0, 0, 0}]; \ \  (*\ 
            b, c, 
            d\ coefficients\ *) \[IndentingNewLine]{Join[{ZERO, d}, r[1], 
              r[2], r[3], 
              r[4]], \(-g\)}\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ for\ debugging\ *) \), "\[IndentingNewLine]", 
    \(\(holdvaliny[i_, coeff_] := \ 
        Module[{c, mg}, \[IndentingNewLine]{c, mg}\  = \ 
            holdiny[i, {y1, y2, y3, y4, y5, 
                y6}]; \[IndentingNewLine]\(-mg\)\  + \ 
            c . coeff\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\)\
, "\[IndentingNewLine]", 
    \(\(ineqY[i_, s1_] := \ 
        Module[{machineEps\ , s\ , z, r, j}, \ \  (*\ 
            sum\ of\ all\ four\ pieces\ *) \[IndentingNewLine]machineEps\  = \
\ 1.0\ *\ 10^\(-7\); \[IndentingNewLine]s\  = \ {2, 
              2  hminus, "\<_\>"}; \[IndentingNewLine]y\  = \ 
            Inner[Part, {s, s, s, s, s1}, i, List]; \[IndentingNewLine]r[
              j_] := \ {\(-y[\([5]\)]\), \(-2\) \((y[\([j]\)] + 
                    y[\([1 + 
                          Mod[j, 
                            4]\ ]\)])\), \(-1\)}; \
\[IndentingNewLine]{Join[{0, \(-2.0\)\ Pi}, r[1], r[2], r[3], r[4]], 
            machineEps}];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(tab\  = \ 
        Flatten[Outer[List, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}], 
          5];\)\), "\[IndentingNewLine]", 
    \(\(tab2 = \ 
        Flatten[Outer[List, {1, 2}, {1, 2}, {1, 2}, {1, 2}, {1, 2}], 
          4];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(lis[x1_, x4s_] := \ 
        Module[{}, \[IndentingNewLine]Join[
            Flatten[Table[
                ineq[\ tab[\([j]\)], \ x1, x4s[\([i]\)], iny[i, #] &], {j, 1, 
                  Length[tab]}, {i, 1, 4}], 1], \[IndentingNewLine]Table[
              ineqY[tab2[\([j]\)], x1], {j, 1, 
                Length[tab2]}]]];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      test : \ lis[{2  hminus, 
            2.52}, {{2.52, 2  hplus}, {2, 2  hminus}, {2, 2  hminus}, {2, 
              2  hminus}}]\ *) \[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(test[v_, list_] := \ 
        Map[\((First[#] . v\  - Last[#])\) &, 
          list];\)\), "\[IndentingNewLine]", 
    \(\(run[x1_, x4s_] := \ 
        Module[{ll, i, obj}, \[IndentingNewLine]ll\  = \ 
            lis[x1, x4s]; \[IndentingNewLine]objective = \ 
            Table[If[i \[Equal] 1, 1, 0], {i, 1, 
                14}]; \[IndentingNewLine]rr = 
            LinearProgramming[objective, Map[First, ll], 
              Map[Last, 
                ll], \(-5\)]; \[IndentingNewLine]{rr, \
\[IndentingNewLine]\(test[rr, ll] // Min\) // 
              Chop}];\)\[IndentingNewLine]\[IndentingNewLine] \
(*\[IndentingNewLine]run[{2  hminus, 
          2.52}, {{2  hminus, 2.52}, {2, 2.2}, {2.2, 2.3}, {2, 
            2.4}}]\[IndentingNewLine]*) \[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \( (*\ Retain[run, valiny]\ *) \)}], "Input",
  CellLabel->"Sphere`Private`SphereIn[1495]:="],

Cell[BoxData[
    RowBox[{\(General::"spell"\), \(\(:\)\(\ \)\), "\<\"Possible spelling \
error: new symbol name \\\"\\!\\(Test\\)\\\" is similar to existing symbols \
\\!\\({Nest, Rest, test, Text}\\). \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"General::spell\\\"]\\)\"\>"}]], \
"Message",
  CellLabel->"From Sphere`Private`SphereIn[1495]:="]
}, Open  ]],

Cell[BoxData[{
    \(\(Clear[lb, ub, f, min, \ cutoff, \ sec1, \ sec2, x, xq, xh, 
        ff];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Test\ the\ nonlinear\ equalities\ numerically, \ 
      that\ were\ generated\ by\ the\ linear\ progam\ *) \
\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(min[bounds_, f_] := \ 
        Module[{a, b, e, mk, lb, ub, ys, y, y1, y2, y3, y4, y5, 
            y6}, \[IndentingNewLine]y\  = \ {y1, y2, y3, y4, y5, 
              y6}; \[IndentingNewLine]{lb, ub} = 
            Transpose[bounds]; \[IndentingNewLine]mk[a_, b_] := \ 
            Inner[LessEqual, a, b, List]; \[IndentingNewLine]{e, ys} = 
            NMinimize[Join[{f[y]}, mk[lb, y], mk[y, ub]], 
              y]; \[IndentingNewLine]{e, 
            y /. ys}\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine] (*\ \[IndentingNewLine]0.0001\  : \ 
        23\ cases; \[IndentingNewLine]0.0002\  : \ 
        32\ cases; \[IndentingNewLine]0.0003\  : \ 
        46\ cases; \[IndentingNewLine]0.0004\  : \ 
        infinity;\[IndentingNewLine]*) \), "\[IndentingNewLine]", 
    \(\(\(cutoff\  = \ 0.0003;\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(ff[x1_, x4s_] := \ 
        Module[{r, i, y, s, t, f}, \[IndentingNewLine]r = 
            run[x1, x4s]; \[IndentingNewLine]s\  = \ {2, 
              2  hminus}; \[IndentingNewLine]f[i_] := \ 
            valiny[i, #, First[r]] &; \[IndentingNewLine]If[
            First[First[r]]\  > \ \(-cutoff\), 
            Return[{"\<-\>", "\<-\>", r}]]; \[IndentingNewLine]t\  = \ 
            Table[min[{x1, s, s, x4s[\([i]\)], s, s}, f[i]], {i, 1, 
                4}]; \[IndentingNewLine]Join[
            t, {r}]\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine] (*\[IndentingNewLine]test1 = 
        ff[{2  hminus, 
            2.52}, {{2  hminus, 2.52}, {2, 2.2}, {2.2, 2.3}, {2, 
              2.4}}]; \[IndentingNewLine]valiny[1, {2.5, 2, 2, 2.5, 2, 2}, 
        First[test1]];\[IndentingNewLine]*) \[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine] (*\ 
      need\ to\ branch\ and\ bound\ \(\(here\)\(:\)\)\ *) \[IndentingNewLine]\
\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \( (*\ Retain[\ cutoff, \ ff\ ]\ *) \)}], "Input",
  CellLabel->"Sphere`Private`SphereIn[1507]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ 
      find\ a\ subdivision\ \ on\ which\ the\ inequalities\ hold\ *) \)\(\
\[IndentingNewLine]\)\(\(Clear[a, b, \ dd, gg, out0, outer1, outer2, outer3, 
        outer4, mean, path, done, stack, width, index, subdivide, 
        outer];\)\[IndentingNewLine]\[IndentingNewLine]
    \(mean[x_]\  := \ \((Plus\  @@ \ x)\)/
          Length[x];\)\[IndentingNewLine]\[IndentingNewLine]
    \(path[x_, list_] := \ 
        Module[{p}, \[IndentingNewLine]If[Length[list] \[Equal] \ 0, 
            Return[x]]; \[IndentingNewLine]p\  = \ 
            mean[x]; \[IndentingNewLine]y\  = \ 
            If[First[list] \[Equal] 0, {First[x], p}, {p, 
                Last[x]}]; \[IndentingNewLine]path[y, 
            Drop[list, 
              1]]\[IndentingNewLine]];\)\[IndentingNewLine]\[IndentingNewLine]\

    \(weight[list_] := \ 
        Module[{a, b, r}, \[IndentingNewLine] (*\ 
            path = \ wt . x\ *) \[IndentingNewLine]r\  = \ 
            path[{a, b}, list]; \[IndentingNewLine]{D[r, a], D[r, b]} // 
            Transpose\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]
    weight1[list_] := \ Map[First, weight[list]]; \ \  (*\ 
      second\ components\ can\ be\ recovered\ from\ \(first : \ {t, 
            1 - t}\)\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      test\ *) \[IndentingNewLine]weight[{0, 0, 0, 1, 1, 0, 0}] . {0.7, 
            0.8}\  - \ path[{0.7, 0.8}, {0, 0, 0, 1, 1, 0, 0}] // 
      Chop\[IndentingNewLine]\[IndentingNewLine]
    \(width[x_, list_] := \ 
        Module[{s}, \ 
          s\  = \ path[x, list] // N; \[IndentingNewLine]s[\([2]\)] - 
            s[\([1]\)]];\)\[IndentingNewLine]\[IndentingNewLine]
    \(index[out_, p_] := 
        Module[{w, i, recalibrate}, \[IndentingNewLine]recalibrate[i_] := \ 
            If[i \[Equal] 1, 2, 1]; \ \  (*\ emphasize\ the\ first\ edge, \ 
            shared\ by\ all\ simplices\ *) \[IndentingNewLine]w[i_] := \ 
            recalibrate[i]\ width[out[\([i]\)], 
                p[\([i]\)]]; \[IndentingNewLine]\(Sort[
                Table[{w[i], i}, {i, 1, Length[p]}]]\ \  // Last\) // 
            Last\ \[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]
    \(subdivide[out_, p_] := 
        Module[{i, q1, q2}, \[IndentingNewLine]i\  = \ 
            index[out, p]; \[IndentingNewLine]q1 = p; \ 
          q2 = p; \[IndentingNewLine]q1[\([i]\)] = 
            Append[p[\([i]\)], 0]; \[IndentingNewLine]q2[\([i]\)]\  = \ 
            Append[p[\([i]\)], 1]; \ \[IndentingNewLine]{q1, 
            q2}\[IndentingNewLine]];\)\[IndentingNewLine]\[IndentingNewLine]
    \(gg[out_, list_] := \ 
        Module[{i, t}, \[IndentingNewLine]t\  = \ 
            Table[path[out[\([i]\)], list[\([i]\)]], {i, 1, 
                Length[out]}]; \[IndentingNewLine]ff\ [First[t], 
            Drop[t, 1]]\[IndentingNewLine]];\)\ \ \[IndentingNewLine]\
\[IndentingNewLine]
    \(onepass[{out_, m_}] := \ 
        Module[{a, ll}, \[IndentingNewLine]If[Length[stack] \[Equal] 0, 
            Return[]]; \[IndentingNewLine]ll = \ 
            First[stack]; \[IndentingNewLine]stack\  = \ 
            Drop[stack, 1]; \[IndentingNewLine]a\  = \ 
            gg[out, ll]; \[IndentingNewLine] (*\ 
            lpvalue\  > \ \(-cutoff\)\  || \ 
              Min[numericalvalues]\  < \ \(\(cutoff\)\(\ \)\(:\)\)\ \ \
*) \[IndentingNewLine]If[\((\(Last[a]\)[\([1, 
                      1]\)]\  > \ \(-cutoff\))\)\  || \ \((Min[
                    Map[First, Drop[a, \(-1\)]]]\  < \ 
                  cutoff)\)\ , \[IndentingNewLine] (*\ then\ *) \ 
            stack = Join[\ \ subdivide[out, ll]\ \ \ , 
                stack], \[IndentingNewLine] (*\ else\ *) \ 
            done = \ Join[\ \ {{a, m, ll}}, 
                done]];\[IndentingNewLine]];\)\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]
    \(out0\  = \ Table[{2.0, 2  hminus}, {3}];\)\[IndentingNewLine]
    \(case[
          1] = {{2  hmid, 2  hplus}, {2  hminus, 
            2  hmid}};\)\[IndentingNewLine]
    \(case[
          2] = {{2  hmid, 2  hplus}, {2  hmid, 
            2  hplus}};\)\[IndentingNewLine]
    \(case[
          3] = \ {{2  hminus, 2  hmid}, {2  hminus, 
            2  hmid}};\)\[IndentingNewLine]
    \(case[
          4] = {{2  hminus, 2  hmid}, {2  hmid, 
            2  hplus}};\)\[IndentingNewLine]\[IndentingNewLine]
    \(outer1\ \  = \ {Join[case[1], out0], 1};\)\[IndentingNewLine]
    \(\(outer2\  = \ {Join[case[2], out0], 2};\);\)\[IndentingNewLine]
    \(\(outer3\  = \ {Join[case[3], out0], 3};\);\)\[IndentingNewLine]
    \(\(outer4\  = \ {Join[case[4], out0], 
            4};\);\)\[IndentingNewLine]\[IndentingNewLine]
    \(dd\  := \ {"\<done\>", done, "\<stack\>", 
          stack};\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Here\ is\ the\ big\ computation\ *) \[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine] (*\[IndentingNewLine]stack\  = \ {\ \ \
\ {{}, {}, {}, {}, {}}\ \ \ \ }; \[IndentingNewLine]done\  = \ {}; \
\[IndentingNewLine]While[Length[stack] > 0, 
        onepass[outer1]]; \[IndentingNewLine]\[IndentingNewLine]stack\  = \ {\
\ \ \ {{}, {}, {}, {}, {}}\ \ \ \ }; \[IndentingNewLine]While[
        Length[stack] > 0, 
        onepass[outer2]]; \[IndentingNewLine]\[IndentingNewLine]stack\  = \ {\
\ \ \ {{}, {}, {}, {}, {}}\ \ \ \ }; \[IndentingNewLine]While[
        Length[stack] > 0, 
        onepass[outer3]]; \[IndentingNewLine]\[IndentingNewLine]stack\  = \ {\
\ \ \ {{}, {}, {}, {}, {}}\ \ \ \ }; \[IndentingNewLine]While[
        Length[stack] > 0, 
        onepass[outer4]]; \[IndentingNewLine]dd; \[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]done1\  = \ 
        done;\[IndentingNewLine]\[IndentingNewLine]*) \[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Retain[done1, 
        case]\ *) \[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[1511]:="],

Cell[BoxData[
    \({0, 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[1515]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Length[done1]\)], "Input",
  CellLabel->"SphereIn[346]:="],

Cell[BoxData[
    \(46\)], "Output",
  CellLabel->"SphereOut[346]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(\(Clear[ss, a, b, c, b1, c1, d1, nl, nlf, lin, caseno, branch, 
        process];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(Round8[x_] := \ 
        N[Round[x\ 10^6]\ 10^\(-6\)];\)\), "\[IndentingNewLine]", 
    \(\(\(SetAttributes[Round8, Listable];\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(checkr[r_] := \ 
        Module[{caseno, y1range, y4range, one, eps, a, b1, c1, d1, b2, c2, 
            d2, b3, c3, d3, b4, c4, d4}, \[IndentingNewLine]caseno\  = \ 
            Round[First[First[r]]]; \[IndentingNewLine]y1range\ \  = \ 
            Interval[
              path[First[case[caseno]], 
                Round[r[\([3]\)]]]]; \[IndentingNewLine]y4range\  = \ 
            Interval[{2, 2  hminus}]; \[IndentingNewLine]one\  = \ 
            Interval[{1, 1}]; \[IndentingNewLine]{eps, a, b1, c1, d1, b2, c2, 
              d2, b3, c3, d3, b4, c4, d4}\  = \ 
            r[\([2]\)]; \[IndentingNewLine]Max[\((2\ Pi\ a\  + \ d1 + d2 + 
                    d3 + d4)\)\ \ one\  + \ \((b1 + b2 + b3 + 
                    b4)\)\ y1range\  + \ 2 \((c1 + c2)\)\ y4range\  + \ 
              2\ \((c2 + c3)\)\ y4range\  + \ 2\ \((c3 + c4)\)\ y4range\  + \ 
              2\ \((c4 + 
                    c1)\)\ y4range]\[IndentingNewLine]];\)\[IndentingNewLine]\
\), "\[IndentingNewLine]", 
    \(\(adjust[r_] := \ 
        Module[{z, u, s}, \[IndentingNewLine]z\  = \ 
            checkr[r]; \[IndentingNewLine]If[N[z, 30] <= 0, 
            Return[r]]; \[IndentingNewLine]u\  = \ 
            Round8[Ceiling[
                  10^7\ z\  + \ 10]\ 10^\(-7\)]; \[IndentingNewLine]s\  = \ 
            r; \[IndentingNewLine]s[\([2, 5]\)]\  -= \ u; \ \  (*\ 
            d1\ entry\ *) \[IndentingNewLine]s\[IndentingNewLine]];\)\
\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(process[ss_] := \ 
        Module[{nl, caseno, branch, 
            lin}, \[IndentingNewLine]{nl, caseno, branch} = 
            ss; \[IndentingNewLine]nlf\  = \ 
            Map[Join[{#[\([1]\)]}, #[\([2]\)]] &, 
              Drop[nl, \(-1\)]]; \[IndentingNewLine]lin\  = \ 
            First[Last[nl]]; \[IndentingNewLine]r = 
            Round8[Join[{{caseno}, lin}, branch, 
                nlf]]; \[IndentingNewLine]r\[IndentingNewLine]];\)\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine] (*\ 
      need\ to\ to\ search\ and\ replace\ , \ {} \[Rule] \([]\)\ \ , \(\(\
\[Rule]\)\(;\)\)\ \ *) \), "\[IndentingNewLine]", 
    \(\(output\  = \ Map[process, done1];\)\), "\[IndentingNewLine]", 
    \(Map[checkr, output] // Max\ \), "\[IndentingNewLine]", 
    \(\(output1\  = \ Map[adjust, output];\)\), "\[IndentingNewLine]", 
    \(Map[checkr, output1] // Max\ \  (*\ 
      this\ is\ now\ negative\ as\ desired\ *) \[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(output1\  >> \ /tmp/output4q1h.ml;\)\), "\[IndentingNewLine]", 
    \(\)}], "Input",
  CellLabel->"Sphere`Private`SphereIn[1531]:="],

Cell[BoxData[
    \(done1\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[1538]="],

Cell[BoxData[
    \(done1\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[1540]="]
}, Open  ]],

Cell[BoxData[
    \(\(\( (*\ 
      Display\ of\ inequalities\ in\ readable\ form\ *) \)\(\
\[IndentingNewLine]\)\(\(Clear[y1, y2, y3, y4, y5, 
        y6];\)\[IndentingNewLine]\[IndentingNewLine]
    \(domain[i_, j_] := \ 
        Module[{r, caseno, y1range, yk, ab, 
            y4range}, \[IndentingNewLine]r = \ 
            output1[\([i]\)]; \[IndentingNewLine]caseno\  = \ 
            Round[r[\([1, 1]\)]]; \[IndentingNewLine]y1range\  = \ 
            Interval[
              path[First[case[caseno]], 
                Round[r[\([3]\)]]]]; \[IndentingNewLine]yk = \ 
            Interval[{2, 2  hminus}]; \[IndentingNewLine]ab\  = \ 
            If[j \[Equal] 1, 
              Last[case[caseno]], {2, 
                2  hminus}]; \[IndentingNewLine]y4range\  = \ 
            Interval[
              path[ab, Round[r[\([3 + j]\)]]]]; \[IndentingNewLine]{y1range, 
            yk, yk, y4range, yk, 
            yk}];\)\[IndentingNewLine]\[IndentingNewLine]
    \(inequalitylist\  = \ 
        Table[{domain[i, j], holdvaliny[j, output1[\([i, 2]\)]]}, {i, 1, 
            Length[output1]}, {j, 1, 
            4}];\)\[IndentingNewLine]\[IndentingNewLine]
    inequalitylist\  >> \ /tmp/ineq.txt\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"SphereIn[806]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["Counting Spheres", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ 
      Assertions\ from\ \*"\"\<Counting Spheres \>"*) \)\(\[IndentingNewLine]\
\)\(\[IndentingNewLine]\)\(\(BeginPackage["\<CountingSpheres`\>", {"\<Global`\
\>", "\<Sphere`\>"}];\)\ \[IndentingNewLine]\[IndentingNewLine]
    \(Begin["\<`Private`\>"];\)\ \[IndentingNewLine]\[IndentingNewLine] (*\ 
      Lemma\ DLWCHEM\ *) \[IndentingNewLine]\[IndentingNewLine]
    \(g[h_] := \ 
        ArcCos[h/2] - Pi/6;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Flypaper\ claims\ this\ is\ positive\ when\ h1, 
      h2\ in\ {1, 1.26} . \ Done\ as\ a\ nonlinear\ inequality\ elsewhere . \ 
          Here\ we\ do\ a\ numerical\ check\ *) \[IndentingNewLine]
    \(ineq[h1_, h2_] := \ 
        arc[2  h1, 2  h2, 2] - g[h1] - g[h2];\)\[IndentingNewLine]
    \({minval, vals} = 
        NMinimize[{ineq[h1, h2], 1 \[LessEqual] \ h1\  \[LessEqual] \ 1.26, \ 
              1 \[LessEqual] \ h2\  \[LessEqual] \ 1.26}, {h1, h2}] // 
          Chop;\)\[IndentingNewLine]
    \(Assert[
        minval\  \[GreaterEqual] \ 
          0, "\<CountingSpheres:minval\>"];\)\[IndentingNewLine]\
\[IndentingNewLine]
    \(c0\  = \ 0.591;\)\[IndentingNewLine]
    \(c1\  = \ \(-0.0331\);\)\[IndentingNewLine]
    \(c2\  = \ 0.506;\)\[IndentingNewLine]
    \(c3\  = \ 1;\)\[IndentingNewLine]\[IndentingNewLine]
    \(reg[a_, k_] := \ 
        2  Pi\  - \ 
          2  k\ \((ArcSin[
                Cos[a]\ Sin[
                    Pi/k]])\);\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Flypaper\ claims\ this\ is\ negative\ when\ k \[GreaterEqual] \ 
        34. \ \ *) \[IndentingNewLine]
    \(Assert[\ 
        c0\  + \ c1\ 34 + \ c2\  < \ 
          0, "\<CountingSpheres:k34\>"];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ 
      Flypaper\ claims\ this\ is\ positive\ when\ 3 \[LessEqual] \ 
        k\  \[LessEqual] \ 34, \ 
      and\ 1 \[LessEqual] \ h\  \[LessEqual] \ 
        1.26 . \ \ It\ is\ done\ as\ a\ nonlinear\ inequality\ elsewhere . \ \
\ Here\ we\ do\ a\ numerical\ \(\(test\)\(.\)\)\ *) \[IndentingNewLine]
    \(ineqreg[h_, k_] := \ 
        reg[g[h], 
            k]\  - \ \((c0\  + \ c1\ k\  + \ 
              c2\ Lfun[h])\);\)\[IndentingNewLine]
    \({minvalreg, vals} = 
        NMinimize[{ineqreg[h, k], 1 \[LessEqual] \ h \[LessEqual] \ 1.26, \ 
              3 \[LessEqual] \ k \[LessEqual] \ 34}, {h, k}] // 
          Chop;\)\[IndentingNewLine]
    \(Assert[
        minvalreg\  \[GreaterEqual] \ 
          0, "\<CountingSpheres:minvalreg\>"];\)\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Claim : \ posexpr[
              n]\ is\ decreasing\ in\ n\ and\ is\ neg\ for\ n \[GreaterEqual] \
\ 16\ *) \[IndentingNewLine]
    \(posexpr[
          n_] := \ \ 4  
            Pi\  - \((c0\ n + \ c1\ \((6  n - 12)\)\  + \ 
              c2\ 12)\)\ ;\)\[IndentingNewLine]
    \(Assert[
        posexpr[16] < 0, "\<CountingSpheres:posexpr\>"];\)\[IndentingNewLine]
    \(Assert[
        D[posexpr[n], n] < 
          0, "\<CountingSpheres:posexpr2\>"];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ Lemma\ XULJEPR\ *) \[IndentingNewLine]
    \(ap\  = \ 0.797;\)\[IndentingNewLine]
    \(ineqX[h_] := \ arc[2, 2  h, 2.52] - g[h] - ap;\)\[IndentingNewLine] (*\ 
      Done\ rigorously\ elsewhere\ as\ cc[8055810915]\ *) \[IndentingNewLine]
    \({minval, vals} = 
        NMinimize[{ineqX[h], 1 \[LessEqual] \ h \[LessEqual] \ 1.26}, {h}] // 
          Chop;\)\[IndentingNewLine]
    \(Assert[
        minval\  \[GreaterEqual] \ 
          0, "\<CountingSpheres:minvalX\>"];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ 
      Flypaper\ claims\ this\ is\ negative\ when\ k \[GreaterEqual] \ 
        64\ *) \[IndentingNewLine]
    \(Assert[
        c0\  + \ c1\ 64\  + \ c2\ Lfun[1]\  + \ c3 < 
          0, "\<CountingSpheres:64\>"];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ 
      cc[6096597438]\ is\ done\ rigorously\ elswhere . \ 
          Here\ is\ a\ \(\(test\)\(.\)\)\ *) \[IndentingNewLine]
    \(ineqregX[k_] := \ 
        reg[ap, k]\  - \ \((c0\  + \ c1\ k\  + \ c2\ Lfun[1] + 
              c3)\);\)\[IndentingNewLine]
    \({minval, vals} = 
        NMinimize[{ineqregX[k], \ 
              3 \[LessEqual] \ k \[LessEqual] \ 64}, {k}] // 
          Chop;\)\[IndentingNewLine]
    \(Assert[
        minval \[GreaterEqual] \ 
          0, "\<CountingSpheres:minvalregX\>"];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ *) \[IndentingNewLine]
    \(posexprX[n_] := \ 
        4  Pi\  - \ \((c0\ n\  + \ c1\ \((6  n\  - \ 12)\)\  + \ c2\ 12\  + \ 
              c3)\);\)\[IndentingNewLine]
    \(Assert[
        posexprX[13] < 0, "\<CountingSpheres:13\>"];\)\[IndentingNewLine]
    \(Assert[
        D[posexprX[n], n] < 
          0, "\<CountingSpheres:13'\>"];\)\[IndentingNewLine]\
\[IndentingNewLine] (*\ 
      Exercise\ UOHDWRB\ from\ Musin\ Tarasov\ section\ \
*) \[IndentingNewLine]
    \(r\  = \ 2.091145444888708\ ;\) (*\ 
      MusinTarasov`rSVDW\ *) \[IndentingNewLine] (*\ 
      disk\ radii\ *) \[IndentingNewLine]
    \(g1\  = \ arc[r, r, 2]/2;\)\[IndentingNewLine]
    \(g2\  = \ arc[r, r, 2.52] - g1;\)\[IndentingNewLine]\[IndentingNewLine]
    \(c0MT\  = \ 1.05;\)\[IndentingNewLine]
    \(c1MT\  = \ \(-0.04235\);\)\[IndentingNewLine]
    \(c0pMT\  = \ 2.1;\)\[IndentingNewLine] (*\ \ \ *) \[IndentingNewLine]
    \(temp\  = \ 
        NMinimize[{reg[g1, k] - c0MT\  - \ c1MT\ k, 
              3 \[LessEqual] \ k\  \[LessEqual] \ 70}, {k}] // 
          First;\)\[IndentingNewLine]
    \(Assert[\ temp\  > \ 0, "\<CountingSpheres:g1\>"];\)\[IndentingNewLine]
    \(temp\  = \ 
        Minimize[{reg[g2, k] - c0pMT\  - \ c1MT\ k, 
              3 \[LessEqual] \ k\  \[LessEqual] \ 70}, {k}] // 
          First;\)\[IndentingNewLine]
    \(Assert[temp\  > \ 0, \ "\<CountingSpheres:g2\>"];\)\[IndentingNewLine]
    temp\  = \ \((4  
            Pi\  - \ \((11\ c0MT\  + \ 2\ c0pMT\  + \ 
              66\ c1MT)\))\)\[IndentingNewLine]
    \(Assert[
        temp\  < \ 
          0, \ "\<CountingSpheres:66\>"];\)\[IndentingNewLine]\
\[IndentingNewLine]
    \ \(End[];\)\[IndentingNewLine]
    \(EndPackage[];\)\ \[IndentingNewLine]\[IndentingNewLine]
    failures\)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[2039]:="],

Cell[BoxData[
    \(\(-0.38852938564082784`\)\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[2078]="],

Cell[BoxData[
    \({}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[2082]="],

Cell["", "Output",
  GeneratedCell->False,
  CellAutoOverwrite->False]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
  CellLabel->"Sphere`Private`SphereIn[399]:="],

Cell[BoxData[
    \({}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[399]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ Marchal' s\ function\ a, \ 
      spherical\ radius\ of\ disks\ on\ the\ unit\ sphere\ *) \)\(\
\[IndentingNewLine]\)\(\(afun[r_] := \ 
        ArcCos[r/2] - Pi/6;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      my\ cfun\ gives\ truncation\ radius\ for\ spherical\ polygons\ assuming\
\ cutoff\ \(at\ /edgecut\)/\ for\ edge - formation\ *) \[IndentingNewLine]
    \(edgecut = \ 2.52;\)\[IndentingNewLine]
    \(cfun[r_] := \ 
        arc[2  r, 2, edgecut]\  - \ 
          arc[2, 2, edgecut]/2;\)\[IndentingNewLine] (*\ 
      Plot3D[arc[2  r1, 2  r2, edgecut] - cfun[r1] - cfun[r2], {r1, 1, 
          edgecut/2}, {r2, 1, 
          edgecut/2}]\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      areas\ of\ regular\ spherical\ polygons\ *) \[IndentingNewLine]
    \(areaRegPoly[a_, n_] := \ 
        Module[{beta}, \[IndentingNewLine]beta\  = \ 
            Pi/n; \[IndentingNewLine]2  Pi\  - \ 
            2\ n\ \((ArcSin[
                  Cos[a]\ Sin[
                      beta]])\)\[IndentingNewLine]];\)\[IndentingNewLine]
    \(areaR[r_, n_] := \ areaRegPoly[afun[r], n] // N;\)\[IndentingNewLine]
    \(Table[areaR[1. , k], {k, 3, 8}];\)\[IndentingNewLine]
    \(Table[
        areaR[1.175, k], {k, 3, 
          8}];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      area\ of\ spherical\ triangle\ *) \[IndentingNewLine] (*\ Given\ a, 
      beta, gamma = Pi/2, \ find\ area\ *) \[IndentingNewLine]
    \(areaAbeta[a_, beta_] := \ 
        Module[{alpha}, \[IndentingNewLine]alpha\  = \ 
            ArcCos[Sin[beta] Cos[a]]; \[IndentingNewLine]alpha\  + \ 
            beta\  + \ \((Pi/2)\)\  - \ Pi];\)\[IndentingNewLine] (*\ 
      Given\ a, c, gamma = Pi/2, \ 
      find\ angle\ beta\ of\ spherical\ triangle\ *) \[IndentingNewLine]
    \(betaAC[a_, c_] := \ 
        Module[{b}, \[IndentingNewLine]b\  = \ 
            ArcCos[Cos[c]/Cos[a]]; \[IndentingNewLine]beta\  = \ 
            ArcCos[\((Cos[b] - 
                    Cos[a]\ Cos[c])\)/\((Sin[a]\ Sin[
                      c])\)]\[IndentingNewLine]];\)\[IndentingNewLine]
    \(areaAC[a_, c_] := \ 
        areaAbeta[a, betaAC[a, c]];\)\[IndentingNewLine] (*\ 
      area\ of\ a\ spherical\ disk\ of\ arc\ radius\ c, \ 
      subtending\ dih\ *) \[IndentingNewLine]
    \(truncPart[c_, di_] := \ di\ \((1 - Cos[c])\);\)\[IndentingNewLine]
    \ {"\<degree 0 excess\>", 
      truncPart[cfun[1], 2  Pi] - 
        areaR[1, 5]\ }\[IndentingNewLine]\[IndentingNewLine] (*\ 
      law\ of\ cosines\ *) \[IndentingNewLine]
    \(gammaABC[a_, b_, c_] := \ 
        ArcCos[\((Cos[c] - 
                Cos[a] Cos[b])\)/\((Sin[a]\ Sin[
                  b])\)];\)\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine] (*\ Marchal' s\ p13, \ 
      linear\ constants\ for\ bound\ of\ 15\ spheres\ *) \[IndentingNewLine]
    \(Amar\  = \ 0.042692222872;\)\[IndentingNewLine]
    \(Bmar\  = \ 0.002652556899;\)\[IndentingNewLine]
    \(Cmar\  = \ 0.045574680636;\)\[IndentingNewLine] (*\ 
      second\ set\ of\ Marchal' s\ constants\ *) \[IndentingNewLine]
    \(Amarp\  = \ 0.049239475726;\)\[IndentingNewLine]
    \(Bmarp\  = \ 0.002652556899;\)\[IndentingNewLine]
    \(Cmarp\  = \ 
        0.039027427780;\)\[IndentingNewLine]\[IndentingNewLine] (*\ \((my)\)\ \
third\ set\ of\ Marchal' s\ constants\ *) \[IndentingNewLine]
    \(lincomb[a_, b_, c_, p_, n_, f_] := \ 
        p\  - \ \((a\  - \ b\ n\  + \ c\ f)\);\)\[IndentingNewLine]
    \(lincomb2[a_, b_, c_, r_, n_] := \ 
        lincomb[a, b, c, areaR[r, n], n, Lfun[r]];\)\[IndentingNewLine]
    \({Amarpp, Bmarpp, Cmarpp} = \ 
        Module[{eps}, 
          eps = 0; \  (*\ 0.001\ ; \ 
            to\ make\ proofs\ easier\ *) \[IndentingNewLine]{a, b, c} /. 
            First[Solve[{lincomb2[a, b, c, 1, 6] \[Equal] \ eps, 
                  lincomb2[a, b, c, hminus, 5] \[Equal] eps, 
                  lincomb2[a, b, c, 1, 5] \[Equal] eps}, {a, b, 
                  c}]]\[IndentingNewLine]];\)\[IndentingNewLine]
    {Amarpp, Bmarpp, Cmarpp}\  = \ {0.6327, 0.0333, 
        0.4754}\ \[IndentingNewLine]
    \({c0x, c1x, c2x, c3x}\  = \ {0.6327, \(-0.0333\), 0.4754, 
          0.85};\)\[IndentingNewLine]
    \(Excess[r_, n_] := \ \ lincomb2[Amarpp, Bmarpp, Cmarpp, r, 
          n];\)\[IndentingNewLine]
    {Table[Excess[1, n], {n, 1, 10}], \[IndentingNewLine]Table[
          Excess[hminus, n], {n, 1, 10}], \[IndentingNewLine]Table[
          Excess[hmid, n], {n, 1, 10}]} // Min\[IndentingNewLine] (*\ 
      Plot[Excess[r, 5], {r, 1, 1.26}]\ *) \[IndentingNewLine] (*\ 
      Upper\ bound\ on\ Sum\ marchalQuartic[r], \ 
      given\ n\ vertices\ *) \[IndentingNewLine]
    \(fbound[n_, a_, b_, 
          c_] := \ \((\((4  Pi\  - 12\ b)\)\  - \ n \((a - 6\ b)\))\)/
          c;\)\[IndentingNewLine]
    {"\<15-sphere Lmfun bound\>", 
      fbound[15, \ Amarpp, Bmarpp, Cmarpp]}\[IndentingNewLine] (*\ 
      What\ we\ need\ in\ total\ excess\ from\ all\ the\ polygons\ \
*) \[IndentingNewLine]
    {"\<14-area excess target\>", \((fbound[14, Amarpp, Bmarpp, Cmarpp] - 
            12)\)\ Cmarpp}\[IndentingNewLine]
    {"\<13-area excess target\>", \((fbound[13, Amarpp, Bmarpp, Cmarpp] - 
            12)\) Cmarpp}\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    \)\)\)], "Input"],

Cell[BoxData[
    \({"degree 0 excess", 0.4611646232153854`}\)], "Output",
  CellLabel->"SphereOut[146]="],

Cell[BoxData[
    \({0.6327`, 0.0333`, 0.4754`}\)], "Output",
  CellLabel->"SphereOut[157]="],

Cell[BoxData[
    \(0.0008965440323956964`\)], "Output",
  CellLabel->"SphereOut[160]="],

Cell[BoxData[
    \({"15-sphere Lmfun bound", 11.933678195959557`}\)], "Output",
  CellLabel->"SphereOut[162]="],

Cell[BoxData[
    \({"14-area excess target", 0.4013706143591729`}\)], "Output",
  CellLabel->"SphereOut[163]="],

Cell[BoxData[
    \({"13-area excess target", 0.8342706143591734`}\)], "Output",
  CellLabel->"SphereOut[164]="],

Cell[BoxData[
    \({"cccfunmin", 0.7970963098601372`}\)], "Output",
  CellLabel->"SphereOut[167]="],

Cell[BoxData[
    \({"ht 2 degree 0 excess table", {1.3751309877750644`, 
        1.173735578924665`, 1.108967817251495`, 1.0918021490238483`, 
        1.0956145872358247`, 1.1101507969915931`, 1.1307554245435092`, 
        1.1550583241423524`}}\)], "Output",
  CellLabel->"SphereOut[170]="],

Cell[BoxData[
    \({"lemma2 ", 11.966913366342391`}\)], "Output",
  CellLabel->"SphereOut[171]="]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
A-Table, B-Table, and D-Table (Early numerical search for table \
values)\
\>", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
    RowBox[{"\[IndentingNewLine]", 
      StyleBox[\( (*\ \[IndentingNewLine]\[IndentingNewLine]We\ assume\ that\ \
we\ have\ a\ configuration\ maximizing\ sum\ f \((r)\)\ for\ the\ given\ \
number\ of\ vertices; \[IndentingNewLine]\[IndentingNewLine]Dihedral\ Angles\ \
on\ a\ simplex\ \((sides\ in[2, 
                  2\ hminus])\)\ are\ at\ least\ 0.841; \[IndentingNewLine]\
\[IndentingNewLine]Corollary : 
            there\ are\ at\ most\ 7\ simplices\ around\ a\ vertex\ \((degrees\
\ are\ at\ most\ 7)\); \[IndentingNewLine]\[IndentingNewLine]Graph\ is\ \
biconnected; \[IndentingNewLine]\[IndentingNewLine]Each\ vertex\ has\ r = 
            1\ or\ at\ least\ 3\ contacts\ Cutoff\ 2.52 . \ \ \ 13\ or\ 14\ \
spheres;\[IndentingNewLine]\[IndentingNewLine]*) \),
        "Text"], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", \( (*\ Squander\ stuff, \ 
        13\ and\ 14\ sphere\ case\ *) \), 
      "\[IndentingNewLine]", \(sol0/Pi\[IndentingNewLine]
      \(target13\  := \ \((4  Pi\  - \ 22\ sol0)\)\  + \ 
            2  Pi\ cc;\)\[IndentingNewLine]
      {"\<target13\>", target13}\ \[IndentingNewLine]
      \(target14\  := \ \((4  Pi\  - \ 24\ sol0)\)\  + \ 
            4  Pi\ cc;\)\[IndentingNewLine]
      {"\<target14\>", target14}\[IndentingNewLine]\[IndentingNewLine] (*\ 
        We\ use\ the\ linear\ Lfun\ rather\ than\ Lmfun\ for\ simplicity\ in\ \
the\ graph\ generator\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
        Plot\ [taumar[x, 2, 2, 2, 2, 2], {x, 2, 
            2.52}]\ ; \[IndentingNewLine]Plot[
          taumar[2, 2, 2, x, x, x], {x, 2, 2.52}];\ *) \[IndentingNewLine]
      \(dd[n_] := \ 
          2  taumar[2, 2, 2, 2, 2, 2.52] + 
            taumar[2, 2, 2, 2.52, 2.52, 2] \((n - 4)\);\)\[IndentingNewLine]
      {"\<table of face squanders 4..10: \>", 
        Table[dd[n], {n, 4, 10}]}\[IndentingNewLine]\[IndentingNewLine] (*\ 
        Triangle\ hull\ \((estimate)\)\ *) \[IndentingNewLine]
      \({ppx[0], ppx[1], ppx[2]} = {2.00, 2.52, 
            Sqrt[8]};\)\[IndentingNewLine]
      \(hullp\  = \ 
          FormLowerHull[
            Table[{Dihedral[ppx[i1], ppx[i2], ppx[i3], ppx[i4], ppx[i5], 
                    ppx[i6]], 
                  taumar[ppx[i1], ppx[i2], ppx[i3], ppx[i4], ppx[i5], 
                    ppx[i6]]}, {i1, 0, 1}, {i2, 0, 1}, {i3, 0, 1}, {i4, 0, 
                  1}, {i5, 0, 1}, {i6, 0, 1}]~Flatten~
              5]\ ;\)\[IndentingNewLine]
      {"\<hullp\>", hullp}\[IndentingNewLine]
      \(squanderVertexp\  = \ 
          Table[n\ InterpolateAlongHull[2  Pi/n, hullp], {n, 4, 
              7}]\ ;\)\[IndentingNewLine]
      {"\<{p,0}, p=4..7\>", squanderVertexp}\[IndentingNewLine]
      {"\<min max {p,0}: \>", 2  Pi/1.892, 2  Pi/0.852}\[IndentingNewLine]
      dihminp\  = \ 0.852; \ 
      dihmaxp = 
        1.90;\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine] (*\ 
        Quad\ hull\ \((estimate)\)\ *) \[IndentingNewLine]
      \(tabq1\  = \ 
          Table[{Dihedral[ppx[i1], ppx[i2], ppx[i3], ppx[i4], ppx[i5], 
                  ppx[i6]], 
                taumar[ppx[i1], ppx[i2], ppx[i3], ppx[i4], ppx[i5], 
                    ppx[i6]] + 
                  taumar[ppx[i7], ppx[i2], ppx[i3], ppx[i4], ppx[i8], 
                    ppx[i9]]}, {i1, 0, 1}, {i2, 0, 1}, {i3, 0, 1}, {i4, 1, 
                2}, {i5, 0, 1}, {i6, 0, 1}, {i7, 0, 1}, {i8, 0, 1}, {i9, 0, 
                1}]~Flatten~8;\)\[IndentingNewLine]
      \(tabq2\  = \ 
          Table[{Dihedral[ppx[i2], ppx[i1], ppx[i3], ppx[i5], ppx[i4], 
                    ppx[i6]] + 
                  Dihedral[ppx[i2], ppx[i7], ppx[i3], ppx[i8], ppx[i4], 
                    ppx[i9]], 
                taumar[ppx[i1], ppx[i2], ppx[i3], ppx[i4], ppx[i5], 
                    ppx[i6]] + 
                  taumar[ppx[i7], ppx[i2], ppx[i3], ppx[i4], ppx[i8], 
                    ppx[i9]]}, {i1, 0, 1}, {i2, 0, 1}, {i3, 0, 1}, {i4, 1, 
                2}, {i5, 0, 1}, {i6, 0, 1}, {i7, 0, 1}, {i8, 0, 1}, {i9, 0, 
                1}]~Flatten~8;\)\[IndentingNewLine]
      \(hullq\  = \ FormLowerHull[Join[tabq1, tabq2]];\)\[IndentingNewLine]
      {"\<hullq\>", hullq}\[IndentingNewLine]
      dihminq\  = \ 1.15; \ dihmaxq\  = \ 3.27;\[IndentingNewLine]
      \(squanderVertexq\  = \ 
          Table[n\ InterpolateAlongHull[2  Pi/n, hullq], {n, 2, 
              5}];\)\[IndentingNewLine]
      {"\<{0,q}, q=2..5 \>", squanderVertexq}\[IndentingNewLine]
      \(pqrange\  = \ 
          Map[{#[\([1]\)], #[\([2]\)]} &, 
            Select[Table[{p, q, p\ dihminp\  + \ q\ dihminq, 
                    p\ dihmaxp\  + \ q\ dihmaxq}, {p, 0, 8}, {q, 0, 8}]~
                Flatten~
                1, \((\((#[\([3]\)] \[LessEqual] \ 
                        2.0\ Pi)\) && \((#[\([4]\)] \[GreaterEqual] \ 
                        2.0\ Pi)\))\) &]];\)\[IndentingNewLine]
      {"\<pq in range\>", 
        pqrange}\[IndentingNewLine] (*\[IndentingNewLine]\(tauPQ[p_, 
              q_] := \ \(-DoubleUpperInterpolation[2.0*Pi, 
                ScaleHull[p, \(-p\), hullp], 
                ScaleHull[q, \(-q\), 
                  hullq]]\);\)\[IndentingNewLine]*) \[IndentingNewLine]
      \(tauPQ[p_, q_] := \ 
          DoubleLowerInterpolation[2.0\ Pi, p\ hullp, 
            q\ hullq];\)\[IndentingNewLine]
      \(pqpos\  = \ 
          Select[pqrange, \((\((#[\([1]\)] > 0)\) && \((#[\([2]\)] > 
                      0)\))\) &];\)\[IndentingNewLine]
      \(pqtable\  = \ 
          Map[{#[\([1]\)], #[\([2]\)], tauPQ[#[\([1]\)], #[\([2]\)]]} &, 
            pqpos];\)\[IndentingNewLine]
      {"\<pqtable\>", pqtable}\[IndentingNewLine]\[IndentingNewLine] (*\ 
        calculate\ {p, q} = {5, 0}\ constant\ *) \[IndentingNewLine]
      widthx\  = \ 
        bisection[\((4\ Dihedral[2, 2, 2, 2, 2, 2] + 
                Dihedral[2, 2, 2, #, 2, 2] - 2  Pi)\) &, 2, 2.52, 
          10^\(-6\)]\[IndentingNewLine]
      {"\<{p,q}={5,0} squander \>", 
        taumar[2, 2, 2, widthx, 2, 
          2]}\[IndentingNewLine]\[IndentingNewLine] (*\ Degree\ 6, \ 
        ExceptionalVertex, \ 
        squander\ from\ {p, q, r}\ *) \[IndentingNewLine]
      {"\<{p,q,r}={5,0,1} \>", \ 
        5  InterpolateAlongHull[\((2  Pi - dihminq)\)/5, hullp]\  + \ 
          dd[5]}\[IndentingNewLine]
      {"\<{p,q,r}={5,0,1} Excess \>", 
        5  InterpolateAlongHull[\((2  Pi - dihminq)\)/5, 
            hullp]}\[IndentingNewLine]
      {"\<{p,q,r}={4,1,1} \>", \  (*\ \(-DoubleUpperInterpolation[
                2  Pi - dihminq, ScaleHull[4, \(-4\), hullp], 
                ScaleHull[1, \(-1\), hullq]]\) + 
            dd[5]\ *) \[IndentingNewLine]DoubleLowerInterpolation[
            2  Pi - dihminq, \[IndentingNewLine]4\ hullp, hullq] + {0, 0, 
            dd[5]}}\[IndentingNewLine]
      {"\<{p,q,r}={4,0,2} \>", \ 
        4\ InterpolateAlongHull[\((2  Pi\  - \ 2\ dihminq)\)/4, hullp]\  + \ 
          2\ dd[5]}\[IndentingNewLine]\[IndentingNewLine] (*\ 
        Degree\ 5, \ {p, q, r}\ *) \[IndentingNewLine]
      {"\<{p,q,r} = {4,0,1} \>", 
        4  InterpolateAlongHull[\((2  Pi - dihminq)\)/4, hullp]\  + \ 
          dd[5]}\[IndentingNewLine]
      {"\<{p,q,r} = {4,0,1} Excess \>", 
        4  InterpolateAlongHull[\((2  Pi - dihminq)\)/4, 
            hullp]\ }\[IndentingNewLine]\[IndentingNewLine] (*\ 
        Assuming\ polygons\ are\ convex, \ v = 13\ or\ 14, \ 
        and\ sum\ of\ heights\ is\ at\ most\ 14 + 2 \((0.52)\), \ 
        we\ \(get : \ 
            No\ 7 - gons\ or\ \(octagons!!\)\)\ *) \[IndentingNewLine] (*\ 
        arc[2.52, 2.52, 2] + arc[2.52, 2, 2] 2\  + 
          4\ arc[2, 2, 2]\ *) \[IndentingNewLine] (*\ 
        arc[2.52, 2, 2] 4\  + \ 3\ arc[2, 2, 2]\ *) \[IndentingNewLine]
      arcslope\  = \ 0.6076; \  (*\ 
        via\ interp[
            t, {1, arc[2, 2, 2]}, {1.26, 
              arc[2.52, 2, 2]}]\ *) \[IndentingNewLine] (*\ \(Plot3D[
            arc[2  r, 2  s, 2] + arcslope \((r - 1)\) + 
              arcslope\ \((s - 1)\) - Pi/3, {r, 1, 1.26}, {s, 1, 
              1.26}];\)\ *) \[IndentingNewLine] (*\ 
        arc[2  r, 2  s, 2]\  \[GreaterEqual] \ 
          Pi/3\  - arcslope\ \((r - 1)\)\  - 
            arcslope\ \((s - 1)\)\ \ *) \[IndentingNewLine] (*\ 
        If\ 7\ edges; \[IndentingNewLine]Sum\ arc[2  r[i], 2  s[i], 
                2]\  \[GreaterEqual] \ 
            7\ Pi/3\  - \ arcslope\ Sum \((r[i] + s[i] - 2)\)\  = \ 
          7\ Pi/3\  - \ 
            0.6056\ Sum\ 2 \((r[i] - 
                  1)\)\[IndentingNewLine]*) \[IndentingNewLine]\
perim7gonLowerBound\  = \ 
        7\ Pi/3 - \ \(\(2\ \((0.52)\)\ arcslope\)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)
          \)\)}]], "Input",
  CellLabel->"Sphere`Private`SphereIn[337]:="],

Cell[BoxData[
    \({"cc", 0.17547965609182192`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[340]="],

Cell[BoxData[
    \({"target13", 1.5406586457085503`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[342]="],

Cell[BoxData[
    \({"target14", 1.5406586457085503`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[344]="],

Cell[BoxData[
    \({"tau zero point", 0.`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[346]="],

Cell[BoxData[
    \({"table of face squanders 4..10: ", {0.2061265362483251`, 
        0.4835595977757814`, 0.7609926593032377`, 1.038425720830694`, 
        1.3158587823581502`, 1.5932918438856065`, 
        1.8707249054130628`}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[348]="],

Cell[BoxData[
    RowBox[{\(Thread::"tdlen"\), \(\(:\)\(\ \)\), "\<\"Objects of unequal \
length in \\!\\(\\(\\({1.2309594173407747`, 0.`}\\)\\)\\\\ Numerical`Private`\
\:201a\[AHat]\[Dagger]\\\\ \\(\\({}\\)\\)\\) cannot be combined. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Thread::tdlen\\\"]\\)\"\>"}]], \
"Message",
  CellLabel->"From Sphere`Private`SphereIn[337]:="],

Cell[BoxData[
    RowBox[{\(Thread::"tdlen"\), \(\(:\)\(\ \)\), "\<\"Objects of unequal \
length in \\!\\(\\(\\({1.2309594173407747`, 0.`}\\)\\)\\\\ Numerical`Private`\
\:201a\[AHat]\[Dagger]\\\\ \\(\\({}\\)\\)\\) cannot be combined. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Thread::tdlen\\\"]\\)\"\>"}]], \
"Message",
  CellLabel->"From Sphere`Private`SphereIn[337]:="],

Cell[BoxData[
    \({"hullp", {{1.2309594173407747`, 0.`}}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[351]="],

Cell[BoxData[
    \({"{p,0}, p=4..7", {4\ InterpolateAlongHull[\[Pi]\/2, \
{{1.2309594173407747`, 0.`}}], 
        5\ InterpolateAlongHull[\(2\ \[Pi]\)\/5, {{1.2309594173407747`, 
                0.`}}], 
        6\ InterpolateAlongHull[\[Pi]\/3, {{1.2309594173407747`, 0.`}}], 
        7\ InterpolateAlongHull[\(2\ \[Pi]\)\/7, {{1.2309594173407747`, 
                0.`}}]}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[353]="],

Cell[BoxData[
    \({"min max {p,0}: ", 3.3209224667968216`, 
      7.374630642229562`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[354]="],

Cell[BoxData[
    RowBox[{\(Thread::"tdlen"\), \(\(:\)\(\ \)\), "\<\"Objects of unequal \
length in \\!\\(\\(\\({2.16671194618278`, \
\\(\\(-0.2061265362483251`\\)\\)}\\)\\)\\\\ Numerical`Private`\:201a\[AHat]\
\[Dagger]\\\\ \\(\\({}\\)\\)\\) cannot be combined. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Thread::tdlen\\\"]\\)\"\>"}]], \
"Message",
  CellLabel->"From Sphere`Private`SphereIn[337]:="],

Cell[BoxData[
    RowBox[{\(Thread::"tdlen"\), \(\(:\)\(\ \)\), "\<\"Objects of unequal \
length in \\!\\(\\(\\({2.16671194618278`, \
\\(\\(-0.2061265362483251`\\)\\)}\\)\\)\\\\ Numerical`Private`\:201a\[AHat]\
\[Dagger]\\\\ \\(\\({}\\)\\)\\) cannot be combined. \
\\!\\(\\*ButtonBox[\\\"More\[Ellipsis]\\\", ButtonStyle->\\\"RefGuideLinkText\
\\\", ButtonFrame->None, ButtonData:>\\\"Thread::tdlen\\\"]\\)\"\>"}]], \
"Message",
  CellLabel->"From Sphere`Private`SphereIn[337]:="],

Cell[BoxData[
    \({"hullq", {{2.16671194618278`, 0.2061265362483251`}}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[358]="],

Cell[BoxData[
    \({"{0,q}, q=2..5 ", {2\ InterpolateAlongHull[\[Pi], {{2.16671194618278`, 
                0.2061265362483251`}}], 
        3\ InterpolateAlongHull[\(2\ \[Pi]\)\/3, {{2.16671194618278`, 
                0.2061265362483251`}}], 
        4\ InterpolateAlongHull[\[Pi]\/2, {{2.16671194618278`, 
                0.2061265362483251`}}], 
        5\ InterpolateAlongHull[\(2\ \[Pi]\)\/5, {{2.16671194618278`, 
                0.2061265362483251`}}]}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[360]="],

Cell[BoxData[
    \({"pq in range", {{0, 2}, {0, 3}, {0, 4}, {0, 5}, {1, 2}, {1, 3}, {1, 
          4}, {2, 1}, {2, 2}, {2, 3}, {3, 1}, {3, 2}, {3, 3}, {4, 0}, {4, 
          1}, {4, 2}, {5, 0}, {5, 1}, {6, 0}, {6, 1}, {7, 0}}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[362]="],

Cell[BoxData[
    \({"pqtable", {{1, 2, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{1.2309594173407747`, 
                0.`}}, {{4.33342389236556`, 0.4122530724966502`}}]}, {1, 3, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{1.2309594173407747`, 
                0.`}}, {{6.50013583854834`, 0.6183796087449753`}}]}, {1, 4, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{1.2309594173407747`, 
                0.`}}, {{8.66684778473112`, 0.8245061449933004`}}]}, {2, 1, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{2.4619188346815495`, 
                0.`}}, {{2.16671194618278`, 0.2061265362483251`}}]}, {2, 2, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{2.4619188346815495`, 
                0.`}}, {{4.33342389236556`, 0.4122530724966502`}}]}, {2, 3, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{2.4619188346815495`, 
                0.`}}, {{6.50013583854834`, 0.6183796087449753`}}]}, {3, 1, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{3.6928782520223242`, 
                0.`}}, {{2.16671194618278`, 0.2061265362483251`}}]}, {3, 2, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{3.6928782520223242`, 
                0.`}}, {{4.33342389236556`, 0.4122530724966502`}}]}, {3, 3, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{3.6928782520223242`, 
                0.`}}, {{6.50013583854834`, 0.6183796087449753`}}]}, {4, 1, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{4.923837669363099`, 
                0.`}}, {{2.16671194618278`, 0.2061265362483251`}}]}, {4, 2, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{4.923837669363099`, 
                0.`}}, {{4.33342389236556`, 0.4122530724966502`}}]}, {5, 1, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{6.154797086703874`, 
                0.`}}, {{2.16671194618278`, 0.2061265362483251`}}]}, {6, 1, 
          DoubleLowerInterpolation[
            6.283185307179586`, {{7.3857565040446485`, 
                0.`}}, {{2.16671194618278`, 
                0.2061265362483251`}}]}}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[366]="],

Cell[BoxData[
    \(Which[0, 
      bisect[{4\ Dihedral[2, 2, 2, 2, 2, 2] + Dihedral[2, 2, 2, #1, 2, 2] - 
              2\ \[Pi] &, 2, Sphere`Private`u$60571, 1\/1000000}], 
      Sphere`Private`fu$60571\ \((4\ Dihedral[2, 2, 2, 2, 2, 2] + 
                Dihedral[2, 2, 2, #1, 2, 2] - 2\ \[Pi] &)\)[
          2.26`]\ Sphere`Private`\:201a\[AHat]\[Section]\ 0, 
      bisect[{4\ Dihedral[2, 2, 2, 2, 2, 2] + Dihedral[2, 2, 2, #1, 2, 2] - 
              2\ \[Pi] &, Sphere`Private`u$60571, 2.26`, 
          1\/1000000}]]\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[367]="],

Cell[BoxData[
    \({"{p,q}={5,0} squander ", \(-3.6928782520223242`\) + 
        ArcCos[0.020833333333333332`\ \((\(\(48.`\)\(\[InvisibleSpace]\)\) - 
                8.`\ Which[0.`, bisect[{4.`\ Dihedral[2.`, 2.`, 2.`, 2.`, \
2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ \
3.141592653589793`)\) &, 2.`, Sphere`Private`u$60571, 1.`*^-6}], \
Sphere`Private`fu$60571\ \((4.`\ Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + \
Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &)\
\)[2.26`]\ Sphere`Private`\:201a\[AHat]\[Section]\ 0.`, bisect[{4.`\ \
Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, \
2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &, Sphere`Private`u$60571, 2.26`, \
1.`*^-6}]]\^2)\)] + 
        2.`\ ArcCos[\((0.14433756729740646`\ \((\(-48.`\) + 
                      4.`\ \((\(\(12.`\)\(\[InvisibleSpace]\)\) + 
                            Which[0.`, bisect[{4.`\ Dihedral[2.`, 2.`, 2.`, \
2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ \
3.141592653589793`)\) &, 2.`, Sphere`Private`u$60571, 1.`*^-6}], \
Sphere`Private`fu$60571\ \((4.`\ Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + \
Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &)\
\)[2.26`]\ Sphere`Private`\:201a\[AHat]\[Section]\ 0.`, bisect[{4.`\ \
Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, \
2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &, Sphere`Private`u$60571, 2.26`, \
1.`*^-6}]]\^2)\))\))\)/\((\[Sqrt]\((16.`\ Which[0.`, bisect[{4.`\ \
Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, \
2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &, 2.`, Sphere`Private`u$60571, \
1.`*^-6}], Sphere`Private`fu$60571\ \((4.`\ Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, \
2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ \
3.141592653589793`)\) &)\)[2.26`]\ Sphere`Private`\:201a\[AHat]\[Section]\ \
0.`, bisect[{4.`\ Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, \
2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &, \
Sphere`Private`u$60571, 2.26`, 1.`*^-6}]]\^2 - 
                      1.`\ Which[0.`, bisect[{4.`\ Dihedral[2.`, 2.`, 2.`, \
2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ \
3.141592653589793`)\) &, 2.`, Sphere`Private`u$60571, 1.`*^-6}], \
Sphere`Private`fu$60571\ \((4.`\ Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + \
Dihedral[2.`, 2.`, 2.`, #1, 2.`, 2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &)\
\)[2.26`]\ Sphere`Private`\:201a\[AHat]\[Section]\ 0.`, bisect[{4.`\ \
Dihedral[2.`, 2.`, 2.`, 2.`, 2.`, 2.`] + Dihedral[2.`, 2.`, 2.`, #1, 2.`, \
2.`] - 1.`\ \((2.`\ 3.141592653589793`)\) &, Sphere`Private`u$60571, 2.26`, \
1.`*^-6}]]\^4)\))\)]}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[368]="],

Cell[BoxData[
    \({"{p,q,r}={5,0,1} ", \(\(0.4835595977757814`\)\(\[InvisibleSpace]\)\) + 
        5\ InterpolateAlongHull[
            1.0266370614359173`, {{1.2309594173407747`, 0.`}}]}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[369]="],

Cell[BoxData[
    \({"{p,q,r}={5,0,1} Excess ", 
      5\ InterpolateAlongHull[
          1.0266370614359173`, {{1.2309594173407747`, 0.`}}]}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[370]="],

Cell[BoxData[
    \({"{p,q,r}={4,1,1} ", {DoubleLowerInterpolation[
          5.133185307179586`, {{4.923837669363099`, 
              0.`}}, {{2.16671194618278`, 0.2061265362483251`}}], 
        DoubleLowerInterpolation[
          5.133185307179586`, {{4.923837669363099`, 
              0.`}}, {{2.16671194618278`, 
              0.2061265362483251`}}], \(\(0.4835595977757814`\)\(\
\[InvisibleSpace]\)\) + 
          DoubleLowerInterpolation[
            5.133185307179586`, {{4.923837669363099`, 
                0.`}}, {{2.16671194618278`, 
                0.2061265362483251`}}]}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[371]="],

Cell[BoxData[
    \({"{p,q,r}={4,0,2} ", \(\(0.9671191955515628`\)\(\[InvisibleSpace]\)\) + 
        4\ InterpolateAlongHull[
            0.9957963267948966`, {{1.2309594173407747`, 0.`}}]}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[372]="],

Cell[BoxData[
    \({"{p,q,r} = {4,0,1} ", \(\(0.4835595977757814`\)\(\[InvisibleSpace]\)\) \
+ 4\ InterpolateAlongHull[
            1.2832963267948965`, {{1.2309594173407747`, 0.`}}]}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[373]="],

Cell[BoxData[
    \({"{p,q,r} = {4,0,1} Excess ", 
      4\ InterpolateAlongHull[
          1.2832963267948965`, {{1.2309594173407747`, 0.`}}]}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[374]="],

Cell[BoxData[
    \(6.698478858376184`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[375]="]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Boerdijk's Pentahedral Prism", "Subsection"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(BeginPackage["\<PentahedralPrism`\>", \
{"\<Sphere`\>"}];\)\[IndentingNewLine]\[IndentingNewLine]
    \(PentahedralGap::usage = \[IndentingNewLine]"\<PentahedralGap is the gap \
between two nearby points
  in the 12 sphere arrangement of Boerdijk\>";\)\[IndentingNewLine]\
\[IndentingNewLine]
    \(PentahedralHeight::usage\  = \ \[IndentingNewLine]"\<PentahedralHeight \
is the height of the closest 13th sphere above a face of Boerdijk's 12 sphere \
arrangement\>";\)\ \[IndentingNewLine]\[IndentingNewLine]
    \(Begin["\<`Private`\>"];\)\[IndentingNewLine]\[IndentingNewLine]
    \(PentahedralGap\  = \ 
        Sqrt[128/27];\)\[IndentingNewLine]\[IndentingNewLine]
    \(PentahedralHeight = \ 
        Last[x /. Solve[\((Cos[2  arc[2, x, 2]]\  - \ 
                      Cos[arc[2, 2, Sqrt[4 + 128/27]]] /. {Cos[
                          2  t_] \[Rule] \ 2  Cos[t]^2 - 1})\) \[Equal] 0, 
              x]];\)\[IndentingNewLine]
    \(End[];\)\[IndentingNewLine]
    \(EndPackage[];\)\)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[72]:="],

Cell[CellGroupData[{

Cell["LP Inequalities", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ 
      azim\  - \ 
        ln\ azim\ *) \)\(\[IndentingNewLine]\)\(\(lnazim[y1_, y2_, y3_, y4_, 
          y5_, y6_] := \ 
        Lfun[y1/2]*Dihedral[y1, y2, y3, y4, y5, y6] // 
          N;\)\[IndentingNewLine]
    lnazim[2, 2, 2, 2, 2, 2] - Dihedral[2, 2, 2, 2, 2, 2]\)\)\)], "Input",
  CellLabel->"SphereIn[228]:="],

Cell[BoxData[
    \(0.`\)], "Output",
  CellLabel->"SphereOut[229]="]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cyclic Fan Inequalities", "Section"],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input"],

Cell[CellGroupData[{

Cell["2065952723", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ Lexell\ calculation, \ BAWWPPB, \ 
      guid = 2065952723 \((extreme\ edge)\)\ \
*) \)\(\[IndentingNewLine]\)\(\(Clear[g, cmax, amin, amax, ee, a, b, c, e1, 
        e2, e3, ee1check, ee2check, ee3check, dd, dd1, dd1check, dd2check, 
        dd3check, dd1sq, dd2, dd2sq, dd3, 
        dd3sq];\)\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    cmax\  = \ 1\  + \ Solid[2, 2, 2, 2, 2, 2]/Pi // N\ ; \  (*\ 
      upper\ and\ lower\ bounds\ on\ ei\ *) \[IndentingNewLine]\
\[IndentingNewLine]g[a_, b_, c_, e1_, e2_, e3_] := \ 
      Dihedral[2, 2, 2, a, b, c] e1\  + \ 
        Dihedral[2, 2, 2, b, c, a]\ e2\  + \ 
        Dihedral[2, 2, 2, c, a, b] e3;\[IndentingNewLine]
    \(amin\  = 2/hmid;\)\[IndentingNewLine]
    \(amax\  = \ 2  hmid;\)\[IndentingNewLine]\[IndentingNewLine]
    {"\<deriv1 = Delta (g'(0))^2 \>"}\[IndentingNewLine]
    \(dd\  = \ Delta[2, 2, 2, a, b, c] // Simplify;\)\[IndentingNewLine]
    \(dd1\  = \ 4\ a;\)\ \ \[IndentingNewLine]
    \(dd2\  = \ 
        4\ \((\(-8\)\ b\^2 + a\^2\ \((\(-8\) + b\^2)\) + 
                8\ c\^2)\)/\((a\ \((16 - a^2)\))\)\ ;\)\[IndentingNewLine]
    \(dd3\  = \ 
        4\ \((8\ \((b\^2 - c\^2)\) + 
                a\^2\ \((\(-8\) + c\^2)\))\)/\((a\ \((16 - 
                    a^2)\))\);\)\[IndentingNewLine]
    deriv1\ \  = \((dd1\ e1\  + \ dd2\ e2\  + \ dd3\ e3)\) // 
        Simplify\[IndentingNewLine]
    \({"\<deriv1\>", 
        deriv1\  // HolForm};\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      random\ sub\ is\ to\ check\ answers\ *) \[IndentingNewLine]
    \(randomsub\  = \ {a \[Rule] Random[Real, {1, 1.3}], 
          b \[Rule] Random[Real, {1, 1.3}], 
          c \[Rule] Random[Real, {1, 1.3}]};\)\[IndentingNewLine]
    \(samplesub\  = \ {e1\  \[Rule] \ 1.03, e2 \[Rule] 1.07, \ 
          e3 \[Rule] \ 1.1, a \[Rule] \ 4.1, b \[Rule] 4.2, \ 
          c \[Rule] 4.3};\)\[IndentingNewLine]
    \(dd1check\  = \ \((D[Dihedral[2, 2, 2, a, b, c], a] Sqrt[\ dd]/dd1 // 
              Simplify)\) /. randomsub;\)\[IndentingNewLine]
    \(dd2check\  = \((\ 
            D[Dihedral[2, 2, 2, b, c, a], a] Sqrt[\ dd]/dd2 // Simplify)\) /. 
          randomsub;\)\[IndentingNewLine]
    \(dd3check = \ \((D[Dihedral[2, 2, 2, c, a, b], a]\ Sqrt[dd]/dd3 // 
              Simplify)\) /. randomsub;\)\[IndentingNewLine]
    \({"\<derv1 subterm check\>", dd1check - 1, dd2check - 1, 
          dd3check - 1\ } // Chop;\)\[IndentingNewLine] (*\ 
      sample\ value\ *) \[IndentingNewLine]
    \(deriv1 /. samplesub;\)\[IndentingNewLine]\[IndentingNewLine]
    {"\<deriv2 = delta^(3/2) g''(0) \>"}\[IndentingNewLine]
    \(ee1\  = \ 16\ \((a^4\  - \ \((b^2 - c^2)\)^2)\);\)\[IndentingNewLine]
    \(ee2\  = \ \(-\((8/\((a^2\ \((16 - 
                          a^2)\)^2)\))\)\)*\((6\ a\^8\ \((\(-8\) + b\^2)\) + 
              256\ \((b\^2 - c\^2)\)\^3 + 
              a\^6\ \((b\^4\ \((\(-8\) + c\^2)\) - 16\ b\^2\ \((3 + c\^2)\) + 
                    16\ \((16 + 9\ c\^2)\))\) - 
              16\ a\^2\ \((b\^6 + b\^4\ \((80 - 13\ c\^2)\) - 
                    3\ c\^4\ \((16 + c\^2)\) + 
                    b\^2\ c\^2\ \((\(-32\) + 15\ c\^2)\))\) + 
              2\ a\^4\ \((b\^6 + b\^4\ \((56 - 10\ c\^2)\) - 
                    24\ c\^2\ \((16 + 3\ c\^2)\) + 
                    b\^2\ \((384 + 16\ c\^2 + 
                          9\ c\^4)\))\))\);\)\[IndentingNewLine]
    \(ee3\  = \ \(-\((8/\((a^2\ \((16 - 
                          a^2)\)^2)\))\)\)*\ \((\(-256\)\ \((b\^2 - \
c\^2)\)\^3 + 6\ a\^8\ \((\(-8\) + c\^2)\) + 
              16\ a\^2\ \((3\ b\^6 + b\^4\ \((48 - 15\ c\^2)\) - 
                    c\^4\ \((80 + c\^2)\) + 
                    b\^2\ c\^2\ \((32 + 13\ c\^2)\))\) + 
              a\^6\ \((b\^2\ \((144 - 16\ c\^2 + c\^4)\) - 
                    8\ \((\(-32\) + 6\ c\^2 + c\^4)\))\) + 
              2\ a\^4\ \((9\ b\^4\ \((\(-8\) + c\^2)\) + 
                    c\^2\ \((384 + 56\ c\^2 + c\^4)\) - 
                    2\ b\^2\ \((192 - 8\ c\^2 + 
                          5\ c\^4)\))\))\);\)\[IndentingNewLine]
    \(deriv2 = \((ee1\ e1\  + \ ee2\ e2\  + \ ee3\ e3)\)\  // 
          Simplify;\)\[IndentingNewLine]
    \({"\<deriv2\>", \ \ \(deriv2 // Simplify\) // 
          HolForm};\)\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
 (*\ random\ sub\ to\ check\ answers\ *) \[IndentingNewLine]
    \(ee1check\  = \ \((D[Dihedral[2, 2, 2, a, b, c], {a, 2}] 
                Sqrt[\ dd]^3/ee1 // Simplify)\) /. 
          randomsub\ ;\)\[IndentingNewLine]
    \(ee2check\  = \((\ 
            D[Dihedral[2, 2, 2, b, c, a], {a, 2}] Sqrt[\ dd]^3/ee2 // 
              Simplify)\)\  /. randomsub\ ;\)\[IndentingNewLine]
    \(ee3check = \ \((D[Dihedral[2, 2, 2, c, a, b], {a, 2}]\ Sqrt[dd]^3/ee3 // 
              Simplify)\)\  /. randomsub;\)\[IndentingNewLine]
    {"\<ee subterm check\>", ee1check - 1, ee2check - 1, ee3check - 1} // 
      Chop\[IndentingNewLine]
    \(deriv2 /. samplesub;\)\[IndentingNewLine]\[IndentingNewLine]
    \(ee\  = \ \((deriv1*deriv1\  - \ \((1/100)\)\ *deriv2)\)\  // 
          Simplify\ ;\)\[IndentingNewLine]\[IndentingNewLine]
    NMinimize[{ee, 
        1 \[LessEqual] \ e1\  && \ e1\  \[LessEqual] \ cmax\  && \ 
          1\  \[LessEqual] \ e2\  && \ e2\  \[LessEqual] \ cmax\  && \ 
          1\  \[LessEqual] \ e3\  && \ e3\  \[LessEqual] \ cmax\  && \ 
          amin\  \[LessEqual] \ a\  && \ a\  \[LessEqual] \ 4 && \ 
          amin\  \[LessEqual] \ b\  && \ b\  \[LessEqual] \ \ 4\  && \ 
          amin\  \[LessEqual] \ c\  && \ c\  \[LessEqual] \ 4}, {a, b, c, e1, 
        e2, e3}]\ \[IndentingNewLine]\[IndentingNewLine] (*\ 
      numerator\ of\ the\ rational\ function . \ \ It\ is\ enough\ to\ show\ \
that\ this\ is\ \(\(nonnegative\)\(.\)\)\ *) \[IndentingNewLine]
    \(num1\  = \ \(\((\((16 - a^2)\) a\ deriv1)\) // Factor\) // 
          Simplify;\)\[IndentingNewLine]
    \(num2\  = \ \(\((\((16 - a^2)\)^2\ a^2\ deriv2)\) // Factor\) // 
          Simplify;\)\[IndentingNewLine]
    \(numE4\  = \ \((25/2)\) \((num1*num1\  - \ \((1/100)\)\ num2)\) // 
          Simplify;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Analysis\ near\ a\  \[Rule] \ 4\ *) \[IndentingNewLine]
    \(\((num1 /. a \[Rule] 4)\) // Factor;\)\[IndentingNewLine]
    \(\((num2 /. a \[Rule] 4)\) // 
        Factor;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      checks\ *) \[IndentingNewLine]
    {"\<numE4 check\>", 
      numE4\ \((2/25)\)\  - \ ee\ \((16 - a^2)\)^2\ a^2 // 
        Simplify}\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[6258]:="],

Cell[BoxData[
    \({"deriv1 = Delta (g'(0))^2 "}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6262]="],

Cell[BoxData[
    \(\(4\ \((a\^4\ e1 + 8\ \((b\^2 - c\^2)\)\ \((e2 - e3)\) - a\^2\ \((16\ \
e1 + \((\(-8\) + b\^2)\)\ e2 + \((\(-8\) + c\^2)\)\ e3)\))\)\)\/\(a\ \((\(-16\
\) + a\^2)\)\)\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6267]="],

Cell[BoxData[
    \({"deriv2 = delta^(3/2) g''(0) "}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6276]="],

Cell[BoxData[
    \({"ee subterm check", 0, 0, 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6285]="],

Cell[BoxData[
    \({0.8939748703249671`, {a \[Rule] 1.5873015873015872`, 
        b \[Rule] 1.5873015873015872`, c \[Rule] 1.5873015873015872`, 
        e1 \[Rule] 1.`, e2 \[Rule] 1.175479656091822`, 
        e3 \[Rule] 1.175479656091822`}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6288]="],

Cell[BoxData[
    \({"numE4 check", 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6294]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OUCPLRI", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ \((Flat\ extremal)\)\ *) \)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\(\(secondDerivA\  = \ \(\((D[
                  arc[y1 + t, y2 - t, 2], {t, 2}] /. t \[Rule] 0)\) // 
            Simplify\) // Factor;\)\[IndentingNewLine]
    \(numA\  = \ \((\(-4\)\ y1\^2 + y1\^4 - 4\ y1\^3\ y2 - 4\ y2\^2 + 
            6\ y1\^2\ y2\^2 - 4\ y1\ y2\^3 + y2\^4)\);\)\[IndentingNewLine]
    \(secondDerivFormulaA\  = \ 
        Sqrt[Ups[y1^2, y2^2, 4]] 
          numA/\((y1^2\ \((y2 + 2 - y1)\)\ ^2\ y2^2\ \((2 + y1 - 
                      y2)\)^2)\);\)\[IndentingNewLine]
    \(numA // HolForm;\)\[IndentingNewLine]\[IndentingNewLine]
    randomsub\  = \ {y1 \[Rule] Random[Real, {2, 2.2}], 
        y2 \[Rule] Random[Real, {2, 2.2}]}\[IndentingNewLine]
    {"\<checkAnswerA\>", \((secondDerivA\  - \ secondDerivFormulaA)\) /. 
          randomsub} // Chop\[IndentingNewLine]\[IndentingNewLine]
    \(secondDerivB\  = \ \(\((D[arc[y1, y2 + t, 2], {t, 2}] /. 
                t \[Rule] 0)\) // Simplify\) // Factor;\)\[IndentingNewLine]
    \(numB\  = \ \(-\((64 - y1\^6 - 80\ y2\^2 + 12\ y2\^4 + y2\^6 + 
                3\ y1\^4\ \((4 + y2\^2)\) + 
                y1\^2\ \((\(-48\) + 8\ y2\^2 - 3\ y2\^4)\))\)\) // 
          ExpandAll;\)\[IndentingNewLine]
    \(secondDerivFormulaB\  = \ 
        numB/\((Sqrt[Ups[y1^2, y2^2, 4]]^3\ y2^2)\);\)\[IndentingNewLine]
    numB // HolForm\[IndentingNewLine]
    {"\<checkAnswerB\>", \((secondDerivB\  - \ secondDerivFormulaB)\) /. 
          randomsub} // Chop\[IndentingNewLine]\[IndentingNewLine]
    NMaximize[{numA, 
        2\  \[LessEqual] \ y1\  && \ y1\  \[LessEqual] \ 2.52\  && \ 
          2\  \[LessEqual] \ y2\  && \ y2\  \[LessEqual] \ 2.52}, {y1, 
        y2}]\[IndentingNewLine]
    NMaximize[{numB, 
        2\  \[LessEqual] \ y1\  && \ y1\  \[LessEqual] \ 2.52\  && \ 
          2\  \[LessEqual] \ y2\  && \ y2\  \[LessEqual] \ 2.52}, {y1, 
        y2}]\[IndentingNewLine]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[4413]:="],

Cell[BoxData[
    \({y1 \[Rule] 2.1249732023926935`, 
      y2 \[Rule] 2.064014183607656`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4417]="],

Cell[BoxData[
    \({"checkAnswerA", 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4418]="],

Cell[BoxData[
    \("((-- &64) + ((&48 * (y1 pow 2)) + (((-- &12) * (y1 pow 4)) + ((y1 pow \
6) + ((&80 * (y2 pow 2)) + (((-- &8) * ((y1 pow 2) * (y2 pow 2))) + (((-- &3) \
* ((y1 pow 4) * (y2 pow 2))) + (((-- &12) * (y2 pow 4)) + ((&3 * ((y1 pow 2) \
* (y2 pow 4))) + ((-- &1) * (y2 pow 6)))))))))))"\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4422]="],

Cell[BoxData[
    \({"checkAnswerB", 0}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4423]="],

Cell[BoxData[
    \({\(-32.`\), {y1 \[Rule] 2.`, y2 \[Rule] 2.`}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4424]="],

Cell[BoxData[
    \({\(-64.`\), {y1 \[Rule] 2.`, y2 \[Rule] 2.`}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4425]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DWXPIHA (deprecated, cfsqp shows the inequality is false)", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ \ DWXPIHA\ *) \)\(\[IndentingNewLine]\)\(g1[y1_, y2_, y3_, 
        y4_, y5_, 
        y6_] := \[IndentingNewLine]\((D[
            taumarAlt[y1 + t, y2, y3, y4, y5, y6], t] /. 
          t \[Rule] 0)\)\[IndentingNewLine]
    g2[y1_, y2_, y3_, y4_, y5_, 
        y6_] := \[IndentingNewLine]\((D[
            taumarAlt[y1 + t, y2, y3, y4, y5, y6], {t, 2}] /. 
          t \[Rule] 0)\)\[IndentingNewLine]
    g2[2.01435842858384717, 2.00076853242375341, 2.03467380109726781, 
      2.93291949754248682, 2.52000000000000002, 
      2.11135793494235591]\)\)\)], "Input",
  CellLabel->"SphereIn[1470]:="],

Cell[BoxData[
    \(0.30334897363221935`\)], "Output",
  CellLabel->"SphereOut[1472]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[y1, y2, y, a, b, cc];\)\), "\[IndentingNewLine]", 
    \(\(eps\  = \ 10^\(-5\);\)\), "\[IndentingNewLine]", 
    \(\({a, b} = {2, 2};\)\), "\[IndentingNewLine]", 
    \(\(Solve[
        Delta[Sqrt[x1], Sqrt[x2], Sqrt[x], Sqrt[aa], Sqrt[bb], 
            Sqrt[cc]] \[Equal] 0, cc];\)\), "\[IndentingNewLine]", 
    \(\(taume[y1_, y2_, y3_, y4_, y5_, y_] := \ 
        Module[{c}, \[IndentingNewLine]c\  = \ 
            Max[c /. Solve[Delta[y1, y2, y, a, b, c] \[Equal] 0, 
                  c]]; \[IndentingNewLine]taumarAlt[y1, y2, y3, y4, y5, 
              c]\  + \ rho[y]*
              Pi\[IndentingNewLine]\ ];\)\), "\[IndentingNewLine]", 
    \(\(\(taume1[y1_, y2_, y3_, y4_, y5_, 
        y_] := \ \[IndentingNewLine]\ \((taume[y1, y2, y3, y4, y5, y + eps] - 
            taume[y1, y2, y3, y4, y5, y])\)/eps\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(taume2[y1_, y2_, y3_, y4_, y5_, 
        y_] := \ \[IndentingNewLine]\ \((taume[y1, y2, y3, y4, y5, y + eps] - 
            2  taume[y1, y2, y3, y4, y5, y] + 
            taume[y1, y2, y3, y4, y5, y - eps])\)/
        eps^2\), "\[IndentingNewLine]", 
    \(t2\  = \ 
      taume2[2.01604253140437661, 2.13424748720958091, 2.01977549804399414, 
        3.74610154078087909, 2.33555411923149592, 
        2.00001081888042664]\)}], "Input",
  CellLabel->"SphereIn[1632]:="],

Cell[BoxData[
    \(0.04035882739117369`\)], "Output",
  CellLabel->"SphereOut[1639]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[f, taumd, taumd2];\)\), "\[IndentingNewLine]", 
    \(\(taumd[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        Module[{t}, \[IndentingNewLine]D[
              taumarAlt[y1, y2, y3, y4 + t, y5, y6], t] /. 
            t \[Rule] 0\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(taumd2[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        Module[{t}, \[IndentingNewLine]D[
              taumarAlt[y1, y2, y3, y4 + t, y5, y6], {t, 2}] /. 
            t \[Rule] 0\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(f[y1_, y2_, y3_, y4_, y5_, y6_, y7_, y8_, y9_] := \ {"\<first:\>", 
          taumd[y1, y2, y3, y4, y5, y6] + 
            taumd[y7, y2, y3, y4, y8, y9], \[IndentingNewLine]"\<second:\>", 
          taumd2[y1, y2, y3, y4, y5, y6] + 
            taumd2[y7, y2, y3, y4, y8, y9], \[IndentingNewLine]"\<delta:\>", 
          Delta[y1, y2, y3, y4, y5, y6], 
          Delta[y7, y2, y3, y4, y8, y9], \[IndentingNewLine]"\<dih:\>", 
          Pi - Dihedral3[y1, y2, y3, y4, y5, y6] - 
            Dihedral3[y7, y2, y3, y4, y8, 
              y9]\ , \[IndentingNewLine]"\<cd:\>", 
          CrossDiag[y1, y2, y3, y4, y5, y6, y7, y8, y9], "\<ups:\>", 
          Ups[y1, y2, y6], Ups[y1, y3, y5], Ups[y2, y3, y4], Ups[y3, y7, y8], 
          Ups[y2, y7, 
            y9]};\)\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\)\
, "\[IndentingNewLine]", 
    \(\(\(f\  @@ \ {2.02287626223235639, 2.52000000000000002, 
        2.5199999999994307, 2.86885817213602401, 2.00649572338011328, 
        2.58689726914902973, 2.00000000000637002, 2.00000000000699529, 
        2.00000000000699529}\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\)}], "Input",
  CellLabel->"SphereIn[2849]:="],

Cell[BoxData[
    \({"first:", 0.017469747310934217`, "second:", \(-0.46615026902657986`\), 
      "delta:", 335.11594730531624`, 233.3915031090816`, "dih:", 
      0.7989208174213704`, "cd:", 2.8792070897251927`, "ups:", 
      16.564738901918888052750291163`16.58795760918344, 13.957366485432036`, 
      20.687743163296204`, 13.809600000065677`, 
      13.8096000000673612215999996096`16.547782253151578}\)], "Output",
  CellLabel->"SphereOut[2853]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input",
  CellLabel->"SphereIn[1947]:="],

Cell[BoxData[
    \({\(-0.30137148063777364`\), {y1 \[Rule] 2.0000000006375016`, 
        y2 \[Rule] 2.51999998827691`, y3 \[Rule] 2.5199999883399666`, 
        y4 \[Rule] 3.2000000006383953`}}\)], "Output",
  CellLabel->"SphereOut[1948]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
  CellLabel->"SphereIn[1802]:="],

Cell[BoxData[
    \(0.7577999999999999`\)], "Output",
  CellLabel->"SphereOut[1804]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(y = {2.00485835643711408, 2.01439663857892004, 2.16430459590829205, 
          2, 3.77526524451340784, 2, 2.36012487167498319, 2, 
          3.65130043574203755, 2.0725271814467976, 2, 
          2};\)\), "\[IndentingNewLine]", 
    \({taumar[y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], y[\([3 + 1]\)], 
          y[\([4 + 1]\)], y[\([5 + 1]\)]] + 
        taumar[y[\([0 + 1]\)], y[\([2 + 1]\)], y[\([6 + 1]\)], 
          y[\([7 + 1]\)], y[\([8 + 1]\)], y[\([4 + 1]\)]] + 
        taumar[y[\([0 + 1]\)], y[\([6 + 1]\)], y[\([9 + 1]\)], 
          y[\([10 + 1]\)], y[\([11 + 1]\)], y[\([8 + 1]\)]] - 0.4819, 
      Dihedral[y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], 
          y[\([3 + 1]\)], y[\([4 + 1]\)], y[\([5 + 1]\)]] + 
        Dihedral[y[\([0 + 1]\)], y[\([2 + 1]\)], y[\([6 + 1]\)], 
          y[\([7 + 1]\)], y[\([8 + 1]\)], y[\([4 + 1]\)]] + 
        Dihedral[y[\([0 + 1]\)], y[\([6 + 1]\)], y[\([9 + 1]\)], 
          y[\([10 + 1]\)], y[\([11 + 1]\)], y[\([8 + 1]\)]] - 
        Dihedral[y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([9 + 1]\)], 2.52, 
          y[\([11 + 1]\)], y[\([5 + 1]\)]], 
      Dihedral[y[\([2 + 1]\)], y[\([0 + 1]\)], y[\([1 + 1]\)], 
          y[\([5 + 1]\)], y[\([3 + 1]\)], y[\([4 + 1]\)]] + 
        Dihedral[y[\([2 + 1]\)], y[\([0 + 1]\)], y[\([6 + 1]\)], 
          y[\([8 + 1]\)], y[\([7 + 1]\)], y[\([4 + 1]\)]] - 
        Dihedral[y[\([2 + 1]\)], y[\([1 + 1]\)], y[\([6 + 1]\)], 2.52, 
          y[\([7 + 1]\)], y[\([3 + 1]\)]], 
      Dihedral[y[\([6 + 1]\)], y[\([2 + 1]\)], y[\([0 + 1]\)], 
          y[\([4 + 1]\)], y[\([8 + 1]\)], y[\([7 + 1]\)]] + 
        Dihedral[y[\([6 + 1]\)], y[\([0 + 1]\)], y[\([9 + 1]\)], 
          y[\([11 + 1]\)], y[\([10 + 1]\)], y[\([8 + 1]\)]] - 
        Dihedral[y[\([6 + 1]\)], y[\([2 + 1]\)], y[\([9 + 1]\)], 2.52, 
          y[\([10 + 1]\)], y[\([7 + 1]\)]], 
      Delta[y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], y[\([3 + 1]\)], 
        y[\([4 + 1]\)], y[\([5 + 1]\)]], 
      Delta[y[\([0 + 1]\)], y[\([6 + 1]\)], y[\([9 + 1]\)], y[\([10 + 1]\)], 
        y[\([11 + 1]\)], y[\([8 + 1]\)]]}\)}], "Input",
  CellLabel->"SphereIn[2068]:="],

Cell[BoxData[
    \({\((\(-0.5133818233696084`\) + 
            1.0436728226373533`\ \[ImaginaryI])\) + \
\((\(\(2.5219877116923097`\)\(\[InvisibleSpace]\)\) + 
              0.3667607238514379`\ \[ImaginaryI])\)\ cc, \
\(-0.5640097755187439`\) + 
        0.9880748173810856`\ \[ImaginaryI], \(\(0.024298065075637254`\)\(\
\[InvisibleSpace]\)\) + 
        0.7815529211446696913311039104`15.482165996928263\ \[ImaginaryI], \
\(\(0.46166206988350766`\)\(\[InvisibleSpace]\)\) + 
        0.23982633211911175`\ \[ImaginaryI], \
\(-94.8824956380658776741299065849`15.414780250193111\), \
\(-12.18630802105713`\)}\)], "Output",
  CellLabel->"SphereOut[2069]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(y\  = \ {2.17072101342770818, 2, 2, 3.29999999999999982, 
          2.52000000000000002, 2.52000000000000002, 2.26053090426768577, 2, 
          2, 2, 2, 2, 2, 2, 2};\)\), "\[IndentingNewLine]", 
    \(\(y\  = \ {2, 2, 2, 3.6043415349640302, 3.50844101794984287, 
          3.47889656610298292, 2, 2.072280245318741, 2.18430400742812347, 2, 
          2.07782132135572573, 2.00000000000000133, 2, 2.02573689844722482, 
          2.00000000000000178};\)\), "\[IndentingNewLine]", 
    \(\(y\  = \ {2.13207267224046593, 2.0000000000000413, 
          2.04999790554654249, 3.6107543891036249, 3.56529042804928986, 
          3.52212383173269794, 2.00000000000001821, 2.21008437205723185, 
          2.00000000000002087, 2.0000000000000111, 2.00000000000005063, 
          2.00000000000000222, 2.02903022550123247, 2, 
          2.00000000000002753};\)\), "\[IndentingNewLine]", 
    \(\(\({taumarAlt[y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], 
          y[\([3 + 1]\)], y[\([4 + 1]\)], y[\([5 + 1]\)]] + 
        taumarAlt[y[\([6 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], 
          y[\([3 + 1]\)], y[\([7 + 1]\)], y[\([8 + 1]\)]] + 
        taumarAlt[y[\([9 + 1]\)], y[\([0 + 1]\)], y[\([2 + 1]\)], 
          y[\([4 + 1]\)], y[\([11 + 1]\)], y[\([10 + 1]\)]] + 
        taumarAlt[y[\([12 + 1]\)], y[\([0 + 1]\)], y[\([1 + 1]\)], 
          y[\([5 + 1]\)], y[\([13 + 1]\)], y[\([14 + 1]\)]] - 0.7578, 
      Dihedral[y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], 
          y[\([3 + 1]\)], y[\([4 + 1]\)], y[\([5 + 1]\)]] + 
        Dihedral[y[\([0 + 1]\)], y[\([12 + 1]\)], y[\([1 + 1]\)], 
          y[\([13 + 1]\)], y[\([5 + 1]\)], y[\([14 + 1]\)]] + 
        Dihedral[y[\([0 + 1]\)], y[\([9 + 1]\)], y[\([2 + 1]\)], 
          y[\([11 + 1]\)], y[\([4 + 1]\)], y[\([10 + 1]\)]] - 
        Dihedral[y[\([0 + 1]\)], y[\([9 + 1]\)], y[\([12 + 1]\)], 2.52, 
          y[\([14 + 1]\)], y[\([10 + 1]\)]], 
      Dihedral[y[\([1 + 1]\)], y[\([0 + 1]\)], y[\([2 + 1]\)], 
          y[\([4 + 1]\)], y[\([3 + 1]\)], y[\([5 + 1]\)]] + 
        Dihedral[y[\([1 + 1]\)], y[\([0 + 1]\)], y[\([12 + 1]\)], 
          y[\([14 + 1]\)], y[\([13 + 1]\)], y[\([5 + 1]\)]] + 
        Dihedral[y[\([1 + 1]\)], y[\([2 + 1]\)], y[\([6 + 1]\)], 
          y[\([7 + 1]\)], y[\([8 + 1]\)], y[\([3 + 1]\)]] - 
        Dihedral[y[\([1 + 1]\)], y[\([12 + 1]\)], y[\([6 + 1]\)], 2.52, 
          y[\([8 + 1]\)], y[\([13 + 1]\)]], 
      Dihedral[y[\([2 + 1]\)], y[\([1 + 1]\)], y[\([0 + 1]\)], 
          y[\([5 + 1]\)], y[\([4 + 1]\)], y[\([3 + 1]\)]] + 
        Dihedral[y[\([2 + 1]\)], y[\([6 + 1]\)], y[\([1 + 1]\)], 
          y[\([8 + 1]\)], y[\([3 + 1]\)], y[\([7 + 1]\)]] + 
        Dihedral[y[\([2 + 1]\)], y[\([0 + 1]\)], y[\([9 + 1]\)], 
          y[\([10 + 1]\)], y[\([11 + 1]\)], y[\([4 + 1]\)]] - 
        Dihedral[y[\([2 + 1]\)], y[\([9 + 1]\)], y[\([6 + 1]\)], 2.52, 
          y[\([7 + 1]\)], y[\([11 + 1]\)]], 
      Delta[y[\([6 + 1]\)], y[\([1 + 1]\)], y[\([2 + 1]\)], y[\([3 + 1]\)], 
        y[\([7 + 1]\)], y[\([8 + 1]\)]], 
      Delta[y[\([9 + 1]\)], y[\([0 + 1]\)], y[\([2 + 1]\)], y[\([4 + 1]\)], 
        y[\([11 + 1]\)], y[\([10 + 1]\)]], 
      Delta[y[\([12 + 1]\)], y[\([0 + 1]\)], y[\([1 + 1]\)], y[\([5 + 1]\)], 
        y[\([13 + 1]\)], y[\([14 + 1]\)]]}\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(Delta[y[\([1]\)], y[\([2]\)], y[\([3]\)], y[\([4]\)], y[\([5]\)], 
      y[\([6]\)]]\)\(\[IndentingNewLine]\)
    \)\), "\[IndentingNewLine]", 
    \(\(\(CrossDiag[y[\([1]\)], y[\([2]\)], y[\([3]\)], y[\([4]\)], 
      y[\([5]\)], y[\([6]\)], y[\([7]\)], y[\([8]\)], 
      y[\([9]\)]]\)\(\[IndentingNewLine]\)\(\n\)
    \)\), "\[IndentingNewLine]", 
    \(\)}], "Input"],

Cell[BoxData[
    \({3.5442169971919895`, 1.4783512690868958`, 1.5259056062404128`, 
      1.5706080998039322`, 0.0003225104034072501`, 0.0017435518266211147`, 
      0.004504142461939864`}\)], "Output",
  CellLabel->"SphereOut[1843]="],

Cell[BoxData[
    \(0.0017182964957100921`\)], "Output",
  CellLabel->"SphereOut[1844]="],

Cell[BoxData[
    \(4.130569372693389`\)], "Output",
  CellLabel->"SphereOut[1845]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2986512815", "Subsection"],

Cell[BoxData[
    \(\(\( (*\ \ *) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\(Clear[
        gg, dih, a, dd, b, y, c, g, f, d, e1, e2, e3, e4, y4, y5, y6, u, 
        num4, num6, deriv1, derv1AB, derv1CD, rr, ee, 
        randomsub];\)\[IndentingNewLine]
    \(dih\  = \ DihedralAlt;\)\[IndentingNewLine]
    \(gg[y_] := \ \[IndentingNewLine]\((dih[2, 2, 2, b, a, y] e1\  + \ 
            dih[2, 2, 2, y, a, b]\ e2\  + \ 
            dih[2, 2, 2, a, b, y] e3\[IndentingNewLine] + 
            dih[2, 2, 2, c, d, y] e1\  + dih[2, 2, 2, d, c, y] e3\  + \ 
            dih[2, 2, 2, y, c, 
                d]\ e4)\);\)\[IndentingNewLine]\[IndentingNewLine]
    dd[y4_, y5_, y6_] := \ 
      Delta[2, 2, 2, y4, y5, y6] // 
        Simplify\[IndentingNewLine]\[IndentingNewLine]
    num4[y4_, y5_, y6_]\  := \ 
      Module[{u}, \((D[DihedralAlt[2, 2, 2, u, y5, y6] // Simplify, u] /. 
                u \[Rule] y4)\)\ Sqrt[dd[y4, y5, y6]] // 
          Simplify]\[IndentingNewLine]\[IndentingNewLine]
    num6[y4_, y5_, y6_]\  := \ 
      Module[{u}, \((D[DihedralAlt[2, 2, 2, y4, y5, u] // Simplify, u] /. 
                u \[Rule] y6)\)\ Sqrt[dd[y4, y5, y6]] // 
          Simplify]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    \(derv1AB\  = \ 
        y\ \((16 - y^2)\)\ \((num6[b, a, y]\ e1\  + \ num4[y, a, b]\ e2\  + \ 
                num6[a, b, y]\ e3\ )\) // Simplify;\)\[IndentingNewLine]
    \(nAB[y_] := \ 
        y\ \((16 - y^2)\)\ \((num6[b, a, y]\ e1\  + \ num4[y, a, b]\ e2\  + \ 
                num6[a, b, y]\ e3\ )\) // Simplify;\)\[IndentingNewLine]
    \(derv1CD\  = \ 
        y\ \((16 - y^2)\)\ \((num6[c, d, y]\ e1\  + \ num6[d, c, y]\ e3\  + \ 
                num4[y, c, d]\ e4)\)\  // Simplify;\)\[IndentingNewLine]
    \(nCD[y_] := \ 
        y\ \((16 - y^2)\)\ \((num6[c, d, y]\ e1\  + \ num6[d, c, y]\ e3\  + \ 
                num4[y, c, d]\ e4)\)\  // Simplify;\)\[IndentingNewLine]
    \(ddAB[y_] := \ dd[y, a, b];\)\[IndentingNewLine]
    \(ddCD[y_] := \ dd[y, c, d];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      check\ *) \[IndentingNewLine]
    rr\  := \ Random[Real, {2, 2.3}]; \ 
    ee := \ Random[Real, {1, 1.15}];\[IndentingNewLine]
    \(randomsub\  = \ {a\  \[Rule] \ rr, \ b\  \[Rule] \ rr, \ 
          c \[Rule] \ rr, \ d \[Rule] rr, \ y\  \[Rule] \ rr, \ 
          e1 \[Rule] \ ee, \ e2 \[Rule] \ ee, \ e3 \[Rule] \ ee, \ 
          e4 \[Rule] \ ee};\)\[IndentingNewLine]
    \({"\<check dih\>", \((Dihedral[2, 2, 2, a, b, y] - 
                DihedralAlt[2, 2, 2, a, b, y])\) /. randomsub} // 
        Chop;\)\[IndentingNewLine]
    \({"\<checkAB\>", \((D[Dihedral[2, 2, 2, b, a, y], y]\  - \ 
                num6[b, a, y]\ /Sqrt[dd[a, b, y]])\) /. randomsub} // 
        Chop;\)\[IndentingNewLine]
    \({"\<checkAB\>", \((D[Dihedral[2, 2, 2, y, a, b], y]\  - \ 
                num4[y, a, b]\ /Sqrt[dd[a, b, y]])\) /. randomsub} // 
        Chop;\)\[IndentingNewLine]
    \({"\<check1\>", \((D[gg[y], 
                  y]\  - \ \((derv1AB/\((y\ \((16 - y^2)\)\ Sqrt[
                            dd[a, b, y]])\)\  + \ 
                    derv1CD/\((y\ \((16 - y^2)\)\ Sqrt[dd[c, d, y]])\))\) /. 
              randomsub)\)} // Chop;\)\[IndentingNewLine]\[IndentingNewLine]
    \(pr = \(2\ \((16 - y^2)\)^2\ \ y^2\ g[y]^\((3/2)\)\ \ \ D[
                f[y]/\((y\ \((16 - y^2)\)\ Sqrt[g[y]])\), y] // Simplify\) // 
          Factor;\)\[IndentingNewLine]
    \(prAB\  = \ 
        pr /. {f \[Rule] \ nAB, g \[Rule] ddAB} // 
          Simplify;\)\[IndentingNewLine]
    \(prCD\  = \ 
        pr /. {f \[Rule] \ nCD, g \[Rule] ddCD} // 
          Simplify;\)\[IndentingNewLine]\[IndentingNewLine]
    {"\<check2\>", \((\(-D[gg[y], {y, 2}]\)\  + \ 
              prAB/\((2\ y^2\ \((16 - y^2)\)^2\ Sqrt[dd[a, b, y]]^3)\)\  + \ 
              prCD/\((2\ y^2\ \((16 - y^2)\)^2\ Sqrt[dd[c, d, y]]^3)\))\) /. 
          randomsub} // Chop\[IndentingNewLine]\[IndentingNewLine]
    \(term1\  = \ \ \ derv1AB\ Sqrt[dd[c, d, y]]\  + \ 
            derv1CD\ Sqrt[dd[a, b, y]] // 
          HolForm;\)\[IndentingNewLine]\[IndentingNewLine]
    \(term2\  = \ 
        prAB\ Sqrt[dd[c, d, y]]^3\  + \ prCD\ Sqrt[dd[a, b, y]]^3 // 
          HolForm;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      NMinimize[{deriv1, \ 1\  \[LessEqual] \ e1\  \[LessEqual] \ emax, \ 
          1\  \[LessEqual] \ e2\  \[LessEqual] \ emax, \ 
          1\  \[LessEqual] \ e3\  \[LessEqual] \ emax, \ 
          1\  \[LessEqual] \ e4\  \[LessEqual] \ emax, \ 
          2/hmid\  \[LessEqual] \ a\  \[LessEqual] \ 2  hmid, \ 
          2/hmid\  \[LessEqual] \ b\  \[LessEqual] \ 2\ hmid, \ 
          2/hmin\  \[LessEqual] \ c\  \[LessEqual] \ 2\ hmid, \ 
          2/hmid\  \[LessEqual] \ d\  \[LessEqual] \ 4, \ 
          2 \[LessEqual] \ y\  \[LessEqual] \ a + b, 
          dd[a, b, y] \[GreaterEqual] \ 0, \ 
          dd[c, d, y] \[GreaterEqual] \ 0, \ 
          Delta[a, b, 2  hmid, c, d, y]\  \[GreaterEqual] \ 0}, {e1, e2, e3, 
          e4, a, b, c, d, y}]\ *) \[IndentingNewLine]
    \)\)\)], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fejes Toth and Full Contact", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ \ \ \ *) \)\(\[IndentingNewLine]\)\(\(Clear[
        dd];\)\[IndentingNewLine]
    \(dd[r_, s_] := \ 
        If[r + 2  s \[LessEqual] \ 3, 0, 
          0.103\ \((2 - s)\)\  + \ 
            0.2759\ \((r + 2  s\  - \ 
                  4)\)];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Calculation\ 8649676161\ *) \[IndentingNewLine]
    \($SpherePrecision = Infinity;\)\[IndentingNewLine]
    cutoff = 3\ ;  (*\ was\ 32/10\ *) \[IndentingNewLine]ss = 
      Solid[2, 2, 2, y, cutoff, t];\[IndentingNewLine]
    \(uu = 
        D[ss, t]\ Sqrt[Delta[2, 2, 2, y, cutoff, t]] // 
          Simplify;\)\[IndentingNewLine]
    vv\  = \ \((uu /. y \[Rule] 2)\); \  (*\ 
      monotonic\ in\ y\ *) \[IndentingNewLine]Solve[vv \[Equal] 0, t] // 
      N; \ \  (*\ no\ roots\ on\ \((0, cutoff)\)\ *) \[IndentingNewLine]vv /. 
      t \[Rule] 3; \  (*\ 
      positive\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      Here\ is\ a\ similar\ calc, \ when\ y\  \[GreaterEqual] \ cutoff\ ; \ 
      note\ that\ uu\ is\ monotonic\ in\ y\ *) \[IndentingNewLine] (*\ 
      The\ conclusion\ is\ that\ on\ edges\ [2.52, 
          cutoff]\ the\ smaller\ area\ is\ at\ 2.52\ *) \[IndentingNewLine] \
(*\ Also\ for\ edges\ [2, 2.52], \ 
      the\ smaller\ area\ is\ at\ 2\ *) \[IndentingNewLine]ss\  = \ 
      Solid[2, 2, 2, y, 252/100, t];\[IndentingNewLine]
    \(uu\  = \ \ D[ss, t]\ Sqrt[Delta[2, 2, 2, y, 252/100, t]] // 
          Simplify;\)\[IndentingNewLine]
    \(vv = \((uu /. {y \[Rule] cutoff})\);\)\[IndentingNewLine]
    Solve[vv \[Equal] 0.0, t];  (*\ 
      no\ roots\ on\ \((0, 4)\)\ *) \[IndentingNewLine]vv /. 
      t \[Rule] 3; \  (*\ 
      positive\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      same\ thing\ with\ the\ other\ edge\ at\ 2\ rather\ than\ 2.52, \ 
      So\ that\ edges\ in\ the\ range\ [2, 
          2.52]\ always\ reduce\ to\ 2. \ *) \[IndentingNewLine]ss\  = \ 
      Solid[2, 2, 2, y, 2, t];\[IndentingNewLine]
    \(uu\  = \ \ D[ss, t]\ Sqrt[Delta[2, 2, 2, y, 2, t]] // 
          Simplify;\)\[IndentingNewLine]
    vv = \((uu /. {y \[Rule] 2})\)\ ; \ \ \  (*\ 
      monotonic\ in\ y\ *) \[IndentingNewLine]Solve[vv \[Equal] 0.0, 
      t]; \  (*\ no\ roots\ on\ \((0, 2.52)\)\ *) \[IndentingNewLine]vv /. 
      t \[Rule] 2.52; \  (*\ 
      positive\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      edges\ t\ in\ range\ [2.52, 
          3]\ reduce\ to\ 2.52\ if\ some\ other\ edge\ y\ is\ at\ least\ 2.52\
\ *) \[IndentingNewLine]ss\  = \ Solid[2, 2, 2, y, 2, t];\[IndentingNewLine]
    \(uu\  = \ \ D[ss, t]\ Sqrt[Delta[2, 2, 2, y, 2, t]] // 
          Simplify;\)\[IndentingNewLine]
    vv = \((uu /. {y \[Rule] 2.52})\)\ ; \ \ \  (*\ 
      monotonic\ in\ y\ *) \[IndentingNewLine]Solve[vv \[Equal] 0.0, 
      t]; \  (*\ no\ roots\ on\ \((2.52, 3)\)\ *) \[IndentingNewLine]vv /. 
      t \[Rule] 2.52;  (*\ 
      positive\ \
*) \[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]$SpherePrecision \
= 16;\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Flypaper\ claims\ some\ node\ is\ convex\ *) \[IndentingNewLine]
    \(Assert[
        2  Pi\  + \ \((2 - 5)\)\ Solid[2, 2, 2, 2, 2, 2] > 
          tgt, "\<FT:hemi\>"];\)\[IndentingNewLine]\[IndentingNewLine]
    \(Assert[
        Dihedral[2, 2, 2, 3, 3, 2.0] - Pi/2\  > 
          0, "\<FT:pi\>"];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      flypaper\ main\ estimate\ for\ triangles\ 9267276091\ \
*) \[IndentingNewLine]
    \(Assert[
        taumar[2, 2, 2, 2, 2, 2] \[GreaterEqual] \ 
          dd[3, 0], "\<FT:30\>"];\)\[IndentingNewLine]
    \(Assert[
        taumar[2, 2, 2, 2.52, 2, 2] \[GreaterEqual] \ 
          dd[2, 1], "\<FT:21\>"];\)\[IndentingNewLine]
    \(Assert[
        taumar[2, 2, 2, 3, 2, 2] \[GreaterEqual] \ 
          dd[2, 1], "\<FT:21\>"];\)\[IndentingNewLine]
    \(Assert[
        taumar[2, 2, 2, 2.52, 2.52, 2] \[GreaterEqual] \ 
          dd[1, 2], "\<FT:12\>"];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      6621965370\ *) \[IndentingNewLine] (*\ 
      Flypaper\ claims\ that\ Dihedral[2, 2, 2, 2, y5, y6] < 2  Pi/5, \ 
      when\ y5, 
      y6 \[GreaterEqual] \ 
        2.52\  . \ \ We\ can\ do\ a\ derivative\ calculation\ to\ reduce\ to\
\[IndentingNewLine]Dihedral[2, 2, 2, 2, 2.52, 2.52] < 
        2  Pi/5\ *) \ \[IndentingNewLine]
    uu = Sqrt[Delta[2, 2, 2, 2, x, y]] 
          D[DihedralAlt[2, 2, 2, 2, x, y] // Rationalize, x] // 
        Simplify; \ \  (*\ 
      evident\ signs\ *) \[IndentingNewLine]Solve[\((uu /. {y \[Rule] 
                2.52})\) \[Equal] 0, 
      x];\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    failures\)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[945]:="],

Cell[BoxData[
    \({}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[964]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(randomint\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[816]:="],

Cell[BoxData[
    \(9267276091\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[816]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(arc[2, 2, 3]\  - \ \ Pi/2.0 // N\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[499]:="],

Cell[BoxData[
    \(0.12532783116806545`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[499]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(arc[2, 2, 2.52]\ 3\  + \ \(\(arc[2, 2, 2]\) \(2\)\(\ \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[968]:="],

Cell[BoxData[
    \(\(-0.09947093540768881`\)\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[968]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(4\ arc[2, 2, 2.52]\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[969]:="],

Cell[BoxData[
    \(5.452425692504936`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[969]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(randomint\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[970]:="],

Cell[BoxData[
    \(6621965370\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[970]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
  CellLabel->"Sphere`Private`SphereIn[985]:="],

Cell[BoxData[
    \(\(16\ \((8 + x\^2 - 2\ y\^2)\)\)\/\(x\ \((\(-16\) + x\^2)\)\)\)], \
"Output",
  CellLabel->"Sphere`Private`SphereOut[985]="],

Cell[BoxData[
    \({{x \[Rule] \(-2.1681328372588244`\)}, {x \[Rule] 
          2.1681328372588244`}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[986]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(2  Pi/5.0\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[972]:="],

Cell[BoxData[
    \(1.2566370614359172`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[972]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Musin Tarasov theorem", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ Schutte\ vdW\ radius\ *) \)\(\[IndentingNewLine]\)\(<< \ 
      numerical.m\[IndentingNewLine]\[IndentingNewLine]
    \(BeginPackage["\<MusinTarasov`\>", {"\<Global`\>", "\<Sphere`\>"}];\)\ \
\[IndentingNewLine]\[IndentingNewLine]
    \(polySVDW::usage\  = \ "\<polynomial whose root r> 2 is the radius of \
the Schutte Van Der Waerden config\>";\)\[IndentingNewLine]
    \(rSVDW::usage\  = \ "\<radius 2.09... of the Schutte Van Der Waerden \
config\>";\)\[IndentingNewLine]\[IndentingNewLine]
    \(ThirteenSpheres::usage\  = \ "\<approximation of the coordinates of the \
13 spheres config\>";\)\[IndentingNewLine]\[IndentingNewLine]
    \(Begin["\<`Private`\>"];\)\ \[IndentingNewLine]\[IndentingNewLine] (*\ 
      Exercise[SIZXIEV]\ *) \[IndentingNewLine]\[IndentingNewLine]
    \(Clear[t, x, u, r];\)\[IndentingNewLine] (*\ 
      points\ on\ the\ unit\ sphere\ *) \[IndentingNewLine]
    \(p1\  = \ {0, 0, 1};\)\[IndentingNewLine]
    \(p2\  = \ {1 - t^2, 0, 2  t}/\((1 + t^2)\);\)\[IndentingNewLine]
    \(p3\  = \ {\((1 - x^2)\)/Sqrt[2], \((1 - x^2)\)/Sqrt[2], \(-2\) 
              x}/\((1 + x^2)\);\)\[IndentingNewLine]
    \(p4\  = \ {\((1 - u^2)\), 
            0, \(-2\) u}/\((1 + u^2)\);\)\[IndentingNewLine]
    \(p5\  = \ {0, \((1 - u^2)\), \(-2\) u}/\((1 + 
              u^2)\);\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      equal\ dot\ product\ conditions\ *) \[IndentingNewLine]
    \(dot = p4 . p5 // Simplify;\)\[IndentingNewLine]
    \(eqn2 = \ \(p1 . p2 - dot // Together\) // 
          Simplify;\)\[IndentingNewLine]
    \(num2\  = \ Numerator[eqn2];\)\[IndentingNewLine]
    \(eqn3 = \(p2 . p3 - dot // Together\) // Simplify;\)\[IndentingNewLine]
    \(num3\  = \ Numerator[eqn3];\)\[IndentingNewLine]
    \(eqn4\  = \ \(p3 . p4 - dot // Together\) // 
          Simplify;\)\[IndentingNewLine]
    \(num4\  = \ Numerator[eqn4];\)\[IndentingNewLine]
    \(num3b\  = \ \(num3\ \((num3 /. {Sqrt[2] \[Rule] \(-Sqrt[2]\)})\) // 
            ExpandAll\) // Simplify;\)\[IndentingNewLine]
    \(num4b\  = \ \(num4\ \((num4 /. {Sqrt[2] \[Rule] \(-Sqrt[2]\)})\) // 
            ExpandAll\) // 
          Simplify;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      elimination\ of\ variables\ *) \[IndentingNewLine]
    \(upoly\  = \ \(GroebnerBasis[{num2, num4b, num3b}, {t, x, u}, {t, x}]\  // 
            First\) // Factor;\)\[IndentingNewLine]
    \(upoly2\  = \ 
        upoly/\((u^2\ \((1 + u)\)^4\ \((1 + 
                    u^2)\)^4)\);\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      convert\ to\ a\ radius\ via\ law\ of\ cosines\ *) \[IndentingNewLine]
    \(eqn5\  = \ \(\(2  r^2\  - \ 2  r^2\ dot\  - \ 4 // Together\) // 
            Simplify\) // Numerator;\)\[IndentingNewLine]
    \(rpoly\  = \ \(GroebnerBasis[{eqn5, upoly2}, {u, r}, {u}] // First\) // 
          Factor;\)\[IndentingNewLine]
    \(polySVDW\  = \ rpoly;\)\ \[IndentingNewLine]\[IndentingNewLine]
    \(rval\  = \ \((r /. 
            Last[NSolve[rpoly \[Equal] 0, r]])\);\)\[IndentingNewLine] (*\ 
      Schutte\ van\ der\ Waerden\ [Auf\ welcher\ Kugle, \ 
            page\ 122]\ give\ the\ answer\ numerically\ as\ r/2\  = \ 
        1.045 ... \ *) \[IndentingNewLine]
    \(rSVDW\  = \ rval;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      Exercise\ IXNITUF\ *) \[IndentingNewLine] (*\ 
      Calculate\ the\ points\  . \ 
          Find\ standard\ \(\(hypermap\)\(.\)\)\ *) \[IndentingNewLine]\
\[IndentingNewLine]
    \(r1\  = \ {0, 0, rval};\)\[IndentingNewLine]
    \(eqn5r\  = \ eqn5 /. {r \[Rule] rval};\)\[IndentingNewLine]
    \({r4, r4b}\  = \ 
        rval\ {p4, 
              p5} /. \((\(NSolve[{eqn5r \[Equal] 0}, 
                u]\)[\([3]\)])\);\)\[IndentingNewLine]
    \(r2\  = \ 
        rval\ p2 /. \((\(NSolve[{rval^2\ p1 . p2\  \[Equal] \ r4 . r4b}, 
                t]\)[\([2]\)])\);\)\[IndentingNewLine]
    \(r3\  = \ 
        rval\ p3 /. \((\(NSolve[{rval\ r2 . p3\  \[Equal] \ r4 . r4b}, 
                x]\)[\([2]\)])\);\)\[IndentingNewLine]
    \({r1, r2, r3, r4, r4b};\)\[IndentingNewLine]
    \(r2b\  = \ r2[\([{2, 1, 3}]\)];\)\[IndentingNewLine]
    \(r3b\  = \ {r3[\([1]\)], \(-r3[\([2]\)]\), 
          r3[\([3]\)]};\)\[IndentingNewLine]
    Distance[r3, r3b]; \  (*\ 2.94\ *) \[IndentingNewLine]Distance[r2, 
      r2b]\ ; \  (*\ 2.48\ New\ \(edges!\)\ *) \[IndentingNewLine]Distance[
      r4, r2]; \  (*\ 2.69\ *) \[IndentingNewLine]\[IndentingNewLine] (*\ 
      Exercise\ "\<BLXDVLY\>"\ *) \[IndentingNewLine]Assert[
      7  arc[rval, rval, 2] - 
        2  Pi, "\<MusinTarasov:perim\>"];\[IndentingNewLine]\
\[IndentingNewLine] (*\ calc\ 13\ spheres\ *) \[IndentingNewLine]
    \(rotate[{x_, y_, z_}] := \ {\(-y\), x, z};\)\[IndentingNewLine]
    \(rr[v_] := \ 
        Module[{v1, v2, v3}, \[IndentingNewLine]\t
          v1\  = \ rotate[v]; \[IndentingNewLine]v2\  = \ 
            rotate[v1]; \[IndentingNewLine]v3\  = \ 
            rotate[v2]; \[IndentingNewLine]{v, v1, v2, 
            v3}];\)\[IndentingNewLine]\[IndentingNewLine]
    \(ThirteenSpheres = 
        Join[{r1}, rr[r2], rr[r3], 
          rr[r4], {{0, 0, 0}}];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      for\ graphics, \ rotate\ view, \ 
      and\ project\ to\ the\ \(\(plane\)\(.\)\)\ *) \[IndentingNewLine]
    rot[u_] := \ 
      Module[{e1, e2}, \[IndentingNewLine]\t
        e1 = {1, 0, 0}; \[IndentingNewLine]\t
        e2\  = \ {1, 0, 0} + {0, 1, 0} + {0, 0, 
              5}; \[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ e3\  = \ {0, 1, 
            0}; \[IndentingNewLine]\ \ \ \ \ \ e2\  = \ 
          e2/Sqrt[e2 . e2]; \[IndentingNewLine]\ \ \ \ \ e3\  = \ 
          e3\  - \ \((e1 . e3)\)\ e1\  - \ \((e2 . 
                  e3)\)\ e2; \[IndentingNewLine]\ \ \ \ e3\  = \ \ e3/
            Sqrt[e3 . e3]; \ \[IndentingNewLine]{u . e3, u . e1, 
          u . e2}]\[IndentingNewLine]
    \(s13a\  = \ Map[rot, ThirteenSpheres] // Sort;\)\[IndentingNewLine]
    Map[{{#[\([2]\)]}, {#[\([3]\)]}} &, 
      s13a]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    \(End[];\)\[IndentingNewLine]
    \(EndPackage[];\)\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]
    failures\)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[178]:="],

Cell[BoxData[
    \({}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[220]="]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(\(\(\(r\  = \ rSVDW;\)\[IndentingNewLine]
    \(solr\  = \ Solid[r, r, r, 2, 2, 2];\)\[IndentingNewLine]
    \(4  Pi\  - \ 22\ solr;\)\[IndentingNewLine]
    \(tgtt\  = \ 1.733;\)\[IndentingNewLine]
    \(taur[y4_, y5_, y6_] := \ 
        Solid[r, r, r, y4, y5, y6] - solr;\)\[IndentingNewLine]
    \(taur[2, 2, 2];\)\[IndentingNewLine]
    \(dr[r_, s_] := \ 
        If[r + 2  s > 3, 
          0.088\ \((2 - s)\)\  + \ 0.2365\ \((r\  + \ 2\ s - \ 4)\), 
          0];\)\[IndentingNewLine]
    \(dd[k_] := \ dr[k, 0];\)\[IndentingNewLine]
    \(Table[dd[k], {k, 3, 7}];\)\[IndentingNewLine]
    \(\(dihr[y4_, y5_, y6_] := \ 
        Dihedral[r, r, r, y4, y5, y6];\)\(\[IndentingNewLine]\)
    \)\[IndentingNewLine]
    dihpmin\  = \ 
      1.059\ ;  (*\ \(<\)\(\ \)\(dihr[2, 2.52, 
          2.52]\)\ *) \[IndentingNewLine]dihpmax\  = \ 
      1.6\ ;  (*\ \(>\)\(\ \)\(dihr[2.52, 2, 
            2]\ for\ triangles\)\ *) \[IndentingNewLine]dihqmin\  = \ \ 1.35\ \
; \ \  (*\ \(<\)\(\ \)\(dihr[2.52, 2.52, 2.52]\)\ \ *) \[IndentingNewLine]
    \(dihrmin\  = \ dihqmin;\)\[IndentingNewLine]
    dihqmax\  = \ \ 2.84\ ; \  (*\ \(>\)\(\ \)\(2\ dihr[2.52, 2, 
            2.52]\)\ *) \[IndentingNewLine]dihrmax\  = \ 
      2  Pi;\[IndentingNewLine]
    \(\(degreemax\  = \ 
        Floor[2  Pi/dihpmin]\) \); \  (*\ \(<\)\(\ \)\(2 
           Pi/dihmin\)\ *) \[IndentingNewLine]\(\(\(degreemin\  = \ 
        2\)\(\ \)\) \); \)\( (*\ at\ isolated\ deformed\ vertex, \ 
      at\ most\ 1\ such\ \
*) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ 
      next\ we\ need\ tri\ and\ quad\ inequalities\ for\ taur\  \
\[GreaterEqual] \ 
        A\ dih\  + \ b\ for\ the\ a - table\ and\ b - 
          table\ *) \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[299]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ Not\ used\ yet, \ 
      may\ be\ useful\ in\ linear\ programs\ *) \)\(\[IndentingNewLine]\)\( \
(*\ found\ by\ SearchLB[dihr, {2.0, 2, 2}, {2.52, 2.52, 2.52}, 
          0.0001, {}]\ \
*) \)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(NMinimize[{dihr[x, y, 
            z] - 1.206\  - \ 0.68038409\ \((x - 2)\)\  + \ 
          0.288348\ \((y + z - 4)\), 2 \[LessEqual] x \[LessEqual] 2.52, 
        2 \[LessEqual] \ y \[LessEqual] \ 2.52, \ 
        2 \[LessEqual] \ z\  \[LessEqual] \ 2.52}, {x, y, z}]\)\)\)], "Input",\

  CellLabel->"Sphere`Private`SphereIn[179]:="],

Cell[BoxData[
    \({0.0004897064514235439`, {x \[Rule] 2.277254872704674`, 
        y \[Rule] 2.52`, z \[Rule] 2.`}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[179]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ \ Informal\ search\ for\ B - 
          table\ data\ for\ triangles\ and\ \(quads : \ \[IndentingNewLine]\
\[IndentingNewLine]{ppx[0], ppx[1], ppx[2]}\) = {2.00, 2.52, 
          Sqrt[8.0]}; \[IndentingNewLine]hullp\  = \ 
        FormLowerHull[
            flatTable[{dihr[ppx[i1], ppx[i2], ppx[i3]], 
                taur[ppx[i1], ppx[i2], ppx[i3]]}, {{i1, 0, 1}, {i2, 0, 
                  1}, {i3, 0, 1}}]] // 
          Chop; \[IndentingNewLine]BqineqApprox\  = \ 
        Table[interp[alpha, hullp[\([i]\)], hullp[\([i + 1]\)]] // 
            ExpandAll, {i, 1, 
            Length[hullp] - 
              1}]; \[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
hullq = \ FormLowerHull[
            Join[flatTable[{2  dihr[ppx[i1], ppx[i2], ppx[i3]], 
                  2  taur[ppx[i1], ppx[i2], ppx[i3]]}, {{i1, 0, 1}, {i2, 0, 
                    1}, {i3, 1, 2}}], \[IndentingNewLine]flatTable[{dihr[
                    ppx[i1], ppx[i2], ppx[i3]], 
                  taur[ppx[i1], ppx[i2], ppx[i3]] + 
                    taur[ppx[i1], ppx[0], ppx[0]]}, {{i1, 1, 2}, {i2, 0, 
                    1}, {i3, 0, 1}}]]] // 
          Chop; \[IndentingNewLine]BqineqApprox\  = \ 
        Table[interp[alpha, hullq[\([i]\)], hullq[\([i + 1]\)]] // 
            ExpandAll, {i, 1, 
            Length[hullq] - 
              1}];\[IndentingNewLine]\[IndentingNewLine]*) \)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\(\(Clear[tq, 
        alphaq];\)\[IndentingNewLine] (*\ \({\ 
          tp\  + \ 0.59\ alphap\  - \ 0.7146\  > 
            0, \[IndentingNewLine]tp\  - \ 0.2277\ alphap\  + \ 0.2759\  > 
            0\[IndentingNewLine]};\)\ *) \[IndentingNewLine]
    \(pr[{{a_, b_}, {c_, d_}}] := \ {\(-b\), c};\)\[IndentingNewLine]
    \(Bpineq\  = \ {{{1, 0.59}, {0.7146, 
              1}}, {{1, \(-0.2277\)}, {\(-0.2759\), 
              1}}};\)\[IndentingNewLine]
    pIneq\ \  = \ Map[pr, Bpineq]\[IndentingNewLine]
    \(Bpineqfat\  = \ 
        Map[{Join[First[#], {0, 0}], Last[#]} &, 
          Bpineq];\)\[IndentingNewLine]\[IndentingNewLine] (*\ \({\
\[IndentingNewLine]tq\  - \ \((1.461\  - \ 0.803\ alphaq)\)\  > 
            0, \[IndentingNewLine]tq\  - \ \((0.177\ )\)\  > 
            0, \[IndentingNewLine]tq\  + \ 0.713\  - \ 0.419\ alphaq\  > 
            0};\)\ *) \[IndentingNewLine]
    \(Bqineq\  = \ {{{1, 0.803}, {1.461, 1}}, {{1, 0}, {0.177, 
              1}}, {{1, \(-0.419\)}, {\(-0.713\), 1}}};\)\[IndentingNewLine]
    qIneq\  = \ Map[pr, Bqineq]\[IndentingNewLine]
    \(Bqineqfat\  = \ 
        Map[{Join[{0, 0}, First[#]], Last[#]} &, 
          Bqineq];\)\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[180]:="],

Cell[BoxData[
    \({{\(-0.59`\), 0.7146`}, {0.2277`, \(-0.2759`\)}}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[183]="],

Cell[BoxData[
    \({{\(-0.803`\), 1.461`}, {0, 0.177`}, {0.419`, \(-0.713`\)}}\)], "Output",\

  CellLabel->"Sphere`Private`SphereOut[186]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ b - table\ triangle\ series, \ 
      nonlinear\ testing\ *) \)\(\[IndentingNewLine]\)\(\(Bpseries[i_, x_, 
          y_, z_] := 
        Module[{c, c1, c2, d}, \[IndentingNewLine]{{c1, c2}, {c, d}}\  = \ 
            Bpineq[\([i]\)]; \[IndentingNewLine]c1\ taur[x, y, z]\  + \ 
            c2\ dihr[x, y, z] - c];\)\[IndentingNewLine]\[IndentingNewLine]
    \(NMinimize[{Bpseries[1, x, y, z], 2 \[LessEqual] x \[LessEqual] 2.52, 
          2 \[LessEqual] \ y \[LessEqual] \ 2.52, \ 
          2 \[LessEqual] \ z\  \[LessEqual] \ 2.52}, {x, y, 
          z}];\)\[IndentingNewLine]
    \(NMinimize[{Bpseries[2, x, y, z], 2 \[LessEqual] x \[LessEqual] 2.52, 
          2 \[LessEqual] \ y \[LessEqual] \ 2.52, \ 
          2 \[LessEqual] \ z\  \[LessEqual] \ 2.52}, {x, y, 
          z}];\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      q - table\ quad\ series\ *) \[IndentingNewLine] (*\ 
      XX\ Still\ need\ to\ test\ it\ numerically\ and\ verify\ it\ rigorously\
\ *) \[IndentingNewLine]\[IndentingNewLine]
    \(pqdata\  = \ {pIneq, qIneq, dihpmin, dihpmax, dihqmin, 
          dihqmax};\)\[IndentingNewLine]
    \(cBpq[p_, q_] := \ computeTableBpq[p, q, pqdata];\)\[IndentingNewLine]
    cBpq[2, 2]\[IndentingNewLine]\[IndentingNewLine]
    \(pqrdata\  = \ {pIneq, qIneq, dihpmin, dihqmin, dihrmin, 
          dd};\)\[IndentingNewLine]
    computeTableAp[3, 1, 1, pqrdata]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[291]:="],

Cell[BoxData[
    \(0.3538371529900942`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[296]="],

Cell[BoxData[
    \(0.17763287299816571`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[298]="]
}, Open  ]],

Cell[BoxData[
    \(<< \ numerical.m\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[290]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["Strong Dodecahedral", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ 
      Notes\ May\ 2010\ \
*) \)\(\[IndentingNewLine]\)\(\(BeginPackage["\<StrongDodec`\>", \
{"\<Global`\>", "\<Sphere`\>"}];\)\ \[IndentingNewLine]\[IndentingNewLine]
    \(yStrongDodec::usage\  = \ "\<Numerical value of yD\>";\)\
\[IndentingNewLine]\[IndentingNewLine]
    \(aStrongDodec::usage\  = \ "\<Numerical value of aD\>";\)\
\[IndentingNewLine]\[IndentingNewLine]
    \(bStrongDodec::usage\  = \ "\<Numerical value of bD\>";\)\
\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]
    \(Begin["\<`Private`\>"];\)\ \[IndentingNewLine]\[IndentingNewLine] (*\ 
      computation\ of\ yD, \ aD, \ 
      bD\ to\ 100\ digits\ *) \[IndentingNewLine]
    \(Clear[a, b, y, r];\)\[IndentingNewLine]
    \(fny\  = \ 
        volR[1, eta[2, 2, y], Rad[2, 2, 2, y, y, y]] 6\  + \ 
            a\ Solid[2, 2, 2, y, y, y] + \ 3\ b\ Dihedral[2, 2, 2, y, y, y] // 
          Rationalize;\)\[IndentingNewLine]
    \(yDDs = \ 
        N[Solve[\((Solid[2, 2, 2, y, y, y] // Rationalize)\) \[Equal] Pi/5, 
              y], 100] // Chop;\)\[IndentingNewLine]
    \(yD = \ y /. yDDs[\([2]\)];\)\[IndentingNewLine]
    \({{aD, bD}} = {a, b} /. 
          Solve[{\((fny /. y \[Rule] yD)\) \[Equal] 
                0, \((D[fny, y] /. y \[Rule] yD)\) \[Equal] 0}, {a, 
              b}];\)\[IndentingNewLine]
    \(yStrongDodec\  = \ yD;\)\[IndentingNewLine]
    \(aStrongDodec\  = \ aD;\)\[IndentingNewLine]
    \(bStrongDodec\  = \ bD;\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      D1 - cell\ inequality\ holds\ if\ truncation\ is\ greater\ than\ this\ \
value\ *) \[IndentingNewLine]
    Abs[r] /. 
      Solve[r^2\  + \ 3\ aD \[Equal] 0, 
        r]\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine] (*\ 
      D2 - cell\ inequality\ holds\ if\ truncation\ is\ bigger\ than\ this\ \
computed\ \(\(value\)\(.\)\)\ *) \[IndentingNewLine]
    rD = \ 
      1.34077; \  (*\ \(Sqrt[
          2];\)\ *) \[IndentingNewLine]Solve[\((\((r + \ h)\)/2\  + \ 
              3\ a\ /r\  /. {h \[Rule] 126/100, a \[Rule] aD})\) \[Equal] 0, 
      r];\[IndentingNewLine]\[IndentingNewLine]
    \(End[];\)\[IndentingNewLine]
    \(EndPackage[];\)\[IndentingNewLine]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[2285]:="],

Cell[BoxData[
    \(2.1029244484765344241026763393915064291419917289733671261157420929648445\
856128560734865305153262102838267940856000854`100.15051499783199\)], "Output",\

  CellLabel->"Sphere`Private`SphereOut[2295]="],

Cell[BoxData[
    \(\(-0.\
581169206221610098110129332903703669937581791699203949028537094700677974124074\
7572582671666168500356533438642578098`97.41553486469685\)\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[2296]="],

Cell[BoxData[
    \(0.0232485133046980772541652797568592779516365445793172940112505476796190\
540348471399084173097254293564511034031053869`97.41553486469685\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[2297]="],

Cell[BoxData[
    \({1.320419485869861848703985295582182356600585653100430548955320481961766\
4260680893927355545290975532425955546114363134`97.41553486469685, 
      1.3204194858698618487039852955821823566005856531004305489553204819617664\
260680893927355545290975532425955546114363134`97.41553486469685}\)], "Output",\

  CellLabel->"Sphere`Private`SphereOut[2298]="]
}, Closed]],

Cell[CellGroupData[{

Cell["Marchal Adapted to Dodec (july 2009)", "Subsection"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(Clear[ac, bc, as, bs, tc, 
        rhoDazim];\)\[IndentingNewLine]
    \(rhoD[y_] := \ Lfun[y/2];\)\[IndentingNewLine]
    Lfun[h_] := \ interp[h, {1, 1}, {1.26, 0}]\[IndentingNewLine]
    \(rhoDazim[y1_, y2_, y3_, y4_, y5_, y6_] := \ 
        rhoD[y1]*Dihedral[y1, y2, y3, y4, y5, y6];\)\)\)\)], "Input",
  CellLabel->"SphereIn[227]:="],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(\({"\<onecell\>", \ 
      1.26^3/3.0 + \ ac\ \  \[GreaterEqual] 
        0}\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)
    \) (*\ pos\ of\ 2\ cell\ *) \), "\[IndentingNewLine]", 
    \(\(surface2[y_, c_] := \  (*\ 
          area\ of\ disk\ *) \[IndentingNewLine]\ \ \ Module[{h\  = \ 
              y/2}, \[IndentingNewLine]\ \ \ Pi\ \((c^2\  - \ 
                h^2)\)];\)\), "\[IndentingNewLine]", 
    \(\(sol2[y_, c_] := \ 
        2  Pi\ \((\ 1 - \ y/\((2\ c)\))\);\)\), "\[IndentingNewLine]", 
    \(\(cell2[y_] := \ 
        Module[{c = 1.26}, 
          surface2[y, c]/3\  + \ ac\ sol2[y, c]\ \  + \ 
            2  Pi\ bc\ rhoD[y]];\)\), "\[IndentingNewLine]", 
    \({"\<cell2[2]= \>", cell2[2]}\), "\[IndentingNewLine]", 
    \(\(\({"\<cell2[2.52]=\>", 
      cell2[2.52]}\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)
    \) (*\ 3\ cell\ *) \), "\[IndentingNewLine]", 
    \(\(Vol3D[y1_, y2_, y6_, c_] := \ 
        Module[{b}, \[IndentingNewLine]b = \ 
            eta[y1, y2, y6]; \[IndentingNewLine]volR[y1/2, b, c] + 
            volR[y2/2, b, c]];\)\), "\[IndentingNewLine]", 
    \(\(surface3[y1_, y2_, y6_, c_] := \ 
        Module[{b}, \[IndentingNewLine]b\  = \ eta[y1, y2, y6]; 
          6.0*\((volR[y1/2, b, c]/y1 + \ 
                volR[y2/2, b, c]/y2)\)];\)\), "\[IndentingNewLine]", 
    \(\(sol3[y1_, y2_, y6_, c_] := \ 
        Module[{b}, \[IndentingNewLine]b = \ 
            eta[y1, y2, y6]; \[IndentingNewLine]solR[y1/2, b, c] + 
            solR[y2/2, b, c]];\)\), "\[IndentingNewLine]", 
    \(\(rhoDazim3[y1_, y2_, y6_, c_] := \ 
        Module[{b}, \[IndentingNewLine]b = \ 
            eta[y1, y2, y6]; \[IndentingNewLine]rhoD[y1]*dihR[y1/2, b, c] + 
            rhoD[y2]*dihR[y2/2, b, c]];\)\), "\[IndentingNewLine]", 
    \(\(cell3[y1_, y2_, y6_] := \ 
        Module[{c}, \[IndentingNewLine]c\  = \ 
            1.26; \[IndentingNewLine]surface3[y1, y2, y6, c]/3 + 
            ac\ sol3[y1, y2, y6, c] + \ 
            bc\ rhoDazim3[y1, y2, y6, c]];\)\), "\[IndentingNewLine]", 
    \(\(\({"\<cell3\>", 
      cell3[2, 2, 2.16549]}\)\(\[IndentingNewLine]\)\(\[IndentingNewLine]\)
    \) (*\ 4\ cell\ *) \), "\[IndentingNewLine]", 
    \(\(rhoDazim4[y1_, y2_, y3_, y4_, y5_, 
          y6_] := \[IndentingNewLine]rhoDazim[y1, y2, y3, y4, y5, 
            y6] + \[IndentingNewLine]rhoDazim[y2, y3, y1, y5, y6, 
            y4] + \[IndentingNewLine]rhoDazim[y3, y1, y2, y6, y4, 
            y5];\)\), "\[IndentingNewLine]", 
    \(\(cell4[y__] := \ \((VolAnalytic\ @\ y)\)\  + \ 
          ac\ \((Solid\ @\ y)\)\ \  + \ 
          bc \((rhoDazim4\ @\ 
                y)\);\)\[IndentingNewLine]\[IndentingNewLine] (*\ 
      4 - cell\ analysis\ *) \[IndentingNewLine] (*\ 
      match\ the\ function\ and\ the\ derivative\ at\ the\ dodec\ \
configuration\ to\ make\ it\ a\ local\ \(\(min\)\(.\)\)\ *) \), "\
\[IndentingNewLine]", 
    \(\(Clear[ac, bc];\)\), "\[IndentingNewLine]", 
    \(\($SpherePrecision = Infinity;\)\), "\[IndentingNewLine]", 
    \(\(vp = \((D[VolAnalytic[2, 2, 2, y, y, y], y] // 
              Simplify)\) /. {y \[Rule] ys};\)\), "\[IndentingNewLine]", 
    \(\(sp = \((D[Solid[2, 2, 2, y, y, y], y] // Simplify)\) /. {y \[Rule] 
              ys};\)\), "\[IndentingNewLine]", 
    \(\(sub\  = \ 
        Solve[{voldodec == \(-4\) Pi\ a\  - \ 24\ Pi\ b, 
            vp\  + \ \((a + b)\)\ sp \[Equal] 0}, {a, 
            b}];\)\), "\[IndentingNewLine]", 
    \({ac, bc}\  = \ \(({a, b} /. sub[\([1]\)])\)\), "\[IndentingNewLine]", 
    \(\($SpherePrecision\  = \ 
        16;\)\[IndentingNewLine]\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine]\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\)}], "Input",
  CellLabel->"SphereIn[231]:="],

Cell[BoxData[
    \({"onecell", \(\(0.666792`\)\(\[InvisibleSpace]\)\) + ac \[GreaterEqual] 
        0}\)], "Output",
  CellLabel->"SphereOut[231]="],

Cell[BoxData[
    \({"cell2[2]= ", \(\(0.6153332810831209`\)\(\[InvisibleSpace]\)\) + 
        1.2965303014815022`\ ac + 2\ bc\ \[Pi]}\)], "Output",
  CellLabel->"SphereOut[235]="],

Cell[BoxData[
    \({"cell2[2.52]=", \(\(0.`\)\(\[InvisibleSpace]\)\) + 0.`\ ac + 
        0.`\ bc}\)], "Output",
  CellLabel->"SphereOut[236]="],

Cell[BoxData[
    \({"cell3", \(\(0.08927290501235265`\)\(\[InvisibleSpace]\)\) + 
        0.19960321042951512`\ ac + 1.1470820852850359`\ bc}\)], "Output",
  CellLabel->"SphereOut[242]="],

Cell[BoxData[
    RowBox[{"{", 
      RowBox[{
        RowBox[{"-", 
          RowBox[{\(1\/\(20\ \[Pi]\ ys\^3\)\), 
            RowBox[{"(", 
              RowBox[{\(\(-voldodec\)\ ys\^3\), "+", 
                RowBox[{
                "32", " ", "\[Pi]", " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 0, 1)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "-", 
                RowBox[{
                "2", " ", "\[Pi]", " ", \(ys\^2\), 
                  " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 0, 1)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "+", 
                RowBox[{
                "32", " ", "\[Pi]", " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 1, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "-", 
                RowBox[{
                "2", " ", "\[Pi]", " ", \(ys\^2\), 
                  " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 1, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "+", 
                RowBox[{
                "32", " ", "\[Pi]", " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 1, 0, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "-", 
                RowBox[{
                "2", " ", "\[Pi]", " ", \(ys\^2\), 
                  " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 1, 0, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}]}], ")"}]}]}], ",", 
        RowBox[{"-", 
          RowBox[{\(1\/\(60\ \[Pi]\ ys\^3\)\), 
            RowBox[{"(", 
              RowBox[{\(3\ voldodec\ ys\^3\), "-", 
                RowBox[{
                "16", " ", "\[Pi]", " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 0, 1)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "+", 
                RowBox[{
                "\[Pi]", " ", \(ys\^2\), " ", \(\@\(12\ ys\^4 - ys\^6\)\), 
                  " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 0, 1)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "-", 
                RowBox[{
                "16", " ", "\[Pi]", " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 1, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "+", 
                RowBox[{
                "\[Pi]", " ", \(ys\^2\), " ", \(\@\(12\ ys\^4 - ys\^6\)\), 
                  " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 0, 1, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "-", 
                RowBox[{
                "16", " ", "\[Pi]", " ", \(\@\(12\ ys\^4 - ys\^6\)\), " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 1, 0, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}], "+", 
                RowBox[{
                "\[Pi]", " ", \(ys\^2\), " ", \(\@\(12\ ys\^4 - ys\^6\)\), 
                  " ", 
                  RowBox[{
                    SuperscriptBox["VolAnalytic", 
                      TagBox[\((0, 0, 0, 1, 0, 0)\),
                        Derivative],
                      MultilineFunction->None], "[", \(2, 2, 2, ys, ys, ys\), 
                    "]"}]}]}], ")"}]}]}]}], "}"}]], "Output",
  CellLabel->"SphereOut[250]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Solve[0.00790451/\((2  Pi)\)\ d\  - 0.311906*10^\(-5\) \[Equal] 0, 
      d]\)], "Input",
  CellLabel->"SphereIn[252]:="],

Cell[BoxData[
    \({{d \[Rule] 0.00247929751043538`}}\)], "Output",
  CellLabel->"SphereOut[252]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(5\ \((1.3254 - 1)\)\)], "Input",
  CellLabel->"SphereIn[253]:="],

Cell[BoxData[
    \(1.6269999999999996`\)], "Output",
  CellLabel->"SphereOut[253]="],

Cell[BoxData[
    \({1.320419485869861848703985295582182356600585653100430548955320481961766\
4260680893927355545290975532425955546114363134`97.41553486469685, 
      1.3204194858698618487039852955821823566005856531004305489553204819617664\
260680893927355545290975532425955546114363134`97.41553486469685}\)], "Output",\

  CellLabel->"SphereOut[365]="],

Cell[BoxData[
    \({{r \[Rule] \
\(-2.6007651400736873670942206155911971307896546962214764422704737467479303409\
659826095891014565767405662218659414133594`97.41553486469685\)}, {r \[Rule] 
          1.340765140073687367094220615591197130789654696221476442270473746747\
9303409659826095891014565767405662218659414133594`97.41553486469685}}\)], \
"Output",
  CellLabel->"SphereOut[367]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(r\)], "Input",
  CellLabel->"SphereIn[208]:="],

Cell[BoxData[
    \(2.465612909423232`\)], "Output",
  CellLabel->"SphereOut[208]="]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graphics for Book", "Section"],

Cell[CellGroupData[{

Cell["General Input/Output", "Subsection"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\(\(Clear[PlotData];\)\[IndentingNewLine]
    \(rat[r_] := \ N[Rationalize[N[r], 10^\(-6\)]];\)\[IndentingNewLine]
    \(pad[r_] := \ 
        PaddedForm[rat[r], 5, 
          NumberPadding \[Rule] {"\<\>", "\<0\>"}];\)\[IndentingNewLine]
    \(str[r_] := \ pad[r] // ToString;\)\[IndentingNewLine]
    \(PlotData[xmin_, xmax_, npts_, f_, out_] := \ 
        Module[{o1, i, p, q, s}, \[IndentingNewLine]o1 = 
            OpenWrite[out]; \[IndentingNewLine]p[i_] := \ 
            xmin\  + \ i/\((npts - 1)\)\ \((xmax - xmin)\) // 
              N; \[IndentingNewLine]q[i_] := \ 
            f[p[i]] // N; \[IndentingNewLine]WriteString[
            o1, "\<#Auto generated by Mathematica\n\n\>"]; \
\[IndentingNewLine]Do[
            WriteString[o1, str[p[i]], "\< \>", str[q[i]], "\<\n\>"], {i, 0, 
              npts - 1}]; \[IndentingNewLine]Close[
            o1];\[IndentingNewLine]];\)\[IndentingNewLine]
    \(ParametricPlotData[xmin_, xmax_, npts_, {f_, g_}, out_] := \ 
        Module[{o1, i, p, q, s}, \[IndentingNewLine]o1\  = \ 
            OpenWrite[out]; \[IndentingNewLine]s[i_] := \ 
            xmin\  + \ i/\((npts\  - \ 1)\)\ \((xmax - xmin)\) // 
              N; \[IndentingNewLine]p[i_] := \ 
            f[s[i]] // N; \[IndentingNewLine]q[i_] := \ 
            g[s[i]] // N; \[IndentingNewLine]WriteString[
            o1, "\<#Auto generated by Mathematica\n\n\>"]; \
\[IndentingNewLine]Do[
            WriteString[o1, str[p[i]], "\< \>", str[q[i]], "\<\n\>"], {i, 0, 
              npts - 1}]; \[IndentingNewLine]Close[
            o1];\[IndentingNewLine]];\)\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[1839]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Saturated Packings", "Subsection"],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ 
      generate\ a\ sphere\ packing\ *) \)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\(\(SeedRandom[];\)\[IndentingNewLine]
    \(pt := \ {Random[Real, {0, 20}], 
          Random[Real, {0, 12}]};\)\[IndentingNewLine]
    \(current\  = \ {pt};\)\[IndentingNewLine]
    \(d2[x_, y_] := \ Sqrt[\((x - y)\) . \((x - y)\)];\)\[IndentingNewLine]
    \(dist[x_] := \ Map[d2[x, #] &, current] // Min;\)\[IndentingNewLine]
    jj := Module[{y}, \ y = pt; \ If[dist[y] > 2.0, AppendTo[current, y]]; \ 
        current]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"In[84]:="],

Cell[BoxData[
    \(Do[jj, {i, 1, 150000}]; \ current\)], "Input",
  CellLabel->"In[90]:="],

Cell[BoxData[
    \(jjc = current\)], "Input",
  CellLabel->"In[91]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(Show[Graphics[Map[Circle[#, 1] &, jjc]], AspectRatio \[Rule] Automatic, 
      FrameLabel -> "\<Saturated\>"]\)], "Input",
  CellLabel->"In[109]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .63907 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0635269 0.0436413 0.0586302 0.0436413 [
[ 0 0 0 0 ]
[ 1 .63907 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .63907 L
0 .63907 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
newpath
.27236 .55476 .04364 0 365.73 arc
s
newpath
.74784 .19805 .04364 0 365.73 arc
s
newpath
.23779 .45484 .04364 0 365.73 arc
s
newpath
.3952 .33041 .04364 0 365.73 arc
s
newpath
.06745 .33793 .04364 0 365.73 arc
s
newpath
.11633 .53277 .04364 0 365.73 arc
s
newpath
.7588 .51485 .04364 0 365.73 arc
s
newpath
.28471 .17211 .04364 0 365.73 arc
s
newpath
.22941 .30544 .04364 0 365.73 arc
s
newpath
.52488 .28849 .04364 0 365.73 arc
s
newpath
.59731 .23011 .04364 0 365.73 arc
s
newpath
.41912 .07828 .04364 0 365.73 arc
s
newpath
.08157 .16954 .04364 0 365.73 arc
s
newpath
.6362 .35088 .04364 0 365.73 arc
s
newpath
.77211 .42775 .04364 0 365.73 arc
s
newpath
.84195 .10971 .04364 0 365.73 arc
s
newpath
.17588 .0673 .04364 0 365.73 arc
s
newpath
.49784 .42696 .04364 0 365.73 arc
s
newpath
.47073 .19276 .04364 0 365.73 arc
s
newpath
.61359 .07236 .04364 0 365.73 arc
s
newpath
.6269 .47153 .04364 0 365.73 arc
s
newpath
.52617 .5588 .04364 0 365.73 arc
s
newpath
.40938 .43478 .04364 0 365.73 arc
s
newpath
.3596 .58021 .04364 0 365.73 arc
s
newpath
.87224 .53452 .04364 0 365.73 arc
s
newpath
.92156 .05886 .04364 0 365.73 arc
s
newpath
.77866 .28179 .04364 0 365.73 arc
s
newpath
.55469 .15218 .04364 0 365.73 arc
s
newpath
.11477 .25408 .04364 0 365.73 arc
s
newpath
.15942 .40951 .04364 0 365.73 arc
s
newpath
.83619 .2036 .04364 0 365.73 arc
s
newpath
.36161 .21881 .04364 0 365.73 arc
s
newpath
.07844 .45317 .04364 0 365.73 arc
s
newpath
.68707 .56631 .04364 0 365.73 arc
s
newpath
.92222 .33713 .04364 0 365.73 arc
s
newpath
.73029 .09865 .04364 0 365.73 arc
s
newpath
.2922 .07334 .04364 0 365.73 arc
s
newpath
.19559 .19303 .04364 0 365.73 arc
s
newpath
.32048 .41421 .04364 0 365.73 arc
s
newpath
.87999 .42077 .04364 0 365.73 arc
s
newpath
.07672 .08108 .04364 0 365.73 arc
s
newpath
.93255 .24901 .04364 0 365.73 arc
s
newpath
.64749 .15653 .04364 0 365.73 arc
s
newpath
.92361 .16161 .04364 0 365.73 arc
s
newpath
.43958 .52798 .04364 0 365.73 arc
s
newpath
.50758 .06598 .04364 0 365.73 arc
s
newpath
.68979 .27347 .04364 0 365.73 arc
s
newpath
.72507 .35331 .04364 0 365.73 arc
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  CellLabel->"From In[109]:=",
  ImageSize->{288, 184},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000iR000`400?l00000o`00003ooooooomY
ooooo`00oooooomYooooo`00oooooomYooooo`00oooooomYooooo`00oooooomYooooo`00oooooomY
ooooo`00oooooom7ooooo`So00006_ooool00?ooooooAOooool2o`0000Sooooo0ol0000Gooooo`00
oooooom3ooooo`;o00003Oooool3o`0001Cooooo000kooooo`So0000KOooool=o`0008Cooooo00?o
0000ooooooooool04?ooool00ol0003oooooooooo`0Aooooo`00>Oooool2o`0000Sooooo0ol0001Y
ooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool0P?ooool00ol0003oooooooooo`0A
ooooo`03o`000?oooooooooo017ooooo000gooooo`;o00003Oooool3o`0001gooooo1ol00010oooo
o`;o00003oooool00ol0003oooooooooo`0Gooooo`[o0000GOooool00ol0003oooooooooo`0Coooo
o`03o`000?oooooooooo013ooooo000fooooo`03o`000?oooooooooo013ooooo00?o0000oooooooo
ool05oooool3o`0000Oooooo0ol0000kooooo`;o00004_ooool2o`0001Gooooo0_l0000:ooooo`03
o`000?oooooooooo05Wooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0?ooooo`00
=?ooool2o`0001?ooooo00?o0000ooooooooool05?ooool3o`0000gooooo00?o0000ooooooooool0
7oooool:o`0000oooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0?ooooo`?o0000
3Oooool2o`0005Wooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0>ooooo`005ooo
ool9o`0001?ooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0Booooo`03o`000?oo
oooooooo00oooooo00?o0000ooooooooool07?ooool2o`0000[ooooo00?o0000ooooooooool02ooo
ool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo00gooooo00?o0000ooooooooool04?oo
ool2o`0005Kooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0=ooooo`005Oooool2
o`0000Wooooo0_l0000@ooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool04?ooool0
0ol0003oooooooooo`0Aooooo`;o00006_ooool2o`0000gooooo0ol00009ooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooooooool03?ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooo
oooo05;ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0=ooooo`004oooool2o`00
00gooooo0ol0000=ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool03_ooool00ol0
003oooooooooo`0Dooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool04?ooool00ol0
003oooooooooo`06ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool02_ooool00ol0
003oooooooooo`0Eooooo`03o`000?oooooooooo057ooooo00?o0000ooooooooool06_ooool00ol0
003oooooooooo`0<ooooo`004_ooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo00Wo
oooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo01Ko
oooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0Aooooo`03o`000?oooooooooo00Go
oooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01Ko
oooo00?o0000ooooooooool0D?ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00co
oooo000Aooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool02Oooool00ol0003ooooo
ooooo`0Iooooo`03o`000?oooooooooo00cooooo00?o0000ooooooooool05_ooool00ol0003ooooo
ooooo`0Cooooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool01?ooool00ol0003ooooo
ooooo`0Hooooo`03o`000?oooooooooo00Wooooo00?o0000ooooooooool05oooool00ol0003ooooo
ooooo`1?ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool03?ooool0013ooooo00?o
0000ooooooooool04oooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo01[ooooo00?o
0000ooooooooool02_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo017ooooo00?o
0000ooooooooool05Oooool00ol0003oooooooooo`02ooooo`03o`000?oooooooooo01[ooooo00?o
0000ooooooooool01oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo04oooooo00?o
0000ooooooooool06oooool00ol0003oooooooooo`0<ooooo`003oooool00ol0003oooooooooo`0E
ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`09
ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool04Oooool00ol0003oooooooooo`0F
ooooo`05o`000?ooooooooooooooool000007Oooool00ol0003oooooooooo`06ooooo`03o`000?oo
oooooooo01Sooooo00?o0000ooooooooool05oooool7o`00037ooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`0;ooooo`003oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooo
oooo00Gooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`09ooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0Hooooo`04o`000?oooooo
ooooo`0001gooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Iooooo`03o`000?oo
oooooooo01?ooooo0ol00007ooooo`?o0000;Oooool00ol0003oooooooooo`0Mooooo`03o`000?oo
oooooooo00_ooooo000>ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool00oooool0
0ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool06oooool0
0ol0003oooooooooo`0>ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooool000007_ooool0
0ol0003oooooooooo`05ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool03oooool3
o`0000gooooo00?o0000ooooooooool0:_ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooo
oooo00_ooooo000=ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool00oooool00ol0
003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`0>ooooo`03o`000?oooooooooo01[ooooo0_l0000Nooooo`03o`000?oooooooooo
00Gooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo
00oooooo00?o0000ooooooooool0:Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo
00_ooooo000=ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool00_ooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07?ooool00ol0003o
ooooooooo`0<ooooo`03o`000?oooooooooo01_ooooo0_l0000Nooooo`03o`000?oooooooooo00Co
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo017o
oooo0_l0000Jooooo`Oo00002Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00_o
oooo000<ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool00_ooool00ol0003ooooo
ooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`0<ooooo`03o`000?oooooooooo01_ooooo0_l0000Nooooo`03o`000?oooooooooo00Cooooo
00?o0000ooooooooool07?ooool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo01Cooooo
00?o0000ooooooooool05?ooool3o`0000Oooooo0ol00006ooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool03?ooool000cooooo00?o0000ooooooooool07?ooool01Ol0003ooooooooo
oooooooo000001kooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo00cooooo00?o0000ooooooooool06oooool2o`0001kooooo00?o0000ooooooooool0
1?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool0
5_ooool00ol0003oooooooooo`0@ooooo`?o00003Oooool00ol0003oooooooooo`03ooooo`03o`00
0?oooooooooo01_ooooo00?o0000ooooooooool03?ooool000cooooo00?o0000ooooooooool07?oo
ool01Ol0003ooooooooooooooooo000001kooooo00?o0000ooooooooool02?ooool00ol0003ooooo
ooooo`0Looooo`03o`000?oooooooooo00cooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`0Looooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`0;ooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool03oooool00ol0003ooooo
ooooo`0?ooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool06_ooool00ol0003ooooo
ooooo`0=ooooo`003?ooool00ol0003oooooooooo`0Looooo`05o`000?ooooooooooooooool00000
7_ooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0
2oooool00ol0003oooooooooo`0Mooooo`;o00007Oooool00ol0003oooooooooo`04ooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Hooooo`03o`00
0?oooooooooo00gooooo00?o0000ooooooooool04Oooool2o`0000;ooooo00?o0000ooooooooool0
6_ooool00ol0003oooooooooo`0=ooooo`003?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo00;ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`08ooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool02oooool00ol0003oooooooooo`0Mooooo`;o00007?oo
ool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02Ooo
ool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00cooooo00?o0000ooooooooool05?oo
ool01?l0003oooooooooool0000Kooooo`03o`000?oooooooooo00gooooo000<ooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Jooooo`03o`000?oo
oooooooo00Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;ooooo`03o`000?oo
oooooooo01gooooo0_l0000Looooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool02_oo
ool00ol0003oooooooooo`0Fooooo`04o`000?ooooooooooo`0001Wooooo00?o0000ooooooooool0
3_ooool000cooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`02ooooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Kooooo`03o`000?oo
oooooooo00cooooo00?o0000ooooooooool07?ooool00ol0003oooooo`00000Kooooo`03o`000?oo
oooooooo00Kooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`08ooooo`03o`000?oo
oooooooo01_ooooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Fooooo`05o`000?oo
ooooooooooooool000006?ooool00ol0003oooooooooo`0>ooooo`003?ooool00ol0003ooooooooo
o`0Looooo`03o`000?oooooooooo00?ooooo00?o0000ooooooooool06Oooool00ol0003ooooooooo
o`0:ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool03Oooool00ol0003ooooooooo
o`0Kooooo`04o`000?ooooooooooo`0001[ooooo00?o0000ooooooooool01oooool00ol0003ooooo
ooooo`0Jooooo`03o`000?oooooooooo00Wooooo00?o0000ooooooooool06oooool00ol0003ooooo
ooooo`09ooooo`03o`000?oooooooooo01Sooooo00Go0000ooooooooooooooooo`00000Fooooo`03
o`000?oooooooooo00oooooo000<ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0
1?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool0
6_ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01_ooooo00Co0000oooooooooooo
00006_ooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01[ooooo00?o0000oooooooo
ool02Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Oooooo00?o0000oooooooo
ool06Oooool00ol0003oooooooooo`02ooooo`03o`000?oooooooooo01;ooooo00?o0000oooooooo
ool04?ooool000gooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`04ooooo`03o`00
0?oooooooooo01Oooooo00?o0000ooooooooool03?ooool00ol0003oooooooooo`0Iooooo`03o`00
0?oooooooooo00gooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`02ooooo`03o`00
0?oooooooooo01Kooooo00?o0000ooooooooool02Oooool00ol0003oooooooooo`0Iooooo`03o`00
0?oooooooooo00Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`07ooooo`03o`00
0?oooooooooo01[ooooo00?o0000ooooooooool00_ooool2o`00017ooooo00?o0000ooooooooool0
4Oooool000gooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`06ooooo`;o00005_oo
ool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool03_oo
ool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00?ooooo0_l0000Dooooo`;o00003?oo
ool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo00[ooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool01?oo
ool00ol0003oooooooooo`0<ooooo`;o00005?ooool000gooooo00?o0000ooooooooool06_ooool0
0ol0003oooooooooo`08ooooo`03o`000?oooooooooo017ooooo0_l0000Aooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooo
oooo00Gooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooo
oooo01Oooooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo00Kooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`05ooooo`?o00002?ooool3
o`0001Kooooo000>ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool02_ooool00ol0
003oooooooooo`0?ooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool05?ooool00ol0
003oooooooooo`0Booooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool01oooool2o`00
00kooooo0_l0000Aooooo`;o00005_ooool00ol0003oooooooooo`0;ooooo`03o`000?oooooooooo
01cooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
00Oooooo2?l0000Iooooo`003_ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00co
oooo00?o0000ooooooooool03?ooool2o`0001Kooooo00?o0000ooooooooool04_ooool00ol0003o
ooooooooo`0Dooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool02Oooool3o`0000[o
oooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0Aooooo`;o00003_ooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool07?ooool00ol0003o
ooooooooo`0Xooooo`003oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo00gooooo
0ol00009ooooo`;o00006Oooool2o`00017ooooo00?o0000ooooooooool05_ooool00ol0003ooooo
ooooo`0Dooooo`03o`000?oooooooooo00gooooo0_l00006ooooo`;o00002_ooool3o`0000[ooooo
00?o0000ooooooooool03oooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo02Sooooo
000@ooooo`03o`000?oooooooooo01Cooooo00?o0000ooooooooool04Oooool9o`0001gooooo00?o
0000ooooooooool03?ooool2o`0001[ooooo00?o0000ooooooooool04_ooool00ol0003ooooooooo
o`0@ooooo`Ko00001oooool5o`0000?ooooo1Ol00006ooooo`03o`000?oooooooooo00cooooo0_l0
000Booooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool01_ooool00ol0003ooooooooo
o`0Looooo`03o`000?oooooooooo02Sooooo000Aooooo`03o`000?oooooooooo01;ooooo00?o0000
ooooooooool0>Oooool3o`0000Sooooo0ol0000Mooooo`;o00004Oooool00ol0003oooooooooo`0K
ooooo`?o00003Oooool00ol0003oooooooooo`04ooooo`?o00002?ooool3o`000003ooooool0003o
000000Ko00002oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00Oooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Xooooo`004_ooool2o`00017ooooo00?o0000oooo
ooooool0?Oooool8o`0002;ooooo00?o0000ooooooooool03?ooool2o`0001gooooo00?o0000oooo
ooooool03oooool00ol0003oooooooooo`06ooooo`So00000_ooool2o`0000Sooooo0ol00008oooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool01oooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooooooo02Sooooo000Dooooo`03o`000?oooooooooo00cooooo0_l0001[ooooo`?o
00002?ooool3o`0001kooooo00?o0000ooooooooool04Oooool2o`0000kooooo0_l0000=ooooo`?o
00001_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00Oooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`07ooooo`_o00005_ooool001Gooooo0ol00008ooooo`?o0000
L?ooool8o`00027ooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0:ooooo`03o`00
0?oooooooooo013ooooo00?o0000ooooooooool00oooool00ol0003oooooooooo`0Hooooo`03o`00
0?oooooooooo00Wooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`05ooooo`;o0000
2oooool2o`0001Cooooo000Hooooo`So0000Voooool00ol0003oooooooooo`0Eooooo`03o`000?oo
oooooooo00Oooooo0_l0000Cooooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool05_oo
ool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool00ooo
ool3o`0000oooooo00?o0000ooooooooool04Oooool001Oooooo3Ol0002Fooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Dooooo`03o`000?oooooo
oooo00Cooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0;ooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Aooooo`03o`000?oooooo
oooo013ooooo000Fooooo`03o`000?oooooooooo00_ooooo0_l0000jooooo`go0000COooool00ol0
003oooooooooo`0Gooooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool05_ooool00ol0
003oooooooooo`03ooooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool03Oooool00ol0
003oooooooooo`0Iooooo`05o`000?ooooooooooooooool000005Oooool00ol0003oooooooooo`0?
ooooo`005Oooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo03Kooooo00?o0000oooo
ooooool02oooool2o`0004[ooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`04oooo
o`03o`000?oooooooooo01Oooooo00?o0000ooooooooool00oooool00ol0003oooooooooo`0Aoooo
o`03o`000?oooooooooo00kooooo00?o0000ooooooooool06?ooool01Ol0003ooooooooooooooooo
000001Oooooo00?o0000ooooooooool03_ooool001Cooooo00?o0000ooooooooool04?ooool00ol0
003oooooooooo`0cooooo`;o00004?ooool00ol0003oooooooooo`17ooooo`03o`000?oooooooooo
01Wooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo
00?ooooo0ol0000>ooooo`;o00004_ooool00ol0003oooooooooo`0Fooooo`05o`000?oooooooooo
ooooool000006?ooool00ol0003oooooooooo`0>ooooo`004oooool00ol0003oooooooooo`0Boooo
o`03o`000?oooooooooo037ooooo00?o0000ooooooooool04Oooool00ol0003oooooooooo`15oooo
o`03o`000?oooooooooo01_ooooo00Go0000ooooooooooooooooo`00000Kooooo`03o`000?oooooo
oooo00Kooooo0ol00008ooooo`?o00005Oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooo
oooo00;ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0=ooooo`004_ooool00ol0
003oooooooooo`0Dooooo`03o`000?oooooooooo02oooooo00?o0000ooooooooool04oooool00ol0
003oooooooooo`13ooooo`03o`000?oooooooooo01cooooo00Go0000ooooooooooooooooo`00000L
ooooo`03o`000?oooooooooo00Sooooo2?l0000Hooooo`03o`000?oooooooooo01?ooooo00?o0000
ooooooooool00_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00cooooo000Aoooo
o`03o`000?oooooooooo01Gooooo00?o0000ooooooooool0;_ooool00ol0003oooooooooo`0Eoooo
o`03o`000?oooooooooo04;ooooo00?o0000ooooooooool07?ooool01?l0003oooooooooool0000M
ooooo`03o`000?oooooooooo02Wooooo00?o0000ooooooooool04Oooool00ol0003oooooooooo`03
ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool03?ooool0013ooooo00?o0000oooo
ooooool05oooool00ol0003oooooooooo`0/ooooo`03o`000?oooooooooo01Kooooo00?o0000oooo
ooooool0@_ooool00ol0003oooooooooo`0Looooo`04o`000?ooooooooooo`0001gooooo00?o0000
ooooooooool0:_ooool3o`0000kooooo0_l00006ooooo`03o`000?oooooooooo01[ooooo00?o0000
ooooooooool02oooool000oooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Doooo
o`So00003oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo02oooooo2?l0000:oooo
o`03o`000?oooooooooo01cooooo00?o0000ooooool000007_ooool00ol0003oooooooooo`0]oooo
o`?o00002?ooool3o`0000Oooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0;oooo
o`003oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01;ooooo0_l00008ooooo`?o
00002oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo02cooooo0_l00008ooooo`?o
00001oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001kooooo00?o0000oooooooo
ool0<?ooool8o`0000[ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0;ooooo`00
3_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00oooooo0_l0000=ooooo`?o0000
2?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo02Wooooo0ol0000=ooooo`;o0000
1Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001kooooo00?o0000ooooooooool0
3_ooool:o`0002Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;ooooo`003_oo
ool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool04?oo
ool00ol0003oooooooooo`04ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool09ooo
ool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool07?oo
ool00ol0003oooooo`00000Nooooo`03o`000?oooooooooo00cooooo0_l0000:ooooo`03o`000?oo
oooooooo02Kooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;ooooo`003_ooool0
0ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00cooooo0_l0000Cooooo`03o`000?oooooo
oooo00Cooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Vooooo`03o`000?oooooo
oooo017ooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
000001kooooo00?o0000ooooooooool02Oooool3o`0000gooooo0ol0000Aooooo`_o00002Oooool0
0ol0003oooooooooo`0Looooo`03o`000?oooooooooo00_ooooo000>ooooo`03o`000?oooooooooo
01_ooooo00?o0000ooooooooool02oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo
00?ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Uooooo`03o`000?oooooooooo
01?ooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooo0000
01kooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Aooooo`03o`000?oooooooooo
00cooooo0_l0000;ooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool07?ooool00ol0
003oooooooooo`0;ooooo`003Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00Wo
oooo00?o0000ooooooooool05_ooool01Ol0003ooooooooooooooooo000001kooooo00?o0000oooo
ooooool09?ooool00ol0003oooooooooo`0Eooooo`05o`000?ooooooooooooooool000007?ooool0
1?l0003oooooooooool0000Nooooo`03o`000?oooooooooo00Oooooo00?o0000ooooooooool04ooo
ool00ol0003oooooooooo`09ooooo`;o00003_ooool2o`0000Kooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`0;ooooo`003Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooo
oooo00Wooooo00?o0000ooooooooool05oooool01?l0003oooooooooool0000Nooooo`03o`000?oo
oooooooo02Cooooo00?o0000ooooooooool05_ooool01?l0003oooooooooool0000Looooo`05o`00
0?ooooooooooooooool000007Oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01Go
oooo00?o0000ooooooooool01oooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo00?o
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;ooooo`003Oooool00ol0003ooooo
ooooo`0Mooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool06Oooool00ol0003ooooo
o`00000Nooooo`03o`000?oooooooooo02?ooooo00?o0000ooooooooool06?ooool01?l0003ooooo
ooooool0000Kooooo`05o`000?ooooooooooooooool000007?ooool00ol0003oooooooooo`06oooo
o`03o`000?oooooooooo01Kooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Boooo
o`03o`000?oooooooooo00;ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;oooo
o`003Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00Sooooo00?o0000oooooooo
ool06Oooool00ol0003oooooo`00000Nooooo`03o`000?oooooooooo00Oooooo1Ol0000Fooooo`03
o`000?oooooooooo01Wooooo00Co0000oooooooooooo00006_ooool00ol0003oooooooooo`02oooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Goooo
o`03o`000?oooooooooo00Cooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`02oooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooooooool02oooool000kooooo00?o0000oooooooo
ool06oooool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01[ooooo0_l0000Nooooo`03
o`000?oooooooooo00?ooooo1?l00005ooooo`Go00004Oooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooo000001[ooooo00?o0000ooooooooool00oooool00ol0003oooooooooo`0Iooooo`03
o`000?oooooooooo00Gooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`02ooooo`03
o`000?oooooooooo01Gooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo00cooooo000>ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
2?ooool00ol0003oooooooooo`0Kooooo`;o00007_ooool01?l0003oooooooooooooool2o`0000ko
oooo00?o0000ooooooooool03Oooool00ol0003oooooooooo`0Kooooo`04o`000?ooooooooooo`00
01Sooooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo
00Kooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`02ooooo`03o`000?oooooooooo
01Kooooo00Go0000ooooooooooooooooo`00000Looooo`03o`000?oooooooooo00cooooo000>oooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool02Oooool00ol0003oooooooooo`0Koooo
o`;o00007_ooool01?l0003oooooooooool0000Aooooo`03o`000?oooooooooo00cooooo00?o0000
ooooooooool07?ooool01?l0003oooooooooool0000Eooooo`;o00002?ooool00ol0003ooooooooo
o`0Gooooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool06_ooool01?l0003ooooooooo
ool0000Jooooo`05o`000?ooooooooooooooool000006_ooool00ol0003oooooooooo`0=ooooo`00
3_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool0
7?ooool00ol0003oooooo`00000Looooo`04o`000?ooooooooooo`0001?ooooo00?o0000oooooooo
ool02oooool00ol0003oooooooooo`0Looooo`05o`000?ooooooooooooooool000004oooool00ol0
003oooooooooo`06o`0000?ooooo0_l0000Fooooo`03o`000?oooooooooo00Kooooo00?o0000oooo
ooooool06oooool00ol0003oooooo`00000Kooooo`05o`000?ooooooooooooooool000006_ooool0
0ol0003oooooooooo`0=ooooo`003oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo
00Sooooo00?o0000ooooooooool07?ooool00ol0003oooooo`00000Looooo`03o`000?oooooo0000
01Gooooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
00;ooooo0ol0000>ooooo`Go00001_ooool4o`000003ooooool0003ooooo01;ooooo0_l00009oooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooool000007?ooool01Ol0003ooooooooooooooooo
000001Wooooo00?o0000ooooooooool03Oooool0013ooooo00?o0000ooooooooool05oooool00ol0
003oooooooooo`09ooooo`03o`000?oooooooooo01cooooo00Co0000oooooooooooo00006oooool2
o`0001Oooooo00?o0000ooooooooool02Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo00Gooooo0ol0000:ooooo`?o00003Oooool3o`00017ooooo00?o0000ooooooooool02?ooool0
0ol0003oooooooooo`0Looooo`;o00007Oooool00ol0003oooooooooo`02ooooo`;o00005_ooool0
0ol0003oooooooooo`0>ooooo`004?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo
00Wooooo00?o0000ooooooooool07Oooool01?l0003oooooooooool0000Iooooo`03o`000?oooooo
000001Sooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo00Sooooo0_l00003ooooo`Ko00004Oooool2o`0000kooooo0_l0000;ooooo`03o`000?oooooo
oooo01cooooo0_l0000Nooooo`03o`000?oooooooooo00?ooooo00?o0000ooooooooool04Oooool2
o`00017ooooo000Aooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool02_ooool00ol0
003oooooooooo`0Looooo`05o`000?ooooooooooooooool000006Oooool2o`0001[ooooo00?o0000
ooooooooool01oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00[ooooo0ol00004
ooooo`03o`000?oooooooooo017ooooo1?l00009ooooo`;o00003Oooool00ol0003oooooooooo`0L
ooooo`;o00007_ooool00ol0003oooooooooo`04ooooo`03o`000?oooooooooo00oooooo00?o0000
ooooooooool04Oooool001;ooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0;oooo
o`03o`000?oooooooooo01cooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Eoooo
o`;o00006oooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01cooooo00?o0000oooo
ooooool04?ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo00Wo00003oooool00ol0
003oooooooooo`0Looooo`;o00007_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo
00cooooo0_l0000Dooooo`004oooool00ol0003oooooooooo`0Aooooo`03o`000?oooooooooo00co
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`02ooooo`;o00005?ooool2o`000003
ooooool0003ooooo01_ooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo00oooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo01cooooo0_l0000Nooooo`03o`000?oooooooooo00Kooooo0ol00009ooooo`;o
00005_ooool001Cooooo0_l0000?ooooo`;o00004?ooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo00Cooooo00?o0000ooooooooool04?ooool01?l0003oooooooooool0000Mooooo`03
o`000?oooooooooo00Oooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0>ooooo`03
o`000?oooooooooo01Oooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Looooo`;o
00007_ooool00ol0003oooooooooo`09ooooo`_o00005_ooool001Kooooo00?o0000ooooooooool0
2oooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0
1_ooool2o`0000oooooo00Go0000ooooooooooooooooo`00000Mooooo`03o`000?oooooooooo00Oo
oooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo01So
oooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Looooo`;o00007_ooool00ol0003o
ooooooooo`0:ooooo`;o00002?ooool3o`0001?ooooo000Gooooo`Co00001oooool2o`000003oooo
ool0003o000000So00002?ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00Sooooo
0ol0000;ooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`06ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool03_ooool00ol0003ooooo
ooooo`0Iooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool06oooool2o`0001kooooo
00?o0000ooooooooool02?ooool2o`0000gooooo0_l0000Aooooo`006oooool7o`000003ooooool0
003o000000[ooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Iooooo`03o`000?oo
oooooooo00_ooooo0_l00007ooooo`;o00001Oooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo00Oooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0?ooooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Jooooo`03o`000?oo
oooo000001kooooo00?o0000ooooooooool01oooool00ol0003oooooooooo`0?ooooo`03o`000?oo
oooooooo00kooooo000Qooooo`;o00003Oooool3o`0000Kooooo00?o0000ooooooooool05oooool0
0ol0003oooooooooo`0>ooooo`Oo00001oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo00Oooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0?ooooo`03o`000?oooooo
oooo01_ooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Jooooo`04o`000?oooooo
ooooo`0001gooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Aooooo`03o`000?oo
oooooooo00gooooo000Pooooo`03o`000?oooooooooo013ooooo00?o0000ooooooooool00oooool0
0ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool07?ooool0
0ol0003oooooooooo`08ooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool03oooool0
0ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool06Oooool0
1?l0003oooooooooool0000Looooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool04ooo
ool00ol0003oooooooooo`0<ooooo`007_ooool2o`0001Cooooo00?o0000ooooooooool00oooool2
o`0001Kooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo00Wooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0@ooooo`03o`000?oooooo
oooo01_ooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Hooooo`05o`000?oooooo
ooooooooool000007?ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo01Gooooo00?o
0000ooooooooool02oooool001gooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`04
ooooo`03o`000?oooooooooo017ooooo0_l0000Pooooo`03o`000?oooooooooo01cooooo00?o0000
ooooooooool02_ooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo013ooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01Oooooo00?o0000
ooooooooool00_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo00Kooooo00?o0000
ooooooooool05_ooool00ol0003oooooooooo`0:ooooo`007?ooool00ol0003oooooooooo`0Foooo
o`03o`000?oooooooooo00Gooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0Poooo
o`03o`000?oooooooooo01cooooo00?o0000ooooooooool02oooool2o`00017ooooo00?o0000oooo
ooooool04Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01Sooooo0_l0000Foooo
o`03o`000?oooooooooo00?ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`06oooo
o`03o`000?oooooooooo01Sooooo00?o0000ooooooooool02Oooool001cooooo00?o0000oooooooo
ool05oooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo00cooooo0_l0000Tooooo`03
o`000?oooooooooo01_ooooo00?o0000ooooooooool03Oooool00ol0003oooooooooo`0<ooooo`;o
00005?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00[ooooo2_l00005ooooo`03
o`000?oooooooooo017ooooo0_l00007ooooo`03o`000?oooooooooo01Kooooo00?o0000oooooooo
ool01Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00Wooooo000Kooooo`03o`00
0?oooooooooo01Wooooo00?o0000ooooooooool01Oooool3o`0000Wooooo0_l0000Vooooo`03o`00
0?oooooooooo01[ooooo00?o0000ooooooooool03oooool3o`0000Sooooo0ol0000Fooooo`03o`00
0?oooooooooo01gooooo00?o0000ooooooooool02?ooool2o`0000[ooooo00?o0000ooooooooool0
0oooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool0
5?ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0
2?ooool001_ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`08ooooo`Wo0000:?oo
ool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01;ooooo2?l0000Iooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool01oooool2o`0000gooooo0ol00003ooooo`03o`000?oo
oooooooo00cooooo0_l0000<ooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00Sooooo000Kooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool0>Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooo
oooo03?ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`06ooooo`03o`000?oooooo
oooo013ooooo00Co0000oooooooooooooooo0ol00009ooooo`co00001Oooool2o`00017ooooo00?o
0000ooooooooool01oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00Sooooo000J
ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0>Oooool00ol0003oooooooooo`0H
ooooo`03o`000?oooooooooo03Gooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`05
ooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool00oooool;o`0000[ooooo00?o0000
ooooooooool01?ooool00ol0003oooooooooo`0<ooooo`;o00002_ooool00ol0003oooooooooo`0K
ooooo`03o`000?oooooooooo00Sooooo000Jooooo`03o`000?oooooooooo01_ooooo00?o0000oooo
ooooool0>Oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo02Sooooo1ol00007oooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`0Doooo
o`03o`000?oooooooooo00Wooooo0_l0000=ooooo`?o00001?ooool3o`0000Sooooo0ol0000<oooo
o`03o`000?oooooooooo01cooooo00?o0000ooooooooool01oooool001[ooooo00?o0000oooooooo
ool06oooool00ol0003oooooooooo`0jooooo`03o`000?oooooooooo01Gooooo00?o0000oooooooo
ool09_ooool3o`0000Oooooo0ol00004ooooo`03o`000?oooooooooo01[ooooo00?o0000oooooooo
ool01?ooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo00Sooooo00?o0000oooooooo
ool04?ooool00ol0003oooooooooo`04ooooo`So00003_ooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo00Oooooo000Jooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0
>_ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo02Gooooo0_l0000=ooooo`;o0000
0oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00Cooooo00?o0000ooooooooool0
5_ooool00ol0003oooooooooo`05ooooo`;o00005?ooool00ol0003oooooooooo`0Iooooo`03o`00
0?oooooooooo01gooooo00?o0000ooooooooool01oooool001Wooooo00?o0000ooooooooool07Ooo
ool00ol0003oooooooooo`0kooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool09Ooo
ool00ol0003oooooooooo`0?ooooo`05o`000?ooooooooooooooool000006Oooool00ol0003ooooo
ooooo`04ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool00oooool00ol0003ooooo
ooooo`0Eooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool07Oooool00ol0003ooooo
ooooo`07ooooo`006Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo03cooooo0ol0
000>ooooo`;o00009_ooool2o`0001?ooooo00Co0000oooooooooooo00006Oooool00ol0003ooooo
ooooo`03ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool00_ooool00ol0003ooooo
ooooo`0Fooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`07ooooo`006Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo03oooooo0ol0
0008ooooo`?o00009oooool00ol0003oooooooooo`0Dooooo`04o`000?ooooooooooo`0001Oooooo
00?o0000ooooooooool01?ooool00ol0003oooooooooo`0Jooooo`05o`000?ooooooooooooooool0
00006Oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01_ooooo00?o0000oooooooo
ool02?ooool001Wooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Dooooo`Go0000
:Oooool3o`0000;ooooo0ol0000Yooooo`03o`000?oooooooooo01Kooooo00Co0000ooooool0003o
00005?ooool2o`0000Kooooo00?o0000ooooooooool06oooool01?l0003oooooooooool0000Koooo
o`03o`000?oooooooooo01Oooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`08oooo
o`006Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo017ooooo1?l00005ooooo`Co
0000:?ooool2o`0002cooooo00?o0000ooooooooool05oooool01?l0003oooooooooool0000Boooo
o`03o`000?oooooooooo00Kooooo00?o0000ooooooooool06oooool01?l0003oooooooooool0000K
ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`09
ooooo`006_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00oooooo0_l0000=oooo
o`;o0000Doooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00;o00003oooool00ol0
003oooooooooo`07ooooo`03o`000?oooooooooo01_ooooo00Co0000oooooooooooo00007?ooool0
0ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool02Oooool0
01[ooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo
00oooooo00?o0000ooooooooool0D?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo
00;ooooo0ol0000;ooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07?ooool2o`00
01gooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo
00Wooooo000Jooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool03_ooool00ol0003o
ooooooooo`0Aooooo`03o`000?oooooooooo04oooooo00?o0000ooooooooool06_ooool00ol0003o
ooooooooo`04ooooo`?o00000_ooool6o`0000[ooooo00?o0000ooooooooool07Oooool2o`0001go
oooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00[o
oooo000Kooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool03_ooool00ol0003ooooo
ooooo`0Booooo`03o`000?oooooooooo04gooooo00?o0000ooooooooool06oooool00ol0003ooooo
ooooo`07ooooo`;o00004?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo00[ooooo
000Looooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool03_ooool00ol0003ooooooooo
o`0Dooooo`03o`000?oooooooooo04cooooo00?o0000ooooooooool06oooool00ol0003ooooooooo
o`0Iooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool07?ooool00ol0003ooooooooo
o`0Jooooo`03o`000?oooooooooo01Cooooo00?o0000ooooooooool02oooool001cooooo00?o0000
ooooooooool05oooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01Kooooo00?o0000
ooooooooool0Boooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01[ooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01_ooooo00?o0000
ooooooooool04Oooool2o`0000kooooo000Mooooo`;o00005_ooool00ol0003oooooooooo`0=oooo
o`03o`000?oooooooooo01Sooooo00?o0000ooooooooool0BOooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06oooool2o`0001kooooo00?o0000oooo
ooooool07?ooool2o`00013ooooo00?o0000ooooooooool03_ooool001oooooo00?o0000oooooooo
ool04Oooool2o`0000oooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Xooooo`Oo
00006_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01[ooooo00?o0000oooooooo
ool06oooool2o`0001kooooo00?o0000ooooooooool07_ooool00ol0003oooooooooo`0;ooooo`;o
00004Oooool0023ooooo0_l0000@ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool0
6_ooool00ol0003oooooooooo`0Sooooo`Co00001oooool3o`0001Oooooo00?o0000ooooooooool0
7Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01[ooooo00?o0000ooooool00000
7_ooool00ol0003oooooooooo`0Oooooo`?o00002?ooool2o`0001?ooooo000Rooooo`03o`000?oo
oooooooo00_ooooo0_l0000Aooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool08Ooo
ool2o`0000kooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool06_ooool00ol0003oooooo`00000Nooooo`03o`000?oo
oooooooo02;ooooo2?l0000Eooooo`005?ooool8o`0000Oooooo0_l00009ooooo`;o00004oooool0
0ol0003oooooooooo`0Kooooo`03o`000?oooooooooo023ooooo00?o0000ooooooooool03oooool0
0ol0003oooooooooo`0Cooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool06oooool0
0ol0003oooooooooo`0Iooooo`04o`000?ooooooooooo`0001gooooo00?o0000ooooooooool06ooo
ool=o`0001Oooooo000Booooo`;o00002?ooool3o`0000Kooooo2Ol0000Eooooo`03o`000?oooooo
oooo01_ooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`0Aooooo`03o`000?oooooo
oooo01;ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo01Oooooo00Go0000ooooooooooooooooo`00000Looooo`03o`000?oooooooooo01_ooooo00?o
0000ooooooooool02oooool2o`0001Gooooo000@ooooo`;o00003Oooool3o`00027ooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01?ooooo00?o0000
ooooooooool04_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01gooooo00?o0000
ooooooooool05_ooool01Ol0003ooooooooooooooooo000001cooooo00?o0000ooooooooool06_oo
ool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo01;ooooo000?ooooo`03o`000?oooooo
oooo013ooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooo
oooo01cooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Aooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooo
oooo00?ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooo
oooo013ooooo00?o0000ooooooooool04Oooool000kooooo00?o0000ooooooooool04Oooool00ol0
003oooooooooo`0Mooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool07?ooool00ol0
003oooooooooo`0Fooooo`03o`000?oooooooooo013ooooo00?o0000ooooooooool06_ooool00ol0
003oooooooooo`0Pooooo`03o`000?oooooooooo017ooooo0_l00007ooooo`03o`000?oooooooooo
01Oooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo
013ooooo000=ooooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool07?ooool00ol0003o
ooooooooo`0Mooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06?ooool00ol0003o
ooooooooo`0@ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool04Oooool=o`0000?o
oooo0_l0000@ooooo`03o`000?oooooooooo00;o00001Oooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo01Sooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0?ooooo`00
3?ooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0
7?ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool0
4Oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool0
2oooool2o`0000?ooooo00?o0000ooooooooool02oooool5o`0000;ooooo2?l0000Fooooo`03o`00
0?oooooooooo01Sooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0?ooooo`003?oo
ool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06ooo
ool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool04?oo
ool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00oooooo0_l0000@ooooo`04o`000?oo
ooooooooooooo`?o00002?ooool2o`0000gooooo00?o0000ooooool000004oooool2o`0001_ooooo
00?o0000ooooooooool05_ooool00ol0003oooooooooo`0>ooooo`002oooool00ol0003ooooooooo
o`0Hooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06oooool00ol0003ooooooooo
o`0Jooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool04Oooool00ol0003ooooooooo
o`0Eooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool04Oooool00ol0003ooooooooo
o`03ooooo`Wo00003oooool00ol0003oooooo`00000Aooooo`03o`000?oooooooooo01[ooooo00?o
0000ooooooooool06?ooool00ol0003oooooooooo`0=ooooo`002_ooool00ol0003oooooooooo`0I
ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0K
ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool04Oooool2o`0001Cooooo0_l0000A
ooooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool01oooool2o`0001;ooooo0ol0000>
ooooo`;o00007?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00gooooo000:oooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Joooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Boooo
o`03o`000?oooooooooo013ooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Eoooo
o`03o`000?oooooooooo00Kooooo00?o0000ooooooooool04oooool4o`0000Wooooo0_l0000Noooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool03?ooool000Wooooo00?o0000oooooooo
ool06oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01Wooooo00?o0000oooooooo
ool06oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01?ooooo0_l0000>ooooo`;o
00004_ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo00Gooooo00?o0000oooooooo
ool05Oooool00ol0003oooooooooo`09o`0001oooooo00?o0000ooooooooool06oooool00ol0003o
ooooooooo`0<ooooo`002Oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool05oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool05Oooool3o`0000Wooooo0_l0000Dooooo`03o`000?oooooooooo01Oooooo
00?o0000ooooooooool00oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo02Sooooo
00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;ooooo`002Oooool00ol0003ooooooooo
o`0Kooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool05oooool00ol0003ooooooooo
o`0Looooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool06?ooool4o`0000;ooooo0ol0
000Eooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool00_ooool00ol0003ooooooooo
o`0Gooooo`03o`000?oooooooooo02Oooooo00?o0000ooooooooool07?ooool00ol0003ooooooooo
o`0;ooooo`002Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01_ooooo00?o0000
ooooooooool05Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01cooooo00?o0000
ooooooooool07?ooool2o`0001Sooooo00?o0000ooooooooool06Oooool01Ol0003ooooooooooooo
oooo000001[ooooo00?o0000ooooooooool09oooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo00_ooooo0008ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool07?ooool0
0ol0003oooooooooo`0Cooooo`03o`000?oooooooooo01kooooo00?o0000ooooooooool07?ooool0
0ol0003oooooooooo`0eooooo`03o`000?oooooooooo01_ooooo00Co0000oooooooooooo00006ooo
ool00ol0003oooooooooo`0Vooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02ooo
ool000Sooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooo
oooo017ooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo03Gooooo00?o0000ooooooooool06oooool00ol0003oooooo`00000Mooooo`03o`000?oooooo
oooo02Gooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0;ooooo`002?ooool00ol0
003oooooooooo`0Mooooo`03o`000?oooooooooo01kooooo0ol0000>ooooo`;o00008oooool00ol0
003oooooooooo`0Kooooo`03o`000?oooooooooo03Gooooo00?o0000ooooooooool06oooool2o`00
01kooooo00?o0000ooooooooool09Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
00_ooooo0009ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool08Oooool3o`0000[o
oooo00?o0000ooooooooool08oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo03Go
oooo00?o0000ooooooooool07?ooool2o`0001kooooo00?o0000ooooooooool09Oooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo00_ooooo0009ooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool09Oooool3o`0000;ooooo1Ol0000Vooooo`03o`000?oooooooooo01[ooooo
00?o0000ooooooooool0=Oooool00ol0003oooooooooo`0Looooo`;o00007_ooool00ol0003ooooo
ooooo`0Uooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02oooool000Wooooo00?o
0000ooooooooool06oooool00ol0003oooooooooo`0Xooooo`;o0000;?ooool00ol0003ooooooooo
o`0Iooooo`03o`000?oooooooooo03Gooooo00?o0000ooooooooool07?ooool2o`0001kooooo00?o
0000ooooooooool09_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00cooooo0009
ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0Eoooool00ol0003oooooooooo`0H
ooooo`03o`000?oooooooooo03Kooooo00?o0000ooooooooool07?ooool2o`0001kooooo00?o0000
ooooooooool09_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00cooooo0009oooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0Eoooool00ol0003oooooooooo`0Goooo
o`03o`000?oooooooooo03Oooooo00?o0000ooooooooool07?ooool2o`0001kooooo00?o0000oooo
ooooool09_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00cooooo000:ooooo`03
o`000?oooooooooo01Wooooo00?o0000ooooooooool0F?ooool00ol0003oooooooooo`0Eooooo`03
o`000?oooooooooo03Sooooo00?o0000ooooooooool07?ooool2o`0001kooooo00?o0000oooooooo
ool09oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo00gooooo000;ooooo`03o`00
0?oooooooooo01Oooooo00?o0000ooooooooool0F_ooool00ol0003oooooooooo`0Cooooo`03o`00
0?oooooooooo03Wooooo00?o0000ooooooooool07?ooool2o`0001kooooo00?o0000ooooooooool0
9oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00kooooo000<ooooo`03o`000?oo
oooooooo01Kooooo00?o0000ooooooooool0Foooool00ol0003oooooooooo`0Aooooo`03o`000?oo
oooooooo03_ooooo00?o0000ooooooooool06_ooool01?l0003oooooooooool0000Mooooo`03o`00
0?oooooooooo02Sooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0?ooooo`003Ooo
ool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo00cooooo3Ol00014ooooo`?o00003_oo
ool2o`0003kooooo00?o0000ooooooooool06_ooool01?l0003oooooooooool0000Looooo`03o`00
0?oooooooooo02[ooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0@ooooo`003_oo
ool00ol0003oooooooooo`0Aooooo`;o00003_ooool00ol0003oooooooooo`0;ooooo`;o0000;_oo
ool5o`0001;ooooo0ol00008ooooo`?o0000@?ooool00ol0003oooooooooo`0Jooooo`04o`000?oo
ooooooooo`0001cooooo00?o0000ooooooooool0:oooool00ol0003oooooooooo`0Aooooo`03o`00
0?oooooooooo017ooooo000?ooooo`;o00004?ooool00ol0003oooooooooo`0=ooooo`03o`000?oo
oooooooo00kooooo00?o0000ooooooooool0:?ooool3o`0000Gooooo1Ol0000@ooooo`?o00000_oo
ool3o`0004Cooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`02ooooo`03o`000?oo
oooooooo01Wooooo00?o0000ooooooooool0;?ooool2o`0000oooooo0_l0000Dooooo`004Oooool0
0ol0003oooooooooo`0;ooooo`;o00003oooool00ol0003oooooooooo`0@ooooo`03o`000?oooooo
oooo02Cooooo0ol0000=ooooo`03o`000?oooooooooo013ooooo0_l00017ooooo`03o`000?oooooo
oooo01Sooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooo
oooo02oooooo00?o0000ooooooooool02oooool00ol0003oooooooooo`0Dooooo`004_ooool3o`00
00Sooooo0_l0000?ooooo`;o00005?ooool00ol0003oooooooooo`0Rooooo`03o`000?oooooooooo
00oooooo00?o0000ooooooooool0FOooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo
00?ooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0Qooooo`go00000_ooool3o`00
00Sooooo0_l0000Gooooo`005Oooool8o`00013ooooo00?o0000ooooooooool05Oooool00ol0003o
ooooooooo`0Pooooo`03o`000?oooooooooo017ooooo0_l0001Jooooo`;o00005?ooool2o`0000Oo
oooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Qooooo`03o`000?oooooooooo00_o
oooo0_l00003ooooo`So00006Oooool002cooooo00?o0000ooooooooool05_ooool00ol0003ooooo
ooooo`0Oooooo`03o`000?oooooooooo01Cooooo00?o0000ooooooooool0;Oooool:o`0002;ooooo
00?o0000ooooooooool04?ooool00ol0003oooooooooo`08ooooo`;o00005?ooool2o`0000;ooooo
1ol0000Jooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool08Oooool002cooooo00?o
0000ooooooooool05oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01Kooooo00?o
0000ooooooooool0:_ooool2o`0000[ooooo00?o0000ooooooooool08?ooool2o`0000oooooo00?o
0000ooooooooool02oooool00ol0003oooooooooo`0@ooooo`03o`000?oooooo000000;o00001ooo
ool3o`0001Kooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Pooooo`00:oooool0
0ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool05_ooool0
0ol0003oooooooooo`0Xooooo`;o00003Oooool3o`00027ooooo0ol0000;ooooo`03o`000?oooooo
oooo00gooooo0_l0000>ooooo`Co00003Oooool00ol0003oooooooooo`0Booooo`03o`000?oooooo
oooo01;ooooo00?o0000ooooooooool07oooool002_ooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0Kooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool02_ooool=o`00
00oooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Qooooo`;o00001oooool2o`00
01;ooooo0ol0000:ooooo`;o00004Oooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo
01Cooooo00?o0000ooooooooool07_ooool002[ooooo00?o0000ooooooooool06oooool00ol0003o
ooooooooo`0Jooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool02Oooool00ol0003o
ooooooooo`0;ooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool04_ooool00ol0003o
ooooooooo`0Rooooo`Oo00005oooool2o`0000Kooooo0ol0000Cooooo`03o`000?oooooooooo00ko
oooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Nooooo`00:_ooool00ol0003ooooo
ooooo`0Kooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06Oooool00ol0003ooooo
ooooo`06ooooo`;o00003oooool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01Cooooo
00?o0000ooooooooool0@Oooool6o`000003ooooool0003ooooo01Cooooo00?o0000ooooooooool0
3?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01gooooo000Zooooo`03o`000?oo
oooooooo01_ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Kooooo`03o`000?oo
oooooooo00Cooooo00?o0000ooooooooool04?ooool2o`0000Sooooo00?o0000ooooooooool05Ooo
ool00ol0003oooooooooo`17ooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool02_oo
ool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01cooooo000Yooooo`03o`000?oooooo
oooo01cooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooo
oooo00?ooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`05ooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooooooool0A_ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooo
oooo00Wooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Looooo`00:Oooool00ol0
003oooooooooo`0Mooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`02ooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool00oooool00ol0
003oooooooooo`0Hooooo`03o`000?oooooooooo04Cooooo00?o0000ooooooooool06?ooool00ol0
003oooooooooo`07ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06oooool001Wo
oooo1ol00009ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool05oooool00ol0003o
ooooooooo`0Looooo`05o`000?ooooooooooooooool000006?ooool00ol0003oooooooooo`02oooo
o`03o`000?oooooooooo01Wooooo00?o0000ooooooooool0@oooool00ol0003oooooooooo`0Ioooo
o`03o`000?oooooooooo00Oooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Koooo
o`005_ooool3o`0000Oooooo0ol00006ooooo`03o`000?oooooooooo01gooooo00?o0000oooooooo
ool01Oooool:o`0000Sooooo00?o0000ooooooooool07?ooool01Ol0003ooooooooooooooooo0000
01Wooooo00Go0000ooooooooooooooooo`00000Looooo`03o`000?oooooooooo04;ooooo00?o0000
ooooooooool06_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01_ooooo00?o0000
ooooooooool06oooool001Cooooo0_l0000=ooooo`;o00001?ooool00ol0003oooooooooo`0Moooo
o`03o`000?oooooooooo00?ooooo0_l0000:ooooo`03o`000?oooooooooo00Gooooo00?o0000oooo
ooooool07?ooool01?l0003oooooooooool0000Jooooo`04o`000?ooooooooooo`0001gooooo00?o
0000ooooooooool0@Oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00Kooooo00?o
0000ooooooooool06oooool00ol0003oooooooooo`0Kooooo`004oooool00ol0003oooooooooo`0?
ooooo`05o`000?ooooooooooooooool000007_ooool00ol0003oooooooooo`02ooooo`;o00003Ooo
ool3o`0000Cooooo00?o0000ooooooooool07?ooool00ol0003oooooo`00000Kooooo`04o`000?oo
ooooooooo`0001kooooo00?o0000ooooooooool0@?ooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo00Kooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Jooooo`004Ooo
ool2o`0001?ooooo00Co0000oooooooooooo00007_ooool01Ol0003ooooooooooooooooo000001;o
oooo00Go0000ooooooooooooooooo`00000Nooooo`03o`000?oooooo000001cooooo00?o0000oooo
ool000007_ooool00ol0003oooooooooo`10ooooo`03o`000?oooooooooo01cooooo00?o0000oooo
ooooool01Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01[ooooo000@ooooo`03
o`000?oooooooooo01Cooooo00Co0000oooooooooooo00007?ooool01Ol0003ooooooooooooooooo
000001Cooooo00Co0000oooooooooooo00007_ooool2o`0001gooooo00?o0000ooooool000007_oo
ool00ol0003oooooooooo`10ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool01Ooo
ool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01[ooooo000?ooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooool000007?ooool01?l0003oooooooooool0000Fooooo`04o`000?oo
ooooooooo`0001gooooo0_l0000Nooooo`;o00007_ooool00ol0003oooooooooo`10ooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo01[ooooo000?ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooool000006ooo
ool00ol0003oooooo`00000Gooooo`04o`000?ooooooooooo`0001cooooo00?o0000ooooool00000
7_ooool2o`0001kooooo00?o0000ooooooooool05oooool;o`0001kooooo00?o0000ooooooooool0
7?ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
6oooool000kooooo00?o0000ooooooooool06Oooool00ol0003oooooo`00000Iooooo`04o`000?oo
ooooooooo`0001Sooooo00?o0000ooooool000007?ooool00ol0003oooooo`00000Nooooo`;o0000
7_ooool00ol0003oooooooooo`0Eooooo`;o00002oooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo01_ooooo000>ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooool000006Ooo
ool00ol0003oooooo`00000Jooooo`03o`000?oooooo000001_ooooo00?o0000ooooool000007_oo
ool2o`0001kooooo00?o0000ooooooooool04oooool2o`0000kooooo0_l0000Kooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool01Oooool00ol0003oooooooooo`0Kooooo`03o`000?oo
oooooooo01_ooooo000>ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooool000005oooool0
0ol0003oooooo`00000Kooooo`03o`000?oooooo000001[ooooo00Co0000oooooooooooo00007_oo
ool2o`0001kooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0@ooooo`03o`000?oo
oooooooo01Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`05ooooo`03o`000?oo
oooooooo01_ooooo00?o0000ooooooooool06oooool000gooooo00?o0000ooooooooool06oooool0
1?l0003oooooo`000?l0000Dooooo`;o00000_ooool00ol0003oooooooooo`0Jooooo`;o00006_oo
ool01?l0003oooooooooool0000Nooooo`03o`000?oooooo000001gooooo00?o0000ooooooooool0
4Oooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool0
6oooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0
6oooool000gooooo00?o0000ooooooooool06oooool01Ol0003ooooooooooooooooo000001;ooooo
00Go0000ooooooooooooooooo`00000Mooooo`03o`000?oooooo000001Sooooo00Go0000oooooooo
ooooooooo`00000Nooooo`03o`000?oooooo000001cooooo00?o0000ooooooooool04Oooool00ol0
003oooooooooo`0Dooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool06_ooool00ol0
003oooooooooo`08ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool07?ooool000go
oooo00?o0000ooooooooool06oooool00ol0003oooooooooo`02ooooo`?o00003_ooool00ol0003o
ooooooooo`02ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool00_l0000Dooooo`;o
00001?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001cooooo00?o0000oooooooo
ool04?ooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo01Oooooo00?o0000oooooooo
ool06_ooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo01Oooooo00?o0000oooooooo
ool07Oooool000cooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`04ooooo`;o0000
2oooool00ol0003oooooooooo`03ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
0_ooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo00Gooooo00?o0000ooooooooool0
6_ooool01Ol0003ooooooooooooooooo000001[ooooo00?o0000ooooooooool04Oooool00ol0003o
ooooooooo`0Fooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool06Oooool00ol0003o
ooooooooo`09ooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool07_ooool000cooooo
00?o0000ooooooooool07Oooool00ol0003oooooooooo`06ooooo`;o00001oooool2o`0000Kooooo
00?o0000ooooooooool07?ooool00ol0003oooooooooo`02ooooo`;o00003_ooool2o`0000Sooooo
00?o0000ooooooooool06_ooool01Ol0003ooooooooooooooooo000001Wooooo00?o0000oooooooo
ool04Oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01Kooooo00?o0000oooooooo
ool06?ooool00ol0003oooooooooo`0;ooooo`03o`000?oooooooooo01?ooooo00?o0000oooooooo
ool07oooool000cooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`08ooooo`Oo0000
1oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00Cooooo0ol00008ooooo`?o0000
2_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool0
5_ooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool0
5oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo00gooooo00?o0000ooooooooool0
4Oooool00ol0003oooooooooo`0Pooooo`003?ooool00ol0003oooooooooo`0Mooooo`03o`000?oo
oooooooo01Kooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`07ooooo`?o00000_oo
ool3o`0000kooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`04ooooo`03o`000?oo
oooooooo01Cooooo00?o0000ooooooooool04Oooool00ol0003oooooooooo`0Jooooo`03o`000?oo
oooooooo01Oooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0?ooooo`;o00003ooo
ool2o`0002?ooooo000<ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool05_ooool0
0ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00[ooooo0_l0000Aooooo`03o`000?oooooo
oooo01Oooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Booooo`03o`000?oooooo
oooo017ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooo
oooo01;ooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0;ooooo`03o`000?oooooo
oooo02?ooooo000<ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool06?ooool00ol0
003oooooooooo`0Looooo`03o`000?oooooooooo01kooooo00?o0000ooooooooool05Oooool00ol0
003oooooooooo`08ooooo`;o00004Oooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo
01cooooo00?o0000ooooooooool06?ooool2o`00017ooooo00?o0000ooooooooool05?ooool3o`00
00Sooooo0_l0000Vooooo`003Oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01So
oooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Pooooo`03o`000?oooooooooo01?o
oooo00?o0000ooooooooool02oooool00ol0003oooooooooo`0<ooooo`;o00005Oooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool03?ooool2o`0001[o
oooo2?l0000Xooooo`003Oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01Wooooo
00?o0000ooooooooool06oooool00ol0003oooooooooo`0Qooooo`03o`000?oooooooooo017ooooo
00?o0000ooooooooool03Oooool3o`0000Sooooo0ol0000Gooooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool06oooool3o`0000Sooooo0ol0001<ooooo`003Oooool00ol0003ooooooooo
o`0Jooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool06_ooool00ol0003ooooooooo
o`0Sooooo`;o00003oooool2o`0001?ooooo2?l0000Jooooo`03o`000?oooooooooo01cooooo00?o
0000ooooooooool06_ooool<o`0004oooooo000>ooooo`03o`000?oooooooooo01Wooooo00?o0000
ooooooooool06Oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo02Gooooo00?o0000
ooooooooool02oooool00ol0003oooooooooo`0eooooo`03o`000?oooooooooo01cooooo00?o0000
ooooooooool05oooool3o`0000Gooooo1Ol0001Aooooo`003oooool00ol0003oooooooooo`0Goooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Voooo
o`?o00002?ooool2o`0003Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Doooo
o`?o00003Oooool00ol0003oooooooooo`1>ooooo`003oooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo01cooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Zooooo`So
0000>_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01?ooooo00?o0000oooooooo
ool03oooool00ol0003oooooooooo`1=ooooo`004?ooool00ol0003oooooooooo`0Eooooo`03o`00
0?oooooooooo01kooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`1/ooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0Aooooo`;o0000
COooool0013ooooo0_l0000Dooooo`;o00008_ooool00ol0003oooooooooo`0Dooooo`03o`000?oo
oooooooo03Gooooo2Ol0000`ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool04_oo
ool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo04[ooooo000Booooo`03o`000?oooooo
oooo013ooooo00?o0000ooooooooool08oooool00ol0003oooooooooo`0Booooo`03o`000?oooooo
oooo03Cooooo0_l00009ooooo`;o0000;_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooo
oooo01;ooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`19ooooo`004oooool3o`00
00gooooo0_l000000ooooooo0000o`000009o`0001_ooooo0_l0000Aooooo`03o`000?oooooooooo
03?ooooo0_l0000=ooooo`?o0000:oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo
017ooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Hooooo`Co0000;Oooool001Ko
oooo0_l00009ooooo`;o000000?oooooo`000?l000002oooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo00cooooo0_l0000eooooo`03o`000?oooooooooo013ooooo00?o0000oooooooo
ool0:Oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01;ooooo00?o0000oooooooo
ool05oooool00ol0003oooooooooo`0Booooo`Go00001?ooool5o`0002Sooooo000Hooooo`Co0000
0_ooool6o`0000kooooo00?o0000ooooooooool06_ooool3o`0000Sooooo0ol0000fooooo`03o`00
0?oooooooooo017ooooo00?o0000ooooooooool0:Oooool00ol0003oooooooooo`0Gooooo`03o`00
0?oooooooooo01;ooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0@ooooo`;o0000
3_ooool00ol0003oooooooooo`0Uooooo`007?ooool2o`0000;ooooo00?o0000ooooooooool04?oo
ool2o`0001gooooo2?l0000hooooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool0:Ooo
ool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool06Ooo
ool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool09?oo
ool001oooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`1Iooooo`03o`000?oooooo
oooo01Gooooo00?o0000ooooooooool0:Oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooo
oooo01;ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0<ooooo`03o`000?oooooo
oooo017ooooo00?o0000ooooooooool08oooool001kooooo00?o0000ooooooooool05Oooool00ol0
003oooooooooo`1Hooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool0:Oooool00ol0
003oooooooooo`0Booooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`0<ooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool08_ooool001go
oooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`1Gooooo`03o`000?oooooooooo01So
oooo00?o0000ooooooooool0:Oooool2o`00017ooooo00?o0000ooooooooool05?ooool00ol0003o
ooooooooo`0Kooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool05?ooool00ol0003o
ooooooooo`0Qooooo`007Oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo05Gooooo
00?o0000ooooooooool06Oooool00ol0003oooooooooo`0[ooooo`03o`000?oooooooooo00cooooo
0_l0000Fooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02_ooool00ol0003ooooo
ooooo`0Eooooo`03o`000?oooooooooo027ooooo000Looooo`03o`000?oooooooooo01Sooooo00?o
0000ooooooooool08_ooool=o`0002Kooooo00?o0000ooooooooool06_ooool00ol0003ooooooooo
o`0[ooooo`?o00002?ooool3o`0001Sooooo00?o0000ooooooooool07?ooool00ol0003ooooooooo
o`09ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool08?ooool001_ooooo00?o0000
ooooooooool06Oooool00ol0003oooooooooo`0Qooooo`03o`000?oooooooooo00_ooooo00?o0000
ooooooooool08_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00Wooooo2Ol0000L
ooooo`So00006oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000
ooooooooool06Oooool00ol0003oooooooooo`0Oooooo`006oooool00ol0003oooooooooo`0Joooo
o`03o`000?oooooooooo01kooooo0_l0000?ooooo`03o`000?oooooooooo027ooooo00?o0000oooo
ooooool06oooool00ol0003oooooooooo`07ooooo`;o00002Oooool3o`0003cooooo00?o0000oooo
ooooool07?ooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo01Wooooo00?o0000oooo
ooooool07oooool001[ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo013ooooo00?o0000ooooooooool08?ooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo00Cooooo0_l0000>ooooo`03o`000?oooooooooo03Wooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01_ooooo00?o0000oooooooo
ool07_ooool001[ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo01;ooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo00?ooooo00?o0000ooooooooool03oooool00ol0003oooooooooo`0Zooooo`[o0000
1?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Oooooo00?o0000ooooooooool0
6oooool00ol0003oooooooooo`0Nooooo`006_ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0Nooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Aooooo`03o`000?oo
oooooooo02Oooooo0_l0000:ooooo`03o`000?oooooooooo00;ooooo00?o0000ooooooooool06ooo
ool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool07Ooo
ool001[ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooo
oooo01Gooooo00?o0000ooooooooool07_ooool00ol0003oooooooooo`0Looooo`05o`000?oooooo
ooooooooool000005Oooool00ol0003oooooooooo`0Tooooo`;o00003Oooool3o`000003ooooool0
003ooooo01_ooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01gooooo000Jooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool06?ooool0
0ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool07?ooool0
1?l0003oooooooooool0000Gooooo`03o`000?oooooooooo02;ooooo00?o0000ooooooooool04?oo
ool2o`0001cooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01gooooo000Jooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool05oooool0
0ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool07?ooool0
1?l0003oooooooooool0000Hooooo`03o`000?oooooooooo023ooooo00?o0000ooooooooool04_oo
ool2o`0001_ooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01gooooo000Jooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool05oooool0
0ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00_ooooo2ol00006ooooo`03o`000?oooooo
oooo01cooooo00?o0000ooooool000006_ooool00ol0003oooooooooo`0Nooooo`03o`000?oooooo
oooo01Cooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`09ooooo`03o`000?oooooo
oooo01cooooo00?o0000ooooooooool07Oooool001[ooooo00?o0000ooooooooool07?ooool00ol0
003oooooooooo`0Fooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool02?ooool2o`00
00_ooooo00?o0000ooooooooool01?ooool00ol0003oooooooooo`0Kooooo`;o00006oooool00ol0
003oooooooooo`0Mooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool06?ooool00ol0
003oooooooooo`09ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool07Oooool001[o
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01_o
oooo00?o0000ooooooooool01Oooool3o`0000kooooo00?o0000ooooooooool00oooool00ol0003o
ooooooooo`0Jooooo`03o`000?oooooo000001cooooo00?o0000ooooooooool07?ooool00ol0003o
ooooooooo`0Fooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool02_ooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo01gooooo000Kooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00?ooooo
00?o0000ooooooooool04?ooool2o`0000?ooooo00?o0000ooooooooool06_ooool2o`0001gooooo
00?o0000ooooooooool06oooool00ol0003oooooooooo`0Hooooo`;o00005?ooool2o`0000kooooo
00?o0000ooooooooool06oooool00ol0003oooooooooo`0Mooooo`006oooool00ol0003ooooooooo
o`0Jooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool07?ooool00ol0003ooooooooo
o`02ooooo`03o`000?oooooooooo01?ooooo00Go0000ooooooooooooooooo`00000Jooooo`03o`00
0?oooooo000001gooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0Iooooo`03o`00
0?oooooo000001;ooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0Jooooo`03o`00
0?oooooooooo01kooooo000Kooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool05ooo
ool00ol0003oooooooooo`0Looooo`05o`000?ooooooooooooooool000005oooool01?l0003ooooo
ooooool0000Iooooo`04o`000?ooooooooooo`0001kooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0Jooooo`04o`000?oooooo0000o`0000kooooo0_l0000Aooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool07_ooool001cooooo00?o0000ooooooooool06?ooool00ol0
003oooooooooo`0Hooooo`03o`000?oooooooooo01cooooo00Co0000oooooooooooo00006?ooool0
1Ol0003ooooooooooooooooo000001Sooooo00Co0000oooooooooooo00007_ooool00ol0003ooooo
ooooo`0Hooooo`03o`000?oooooooooo01_ooooo00Co0000oooooooooooooooo0ol0000:ooooo`03
o`000?oooooooooo01;ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Nooooo`00
7?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool0
7?ooool01?l0003oooooooooool0000Iooooo`05o`000?ooooooooooooooool000005_ooool01Ol0
003ooooooooooooooooo000001kooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0K
ooooo`03o`000?oooooooooo00Cooooo0_l00003ooooo`Go00005Oooool00ol0003oooooooooo`0H
ooooo`03o`000?oooooooooo01oooooo000Mooooo`03o`000?oooooooooo01Kooooo00?o0000oooo
ooooool06Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001[ooooo00?o0000oooo
ooooool00_ooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo00;ooooo00?o0000oooo
ooooool07?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01_ooooo00?o0000oooo
ooooool01_ooool3o`0001[ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Poooo
o`007_ooool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo01[ooooo00?o0000oooooooo
ool07?ooool00ol0003oooooo`00000Jooooo`03o`000?oooooooooo00?ooooo0_l0000Aooooo`03
o`000?oooooooooo00?ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Hooooo`03
o`000?oooooooooo01cooooo00?o0000ooooooooool08oooool00ol0003oooooooooo`0Eooooo`03
o`000?oooooooooo027ooooo000Oooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool0
6oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001_ooooo00?o0000ooooooooool0
1?ooool00ol0003oooooooooo`0<ooooo`;o00001_ooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo01Oooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Tooooo`03o`00
0?oooooooooo01?ooooo00?o0000ooooooooool08_ooool0023ooooo0_l0000Aooooo`03o`000?oo
oooooooo01gooooo00?o0000ooooooooool06_ooool00ol0003oooooo`00000Mooooo`03o`000?oo
oooooooo00Cooooo0ol00008ooooo`?o00002?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01Oooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Uooooo`03o`000?oo
oooooooo017ooooo00?o0000ooooooooool08oooool002;ooooo00?o0000ooooooooool03?ooool2
o`00023ooooo00?o0000ooooooooool06_ooool00ol0003oooooo`00000Mooooo`03o`000?oooooo
oooo00Oooooo2?l0000<ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool05oooool0
0ol0003oooooooooo`0Mooooo`03o`000?oooooooooo02Kooooo0ol0000>ooooo`;o00009_ooool0
02?ooooo0ol00008ooooo`?o00008_ooool00ol0003oooooooooo`0Jooooo`;o00007_ooool00ol0
003oooooooooo`0Kooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0Looooo`03o`000?oooooooooo02Wooooo0ol0000:ooooo`03o`000?oooooooooo
02Kooooo000Vooooo`So00009_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooo000001ko
oooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01Wo
oooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0]ooooo`03o`000?oooooooooo00;o
oooo1Ol0000Yooooo`00E?ooool00ol0003oooooooooo`0Gooooo`04o`000?ooooooooooo`0001ko
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01Wo
oooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0^ooooo`Co0000;_ooool005Gooooo
00?o0000ooooooooool05Oooool01Ol0003ooooooooooooooooo000001kooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01[ooooo00?o0000oooooooo
ool06_ooool00ol0003oooooooooo`1Qooooo`00E_ooool00ol0003oooooooooo`0Cooooo`03o`00
0?oooooooooo00;ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Mooooo`03o`00
0?oooooooooo01Kooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Jooooo`03o`00
0?oooooooooo067ooooo001Gooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool00ooo
ool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01kooooo00?o0000ooooooooool05?oo
ool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool0H_oo
ool005Sooooo0_l0000?ooooo`;o00001_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo
oooo01oooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0Oooooo`03o`000?oooooo
oooo01Oooooo00?o0000ooooooooool0H_ooool005[ooooo00?o0000ooooooooool02oooool00ol0
003oooooooooo`07ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool08?ooool2o`00
017ooooo00?o0000ooooooooool08Oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo
06;ooooo001Kooooo`?o00002?ooool2o`0000[ooooo00?o0000ooooooooool06_ooool00ol0003o
ooooooooo`0Sooooo`03o`000?oooooooooo00cooooo0_l0000Uooooo`03o`000?oooooooooo01Co
oooo00?o0000ooooooooool0Hoooool005kooooo2?l0000<ooooo`03o`000?oooooooooo01[ooooo
00?o0000ooooooooool09?ooool3o`0000Sooooo0ol0000Xooooo`03o`000?oooooooooo01;ooooo
00?o0000ooooooooool0I?ooool007?ooooo00?o0000ooooooooool06?ooool00ol0003ooooooooo
o`0Xooooo`So0000;?ooool2o`00017ooooo00?o0000ooooooooool0IOooool007?ooooo00?o0000
ooooooooool06?ooool00ol0003oooooooooo`1Nooooo`03o`000?oooooooooo00cooooo0_l0001X
ooooo`00M?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo05oooooo0ol00008oooo
o`?o0000J_ooool007Gooooo0_l0000Fooooo`03o`000?oooooooooo06?ooooo2?l0001]ooooo`00
Moooool00ol0003oooooooooo`0Aooooo`;o0000foooool007Sooooo00?o0000ooooooooool03ooo
ool00ol0003oooooooooo`3Kooooo`00NOooool00ol0003oooooooooo`0<ooooo`;o0000g_ooool0
07[ooooo0ol00008ooooo`?o0000h?ooool007gooooo2?l0003Sooooo`00oooooomYooooo`00oooo
oomYooooo`00oooooomYooooo`00oooooomYooooo`00oooooomYooooo`00\
\>"],
  ImageRangeCache->{{{0, 359}, {229, 0}} -> {-1.47709, -1.34353, 0.0799336, \
0.0799336}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output",
  CellLabel->"Out[109]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\(Show[
      Graphics[Map[Circle[#, 1] &, Table[jjc[\([i]\)], {i, 1, 38}]]], 
      AspectRatio \[Rule] Automatic, 
      FrameLabel -> "\<Unsaturated\>"]\)\(\[IndentingNewLine]\)
    \)\)], "Input",
  CellLabel->"In[108]:="],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .64608 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0639626 0.04412 0.0592733 0.04412 [
[ 0 0 0 0 ]
[ 1 .64608 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .64608 L
0 .64608 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
newpath
.27508 .56085 .04412 0 365.73 arc
s
newpath
.75578 .20023 .04412 0 365.73 arc
s
newpath
.24014 .45983 .04412 0 365.73 arc
s
newpath
.39927 .33404 .04412 0 365.73 arc
s
newpath
.06793 .34164 .04412 0 365.73 arc
s
newpath
.11734 .53862 .04412 0 365.73 arc
s
newpath
.76686 .5205 .04412 0 365.73 arc
s
newpath
.28757 .17399 .04412 0 365.73 arc
s
newpath
.23167 .30879 .04412 0 365.73 arc
s
newpath
.53037 .29166 .04412 0 365.73 arc
s
newpath
.6036 .23263 .04412 0 365.73 arc
s
newpath
.42346 .07914 .04412 0 365.73 arc
s
newpath
.0822 .1714 .04412 0 365.73 arc
s
newpath
.64292 .35473 .04412 0 365.73 arc
s
newpath
.78032 .43244 .04412 0 365.73 arc
s
newpath
.85093 .11091 .04412 0 365.73 arc
s
newpath
.17754 .06804 .04412 0 365.73 arc
s
newpath
.50304 .43164 .04412 0 365.73 arc
s
newpath
.47563 .19487 .04412 0 365.73 arc
s
newpath
.62006 .07315 .04412 0 365.73 arc
s
newpath
.63352 .4767 .04412 0 365.73 arc
s
newpath
.53169 .56493 .04412 0 365.73 arc
s
newpath
.41361 .43955 .04412 0 365.73 arc
s
newpath
.36328 .58658 .04412 0 365.73 arc
s
newpath
.88155 .54039 .04412 0 365.73 arc
s
newpath
.93141 .0595 .04412 0 365.73 arc
s
newpath
.78694 .28488 .04412 0 365.73 arc
s
newpath
.56051 .15385 .04412 0 365.73 arc
s
newpath
.11577 .25686 .04412 0 365.73 arc
s
newpath
.16091 .414 .04412 0 365.73 arc
s
newpath
.8451 .20584 .04412 0 365.73 arc
s
newpath
.36531 .22121 .04412 0 365.73 arc
s
newpath
.07904 .45814 .04412 0 365.73 arc
s
newpath
.69434 .57253 .04412 0 365.73 arc
s
newpath
.93207 .34082 .04412 0 365.73 arc
s
newpath
.73804 .09973 .04412 0 365.73 arc
s
newpath
.29515 .07414 .04412 0 365.73 arc
s
newpath
.19748 .19515 .04412 0 365.73 arc
s
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  CellLabel->"From In[108]:=",
  ImageSize->{288, 186.062},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["Bitmap", "\<\
CF5dJ6E]HGAYHf4PAg9QL6QYHg<PAVmbKF5d0`40005X0000j2000`400?l00000o`00003ooooooomY
ooooo`00oooooomYooooo`00oooooomYooooo`00oooooomYooooo`00oooooomYooooo`00oooooom>
ooooo`?o00006?ooool00?ooooooBOooool5o`0000?ooooo1Ol0000Cooooo`00oooooom8ooooo`03
o`000?oooooooooo00_ooooo00?o0000ooooooooool04?ooool00?ooooooA_ooool2o`0000oooooo
00?o0000ooooooooool03oooool003[ooooo3Ol0003looooo`;o00004_ooool2o`0000oooooo000i
ooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool0T_ooool5o`0006;ooooo00?o0000
ooooooooool04oooool00ol0003oooooooooo`0<ooooo`00=oooool2o`0000oooooo00?o0000oooo
ooooool06oooool;o`0006Oooooo1?l00005ooooo`Co0000GOooool00ol0003oooooooooo`0Eoooo
o`03o`000?oooooooooo00_ooooo000eooooo`;o00004_ooool2o`0001Wooooo0_l0000;ooooo`03
o`000?oooooooooo02?ooooo0_l0000mooooo`;o00003Oooool2o`0005[ooooo00?o0000oooooooo
ool05_ooool00ol0003oooooooooo`0;ooooo`00=Oooool00ol0003oooooooooo`0Cooooo`03o`00
0?oooooooooo01?ooooo0ol0000>ooooo`03o`000?oooooooooo01gooooo1Ol00002ooooo`Ko0000
=_ooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo05Kooooo00?o0000ooooooooool0
6?ooool00ol0003oooooooooo`0:ooooo`00=?ooool00ol0003oooooooooo`0Eooooo`03o`000?oo
oooooooo017ooooo00?o0000ooooooooool04?ooool2o`0001cooooo00?o0000ooooooooool02ooo
ool00ol0003oooooooooo`0booooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool0E?oo
ool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00Wooooo000cooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooo
oooo01Oooooo0_l0000?ooooo`03o`000?oooooooooo033ooooo00?o0000ooooooooool04oooool0
0ol0003oooooooooo`1Cooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool02Oooool0
03;ooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo
01Gooooo00?o0000ooooooooool05?ooool2o`0001;ooooo0_l0000_ooooo`03o`000?oooooooooo
01Gooooo00?o0000ooooooooool0DOooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
00Sooooo000aooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool03Oooool00ol0003o
ooooooooo`0Fooooo`03o`000?oooooooooo01Cooooo00?o0000ooooooooool04oooool00ol0003o
ooooooooo`0[ooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool0DOooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo00Sooooo000aooooo`03o`000?oooooooooo01Wooooo
00?o0000ooooooooool03Oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01;ooooo
00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Zooooo`03o`000?oooooooooo01Oooooo
00?o0000ooooooooool0D?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo
000`ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool02oooool00ol0003ooooooooo
o`0Hooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool05_ooool00ol0003ooooooooo
o`0Yooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool0Coooool00ol0003ooooooooo
o`0Looooo`03o`000?oooooooooo00Sooooo000`ooooo`03o`000?oooooooooo01cooooo00?o0000
ooooooooool02Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo013ooooo00?o0000
ooooooooool06?ooool00ol0003oooooooooo`0Xooooo`03o`000?oooooooooo01Wooooo00?o0000
ooooooooool05Oooool;o`0002oooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08
ooooo`00<?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Wooooo00?o0000oooo
ooooool06_ooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo01Wooooo00?o0000oooo
ooooool09oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01;ooooo0_l0000;oooo
o`03o`000?oooooooooo02cooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08oooo
o`00<?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01Wooooo00?o0000oooooooo
ool09oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo013ooooo0_l0000>ooooo`;o
0000;?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo000`ooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo00cooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Vooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0@ooooo`03o`00
0?oooooooooo02Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08ooooo`00<?oo
ool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool09?oo
ool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00gooooo00?o0000ooooooooool04Ooo
ool00ol0003oooooooooo`0Hooooo`[o00001oooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo00Sooooo000`ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02?ooool0
0ol0003oooooooooo`0Looooo`03o`000?oooooooooo00cooooo00?o0000ooooooooool07?ooool0
0ol0003oooooooooo`0Tooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool03?ooool0
0ol0003oooooooooo`0Cooooo`03o`000?oooooooooo01Gooooo0_l0000:ooooo`03o`000?oooooo
oooo00Cooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08ooooo`00<?ooool00ol0
003oooooooooo`0Looooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07?ooool00ol0
003oooooooooo`0<ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool09?ooool00ol0
003oooooooooo`0Mooooo`03o`000?oooooooooo00_ooooo00?o0000ooooooooool05Oooool00ol0
003oooooooooo`0Aooooo`?o00003Oooool3o`0000?ooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`09ooooo`00<?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00So
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo01co
oooo00?o0000ooooooooool09?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo00_o
oooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo017o
oooo00Go0000ooooooooooooooooo`00000Looooo`03o`000?oooooooooo00Wooooo000`ooooo`03
o`000?oooooooooo01cooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo00cooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Tooooo`03
o`000?oooooooooo01gooooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Hooooo`03
o`000?oooooooooo00gooooo00?o0000ooooooooool04_ooool01Ol0003ooooooooooooooooo0000
01cooooo00?o0000ooooooooool02Oooool0033ooooo00?o0000ooooooooool06oooool00ol0003o
ooooooooo`09ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool03?ooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo02Cooooo00?o0000ooooooooool07Oooool00ol0003o
ooooooooo`09ooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool03?ooool00ol0003o
ooooooooo`0Dooooo`05o`000?ooooooooooooooool000006_ooool00ol0003oooooooooo`0:oooo
o`00<Oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00Wooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0<ooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool09Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Wooooo00?o0000oooooooo
ool06_ooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01Kooooo00Co0000oooooooo
oooo00006_ooool00ol0003oooooooooo`0:ooooo`00<Oooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo00Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0<ooooo`03
o`000?oooooooooo01cooooo00?o0000ooooooooool09Oooool00ol0003oooooooooo`0Kooooo`03
o`000?oooooooooo00Wooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0:ooooo`03
o`000?oooooooooo01Oooooo00Co0000oooooooooooo00006Oooool00ol0003oooooooooo`0:oooo
o`00<_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo00_ooooo00?o0000oooooooo
ool06_ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool09Oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00Wooooo00?o0000oooooooo
ool06oooool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01Wooooo00Co0000oooooooo
oooo00005oooool00ol0003oooooooooo`0;ooooo`00<_ooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo00cooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0=ooooo`03
o`000?oooooooooo01_ooooo00?o0000ooooooooool09oooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo00Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08ooooo`03
o`000?oooooooooo01Wooooo00Go0000ooooooooooooooooo`00000Dooooo`;o00003_ooool003?o
oooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01Wo
oooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo02So
oooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01co
oooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Jooooo`04o`000?oooooooooooooo
o`;o00004Oooool00ol0003oooooooooo`0>ooooo`00=?ooool00ol0003oooooooooo`0Dooooo`03
o`000?oooooooooo00kooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0?ooooo`03
o`000?oooooooooo01[ooooo00?o0000ooooooooool0:?ooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo00_ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`07ooooo`03
o`000?oooooooooo01_ooooo00?o0000ooooooooool00oooool00ol0003oooooooooo`0<ooooo`;o
00004Oooool003Gooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0@ooooo`03o`00
0?oooooooooo01Oooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Hooooo`03o`00
0?oooooooooo02[ooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0<ooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo00Cooooo0ol00007ooooo`Co00004oooool003Kooooo0_l0000Aooooo`03o`000?oo
oooooooo01;ooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Aooooo`03o`000?oo
oooooooo01Sooooo00?o0000ooooooooool0:_ooool2o`0001Gooooo00?o0000ooooooooool03Ooo
ool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`07ooooo`Oo00005oooool003Sooooo00?o0000ooooooooool03?ooool2
o`0001Kooooo00?o0000ooooooooool04_ooool2o`0001Gooooo00?o0000ooooooooool05oooool0
0ol0003oooooooooo`0/ooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool03_ooool0
0ol0003oooooooooo`0Looooo`03o`000?oooooooooo00Kooooo00?o0000ooooooooool07Oooool0
0ol0003oooooooooo`0Tooooo`00>Oooool3o`0000Wooooo0_l0000Iooooo`;o00004Oooool00ol0
003oooooooooo`0Fooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool07oooool5o`00
00[ooooo0_l0000?ooooo`;o00004Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
00Kooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Tooooo`00??ooool9o`0001go
oooo00?o0000ooooooooool03?ooool2o`0001[ooooo00?o0000ooooooooool04_ooool2o`0001oo
oooo0ol00005ooooo`Go00001oooool00ol0003oooooooooo`0;ooooo`03o`000?oooooooooo017o
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01go
oooo00?o0000ooooooooool09?ooool006?ooooo0ol00009ooooo`;o00007Oooool2o`00017ooooo
00?o0000ooooooooool07?ooool3o`0000gooooo0_l00006ooooo`?o00001oooool3o`0001Cooooo
00?o0000ooooooooool06oooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01gooooo
00?o0000ooooooooool09?ooool006Kooooo2Ol0000Qooooo`03o`000?oooooooooo00cooooo0_l0
000Nooooo`03o`000?oooooooooo013ooooo00?o0000ooooooooool01_ooool7o`0001Oooooo00?o
0000ooooooooool06oooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01gooooo00?o
0000ooooooooool09?ooool0097ooooo0ol00009ooooo`;o00007oooool00ol0003oooooooooo`0B
ooooo`03o`000?oooooooooo02Cooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`07
ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool09Oooool009Cooooo2Ol0000Qoooo
o`03o`000?oooooooooo01?ooooo00?o0000ooooooooool09?ooool00ol0003oooooooooo`0Hoooo
o`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Uoooo
o`00_Oooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo02Cooooo00?o0000oooooooo
ool05_ooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01[ooooo00?o0000oooooooo
ool09_ooool001Oooooo3Ol00012ooooo`;o0000E?ooool00ol0003oooooooooo`0Fooooo`03o`00
0?oooooooooo02Gooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`0;ooooo`03o`00
0?oooooooooo01[ooooo00?o0000ooooooooool09_ooool001Kooooo00?o0000ooooooooool02ooo
ool2o`0003_ooooo1Ol00002ooooo`Ko0000COooool00ol0003oooooooooo`0Hooooo`03o`000?oo
oooooooo02Cooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0=ooooo`03o`000?oo
oooooooo01Wooooo00?o0000ooooooooool09_ooool001Gooooo00?o0000ooooooooool03_ooool0
0ol0003oooooooooo`0gooooo`03o`000?oooooooooo00_ooooo0_l0001:ooooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool09?ooool00ol0003oooooooooo`0Aooooo`03o`000?oooooo
oooo00kooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0Wooooo`005?ooool00ol0
003oooooooooo`0@ooooo`03o`000?oooooooooo03Cooooo0_l0000@ooooo`03o`000?oooooooooo
04Oooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0Uooooo`?o00003_ooool2o`00
01;ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Wooooo`004oooool00ol0003o
ooooooooo`0Booooo`03o`000?oooooooooo037ooooo0_l0000Cooooo`03o`000?oooooooooo04Go
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Wooooo`?o00002Oooool2o`0001Go
oooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Xooooo`004_ooool00ol0003ooooo
ooooo`0Dooooo`03o`000?oooooooooo033ooooo00?o0000ooooooooool04oooool00ol0003ooooo
ooooo`14ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0:_ooool9o`0001Sooooo
00?o0000ooooooooool04_ooool2o`0002_ooooo000Aooooo`03o`000?oooooooooo01Gooooo00?o
0000ooooooooool0;oooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo04?ooooo00?o
0000ooooooooool07?ooool00ol0003oooooooooo`1<ooooo`03o`000?oooooooooo013ooooo00?o
0000ooooooooool0:oooool0017ooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0]
ooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool0@oooool00ol0003oooooooooo`0L
ooooo`03o`000?oooooooooo04gooooo0_l0000>ooooo`;o0000;_ooool0013ooooo00?o0000oooo
ooooool06?ooool00ol0003oooooooooo`0Eooooo`So00003oooool00ol0003oooooooooo`0Goooo
o`03o`000?oooooooooo02oooooo2Ol0000:ooooo`03o`000?oooooooooo01cooooo00?o0000oooo
ooooool0Coooool3o`0000Wooooo0_l0000`ooooo`003oooool00ol0003oooooooooo`0Iooooo`03
o`000?oooooooooo01?ooooo0_l00008ooooo`?o00002oooool00ol0003oooooooooo`0Iooooo`03
o`000?oooooooooo02cooooo0_l00009ooooo`;o00002?ooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo057ooooo2Ol0000booooo`003oooool00ol0003oooooooooo`0Jooooo`03o`00
0?oooooooooo00oooooo0ol0000=ooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool0
6Oooool00ol0003oooooooooo`0Zooooo`;o00003Oooool3o`0000Gooooo00?o0000ooooooooool0
7Oooool00ol0003oooooooooo`0_ooooo`[o0000Doooool000kooooo00?o0000ooooooooool06ooo
ool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool01_oo
ool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo02Sooooo00?o0000ooooooooool04?oo
ool00ol0003oooooooooo`02ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0;_oo
ool2o`0000[ooooo00?o0000ooooooooool0D?ooool000kooooo00?o0000ooooooooool07?ooool0
0ol0003oooooooooo`0<ooooo`03o`000?oooooooooo017ooooo0_l00006ooooo`03o`000?oooooo
oooo01_ooooo00?o0000ooooooooool09oooool00ol0003oooooooooo`0Aooooo`03o`000?oooooo
oooo00;ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0[ooooo`?o00003Oooool3
o`0001;ooooo2_l0000cooooo`003_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
00_ooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`03ooooo`03o`000?oooooooooo
01_ooooo00?o0000ooooooooool09_ooool00ol0003oooooooooo`0Cooooo`05o`000?oooooooooo
ooooool000007_ooool00ol0003oooooooooo`0Zooooo`03o`000?oooooooooo017ooooo00?o0000
ooooooooool03Oooool2o`0000[ooooo00?o0000ooooooooool0<?ooool000kooooo00?o0000oooo
ooooool07?ooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01Kooooo00Go0000oooo
ooooooooooooo`00000Nooooo`03o`000?oooooooooo02Gooooo00?o0000ooooooooool05Oooool0
1Ol0003ooooooooooooooooo000001cooooo00?o0000ooooooooool0:_ooool00ol0003ooooooooo
o`0Booooo`03o`000?oooooooooo00[ooooo0ol0000=ooooo`?o0000;oooool000gooooo00?o0000
ooooooooool07Oooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01Kooooo00Go0000
ooooooooooooooooo`00000Oooooo`03o`000?oooooooooo02Cooooo00?o0000ooooooooool05_oo
ool01?l0003oooooooooool0000Looooo`03o`000?oooooooooo02Wooooo00?o0000ooooooooool0
5?ooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool0
;?ooool000gooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`09ooooo`03o`000?oo
oooooooo01Sooooo00Co0000oooooooooooo00007oooool00ol0003oooooooooo`0Sooooo`03o`00
0?oooooooooo01Sooooo00Co0000oooooooooooo00006oooool00ol0003oooooooooo`0Xooooo`03
o`000?oooooooooo01Kooooo00?o0000ooooooooool01_ooool00ol0003oooooooooo`0Booooo`03
o`000?oooooooooo02cooooo000=ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool0
2?ooool00ol0003oooooooooo`0Iooooo`04o`000?ooooooooooo`0001oooooo00?o0000oooooooo
ool02?ooool3o`0001Oooooo00?o0000ooooooooool06Oooool01?l0003oooooooooool0000Joooo
o`03o`000?oooooooooo02Wooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`04oooo
o`03o`000?oooooooooo01Cooooo00?o0000ooooooooool0:oooool000kooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo01[ooooo00?o0000ooooool0
00007oooool00ol0003oooooooooo`03ooooo`Go00000oooool5o`0001;ooooo00?o0000oooooooo
ool06_ooool00ol0003oooooo`00000Jooooo`03o`000?oooooooooo02Sooooo00?o0000oooooooo
ool06Oooool00ol0003oooooooooo`02ooooo`03o`000?oooooooooo01Kooooo00?o0000oooooooo
ool0:_ooool000kooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`07ooooo`03o`00
0?oooooooooo01cooooo0_l0000Nooooo`03o`000?oooooooooo00?ooooo00?o0000ooooooooool0
2oooool2o`0000oooooo00?o0000ooooooooool06oooool01?l0003oooooooooool0000Hooooo`03
o`000?oooooooooo02Sooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`02ooooo`03
o`000?oooooooooo01Oooooo00?o0000ooooooooool0:Oooool000kooooo00?o0000ooooooooool0
7?ooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01cooooo00?o0000ooooool00000
7Oooool01?l0003oooooooooooooool2o`00013ooooo00?o0000ooooooooool03?ooool00ol0003o
ooooooooo`0Kooooo`05o`000?ooooooooooooooool000005Oooool2o`0002_ooooo00?o0000oooo
ooooool06oooool01?l0003oooooooooool0000Kooooo`03o`000?oooooooooo02Sooooo000>oooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooooooool02?ooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooo000001cooooo00?o0000ooooooooool00_l0000Cooooo`03o`000?oooooooooo
00_ooooo00?o0000ooooooooool07?ooool01Ol0003ooooooooooooooooo000001?ooooo00?o0000
ooooooooool0:_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001cooooo00?o0000
ooooooooool0:?ooool000kooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`08oooo
o`03o`000?oooooooooo01cooooo00?o0000ooooool000007?ooool01?l0003oooooooooool0000E
ooooo`03o`000?oooooooooo00[ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`02
ooooo`?o00003_ooool?o`00023ooooo00?o0000ooooooooool07?ooool00ol0003oooooo`00000M
ooooo`03o`000?oooooooooo02Oooooo000?ooooo`03o`000?oooooooooo01Wooooo00?o0000oooo
ooooool02Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001cooooo00?o0000oooo
ool000005oooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo01gooooo00?o0000oooo
ooooool01Oooool3o`0000[ooooo00?o0000ooooool000003Oooool2o`0001kooooo00?o0000oooo
ooooool07?ooool2o`0001kooooo00?o0000ooooooooool09oooool0013ooooo00?o0000oooooooo
ool05oooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01cooooo00Co0000oooooooo
oooo00006_ooool00ol0003oooooo`00000Hooooo`03o`000?oooooooooo00Sooooo00?o0000oooo
ooooool07Oooool00ol0003oooooooooo`08ooooo`;o00001Oooool5o`00013ooooo00?o0000oooo
ooooool06oooool00ol0003oooooooooo`0Looooo`;o00007_ooool00ol0003oooooooooo`0Woooo
o`004Oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo00[ooooo00?o0000oooooooo
ool07?ooool01?l0003oooooooooool0000Jooooo`;o00006_ooool00ol0003oooooooooo`07oooo
o`03o`000?oooooooooo01gooooo00?o0000ooooooooool02_ooool5o`0000;ooooo00?o0000oooo
ooooool04Oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01cooooo0_l0000Noooo
o`03o`000?oooooooooo02Oooooo000Booooo`03o`000?oooooooooo01Cooooo00?o0000oooooooo
ool02oooool00ol0003oooooooooo`0Looooo`05o`000?ooooooooooooooool000006Oooool00ol0
003oooooooooo`0Jooooo`03o`000?oooooooooo00Oooooo00?o0000ooooooooool07?ooool00ol0
003oooooooooo`0Aooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0Looooo`;o00007_ooool00ol0003oooooooooo`0Wooooo`004oooool00ol0003o
ooooooooo`0Booooo`03o`000?oooooooooo00cooooo00?o0000ooooooooool07?ooool00ol0003o
ooooooooo`02ooooo`;o00005_ooool2o`0001cooooo00?o0000ooooooooool01oooool00ol0003o
ooooooooo`0Looooo`03o`000?oooooooooo013ooooo00?o0000ooooooooool05?ooool00ol0003o
ooooooooo`0Hooooo`03o`000?oooooooooo01cooooo0_l0000Nooooo`03o`000?oooooooooo02Oo
oooo000Dooooo`;o00004Oooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool01?ooool00ol0003oooooooooo`0Aooooo`?o00007_ooool00ol0003ooooo
ooooo`06ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool03oooool00ol0003ooooo
ooooo`0Eooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool07?ooool2o`0001oooooo
00?o0000ooooooooool09_ooool001Kooooo00?o0000ooooooooool03?ooool2o`00017ooooo00?o
0000ooooooooool06_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo00oooooo00Co
0000oooooooooooo00007_ooool00ol0003oooooooooo`06ooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool03oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01Oooooo
00?o0000ooooooooool07?ooool2o`0001kooooo00?o0000ooooooooool09oooool001Oooooo0ol0
0009ooooo`;o00000_ooool7o`0000[ooooo00?o0000ooooooooool06_ooool00ol0003ooooooooo
o`07ooooo`03o`000?oooooooooo00cooooo0_l00003ooooo`03o`000?oooooooooo01cooooo00?o
0000ooooooooool01_ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo00kooooo00?o
0000ooooooooool06Oooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01cooooo0_l0
000Nooooo`03o`000?oooooooooo02Oooooo000Jooooo`go00001oooool3o`0000Sooooo00?o0000
ooooooooool06Oooool00ol0003oooooooooo`08ooooo`?o00002Oooool2o`0000Gooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01[ooooo00?o0000
ooooooooool03_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01Oooooo00?o0000
ooooooooool06_ooool00ol0003oooooo`00000Nooooo`03o`000?oooooooooo02Oooooo000Qoooo
o`;o00003_ooool00ol0003oooooooooo`05ooooo`03o`000?oooooooooo01Sooooo00?o0000oooo
ooooool03?ooool9o`0000Oooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08oooo
o`03o`000?oooooooooo01Sooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0Koooo
o`03o`000?oooooooooo01Kooooo00?o0000ooooooooool06_ooool00ol0003oooooo`00000Noooo
o`03o`000?oooooooooo02Oooooo000Pooooo`03o`000?oooooooooo00oooooo00?o0000oooooooo
ool01?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool07Oooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01Oooooo00?o0000oooooooo
ool03oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo01Oooooo00?o0000oooooooo
ool06Oooool01?l0003oooooooooool0000Looooo`03o`000?oooooooooo02Sooooo000Oooooo`03
o`000?oooooooooo017ooooo00?o0000ooooooooool01?ooool00ol0003oooooooooo`0Fooooo`03
o`000?oooooooooo01gooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`08ooooo`03
o`000?oooooooooo01Gooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo01Kooooo00?o0000ooooooooool06?ooool01Ol0003ooooooooooooooooo0000
01cooooo00?o0000ooooooooool0:?ooool001kooooo00?o0000ooooooooool04oooool00ol0003o
ooooooooo`04ooooo`03o`000?oooooooooo01?ooooo0_l0000Pooooo`03o`000?oooooooooo01co
oooo00?o0000ooooooooool02_ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo013o
oooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01Oo
oooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo02So
oooo000Mooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool01?ooool00ol0003ooooo
ooooo`0Aooooo`03o`000?oooooooooo023ooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`0;ooooo`03o`000?oooooooooo017ooooo00?o0000ooooooooool04Oooool00ol0003ooooo
ooooo`0Mooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool05Oooool00ol0003ooooo
ooooo`03ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool0:Oooool001gooooo00?o
0000ooooooooool05_ooool00ol0003oooooooooo`04ooooo`?o00003_ooool2o`0002?ooooo00?o
0000ooooooooool07?ooool00ol0003oooooooooo`0<ooooo`?o00003_ooool2o`0001Cooooo00?o
0000ooooooooool07Oooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01?ooooo0_l0
0007ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool0:Oooool001cooooo00?o0000
ooooooooool06?ooool00ol0003oooooooooo`06ooooo`?o00002_ooool00ol0003oooooooooo`0S
ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool04?ooool3o`0000Wooooo0_l0000F
ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0A
ooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0Z
ooooo`006oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00Wooooo0_l00004oooo
o`Co00009oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01?ooooo0ol00002oooo
o`Co00006?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01[ooooo0ol0000>oooo
o`;o00002oooool00ol0003oooooooooo`0Cooooo`;o0000;Oooool001_ooooo00?o0000oooooooo
ool06_ooool00ol0003oooooooooo`0:ooooo`Co0000:oooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo01Kooooo0_l0000Looooo`03o`000?oooooooooo01gooooo00?o0000oooooooo
ool07Oooool3o`0000Wooooo0_l000000ooooooo0000o`000005o`0000Kooooo00?o0000oooooooo
ool04Oooool00ol0003oooooooooo`0]ooooo`006_ooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo03[ooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0fooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool08?ooool3o`000003ooooool0003o000000Ko0000
1oooool3o`0000Cooooo0ol0000>ooooo`;o0000<?ooool001[ooooo00?o0000ooooooooool06ooo
ool00ol0003oooooooooo`0jooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool0=_oo
ool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo02Cooooo00?o0000ooooooooool00ol0
000=ooooo`;o00001Oooool3o`0000Wooooo0_l0000booooo`006_ooool00ol0003oooooooooo`0L
ooooo`03o`000?oooooooooo03[ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0U
ooooo`go00001?ooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo02Kooooo00?o0000
ooooooooool04?ooool00ol0003oooooooooo`05ooooo`?o000000?oooooo`000?l000000ol0000d
ooooo`006_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo03_ooooo00?o0000oooo
ooooool05Oooool00ol0003oooooooooo`0Uooooo`03o`000?oooooooooo00_ooooo0_l00002oooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooooooool09Oooool00ol0003oooooooooo`0Boooo
o`03o`000?oooooooooo00Oooooo00?o0000ooooooooool0=oooool001Wooooo00?o0000oooooooo
ool07Oooool00ol0003oooooooooo`0looooo`03o`000?oooooooooo01;ooooo0_l0000Vooooo`;o
00004?ooool01?l0003oooooooooool0000Kooooo`03o`000?oooooooooo02Gooooo00?o0000oooo
ooooool05?ooool00ol0003oooooooooo`10ooooo`006Oooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo03gooooo0_l0000Aooooo`03o`000?oooooooooo02Gooooo00?o0000oooooooo
ool04Oooool01?l0003oooooooooool0000Iooooo`03o`000?oooooooooo02Gooooo00?o0000oooo
ooooool05_ooool00ol0003oooooooooo`0oooooo`006Oooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo03oooooo00?o0000ooooooooool03?ooool2o`0002Oooooo00?o0000oooooooo
ool04oooool01?l0003oooooooooool0000Hooooo`03o`000?oooooooooo02Gooooo00?o0000oooo
ooooool05oooool00ol0003oooooooooo`0nooooo`006_ooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo043ooooo0ol00007ooooo`Co0000:?ooool00ol0003oooooooooo`0Eooooo`04
o`000?ooooooooooo`0001Kooooo00?o0000ooooooooool09Oooool00ol0003oooooooooo`0Ioooo
o`03o`000?oooooooooo03gooooo000Jooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool04oooool:o`0002Kooooo1ol0000[ooooo`03o`000?oooooooooo01Kooooo00Go0000oooooooo
ooooooooo`00000Dooooo`03o`000?oooooooooo02Kooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0mooooo`006_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo017o
oooo0_l0000:ooooo`03o`000?oooooooooo05Gooooo00?o0000ooooooooool05oooool01?l0003o
ooooooooooooool2o`00017ooooo00?o0000ooooooooool09oooool00ol0003oooooooooo`0Joooo
o`03o`000?oooooooooo03cooooo000Jooooo`03o`000?oooooooooo01_ooooo00?o0000oooooooo
ool03oooool3o`0000gooooo0ol0001Cooooo`03o`000?oooooooooo01Wooooo00?o0000oooooooo
ool00_ooool00ol0003oooooooooo`0<ooooo`;o0000:Oooool00ol0003oooooooooo`0Kooooo`03
o`000?oooooooooo03cooooo000Jooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
3_ooool00ol0003oooooooooo`0Aooooo`03o`000?oooooooooo053ooooo00?o0000ooooooooool0
6Oooool00ol0003oooooooooo`03ooooo`?o00002?ooool3o`0002_ooooo00?o0000ooooooooool0
6oooool00ol0003oooooooooo`0looooo`006oooool00ol0003oooooooooo`0Jooooo`03o`000?oo
oooooooo00gooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`1?ooooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool01Oooool8o`0002kooooo00?o0000ooooooooool06ooo
ool00ol0003oooooooooo`0looooo`007?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooo
oooo00gooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`1=ooooo`03o`000?oooooo
oooo01_ooooo00?o0000ooooooooool0>_ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooo
oooo03_ooooo000Looooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool03Oooool00ol0
003oooooooooo`0Fooooo`03o`000?oooooooooo04gooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`0jooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool0>oooool001go
oooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo01Oo
oooo00?o0000ooooooooool0Boooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo03[o
oooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0kooooo`007_ooool00ol0003ooooo
ooooo`0Cooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool06Oooool00ol0003ooooo
ooooo`1:ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool0>Oooool00ol0003ooooo
ooooo`0Mooooo`03o`000?oooooooooo03_ooooo000Oooooo`03o`000?oooooooooo017ooooo00?o
0000ooooooooool03oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo02Oooooo2_l0
000Iooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool0>Oooool00ol0003ooooooooo
o`0Mooooo`03o`000?oooooooooo03_ooooo000Pooooo`?o00003_ooool2o`0001;ooooo00?o0000
ooooooooool06_ooool00ol0003oooooooooo`0Tooooo`;o00002_ooool00ol0003oooooooooo`0F
ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool0>Oooool00ol0003oooooooooo`0L
ooooo`03o`000?oooooooooo03cooooo000Sooooo`?o00002_ooool00ol0003oooooooooo`0Aoooo
o`03o`000?oooooooooo01_ooooo00?o0000ooooooooool08Oooool3o`0000gooooo0ol0000Eoooo
o`03o`000?oooooooooo01gooooo00?o0000ooooooooool0>_ooool00ol0003oooooooooo`0Koooo
o`03o`000?oooooooooo01oooooo1_l0000Gooooo`004_ooool=o`0000Oooooo00?o0000oooooooo
ool01?ooool3o`0001Cooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Pooooo`03
o`000?oooooooooo017ooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo03[ooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0Mooooo`?o
00001_ooool4o`0001?ooooo000Aooooo`03o`000?oooooooooo00_ooooo0_l00006ooooo`Ko0000
5_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01oooooo00?o0000ooooooooool0
4oooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
>oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01[ooooo0ol0000=ooooo`;o0000
4Oooool0013ooooo00?o0000ooooooooool03_ooool00ol0003oooooooooo`0Oooooo`03o`000?oo
oooooooo01gooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Eooooo`03o`000?oo
oooooooo017ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0looooo`03o`000?oo
oooooooo01Wooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0@ooooo`03o`000?oo
oooooooo00kooooo000?ooooo`03o`000?oooooooooo013ooooo00?o0000ooooooooool07_ooool0
0ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool05_ooool0
0ol0003oooooooooo`0Aooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0?Oooool0
0ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool04_ooool0
0ol0003oooooooooo`0=ooooo`003_ooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo
01gooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
01Oooooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo
01Gooooo1Ol0000Sooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0Cooooo`03o`000?oooooooooo00cooooo000=ooooo`03o`000?oooooooooo01Co
oooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01_o
oooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0@ooooo`03o`000?oooooooooo01Wo
oooo00?o0000ooooooooool04Oooool4o`0000Gooooo1?l0000Pooooo`03o`000?oooooooooo01Ko
oooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo00_o
oooo000<ooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool07?ooool00ol0003ooooo
ooooo`0Mooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06Oooool00ol0003ooooo
ooooo`0@ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool04?ooool2o`0000gooooo
0_l0000Oooooo`;o00005?ooool2o`0001_ooooo00?o0000ooooooooool05_ooool00ol0003ooooo
ooooo`0;ooooo`003?ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01_ooooo00?o
0000ooooooooool07?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01[ooooo00?o
0000ooooooooool04?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00oooooo00?o
0000ooooooooool03oooool00ol0003oooooooooo`0Nooooo`03o`000?oooooooooo013ooooo00?o
0000ooooooooool06oooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo00[ooooo000;
ooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0K
ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0A
ooooo`;o00005_ooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo017ooooo00?o0000
ooooooooool07_ooool2o`0000oooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0I
ooooo`03o`000?oooooooooo00Wooooo000:ooooo`03o`000?oooooooooo01Wooooo00?o0000oooo
ooooool06oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01cooooo00?o0000oooo
ooooool06oooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo017ooooo0_l0000Boooo
o`03o`000?oooooooooo01;ooooo00?o0000ooooooooool07oooool3o`0000_ooooo00?o0000oooo
ooooool07?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo00Wooooo000:ooooo`03
o`000?oooooooooo01[ooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo01_ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Dooooo`03
o`000?oooooooooo00oooooo00?o0000ooooooooool04Oooool00ol0003oooooooooo`0Dooooo`03
o`000?oooooooooo027ooooo0_l00006ooooo`?o00007_ooool00ol0003oooooooooo`0Kooooo`03
o`000?oooooooooo00Sooooo0009ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
6oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0
7Oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo00cooooo0_l0000Cooooo`03o`00
0?oooooooooo01Gooooo00?o0000ooooooooool08oooool6o`00027ooooo00?o0000ooooooooool0
6oooool00ol0003oooooooooo`08ooooo`002Oooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0Looooo`03o`000?oo
oooooooo01gooooo00?o0000ooooooooool05Oooool3o`0000Wooooo0_l0000Dooooo`03o`000?oo
oooooooo01Oooooo00?o0000ooooooooool0BOooool00ol0003oooooooooo`0Kooooo`03o`000?oo
oooooooo00Sooooo0009ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool06oooool0
0ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool07Oooool0
0ol0003oooooooooo`0Hooooo`Wo00005Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooo
oooo04Oooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`08ooooo`002Oooool00ol0
003oooooooooo`0Looooo`03o`000?oooooooooo01cooooo0_l0000Fooooo`03o`000?oooooooooo
01gooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0fooooo`03o`000?oooooooooo
01Wooooo00?o0000ooooooooool0Aoooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo
00Oooooo0008ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool07_ooool00ol0003o
ooooooooo`0Aooooo`;o00008?ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo03Go
oooo00?o0000ooooooooool06oooool00ol0003oooooooooo`16ooooo`03o`000?oooooooooo01go
oooo00?o0000ooooooooool01oooool000Sooooo00?o0000ooooooooool07Oooool00ol0003ooooo
ooooo`0Oooooo`03o`000?oooooooooo00oooooo00?o0000ooooooooool08?ooool00ol0003ooooo
ooooo`0Looooo`03o`000?oooooooooo03Kooooo00?o0000ooooooooool06oooool00ol0003ooooo
ooooo`16ooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool01oooool000Sooooo00?o
0000ooooooooool07Oooool00ol0003oooooooooo`0Pooooo`03o`000?oooooooooo00cooooo0_l0
000Tooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0=_ooool00ol0003ooooooooo
o`0Looooo`03o`000?oooooooooo04Gooooo00?o0000ooooooooool07Oooool00ol0003ooooooooo
o`07ooooo`002Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo027ooooo0ol00009
ooooo`;o00009_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo03Oooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`15ooooo`03o`000?oooooooooo01cooooo00?o0000
ooooooooool02?ooool000Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Toooo
o`Wo0000:?ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo03Kooooo00?o0000oooo
ooooool07Oooool00ol0003oooooooooo`16ooooo`03o`000?oooooooooo01_ooooo00?o0000oooo
ooooool02?ooool000Wooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`1Fooooo`03
o`000?oooooooooo01Wooooo00?o0000ooooooooool0=_ooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo04Kooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`09ooooo`00
2Oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooooooo05Oooooo00?o0000ooooooooool0
6?ooool00ol0003oooooooooo`0gooooo`03o`000?oooooooooo01gooooo00?o0000ooooooooool0
A_ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00Wooooo0009ooooo`03o`000?oo
oooooooo01_ooooo00?o0000ooooooooool0F?ooool00ol0003oooooooooo`0Gooooo`03o`000?oo
oooooooo03Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`17ooooo`03o`000?oo
oooooooo01Wooooo00?o0000ooooooooool02Oooool000[ooooo00?o0000ooooooooool06Oooool0
0ol0003oooooooooo`1Jooooo`;o00005_ooool00ol0003oooooooooo`0iooooo`03o`000?oooooo
oooo01cooooo00?o0000ooooooooool0Aoooool00ol0003oooooooooo`0Hooooo`03o`000?oooooo
oooo00[ooooo000;ooooo`03o`000?oooooooooo01Oooooo00?o0000ooooooooool0GOooool00ol0
003oooooooooo`0Aooooo`;o0000??ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
04Oooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0:ooooo`003?ooool00ol0003o
ooooooooo`0Fooooo`03o`000?oooooooooo05kooooo00?o0000ooooooooool03oooool00ol0003o
ooooooooo`0looooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool0BOooool00ol0003o
ooooooooo`0Fooooo`03o`000?oooooooooo00_ooooo000=ooooo`03o`000?oooooooooo01Cooooo
00?o0000ooooooooool03Oooool=o`0004Kooooo00?o0000ooooooooool03?ooool2o`0003oooooo
00?o0000ooooooooool06oooool00ol0003oooooooooo`1:ooooo`;o00005?ooool2o`0000kooooo
000>ooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool03Oooool00ol0003ooooooooo
o`0;ooooo`03o`000?oooooooooo04Cooooo0ol00009ooooo`;o0000@_ooool00ol0003ooooooooo
o`0Jooooo`03o`000?oooooooooo04cooooo00?o0000ooooooooool04?ooool00ol0003ooooooooo
o`0>ooooo`003oooool2o`00017ooooo00?o0000ooooooooool03?ooool2o`0000oooooo00?o0000
ooooooooool0A_ooool9o`0004Gooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`1>
ooooo`03o`000?oooooooooo00kooooo00?o0000ooooooooool03oooool0017ooooo00?o0000oooo
ooooool03?ooool2o`0000gooooo0_l0000Booooo`;o0000U?ooool00ol0003oooooooooo`0Goooo
o`03o`000?oooooooooo053ooooo00?o0000ooooooooool03?ooool00ol0003oooooooooo`0@oooo
o`004_ooool3o`0000Sooooo0ol0000?ooooo`03o`000?oooooooooo01?ooooo00?o0000oooooooo
ool0T_ooool00ol0003oooooooooo`0Eooooo`03o`000?oooooooooo05;ooooo0ol00008ooooo`?o
00004oooool001Gooooo2?l0000Aooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool0
T_ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo05Kooooo2?l0000Fooooo`00;Ooo
ool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo06Oooooo2_l0000Rooooo`03o`000?oo
oooooooo017ooooo00?o0000ooooooooool08_ooool7o`0004cooooo000/ooooo`03o`000?oooooo
oooo01Sooooo00?o0000ooooooooool0I?ooool2o`0000[ooooo00?o0000ooooooooool08?ooool3
o`0000kooooo0_l0000Qooooo`Co00001oooool3o`0004Wooooo000[ooooo`03o`000?oooooooooo
01Wooooo00?o0000ooooooooool0H_ooool2o`0000gooooo0ol0000Rooooo`?o00002_ooool00ol0
003oooooooooo`0Oooooo`;o00003_ooool00ol0003oooooooooo`16ooooo`00:oooool00ol0003o
ooooooooo`0Iooooo`03o`000?oooooooooo04Cooooo3Ol0000@ooooo`03o`000?oooooooooo013o
oooo00?o0000ooooooooool08_ooool00ol0003oooooooooo`04ooooo`?o00008Oooool00ol0003o
ooooooooo`0?ooooo`03o`000?oooooooooo04Gooooo000Zooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool0@_ooool00ol0003oooooooooo`0;ooooo`;o00003?ooool2o`0001Cooooo
00?o0000ooooooooool08_ooool6o`0002?ooooo00?o0000ooooooooool04Oooool2o`0004Gooooo
000Zooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0@?ooool00ol0003ooooooooo
o`0>ooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool05Oooool00ol0003ooooooooo
o`19ooooo`03o`000?oooooooooo01Cooooo00?o0000ooooooooool0@_ooool002[ooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0oooooo`03o`000?oooooooooo013ooooo00?o0000
ooooooooool01_ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo04Sooooo00?o0000
ooooooooool05_ooool00ol0003oooooooooo`11ooooo`00:_ooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooooooo03gooooo0_l0000Dooooo`03o`000?oooooooooo00Gooooo00?o0000oooo
ooooool05oooool00ol0003oooooooooo`17ooooo`03o`000?oooooooooo01Kooooo00?o0000oooo
ooooool0@Oooool002[ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0looooo`03
o`000?oooooooooo01Gooooo00?o0000ooooooooool00oooool00ol0003oooooooooo`0Iooooo`03
o`000?oooooooooo04Gooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`10ooooo`00
6_ooool5o`0000_ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0kooooo`03o`00
0?oooooooooo01Kooooo00?o0000ooooooooool00oooool00ol0003oooooooooo`0Iooooo`03o`00
0?oooooooooo04Cooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`10ooooo`005_oo
ool4o`0000Gooooo1?l00007ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool01_oo
ool8o`0002gooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`02ooooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool0@oooool00ol0003oooooooooo`0Jooooo`03o`000?oo
oooooooo03oooooo000Dooooo`;o00003Oooool2o`0000Gooooo00?o0000ooooooooool07?ooool0
0ol0003oooooooooo`04ooooo`;o00002?ooool3o`0002Wooooo00?o0000ooooooooool06Oooool0
1?l0003oooooooooool0000Mooooo`03o`000?oooooooooo04;ooooo00?o0000ooooooooool07?oo
ool00ol0003oooooooooo`0nooooo`004oooool00ol0003oooooooooo`0?ooooo`03o`000?oooooo
oooo00;ooooo00?o0000ooooooooool07?ooool01?l0003oooooooooooooool3o`0000gooooo0ol0
000Vooooo`03o`000?oooooooooo01Wooooo00Co0000oooooooooooo00007Oooool00ol0003ooooo
ooooo`12ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0?_ooool001;ooooo00?o
0000ooooooooool04Oooool01Ol0003ooooooooooooooooo000001kooooo00Co0000oooooooooooo
00004oooool00ol0003oooooooooo`0Sooooo`03o`000?oooooooooo01[ooooo0_l0000Oooooo`03
o`000?oooooooooo047ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0nooooo`00
4_ooool00ol0003oooooooooo`0Booooo`04o`000?ooooooooooo`0001gooooo00Co0000oooooooo
oooo00005?ooool00ol0003oooooooooo`0Rooooo`03o`000?oooooooooo01_ooooo0_l0000Ooooo
o`03o`000?oooooooooo047ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0noooo
o`004Oooool00ol0003oooooooooo`0Dooooo`04o`000?ooooooooooo`0001cooooo00?o0000oooo
ool000005_ooool00ol0003oooooooooo`0Qooooo`03o`000?oooooooooo01cooooo00?o0000oooo
ooooool07Oooool00ol0003oooooooooo`11ooooo`03o`000?oooooooooo01cooooo00?o0000oooo
ooooool0?_ooool0013ooooo00?o0000ooooooooool05Oooool01?l0003oooooooooool0000Loooo
o`;o00006?ooool00ol0003oooooooooo`0Oooooo`03o`000?oooooooooo01gooooo00?o0000oooo
ooooool07Oooool00ol0003oooooooooo`0Hooooo`So00008Oooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooooooo03kooooo000?ooooo`03o`000?oooooooooo01Oooooo00Co0000oooooooo
oooo00006_ooool00ol0003oooooo`00000Iooooo`03o`000?oooooooooo01kooooo00?o0000oooo
ooooool07Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01Kooooo0_l00008oooo
o`?o00007_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo03kooooo000>ooooo`03
o`000?oooooooooo01Wooooo00?o0000ooooool000006_ooool2o`0001_ooooo00?o0000oooooooo
ool07Oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01gooooo00?o0000oooooooo
ool04oooool3o`0000gooooo0ol0000Kooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool0?_ooool000kooooo00?o0000ooooooooool06Oooool01?l0003oooooooooool0000Iooooo`;o
00006oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01gooooo00?o0000oooooooo
ool07Oooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo017ooooo00?o0000oooooooo
ool06?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo03kooooo000=ooooo`03o`00
0?oooooooooo01_ooooo00Co0000oooooooooooo00005oooool00ol0003oooooo`00000Looooo`03
o`000?oooooooooo01cooooo00?o0000ooooooooool07Oooool2o`0001kooooo00?o0000oooooooo
ool04Oooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo01Sooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0nooooo`003Oooool00ol0003oooooooooo`0Kooooo`05o`00
0?ooooooooooooooool000005?ooool2o`000003ooooool0003ooooo01cooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0Mooooo`;o00007Oooool00ol0003oooooooooo`0Aooooo`03
o`000?oooooooooo01Cooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0Jooooo`03
o`000?oooooooooo03oooooo000=ooooo`03o`000?oooooooooo01cooooo00Co0000oooooooooooo
oooo0_l0000Aooooo`05o`000?ooooooooooooooool000007Oooool00ol0003oooooooooo`0Moooo
o`03o`000?oooooooooo01cooooo0_l0000Mooooo`03o`000?oooooooooo013ooooo00?o0000oooo
ooooool05_ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01[ooooo00?o0000oooo
ooooool0?oooool000cooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`03ooooo`03
o`000?oooooooooo00cooooo0_l00003ooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool07Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001cooooo00?o0000oooooooo
ool04?ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo01Oooooo00?o0000oooooooo
ool06Oooool00ol0003oooooooooo`0oooooo`003?ooool00ol0003oooooooooo`0Mooooo`03o`00
0?oooooooooo00Cooooo0ol00009ooooo`;o00001Oooool00ol0003oooooooooo`0Mooooo`03o`00
0?oooooooooo01cooooo00?o0000ooooooooool06oooool01Ol0003ooooooooooooooooo000001[o
oooo00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01Ko
oooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`10ooooo`003?ooool00ol0003ooooo
ooooo`0Mooooo`03o`000?oooooooooo00Oooooo2Ol00007ooooo`03o`000?oooooooooo01gooooo
00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Kooooo`05o`000?ooooooooooooooool0
00006Oooool00ol0003oooooooooo`0Aooooo`03o`000?oooooooooo01Wooooo00?o0000oooooooo
ool05_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo043ooooo000<ooooo`03o`00
0?oooooooooo01gooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Mooooo`03o`00
0?oooooooooo01gooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`03ooooo`;o0000
5_ooool00ol0003oooooooooo`0Booooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool0
5_ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo047ooooo000<ooooo`03o`000?oo
oooooooo01gooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Mooooo`03o`000?oo
oooooooo01kooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`06ooooo`03o`000?oo
oooooooo01;ooooo00?o0000ooooooooool04_ooool00ol0003oooooooooo`0Kooooo`03o`000?oo
oooooooo01Oooooo00?o0000ooooooooool04oooool2o`0004Cooooo000<ooooo`03o`000?oooooo
oooo01gooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Mooooo`03o`000?oooooo
oooo01kooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`07ooooo`;o00004Oooool0
0ol0003oooooooooo`0Cooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06?ooool0
0ol0003oooooooooo`0Aooooo`03o`000?oooooooooo04Cooooo000=ooooo`03o`000?oooooooooo
01cooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo
023ooooo0_l0000Fooooo`03o`000?oooooooooo00[ooooo00?o0000ooooooooool03?ooool2o`00
01Gooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Iooooo`?o00003_ooool2o`00
04Oooooo000=ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06Oooool00ol0003o
ooooooooo`0Kooooo`03o`000?oooooooooo02;ooooo00?o0000ooooooooool04_ooool00ol0003o
ooooooooo`0<ooooo`?o00002?ooool3o`0001Oooooo00?o0000ooooooooool07Oooool00ol0003o
ooooooooo`0Kooooo`?o00002_ooool00ol0003oooooooooo`17ooooo`003Oooool00ol0003ooooo
ooooo`0Kooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool06_ooool00ol0003ooooo
ooooo`0Tooooo`;o00004Oooool00ol0003oooooooooo`0@ooooo`So00006_ooool00ol0003ooooo
ooooo`0Mooooo`03o`000?oooooooooo01kooooo0_l00004ooooo`Co0000B_ooool000kooooo00?o
0000ooooooooool06_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01[ooooo00?o
0000ooooooooool09_ooool00ol0003oooooooooo`0<ooooo`;o0000=Oooool00ol0003ooooooooo
o`0Mooooo`03o`000?oooooooooo01Oooooo3Ol0001>ooooo`003oooool00ol0003oooooooooo`0H
ooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0W
ooooo`?o00002?ooool3o`0003Oooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0F
ooooo`03o`000?oooooooooo00_ooooo0_l0001<ooooo`003oooool00ol0003oooooooooo`0Goooo
o`03o`000?oooooooooo01cooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`0[oooo
o`So0000>_ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01Cooooo0_l0000@oooo
o`03o`000?oooooooooo04Wooooo000@ooooo`03o`000?oooooooooo01Gooooo00?o0000oooooooo
ool07_ooool00ol0003oooooooooo`0Gooooo`03o`000?oooooooooo06gooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo017ooooo00?o0000oooooooo
ool0B?ooool0017ooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`0Pooooo`03o`00
0?oooooooooo01Gooooo00?o0000ooooooooool0Koooool00ol0003oooooooooo`0Kooooo`03o`00
0?oooooooooo01?ooooo00?o0000ooooooooool04oooool00ol0003oooooooooo`17ooooo`004_oo
ool00ol0003oooooooooo`0Aooooo`03o`000?oooooooooo02;ooooo00?o0000ooooooooool04_oo
ool2o`0007;ooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0Cooooo`03o`000?oo
oooooooo01Gooooo00?o0000ooooooooool0A_ooool001?ooooo0_l0000?ooooo`;o000000?ooooo
o`000?l000001Ol0000Nooooo`03o`000?oooooooooo013ooooo00?o0000ooooooooool0L_ooool0
0ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool05_ooool0
0ol0003oooooooooo`16ooooo`005Oooool00ol0003oooooooooo`0;ooooo`Co00001oooool3o`00
01cooooo0_l0000>ooooo`;o0000M_ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo
01;ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Eooooo`[o00009_ooool001Ko
oooo0ol00007ooooo`Co00003Oooool2o`0001cooooo0ol00009ooooo`;o0000N?ooool00ol0003o
ooooooooo`0Hooooo`03o`000?oooooooooo01;ooooo00?o0000ooooooooool06Oooool00ol0003o
ooooooooo`0Booooo`;o00002_ooool00ol0003oooooooooo`0Sooooo`006Oooool8o`0001;ooooo
00?o0000ooooooooool07?ooool3o`0000?ooooo0ol0001jooooo`03o`000?oooooooooo01Sooooo
00?o0000ooooooooool04Oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo00oooooo
0ol0000=ooooo`?o00008_ooool001oooooo00?o0000ooooooooool04_ooool00ol0003ooooooooo
o`0Nooooo`?o0000O_ooool00ol0003oooooooooo`0Fooooo`03o`000?oooooooooo01;ooooo00?o
0000ooooooooool06oooool00ol0003oooooooooo`0=ooooo`03o`000?oooooooooo017ooooo00?o
0000ooooooooool07oooool001kooooo00?o0000ooooooooool05?ooool00ol0003oooooooooo`2O
ooooo`;o00005?ooool2o`0001Cooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0<
ooooo`03o`000?oooooooooo01?ooooo00?o0000ooooooooool07_ooool001gooooo00?o0000oooo
ooooool05_ooool00ol0003oooooooooo`2Pooooo`03o`000?oooooooooo013ooooo00?o0000oooo
ooooool05?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo00_ooooo00?o0000oooo
ooooool05Oooool00ol0003oooooooooo`0Mooooo`007Oooool00ol0003oooooooooo`0Gooooo`03
o`000?oooooooooo0:3ooooo0_l0000?ooooo`03o`000?oooooooooo01Gooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0:ooooo`03o`000?oooooooooo01Kooooo00?o0000oooooooo
ool07Oooool001cooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Uooooo`Oo0000
MOooool3o`0000_ooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo00[ooooo00?o0000ooooooooool05oooool00ol0003oooooooooo`0Looooo`007?oo
ool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo027ooooo1?l00007ooooo`?o0000MOoo
ool3o`0000?ooooo1Ol0000Iooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02Ooo
ool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01_ooooo000Looooo`03o`000?oooooo
oooo01[ooooo00?o0000ooooooooool07_ooool2o`0000kooooo00?o0000ooooooooool0Boooool>
o`0001cooooo0ol0000Nooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02Oooool0
0ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01_ooooo000Kooooo`03o`000?oooooooooo
01_ooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0?ooooo`03o`000?oooooooooo
04Wooooo00?o0000ooooooooool03?ooool00ol0003oooooooooo`0jooooo`03o`000?oooooooooo
01cooooo00?o0000ooooooooool02Oooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo
01[ooooo000Kooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool07?ooool00ol0003o
ooooooooo`0Aooooo`;o0000B?ooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo02co
oooo1Ol00008ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool02?ooool00ol0003o
ooooooooo`0Kooooo`03o`000?oooooooooo01[ooooo000Kooooo`03o`000?oooooooooo01_ooooo
00?o0000ooooooooool06oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo04Cooooo
00?o0000ooooooooool04?ooool00ol0003oooooooooo`0Xooooo`?o00001Oooool5o`0000?ooooo
00?o0000ooooooooool07?ooool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool06_ooool001[ooooo00?o0000ooooooooool07Oooool00ol0003ooooooooo
o`0Iooooo`03o`000?oooooooooo01Kooooo00?o0000ooooooooool0@_ooool00ol0003ooooooooo
o`0Booooo`03o`000?oooooooooo02Cooooo0ol0000=ooooo`;o000000?oooooo`000?ooool07Ooo
ool00ol0003oooooooooo`07ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool06_oo
ool001[ooooo00?o0000ooooooooool07Oooool00ol0003oooooooooo`0Iooooo`03o`000?oooooo
oooo01Kooooo00?o0000ooooooooool0@Oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooo
oooo02;ooooo00?o0000ooooooooool04?ooool00ol0003oooooo`00000Looooo`03o`000?oooooo
oooo00Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Jooooo`006_ooool00ol0
003oooooooooo`0Mooooo`03o`000?oooooooooo01Sooooo00?o0000ooooooooool06?ooool00ol0
003oooooooooo`0oooooo`03o`000?oooooooooo01Gooooo00?o0000ooooooooool08Oooool00ol0
003oooooooooo`0Booooo`;o00007?ooool00ol0003oooooooooo`08ooooo`03o`000?oooooooooo
01cooooo00?o0000ooooooooool06_ooool001[ooooo00?o0000ooooooooool07Oooool00ol0003o
ooooooooo`0Gooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool03?ooool6o`0002go
oooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Pooooo`03o`000?oooooooooo01?o
oooo0_l0000Kooooo`03o`000?oooooooooo00Sooooo00?o0000ooooooooool07Oooool00ol0003o
ooooooooo`0Iooooo`006_ooool00ol0003oooooooooo`0Mooooo`03o`000?oooooooooo01Oooooo
00?o0000ooooooooool06_ooool00ol0003oooooooooo`08ooooo`?o00001_ooool4o`0002Sooooo
00?o0000ooooooooool06?ooool00ol0003oooooooooo`0Nooooo`03o`000?oooooooooo01Gooooo
00?o0000ooooooooool06?ooool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01cooooo
00?o0000ooooooooool06_ooool001[ooooo00?o0000ooooooooool07?ooool00ol0003ooooooooo
o`0Gooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool01Oooool2o`0000gooooo0_l0
000Uooooo`03o`000?oooooooooo01Wooooo00?o0000ooooooooool07Oooool00ol0003ooooooooo
o`0Fooooo`;o00006Oooool00ol0003oooooooooo`09ooooo`03o`000?oooooooooo01cooooo00?o
0000ooooooooool06_ooool001_ooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0G
ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool01?ooool00ol0003oooooooooo`0?
ooooo`03o`000?oooooooooo02;ooooo00?o0000ooooooooool06_ooool00ol0003oooooooooo`0K
ooooo`03o`000?oooooooooo01Sooooo0_l0000Gooooo`03o`000?oooooooooo00[ooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Jooooo`006oooool00ol0003oooooooooo`0Joooo
o`03o`000?oooooooooo01Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`03oooo
o`03o`000?oooooooooo017ooooo00?o0000ooooooooool08?ooool00ol0003oooooooooo`0Koooo
o`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06_ooool2o`0001Cooooo0_l0000=oooo
o`03o`000?oooooooooo01cooooo00?o0000ooooooooool06_ooool001_ooooo00?o0000oooooooo
ool06_ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo01cooooo00?o0000oooooooo
ool00_ooool00ol0003oooooooooo`0Cooooo`03o`000?oooooooooo01oooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0Iooooo`03o`000?oooooooooo01[ooooo00Co0000ooooool0
003o00004Oooool00ol0003oooooooooo`0>ooooo`03o`000?oooooooooo01[ooooo00?o0000oooo
ooooool06oooool001cooooo00?o0000ooooooooool06Oooool00ol0003oooooooooo`0Hooooo`03
o`000?oooooooooo01cooooo00Go0000ooooooooooooooooo`00000Gooooo`03o`000?oooooooooo
01kooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo
01cooooo00Co0000oooooooooooo00003_ooool2o`00017ooooo00?o0000ooooooooool06_ooool0
0ol0003oooooooooo`0Kooooo`007?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooooooo
01Wooooo00?o0000ooooooooool07?ooool01?l0003oooooooooool0000Hooooo`03o`000?oooooo
oooo01kooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Hooooo`03o`000?oooooo
oooo01cooooo00Co0000oooooooooooooooo0ol00009ooooo`;o00005?ooool00ol0003ooooooooo
o`0Iooooo`03o`000?oooooooooo01_ooooo000Looooo`03o`000?oooooooooo01Sooooo00?o0000
ooooooooool06Oooool00ol0003oooooooooo`0Looooo`04o`000?ooooooooooo`0001Wooooo00?o
0000ooooooooool07Oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01Sooooo00?o
0000ooooooooool07?ooool00ol0003oooooooooo`04ooooo`Wo00005_ooool00ol0003ooooooooo
o`0Hooooo`03o`000?oooooooooo01cooooo000Mooooo`03o`000?oooooooooo01Kooooo00?o0000
ooooooooool06_ooool00ol0003oooooooooo`0Looooo`03o`000?oooooo000001_ooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01Sooooo00?o0000
ooooooooool07?ooool00ol0003oooooooooo`0Tooooo`03o`000?oooooooooo01Oooooo00?o0000
ooooooooool07?ooool001kooooo0_l0000Dooooo`;o00007Oooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooo000001_ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Loooo
o`03o`000?oooooooooo01Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Uoooo
o`;o00005_ooool00ol0003oooooooooo`0Mooooo`008?ooool00ol0003oooooooooo`0@ooooo`03
o`000?oooooooooo01gooooo00?o0000ooooooooool07?ooool2o`0001gooooo00?o0000oooooooo
ool06oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01Sooooo00?o0000oooooooo
ool07?ooool00ol0003oooooooooo`0Wooooo`03o`000?oooooooooo017ooooo0_l0000Pooooo`00
8Oooool2o`0000oooooo00?o0000ooooooooool07oooool00ol0003oooooooooo`0Jooooo`03o`00
0?oooooo000001gooooo00?o0000ooooooooool06oooool00ol0003oooooooooo`0Looooo`03o`00
0?oooooooooo01Sooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Xooooo`03o`00
0?oooooooooo00oooooo00?o0000ooooooooool08?ooool002?ooooo0ol0000;ooooo`03o`000?oo
oooooooo023ooooo00?o0000ooooooooool06_ooool00ol0003oooooo`00000Nooooo`03o`000?oo
oooooooo01[ooooo00?o0000ooooooooool07?ooool00ol0003oooooooooo`0Hooooo`03o`000?oo
oooooooo01cooooo00?o0000ooooooooool0:Oooool00ol0003oooooooooo`0<ooooo`;o00008ooo
ool002Kooooo0_l00006ooooo`?o00009?ooool00ol0003oooooooooo`0Iooooo`;o00007oooool0
0ol0003oooooooooo`0Jooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06Oooool0
0ol0003oooooooooo`0Looooo`03o`000?oooooooooo02[ooooo0ol00009ooooo`;o00009Oooool0
02Sooooo1_l0000Wooooo`03o`000?oooooooooo01Sooooo00?o0000ooooool000007oooool00ol0
003oooooooooo`0Jooooo`03o`000?oooooooooo01_ooooo00?o0000ooooooooool06Oooool00ol0
003oooooooooo`0Looooo`03o`000?oooooooooo02gooooo2Ol0000Wooooo`00EOooool00ol0003o
ooooooooo`0Gooooo`04o`000?ooooooooooo`0001oooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`0Iooooo`03o`000?oooooooooo01[ooooo00?o0000ooooooooool06oooool00ol0
003oooooooooo`1Nooooo`00E_ooool00ol0003oooooooooo`0Eooooo`05o`000?oooooooooooooo
ool000007oooool00ol0003oooooooooo`0Looooo`03o`000?oooooooooo01Oooooo00?o0000oooo
ooooool07?ooool00ol0003oooooooooo`0Jooooo`03o`000?oooooooooo05kooooo001Gooooo`03
o`000?oooooooooo01?ooooo00?o0000ooooooooool00_ooool00ol0003oooooooooo`0Mooooo`03
o`000?oooooooooo01gooooo00?o0000ooooooooool05_ooool00ol0003oooooooooo`0Looooo`03
o`000?oooooooooo01[ooooo00?o0000ooooooooool0G_ooool005Sooooo00?o0000ooooooooool0
4Oooool00ol0003oooooooooo`03ooooo`03o`000?oooooooooo01cooooo00?o0000ooooooooool0
7oooool00ol0003oooooooooo`0Dooooo`03o`000?oooooooooo01kooooo00?o0000ooooooooool0
6?ooool00ol0003oooooooooo`1Oooooo`00FOooool3o`0000kooooo0_l00007ooooo`03o`000?oo
oooooooo01_ooooo00?o0000ooooooooool08?ooool00ol0003oooooooooo`0Booooo`03o`000?oo
oooooooo01oooooo00?o0000ooooooooool06?ooool00ol0003oooooooooo`1Oooooo`00G?ooool3
o`0000[ooooo00?o0000ooooooooool01oooool00ol0003oooooooooo`0Kooooo`03o`000?oooooo
oooo027ooooo0_l0000Aooooo`03o`000?oooooooooo027ooooo00?o0000ooooooooool05_ooool0
0ol0003oooooooooo`1Pooooo`00Goooool00ol0003oooooooooo`04ooooo`?o00002_ooool00ol0
003oooooooooo`0Kooooo`03o`000?oooooooooo02?ooooo00?o0000ooooooooool03?ooool2o`00
02Gooooo00?o0000ooooooooool04oooool2o`0006?ooooo001Pooooo`Ko00003_ooool00ol0003o
ooooooooo`0Jooooo`03o`000?oooooooooo02Cooooo0ol00009ooooo`;o0000:?ooool00ol0003o
ooooooooo`0Aooooo`03o`000?oooooooooo06?ooooo001eooooo`03o`000?oooooooooo01Sooooo
00?o0000ooooooooool0:?ooool9o`0002_ooooo0_l0000?ooooo`;o0000I_ooool007Gooooo00?o
0000ooooooooool05oooool00ol0003oooooooooo`1Oooooo`03o`000?oooooooooo00_ooooo00?o
0000ooooooooool0I_ooool007Kooooo00?o0000ooooooooool05Oooool00ol0003oooooooooo`1Q
ooooo`?o00001oooool3o`0006Wooooo001fooooo`;o00005Oooool00ol0003oooooooooo`1Uoooo
o`Oo0000K?ooool007Sooooo00?o0000ooooooooool04Oooool00ol0003oooooooooo`3Iooooo`00
NOooool00ol0003oooooooooo`0>ooooo`;o0000g?ooool007[ooooo00?o0000ooooooooool03?oo
ool00ol0003oooooooooo`3Looooo`00Noooool3o`0000Sooooo0ol0003Oooooo`00O_ooool8o`00
0>;ooooo003oooooofWooooo003oooooofWooooo003oooooofWooooo003oooooofWooooo003ooooo
ofWooooo0000\
\>"],
  ImageRangeCache->{{{0, 359}, {231.562, 0}} -> {-1.46846, -1.34353, \
0.0790491, 0.0790491}}],

Cell[BoxData[
    TagBox[\(\[SkeletonIndicator]  Graphics  \[SkeletonIndicator]\),
      False,
      Editable->False]], "Output",
  CellLabel->"Out[108]="]
}, Open  ]],

Cell[BoxData[{
    \(\(closest = \(Sort[
            Table[{d2[jjc[\([i]\)], jjc[\([j]\)]], i, j}, {i, 1, 
                  Length[jjc]}, {j, i + 1, Length[jjc]}]~Flatten~
              1]\)[\([1]\)];\)\), "\[IndentingNewLine]", 
    \(\(edge\  = \ {{47, 48}};\)\), "\[IndentingNewLine]", 
    \(process[{i_, j_}] := \ 
      Module[{xi, xj}, xi\  = \ jjc[\([i]\)]; \ 
        xj\  = \ jjc[\([j]\)]; \[IndentingNewLine]rhs\  = \ 
          Select[jjc, 
            Det[{# - xi, xj - xi}] > 0.0001]; \[IndentingNewLine]lhs\  = \ 
          Select[jjc, 
            Det[{# - xi, 
                  xj - xi}] < \(-0.0001\)];\[IndentingNewLine]]\)}], "Input",
  CellLabel->"In[98]:="],

Cell[BoxData[
    \(\[IndentingNewLine]\)], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Packing Chapter", "Subsection"],

Cell[BoxData[
    \(\(\( (*\ 
      Plot\ Marchal\ function\ *) \)\(\[IndentingNewLine]\)\(\
\[IndentingNewLine]\)\(\[IndentingNewLine]\)\( (*\ "\<TULIGLY\>"\ *) \)\(\
\[IndentingNewLine]\)\(\(TULIGLYdata := 
        PlotData[1, Sqrt[2], 20, 
          marchalQuartic, "\</tmp/TULIGLY.table\>"];\)\[IndentingNewLine]
    \(BJLIEKBdata := \ 
        PlotData[1.2, 1.35, 20, 
          marchalQuartic, "\</tmp/BJLIEKB.table\>"];\)\[IndentingNewLine] (*\ 
      TULIGLYdata; \ BJLIEKBdata\ *) \[IndentingNewLine]
    pad[N[Pi]]\[IndentingNewLine]
    Lfun[1.2]\)\)\)], "Input",
  CellLabel->"SphereIn[1884]:="],

Cell[BoxData[
    \(\(\( (*\ 
      Musin - Tarasov\ *) \)\(\[IndentingNewLine]\)\(\(rot[u_] := \ 
        Module[{e1, e2}, \  (*\ pick\ viewpoint\ *) \[IndentingNewLine]\t
          e1 = {1, 0.3, 0}; \[IndentingNewLine]\t
          e2\  = \ {0, 1, 0} + {0, 0, 
                5}; \[IndentingNewLine]\ \ \ \ \ \ \ \ \ \ e3\  = \ {0, 1, 
              0}; \[IndentingNewLine]\ \ \ \ \ e1\  = \ 
            e1/Sqrt[e1 . e1]; \[IndentingNewLine]\ \ \ \ \ \ \ e2\  = \ 
            e2\  - \ \((e1 . 
                    e2)\)\ e1; \[IndentingNewLine]\ \ \ \ \ \ e2\  = \ 
            e2/Sqrt[e2 . e2]; \[IndentingNewLine]\ \ \ \ \ e3\  = \ 
            e3\  - \ \((e1 . e3)\)\ e1\  - \ \((e2 . 
                    e3)\)\ e2; \[IndentingNewLine]\ \ \ \ e3\  = \ \ e3/
              Sqrt[e3 . e3]; \ \[IndentingNewLine]{u . e3, u . e1, 
            u . e2}];\)\ \ \[IndentingNewLine]
    \(ThirteenSpheres = s13;\)\[IndentingNewLine]
    \(s13a\  = \ Map[rot, ThirteenSpheres] // Sort;\)\[IndentingNewLine]
    \(data\  := \ 
        Module[{o1}, \[IndentingNewLine]o1\  = \ 
            OpenWrite["\</tmp/1\>"]; \[IndentingNewLine]Do[
            WriteString[o1, "\<\\rr{\>", s13a[\([i, 2]\)], "\<}{\>", 
              s13a[\([i, 3]\)], "\<}\n\>"], {i, 1, 
              Length[s13a]}]; \[IndentingNewLine]Close[
            o1];\[IndentingNewLine]];\)\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[298]:="],

Cell[BoxData[
    \(\(\(\[IndentingNewLine]\)\( (*\ 
      2  d\ lattice\ *) \)\(\[IndentingNewLine]\)\(data\  := \ 
        Module[{o1, v, i, j}, \[IndentingNewLine]o1\  = \ 
            OpenWrite["\</tmp/2\>"]; \[IndentingNewLine]v[i_, j_] := \ 
            N[i\ {2, 0}\  + \ j {1, Sqrt[3]}]; \[IndentingNewLine]Do[
            WriteString[
              o1, "\<\\rr{\>", \(v[i, j]\)[\([1]\)], "\<}{\>", \(v[i, 
                  j]\)[\([2]\)], "\<}\n\>"], {i, \(-5\), 5}, {j, \(-2\), 
              1}]; \[IndentingNewLine]Close[o1]];\)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[313]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \(data\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[314]:="],

Cell[BoxData[
    \("/tmp/2"\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[314]="],

Cell[BoxData[
    \(\(\(\n\)\(\*"\"\<\>"\)\)\)], "Print",
  CellLabel->"From SphereIn[1812]:=",
  GeneratedCell->False,
  CellAutoOverwrite->False],

Cell[BoxData[
    TagBox[
      InterpretationBox["\<\"3.1406\"\>",
        3.140625,
        AutoDelete->True],
      (PaddedForm[ #, 5, NumberPadding -> {"", "0"}]&)]], "Output",
  CellLabel->"SphereOut[1817]//PaddedForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?Print\)\)], "Input",
  CellLabel->"SphereIn[1728]:="],

Cell[BoxData[
    RowBox[{"\<\"Print[expr1, expr2, ... ] prints the expri concatenated \
together.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"Print",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3483501520-5284256"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(?NumberPadding\)\)], "Input",
  CellLabel->"SphereIn[1793]:="],

Cell[BoxData[
    RowBox[{"\<\"NumberPadding is an option for NumberForm and related \
functions which gives strings to use as padding on the left- and right-hand \
sides of numbers.\"\>", " ", 
      ButtonBox[
        StyleBox["More\[Ellipsis]",
          "SR"],
        ButtonData:>"NumberPadding",
        Active->True,
        ButtonStyle->"RefGuideLink"]}]], "Print",
  CellTags->"Info3483502310-5352912"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Figure \"JXEHXQY\"", "Subsection"],

Cell[BoxData[{
    \(\(Clear[w1, w0, w2, yval, fWithoutBeta, 
        fWithBeta];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\({w1, w0, w2, yval, fWithoutBeta, fWithBeta} = 
        Module[{yy, dd, f, g, d2, dd2, yOfW, ff, gg, qq, wstart, qq0, qq1, 
            wfinish}, \[IndentingNewLine]yy\  = \ {2.52, 2, 2, 2, 2, 2, 2, 2, 
              2, 2, 2, 2, 2}; \n
          dd[w_, y_] := \ 
            Module[{}, {y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, 
                  y13} = yy; \[IndentingNewLine]Dihedral[w, y2, y3, y, y5, 
                  y6] + Dihedral[w, y3, y7, y9, y12, y5] + 
                Dihedral[w, y7, y8, y10, y13, y12] + 
                Dihedral[w, y8, y2, y11, y6, y13]\ ]; \n
          f[w_, y_] := 
            Module[{}, {y1, y2, y3, y4, y5, y6, y7, y8, y9, y10, y11, y12, 
                  y13} = yy; \[IndentingNewLine]gamma4L[w, y2, y3, y, y5, y6]/
                  2 + gamma4L[w, y3, y7, y9, y12, y5] + 
                gamma4L[w, y7, y8, y10, y13, y12] + 
                gamma4L[w, y8, y2, y11, y6, y13]]; \[IndentingNewLine]g[w_, 
              y_] := \ f[w, y] + \ 
              betaBumpForceY[w, 2, 2, y, 2, 2]; \[IndentingNewLine]dw = 
            dd[w, y] // Simplify; \n
          ddw = \ y /. \((Last[
                  Solve[dw \[Equal] 2  Pi, y] // 
                    Simplify])\); \[IndentingNewLine]yOfW[u_] := \ 
            N[ddw /. w \[Rule] u]; \[IndentingNewLine]ff[u_] := \ 
            f[u, yOfW[u]]; \[IndentingNewLine]gg[u_]\  := \ 
            g[u, yOfW[u]]; \[IndentingNewLine]qq[t_]\  := \ 
            yOfW[t]\  - \ 2\ hminus; \[IndentingNewLine]qq0[t_] := \ 
            yOfW[t]\  - \ 2\ hmid; \[IndentingNewLine]qq1[t_] := \ 
            yOfW[t]\  - \ 
              2\ hplus; \[IndentingNewLine]wstart\  = \ \(bisection[qq, 
                2.464, 2.65, 
                10^\(-8\)]\)[\([2]\)]; \[IndentingNewLine]wmid\  = \ \
\(bisection[qq0, 2.464, 2.65, 
                10^\(-8\)]\)[\([2]\)]; \[IndentingNewLine]wfinish\  = \ \
\(bisection[qq1, 2.464, 2.65, 
                10^\(-8\)]\)[\([2]\)]; \[IndentingNewLine]{wstart, wmid, 
            wfinish, yOfW, ff, 
            gg}\[IndentingNewLine]];\)\), "\[IndentingNewLine]", 
    \(\(ParametricPlotData[w1, w0, 
        20, {yval, 
          fWithBeta}, "\</tmp/flyspeck/jxehxqy1a.table\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(ParametricPlotData[w0, w2, 
        20, {yval, 
          fWithBeta}, "\</tmp/flyspeck/jxehxqy1b.table\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(ParametricPlotData[w1, w0, 
        20, {yval, 
          fWithoutBeta}, "\</tmp/flyspeck/jxehxqy2a.table\>"];\)\), "\
\[IndentingNewLine]", 
    \(\(ParametricPlotData[w0, w2, 
        20, {yval, 
          fWithoutBeta}, "\</tmp/flyspeck/jxehxqy2b.table\>"];\)\)}], "Input",\

  CellLabel->"Sphere`Private`SphereIn[1954]:="]
}, Closed]],

Cell[CellGroupData[{

Cell["PQFEXQN", "Subsection"],

Cell[BoxData[
    \(\(PlotData[hmin, hmax, 20, 
        bump, "\</tmp/flyspeck/pqfexqn.table\>"];\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[1963]:="],

Cell[CellGroupData[{

Cell[BoxData[
    \({yval[w2], fWithBeta[w2]}\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[1953]:="],

Cell[BoxData[
    \({2.650800038250149`, 0.0012684063340701228`}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[1953]="]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Searching for new Interval Arithmetic Calcs", "Section"],

Cell[BoxData[{
    \(\(<< \ numerical.m;\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(approx[u_, v0_, derivs_] := \ 
        v0\  + \ \((u - p)\) . derivs;\)\), "\[IndentingNewLine]", 
    \(\(approx[u_, 
          data_] := \ \[IndentingNewLine]data[\([2]\)]\  + \ \((u - p)\) . 
            data[\([6]\)];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(mDihedral[
          x__] := \ \(-\((Dihedral\ @\ x)\)\);\)\), "\[IndentingNewLine]", 
    \(\(mDihedral2[
          x__] := \ \(-\((Dihedral2\ @\ 
              x)\)\);\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \( (*\ SearchLB[
        mDihedral, {2.0, 2, 2, 2, 2, 2}, {2.52, 2.52, 2.52, 2.52, 2.52, 
          2.52}, 0.0001, {}]\ *) \)}], "Input",
  CellLabel->"Sphere`Private`SphereIn[219]:="],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[p, low, hi, eps, ss, out];\)\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.0, 2.0, 2.0, 2.0, 2.25, 
          2.0};\)\), "\[IndentingNewLine]", 
    \(\(hi\  = \ {2.18, 2.18, 2.18, 2.52, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(\(p\  = \ {2, 2, 2, 2, 2.25, 2};\)\), "\[IndentingNewLine]", 
    \(outd = 
      SearchLB[Dihedral, low, hi, 0.0001, {}]\), "\[IndentingNewLine]", 
    \(\(pp1\  = \ {2. , 2. , 1.99999999999994, 2.01112099945437, 
          2.41459717480648, 2.22108175556737};\)\), "\[IndentingNewLine]", 
    \(approx[pp1, outd]\), "\[IndentingNewLine]", 
    \(\)}], "Input",
  CellLabel->"SphereIn[1166]:="],

Cell[BoxData[
    \({"corner", 1.1670304628529056`, 
      "derivs", {0.2089352690859414`, \(-0.2847474034339825`\), \
\(-0.1812741068363266`\), 
        0.674956801560711`, \(-0.2776964880268906`\), \(-0.10546199469274598`\
\)}, "approx", {0.2086473841345273`, \(-0.3047013558788161`\), \
\(-0.20357209984331648`\), 
        0.6564875417189565`, \(-0.36114767847001333`\), \
\(-0.22039344390287302`\)}}\)], "Output",
  CellLabel->"SphereOut[1170]="],

Cell[BoxData[
    \(1.066162403388506`\)], "Output",
  CellLabel->"SphereOut[1172]="]
}, Open  ]],

Cell[BoxData[
    \(\ \)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(Clear[p, low, hi, eps, ss, out];\)\[IndentingNewLine]\), "\n", 
    \(\(eps\  = \ 0.0001;\)\), "\n", 
    \(\(p\  = \ {2.36, 2, 2, 2.25, 2, 
          2};\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(ss[f_, e_] := \ 
        SearchLBp[f, p, low, hi, eps, 
          e];\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.18, 2, 2, 2.25, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.36, 2.18, 2.18, 2.52, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out1825a\  = \ {"\<1825a\>", 
        ss[mDihedral, {}]\ }\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.18, 2, 2, 2, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.36, 2.18, 2.18, 2.25, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out1800b\  = \ {"\<1800b\>", 
        ss[mDihedral, {}]}\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.36, 2, 2, 2, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.52, 2.18, 2.18, 2.25, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out3600c\  = \ {"\<3600c\>", 
        ss[mDihedral, {}]}\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.36, 2, 2, 2.25, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.52, 2.18, 2.18, 2.52, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out3625d\  = \ {"\<3625d\>", 
        ss[mDihedral, {}]}\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.18, 2, 2, 2.25, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.36, 2.18, 2.18, 2.52, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out1825e\  = \ {"\<1825e\>", 
        ss[Dihedral2, {{2.18000000000000016, 2.18000000000000016, 
              2.18000000000000016, 2.25, 2.30729140336028937, 
              2.52000000000000002}}]\ }\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(low\  = \ {2.18, 2, 2, 2, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.36, 2.18, 2.18, 2.25, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out1800f\  = \ {"\<1800f\>", 
        ss[Dihedral2, {{2.18000000000000016, 2.05508604910966364, 
              2.18000000000000016, 2, 2.29769644254430627, 
              
              2.52000000000000002}}]}\[IndentingNewLine]\), "\
\[IndentingNewLine]", 
    \(\(low\  = \ {2.36, 2, 2, 2, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.52, 2.18, 2.18, 2.25, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out3600g\  = \ {"\<3600g\>", 
        ss[Dihedral2, {}]}\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \(\(low\  = \ {2.36, 2, 2, 2.25, 2, 2};\)\), "\n", 
    \(\(hi\  = \ {2.52, 2.18, 2.18, 2.52, 2.52, 
          2.52};\)\), "\[IndentingNewLine]", 
    \(out3625h\  = \ {"\<3625h\>", 
        ss[Dihedral2, {}]}\n\[IndentingNewLine]\[IndentingNewLine]\
\[IndentingNewLine] (*\ 
      out = ss[Dihedral2, {{2.18000000000000016, 2.04522491866409695, 
              2.18000000000000016, 2, 2.31213567041915269, 
              2.52000000000000002}, {2.18000000000000016, 
              2.00352899207105617, 2.18000000000000016, 2, 
              2.1768738314086491, 2}}]\ *) \[IndentingNewLine] (*\ \(ss[
          mDihedral2, {{2.52000000000000002, 2, 2.18000000000000016, 2, 2, 
              2.20536217041225813}, {2.39107935287186146, 2, 
              2.18000000000000016, 2, 2, 2}, {2.18000000000000016, 2, 
              2.18000000000000016, 2.20592924713898286, 2, 
              2}}];\)\ *) \[IndentingNewLine] (*\ 
      ss[Dihedral2, {}]\ *) \), "\[IndentingNewLine]", 
    \(\(pp1\  = \ {2.3640, 2.0256, 2.0023, 2.3574, 2.0, 
          2.2886};\)\), "\[IndentingNewLine]", 
    \(\(m1\  = \ mDihedral\  @@ \ pp1;\)\), "\[IndentingNewLine]", 
    \(Map[
        approx[pp1, #[\([2]\)]] &, {out1825a, out1800b, out3600c, 
          out3625d}] - m1\), "\[IndentingNewLine]", 
    \(\(m2\  = \ Dihedral2\  @@ \ pp1;\)\), "\[IndentingNewLine]", 
    \(Map[
        approx[pp1, #[\([2]\)]] &, {out1825e, out1800f, out3600g, 
          out3625h}] - m2\), "\[IndentingNewLine]", 
    \(\)}], "Input",
  CellLabel->"SphereIn[1072]:="],

Cell[BoxData[
    \({"1825a", {"corner", \(-1.541612344038128`\), 
        "derivs", {\(-0.4394620001235694`\), 0.3724254460379939`, 
          0.3724254460379939`, \(-0.8632325076973757`\), 0.3724254460379939`, 
          0.3724254460379939`}, 
        "approx", {\(-0.3625190980479838`\), 0.29869133209237336`, 
          0.2870651160743381`, \(-0.9207853034882564`\), 
          0.19091667120936906`, 0.21913242329962895`}}}\)], "Output",
  CellLabel->"SphereOut[1082]="],

Cell[BoxData[
    \({"1800b", {"corner", \(-1.541612344038128`\), 
        "derivs", {\(-0.4394620001235694`\), 0.3724254460379939`, 
          0.3724254460379939`, \(-0.8632325076973757`\), 0.3724254460379939`, 
          0.3724254460379939`}, 
        "approx", {\(-0.34677296890119863`\), 0.30075149373752663`, 
          0.3007510844218739`, \(-0.7025667634171459`\), 0.17272606633205`, 
          0.17272660677039686`}}}\)], "Output",
  CellLabel->"SphereOut[1085]="],

Cell[BoxData[
    \({"3600c", {"corner", \(-1.541612344038128`\), 
        "derivs", {\(-0.4394620001235694`\), 0.3724254460379939`, 
          0.3724254460379939`, \(-0.8632325076973757`\), 0.3724254460379939`, 
          0.3724254460379939`}, 
        "approx", {\(-0.49043890623063213`\), 0.31812475167921994`, 
          0.3246800121979252`, \(-0.7400787580512023`\), 
          0.17886770995865794`, 0.2058188005178664`}}}\)], "Output",
  CellLabel->"SphereOut[1088]="],

Cell[BoxData[
    \({"3625d", {"corner", \(-1.541612344038128`\), 
        "derivs", {\(-0.4394620001235694`\), 0.3724254460379939`, 
          0.3724254460379939`, \(-0.8632325076973757`\), 0.3724254460379939`, 
          0.3724254460379939`}, 
        "approx", {\(-0.49043890625828696`\), 0.3218490187439488`, 
          0.3209557454966538`, \(-1.009017258680565`\), 0.24070908969149588`, 
          0.21808101067708538`}}}\)], "Output",
  CellLabel->"SphereOut[1091]="],

Cell[BoxData[
    \({"1825e", {"corner", 1.0503885491016374`, 
        "derivs", {\(-0.3724254238335334`\), 0.2153277778305096`, 
          0.011991718729120748`, \(-0.37252183560099184`\), 
          0.6502692828647127`, \(-0.01903974755634863`\)}, 
        "approx", {\(-0.29782260191155757`\), 
          0.21532777783682439`, \(-0.07924392803892522`\), \
\(-0.42267424551915733`\), 
          0.6474159594195178`, \(-0.2075608632078516`\)}}}\)], "Output",
  CellLabel->"SphereOut[1094]="],

Cell[BoxData[
    \({"1800f", {"corner", 1.0503885491016374`, 
        "derivs", {\(-0.3724254238335334`\), 0.2153277778305096`, 
          0.011991718729120748`, \(-0.37252183560099184`\), 
          0.6502692828647127`, \(-0.01903974755634863`\)}, 
        "approx", {\(-0.29012981222432865`\), 
          0.21532777789982133`, \(-0.0715511372953638`\), \
\(-0.2671573692514023`\), 
          0.6502692843641343`, \(-0.2951982614274831`\)}}}\)], "Output",
  CellLabel->"SphereOut[1097]="],

Cell[BoxData[
    \({"3600g", {"corner", 1.0503885491016374`, 
        "derivs", {\(-0.3724254238335334`\), 0.2153277778305096`, 
          0.011991718729120748`, \(-0.37252183560099184`\), 
          0.6502692828647127`, \(-0.01903974755634863`\)}, 
        "approx", {\(-0.40413055009535936`\), 
          0.21211920902569442`, \(-0.04028273164741973`\), \
\(-0.29904613686012316`\), 
          0.6432728698446649`, \(-0.2661184048952727`\)}}}\)], "Output",
  CellLabel->"SphereOut[1100]="],

Cell[BoxData[
    \({"3625h", {"corner", 1.0503885491016374`, 
        "derivs", {\(-0.3724254238335334`\), 0.2153277778305096`, 
          0.011991718729120748`, \(-0.37252183560099184`\), 
          0.6502692828647127`, \(-0.01903974755634863`\)}, 
        "approx", {\(-0.40154281970279987`\), 
          0.2075506564568385`, \(-0.02942268518050356`\), \
\(-0.4949541724533375`\), 
          0.6054534883529105`, \(-0.15638468544894685`\)}}}\)], "Output",
  CellLabel->"SphereOut[1103]="],

Cell[BoxData[
    \({\(-0.05564198511664853`\), \(-0.045450830181445134`\), \
\(-0.04000408310174852`\), \(-0.06526242879405797`\)}\)], "Output",
  CellLabel->"SphereOut[1106]="],

Cell[BoxData[
    \({\(-0.06367001295409969`\), \(-0.07221118899005663`\), \
\(-0.06770982101770884`\), \(-0.05716281852552896`\)}\)], "Output",
  CellLabel->"SphereOut[1108]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
    \(\(approx[{2.3640, 2.0256, 2.0023, 2.3574, 2.0, 2.2886}, 
        1.185, {\(-0.302913\), 0.214849, \(-0.163775\), \(-0.443449\), 
          0.67364, \(-0.314532\)}];\)\), "\[IndentingNewLine]", 
    \(approx[{2.3640, 2.0256, 2.0023, 2.3574, 2.0, 2.2886}, 
      1.185, {\(-0.2642001284414164`\), 
        0.21484896084444927`, \(-0.1417197914577173`\), \
\(-0.26992190704788754`\), 
        0.6815636055534924`, \(-0.19679271545669508`\)}]\)}], "Input",
  CellLabel->"SphereIn[241]:="],

Cell[BoxData[
    \(0.9882968869843274`\)], "Output",
  CellLabel->"SphereOut[242]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
    \(Dihedral2[2.3640, 2.0256, 2.0023, 2.3574, 2.2577, 2.2886]\)], "Input",
  CellLabel->"SphereIn[237]:="],

Cell[BoxData[
    \(1.1685752732760193`\)], "Output",
  CellLabel->"SphereOut[237]="]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scratch", "Section"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input"],

Cell[BoxData[
    \(2.6365664873123165`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[1820]="]
}, Open  ]],

Cell[BoxData[
    \(NM\)], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
    \(cmax\  = \ 1\  + \ Solid[2, 2, 2, 2, 2, 2]/Pi // N\ ; \  (*\ 
      upper\ and\ lower\ bounds\ on\ ei\ *) \[IndentingNewLine]\
\[IndentingNewLine]g[a_, b_, c_, e1_, e2_, e3_] := \ 
      Dihedral[2, 2, 2, a, b, c] e1\  + \ 
        Dihedral[2, 2, 2, b, c, a]\ e2\  + \ 
        Dihedral[2, 2, 2, c, a, b] e3;\), "\[IndentingNewLine]", 
    \(\(amin\  = 2/hmid;\)\), "\[IndentingNewLine]", 
    \(\(amax\  = \ 2  hmid;\)\[IndentingNewLine]\), "\[IndentingNewLine]", 
    \({"\<deriv1 = Delta (g'(0))^2 \>"}\), "\[IndentingNewLine]", 
    \(\(dd\  = \ 
        Delta[2, 2, 2, a, b, c] // Simplify;\)\), "\[IndentingNewLine]", 
    \(\(dd1\  = \ 4\ a;\)\ \ \), "\[IndentingNewLine]", 
    \(\(dd2\  = \ 
        4\ \((\(-8\)\ b\^2 + a\^2\ \((\(-8\) + b\^2)\) + 
                8\ c\^2)\)/\((a\ \((16 - 
                    a^2)\))\)\ ;\)\), "\[IndentingNewLine]", 
    \(\(dd3\  = \ 
        4\ \((8\ \((b\^2 - c\^2)\) + 
                a\^2\ \((\(-8\) + c\^2)\))\)/\((a\ \((16 - 
                    a^2)\))\);\)\), "\[IndentingNewLine]", 
    \(\(deriv1\ \  = \((dd1\ e1\  + \ dd2\ e2\  + \ dd3\ e3)\) // 
          Simplify;\)\), "\[IndentingNewLine]", 
    \(\(num1\  = \ 
        deriv1\ a\ \((16 - a^2)\) // Factor;\)\), "\[IndentingNewLine]", 
    \(\((num1 /. {a \[Rule] 4})\) // Factor\), "\[IndentingNewLine]", 
    \(Delta[2, 2, 2, b, c, 4] // Factor\)}], "Input",
  CellLabel->"Sphere`Private`SphereIn[4869]:="],

Cell[BoxData[
    \({"deriv1 = Delta (g'(0))^2 "}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4872]="],

Cell[BoxData[
    \(32\ \((\(-16\) + b\^2 + c\^2)\)\ \((e2 + e3)\)\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4879]="],

Cell[BoxData[
    \(\(-4\)\ \((\(-16\) + b\^2 + c\^2)\)\^2\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[4880]="]
}, Open  ]],

Cell[BoxData[""], "Input"],

Cell[BoxData[""], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
    \(\(\( (*\ test, \ Local\ Fan, \ 
      Pentagon\ \(\(Case\)\(.\)\)\ *) \)\(\[IndentingNewLine]\)\(\(Clear[y1, 
        y2, y3, y4, y5, tau5];\)\[IndentingNewLine]
    \(flatterm[y_] := \ 
        sol0\ \((y - 2  h0)\)/\((2  h0 - 
                2)\);\)\[IndentingNewLine]\[IndentingNewLine]
    tau5[y1_, y2_, y3_, y4_, y5_] := \ 
      Module[{p1, p2, p3, z, z2, 
          z5}, \[IndentingNewLine]{p1, p2, p3} = \ {2, 2, 
            2}; \[IndentingNewLine]z2\  = \ 
          Max[z /. NSolve[Delta[y1, y2, y3, 2, z, 2] \[Equal] 0, 
                z]]; \[IndentingNewLine]z5\  = \ 
          Max[z /. NSolve[Delta[y1, y5, y4, p2, z, p1] \[Equal] 0, 
                z]]; \[IndentingNewLine]Print[z2, "\<,\>", 
          z5]; \ \[IndentingNewLine]{taumar[y1, y3, y4, p3, z5, z2]\  + \ 
            flatterm[y2] + flatterm[y5], 
          Dihedral[y1, y3, y4, p3, z5, z2] - 
            Dihedral[y1, y2, y5, 2  h0, p1, 
              2]}\[IndentingNewLine]]\[IndentingNewLine]
    tau5[2.52, 2.52, 2.52, 2, 2]\[IndentingNewLine]\[IndentingNewLine]
    tameTableD[5, 0]\[IndentingNewLine]
    \)\)\)], "Input",
  CellLabel->"Sphere`Private`SphereIn[6489]:="],

Cell[BoxData[
    InterpretationBox[\(3.671576455822466`\[InvisibleSpace]","\
\[InvisibleSpace]3.7355742827650995`\),
      SequenceForm[ 3.6715764558224659, ",", 3.7355742827650995],
      Editable->False]], "Print",
  CellLabel->"From Sphere`Private`SphereIn[6489]:="],

Cell[BoxData[
    \({0.45461922173674585`, \(-0.7721282708393603`\)}\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6492]="],

Cell[BoxData[
    \(0.4819`\)], "Output",
  CellLabel->"Sphere`Private`SphereOut[6493]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.2 for Macintosh",
ScreenRectangle->{{0, 1280}, {0, 774}},
WindowSize->{1232, 743},
WindowMargins->{{Automatic, -1488}, {Automatic, -168}},
ShowSelection->True,
Magnification->1.25,
StyleDefinitions -> "Textbook.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{
  "Info3483501520-5284256"->{
    Cell[336707, 6426, 319, 9, 31, "Print",
      CellTags->"Info3483501520-5284256"]},
  "Info3483502310-5352912"->{
    Cell[337150, 6444, 411, 10, 50, "Print",
      CellTags->"Info3483502310-5352912"]}
  }
*)

(*CellTagsIndex
CellTagsIndex->{
  {"Info3483501520-5284256", 356938, 6934},
  {"Info3483502310-5352912", 357056, 6937}
  }
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 71, 3, 131, "Title"],
Cell[1850, 58, 279, 5, 85, "Input"],

Cell[CellGroupData[{
Cell[2154, 67, 99, 2, 47, "Input"],
Cell[2256, 71, 524, 8, 78, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[2817, 84, 36, 0, 102, "Section"],
Cell[2856, 86, 2246, 46, 503, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[5139, 137, 67, 0, 102, "Section"],
Cell[5209, 139, 883, 15, 318, "Input"],

Cell[CellGroupData[{
Cell[6117, 158, 36, 0, 52, "Subsection"],
Cell[6156, 160, 74, 1, 47, "Input"],

Cell[CellGroupData[{
Cell[6255, 165, 9691, 175, 2289, "Input"],
Cell[15949, 342, 102, 2, 40, "Output"],
Cell[16054, 346, 120, 2, 40, "Output"],
Cell[16177, 350, 105, 2, 40, "Output"],
Cell[16285, 354, 98, 2, 40, "Output"],
Cell[16386, 358, 96, 2, 40, "Output"],
Cell[16485, 362, 23885, 545, 233, 4063, 295, "GraphicsData", "PostScript", \
"Graphics"],
Cell[40373, 909, 178, 4, 40, "Output"],
Cell[40554, 915, 171, 3, 40, "Output"],
Cell[40728, 920, 97, 2, 40, "Output"],
Cell[40828, 924, 133, 2, 40, "Output"],
Cell[40964, 928, 160, 3, 40, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[41173, 937, 51, 0, 52, "Subsection"],

Cell[CellGroupData[{
Cell[41249, 941, 2272, 44, 598, "Input"],
Cell[43524, 987, 30647, 630, 233, 4279, 300, "GraphicsData", "PostScript", \
"Graphics"],
Cell[74174, 1619, 328, 8, 40, "Output"],
Cell[74505, 1629, 105, 2, 40, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[74659, 1637, 102, 3, 41, "Subsection"],
Cell[74764, 1642, 189, 4, 47, "Input"],

Cell[CellGroupData[{
Cell[74978, 1650, 5375, 101, 1434, "Input"],
Cell[80356, 1753, 422, 7, 50, "Message"]
}, Open  ]],
Cell[80793, 1763, 2341, 41, 807, "Input"],

Cell[CellGroupData[{
Cell[83159, 1808, 6003, 113, 1928, "Input"],
Cell[89165, 1923, 88, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[89290, 1930, 78, 2, 47, "Input"],
Cell[89371, 1934, 68, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[89476, 1941, 2971, 54, 807, "Input"],
Cell[92450, 1997, 87, 2, 40, "Output"],
Cell[92540, 2001, 87, 2, 40, "Output"]
}, Open  ]],
Cell[92642, 2006, 1315, 28, 370, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[93994, 2039, 38, 0, 41, "Subsection"],

Cell[CellGroupData[{
Cell[94057, 2043, 6258, 135, 1548, "Input"],
Cell[100318, 2180, 107, 2, 40, "Output"],
Cell[100428, 2184, 84, 2, 40, "Output"],
Cell[100515, 2188, 70, 2, 27, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[100622, 2195, 73, 1, 47, "Input"],
Cell[100698, 2198, 83, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[100818, 2205, 5395, 101, 1420, "Input"],
Cell[106216, 2308, 106, 2, 40, "Output"],
Cell[106325, 2312, 93, 2, 40, "Output"],
Cell[106421, 2316, 88, 2, 40, "Output"],
Cell[106512, 2320, 112, 2, 40, "Output"],
Cell[106627, 2324, 112, 2, 40, "Output"],
Cell[106742, 2328, 112, 2, 40, "Output"],
Cell[106857, 2332, 100, 2, 40, "Output"],
Cell[106960, 2336, 291, 5, 59, "Output"],
Cell[107254, 2343, 98, 2, 40, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[107401, 2351, 103, 3, 41, "Subsection"],

Cell[CellGroupData[{
Cell[107529, 2358, 8807, 165, 2023, "Input"],
Cell[116339, 2525, 109, 2, 40, "Output"],
Cell[116451, 2529, 114, 2, 40, "Output"],
Cell[116568, 2533, 114, 2, 40, "Output"],
Cell[116685, 2537, 104, 2, 40, "Output"],
Cell[116792, 2541, 291, 5, 40, "Output"],
Cell[117086, 2548, 451, 7, 31, "Message"],
Cell[117540, 2557, 451, 7, 31, "Message"],
Cell[117994, 2566, 120, 2, 40, "Output"],
Cell[118117, 2570, 437, 8, 95, "Output"],
Cell[118557, 2580, 148, 3, 40, "Output"],
Cell[118708, 2585, 480, 8, 31, "Message"],
Cell[119191, 2595, 480, 8, 31, "Message"],
Cell[119674, 2605, 134, 2, 40, "Output"],
Cell[119811, 2609, 523, 9, 95, "Output"],
Cell[120337, 2620, 288, 4, 59, "Output"],
Cell[120628, 2626, 2305, 42, 268, "Output"],
Cell[122936, 2670, 584, 10, 114, "Output"],
Cell[123523, 2682, 2794, 40, 433, "Output"],
Cell[126320, 2724, 250, 4, 40, "Output"],
Cell[126573, 2730, 202, 4, 40, "Output"],
Cell[126778, 2736, 647, 13, 78, "Output"],
Cell[127428, 2751, 250, 4, 40, "Output"],
Cell[127681, 2757, 245, 4, 40, "Output"],
Cell[127929, 2763, 204, 4, 40, "Output"],
Cell[128136, 2769, 99, 2, 40, "Output"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[128284, 2777, 50, 0, 41, "Subsection"],
Cell[128337, 2779, 1101, 20, 484, "Input"],

Cell[CellGroupData[{
Cell[129463, 2803, 40, 0, 42, "Subsubsection"],

Cell[CellGroupData[{
Cell[129528, 2807, 348, 8, 104, "Input"],
Cell[129879, 2817, 69, 2, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{
Cell[130021, 2827, 42, 0, 58, "Section"],
Cell[130066, 2829, 52, 1, 52, "Input"],

Cell[CellGroupData[{
Cell[130143, 2834, 32, 0, 52, "Subsection"],

Cell[CellGroupData[{
Cell[130200, 2838, 6602, 116, 1309, "Input"],
Cell[136805, 2956, 111, 2, 40, "Output"],
Cell[136919, 2960, 247, 4, 64, "Output"],
Cell[137169, 2966, 114, 2, 40, "Output"],
Cell[137286, 2970, 111, 2, 40, "Output"],
Cell[137400, 2974, 303, 5, 40, "Output"],
Cell[137706, 2981, 100, 2, 40, "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[137855, 2989, 29, 0, 52, "Subsection"],

Cell[CellGroupData[{
Cell[137909, 2993, 2052, 36, 412, "Input"],
Cell[139964, 3031, 152, 3, 40, "Output"],
Cell[140119, 3036, 101, 2, 40, "Output"],
Cell[140223, 3040, 363, 5, 78, "Output"],
Cell[140589, 3047, 101, 2, 40, "Output"],
Cell[140693, 3051, 127, 2, 40, "Output"],
Cell[140823, 3055, 127, 2, 40, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[140999, 3063, 79, 0, 41, "Subsection"],

Cell[CellGroupData[{
Cell[141103, 3067, 628, 13, 161, "Input"],
Cell[141734, 3082, 87, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[141858, 3089, 1380, 26, 313, "Input"],
Cell[143241, 3117, 87, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[143365, 3124, 1764, 31, 446, "Input"],
Cell[145132, 3157, 454, 7, 59, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[145623, 3169, 85, 2, 66, "Input"],
Cell[145711, 3173, 240, 4, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[145988, 3182, 59, 1, 47, "Input"],
Cell[146050, 3185, 86, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[146173, 3192, 2158, 35, 351, "Input"],
Cell[148334, 3229, 654, 13, 59, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[149025, 3247, 3729, 60, 641, "Input"],
Cell[152757, 3309, 236, 4, 40, "Output"],
Cell[152996, 3315, 89, 2, 40, "Output"],
Cell[153088, 3319, 85, 2, 40, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[153222, 3327, 32, 0, 41, "Subsection"],
Cell[153257, 3329, 5064, 90, 888, "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{
Cell[158370, 3425, 46, 0, 102, "Section"],

Cell[CellGroupData[{
Cell[158441, 3429, 4721, 92, 1187, "Input"],
Cell[163165, 3523, 83, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[163285, 3530, 89, 2, 47, "Input"],
Cell[163377, 3534, 91, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[163505, 3541, 112, 2, 47, "Input"],
Cell[163620, 3545, 101, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[163758, 3552, 137, 2, 47, "Input"],
Cell[163898, 3556, 106, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[164041, 3563, 98, 2, 47, "Input"],
Cell[164142, 3567, 99, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[164278, 3574, 89, 2, 47, "Input"],
Cell[164370, 3578, 91, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[164498, 3585, 73, 1, 47, "Input"],
Cell[164574, 3588, 144, 3, 64, "Output"],
Cell[164721, 3593, 163, 3, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[164921, 3601, 89, 2, 47, "Input"],
Cell[165013, 3605, 100, 2, 40, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[165162, 3613, 40, 0, 58, "Section"],

Cell[CellGroupData[{
Cell[165227, 3617, 6257, 113, 1795, "Input"],
Cell[171487, 3732, 83, 2, 40, "Output"]
}, Open  ]],
Cell[171585, 3737, 26, 0, 33, "Input"],
Cell[171614, 3739, 1796, 37, 427, "Input"],

Cell[CellGroupData[{
Cell[173435, 3780, 626, 11, 142, "Input"],
Cell[174064, 3793, 178, 3, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[174279, 3801, 2761, 51, 731, "Input"],
Cell[177043, 3854, 129, 2, 40, "Output"],
Cell[177175, 3858, 142, 3, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[177354, 3866, 1497, 26, 370, "Input"],
Cell[178854, 3894, 100, 2, 40, "Output"],
Cell[178957, 3898, 101, 2, 40, "Output"]
}, Open  ]],
Cell[179073, 3903, 96, 2, 47, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[179206, 3910, 38, 0, 58, "Section"],

Cell[CellGroupData[{
Cell[179269, 3914, 2275, 45, 693, "Input"],
Cell[181547, 3961, 222, 4, 59, "Output"],
Cell[181772, 3967, 226, 4, 59, "Output"],
Cell[182001, 3973, 219, 3, 59, "Output"],
Cell[182223, 3978, 369, 6, 97, "Output"]
}, Closed]],

Cell[CellGroupData[{
Cell[182629, 3989, 58, 0, 41, "Subsection"],
Cell[182690, 3991, 386, 7, 123, "Input"],

Cell[CellGroupData[{
Cell[183101, 4002, 3753, 71, 978, "Input"],
Cell[186857, 4075, 149, 3, 40, "Output"],
Cell[187009, 4080, 180, 3, 40, "Output"],
Cell[187192, 4085, 145, 3, 40, "Output"],
Cell[187340, 4090, 188, 3, 40, "Output"],
Cell[187531, 4095, 5186, 113, 258, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[192754, 4213, 141, 3, 47, "Input"],
Cell[192898, 4218, 100, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[193035, 4225, 84, 2, 47, "Input"],
Cell[193122, 4229, 85, 2, 40, "Output"],
Cell[193210, 4233, 353, 6, 59, "Output"],
Cell[193566, 4241, 388, 7, 59, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[193991, 4253, 66, 2, 47, "Input"],
Cell[194060, 4257, 84, 2, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[194205, 4266, 36, 0, 58, "Section"],

Cell[CellGroupData[{
Cell[194266, 4270, 42, 0, 52, "Subsection"],
Cell[194311, 4272, 1716, 31, 465, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[196064, 4308, 40, 0, 52, "Subsection"],
Cell[196107, 4310, 632, 12, 204, "Input"],
Cell[196742, 4324, 91, 2, 33, "Input"],
Cell[196836, 4328, 71, 2, 33, "Input"],

Cell[CellGroupData[{
Cell[196932, 4334, 168, 3, 52, "Input"],
Cell[197103, 4339, 73526, 1062, 240, 2732, 183, "GraphicsData", "PostScript", \
"Graphics"],
Cell[270632, 5403, 156, 4, 26, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[270825, 5412, 248, 6, 71, "Input"],
Cell[271076, 5420, 61297, 887, 243, 2288, 153, "GraphicsData", "PostScript", \
"Graphics"],
Cell[332376, 6309, 156, 4, 26, "Output"]
}, Open  ]],
Cell[332547, 6316, 681, 14, 166, "Input"],
Cell[333231, 6332, 52, 1, 52, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[333320, 6338, 37, 0, 41, "Subsection"],
Cell[333360, 6340, 607, 13, 199, "Input"],
Cell[333970, 6355, 1438, 26, 389, "Input"],
Cell[335411, 6383, 601, 10, 161, "Input"],

Cell[CellGroupData[{
Cell[336037, 6397, 84, 2, 47, "Input"],
Cell[336124, 6401, 89, 2, 40, "Output"],
Cell[336216, 6405, 147, 4, 50, "Print"],
Cell[336366, 6411, 225, 6, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[336628, 6422, 76, 2, 47, "Input"],
Cell[336707, 6426, 319, 9, 31, "Print",
  CellTags->"Info3483501520-5284256"]
}, Open  ]],

Cell[CellGroupData[{
Cell[337063, 6440, 84, 2, 47, "Input"],
Cell[337150, 6444, 411, 10, 50, "Print",
  CellTags->"Info3483502310-5352912"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[337610, 6460, 40, 0, 41, "Subsection"],
Cell[337653, 6462, 2849, 56, 579, "Input"]
}, Closed]],

Cell[CellGroupData[{
Cell[340539, 6523, 29, 0, 41, "Subsection"],
Cell[340571, 6525, 160, 3, 47, "Input"],

Cell[CellGroupData[{
Cell[340756, 6532, 106, 2, 47, "Input"],
Cell[340865, 6536, 126, 2, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[341052, 6545, 62, 0, 58, "Section"],
Cell[341117, 6547, 781, 15, 237, "Input"],

Cell[CellGroupData[{
Cell[341923, 6566, 672, 13, 199, "Input"],
Cell[342598, 6581, 450, 9, 97, "Output"],
Cell[343051, 6592, 85, 2, 40, "Output"]
}, Open  ]],
Cell[343151, 6597, 35, 1, 33, "Input"],

Cell[CellGroupData[{
Cell[343211, 6602, 3997, 78, 1396, "Input"],
Cell[347211, 6682, 474, 8, 97, "Output"],
Cell[347688, 6692, 472, 8, 97, "Output"],
Cell[348163, 6702, 474, 8, 97, "Output"],
Cell[348640, 6712, 473, 8, 97, "Output"],
Cell[349116, 6722, 492, 9, 97, "Output"],
Cell[349611, 6733, 490, 9, 97, "Output"],
Cell[350104, 6744, 492, 9, 97, "Output"],
Cell[350599, 6755, 491, 9, 97, "Output"],
Cell[351093, 6766, 178, 3, 40, "Output"],
Cell[351274, 6771, 177, 3, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[351488, 6779, 505, 9, 161, "Input"],
Cell[351996, 6790, 85, 2, 40, "Output"]
}, Open  ]],

Cell[CellGroupData[{
Cell[352118, 6797, 122, 2, 47, "Input"],
Cell[352243, 6801, 85, 2, 40, "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{
Cell[352377, 6809, 26, 0, 58, "Section"],

Cell[CellGroupData[{
Cell[352428, 6813, 26, 0, 33, "Input"],
Cell[352457, 6815, 101, 2, 40, "Output"]
}, Open  ]],
Cell[352573, 6820, 35, 1, 33, "Input"],

Cell[CellGroupData[{
Cell[352633, 6825, 1443, 27, 318, "Input"],
Cell[354079, 6854, 111, 2, 40, "Output"],
Cell[354193, 6858, 128, 2, 43, "Output"],
Cell[354324, 6862, 120, 2, 44, "Output"]
}, Open  ]],
Cell[354459, 6867, 26, 0, 33, "Input"],
Cell[354488, 6869, 26, 0, 33, "Input"],

Cell[CellGroupData[{
Cell[354539, 6873, 1178, 23, 332, "Input"],
Cell[355720, 6898, 270, 5, 31, "Print"],
Cell[355993, 6905, 130, 2, 40, "Output"],
Cell[356126, 6909, 89, 2, 40, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

