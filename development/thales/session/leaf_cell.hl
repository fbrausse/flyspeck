(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Packing                                                           *)
(* Lemma: OXLZLEZ                                                             *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2012-12-21                                                           *)
(* ========================================================================== *)

(* Leaf and Cell Lemmas *)

let leaf = new_definition `leaf V ul <=> ul IN barV V 2 /\ hl ul < sqrt2`;;

let stem = new_definition `stem (ul:(A)list) = set_of_list (truncate_simplex 1 ul)`;;



let GBEWYFX = prove_by_refinement(
  `!V ul. packing V /\ saturated V /\ leaf V ul ==> 
   ~(collinear (set_of_list ul)) `,
  (* {{{ proof *)
  [
  REWRITE_TAC[leaf;IN;COLLINEAR_AFF_DIM];
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC Rogers.MHFTTZN1 [`V`;`ul`;`2`];
  ASM_REWRITE_TAC[];
  FIRST_X_ASSUM MP_TAC;
  BY(INT_ARITH_TAC)
  ]);;
  (* }}} *)

let NWVRFMF = prove_by_refinement(
  `!V ul p.  packing V /\ saturated V /\ leaf V ul /\ {p} facet_of (voronoi_list V ul) ==>
  (?vl. vl IN barV V 3 /\ truncate_simplex 2 vl = ul /\ omega_list V vl = p)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[leaf;IN];
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC Rogers.IDBEZAL [`V`;`ul`;`2`;`{p}`];
  ASM_REWRITE_TAC[arith `2 < 3`;arith `2 + 1 = 3`];
  REPEAT WEAK_STRIP_TAC;
  TYPIFY `vl` EXISTS_TAC;
  ASM_REWRITE_TAC[];
  INTRO_TAC Packing3.OMEGA_LIST_IN_VORONOI_LIST [`V`;`vl`;`3`];
  ASM_REWRITE_TAC[];
  BY(ASM_MESON_TAC[IN_SING])
  ]);;
  (* }}} *)

let YBZFUPO = prove_by_refinement(
  `!V ul.  packing V /\ saturated V /\ leaf V ul ==>
   (?p1 p2.  voronoi_list V ul = convex hull {p1,p2} /\ ~(p1 = p2) /\
      (!f. f facet_of voronoi_list V ul <=> f IN {{p1},{p2}}))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[leaf;IN];
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC Packing3.AFF_DIM_VORONOI_LIST [`V`;`ul`;`2`];
  ASM_REWRITE_TAC[arith `&3 - int_of_num 2 = &1`];
  DISCH_TAC;
  INTRO_TAC Polyhedron.EXPAND_EDGE_POLYTOPE [`voronoi_list V ul`;`voronoi_list V ul`];
  ASM_REWRITE_TAC[];
  GMATCH_SIMP_TAC FACE_OF_REFL;
  REWRITE_TAC[Packing3.CONVEX_VORONOI_LIST];
  GMATCH_SIMP_TAC Packing3.POLYTOPE_VORONOI_LIST_BARV;
  CONJ_TAC;
    EXISTS_TAC `2`;
    BY(ASM_REWRITE_TAC[]);
  REPEAT WEAK_STRIP_TAC;
  ASM_REWRITE_TAC[];
  TYPIFY `a` EXISTS_TAC;
  TYPIFY `b` EXISTS_TAC;
  SUBCONJ_TAC;
    BY(REWRITE_TAC[SEGMENT_CONVEX_HULL]);
  DISCH_TAC;
  INTRO_TAC EXTREME_POINT_OF_SEGMENT [`a`;`b`;`a`];
  INTRO_TAC EXTREME_POINT_OF_SEGMENT [`a`;`b`;`b`];
  INTRO_TAC EXTREME_POINT_OF_SEGMENT [`a`;`b`];
  REWRITE_TAC[];
  REWRITE_TAC[GSYM FACE_OF_SING];
  REWRITE_TAC[facet_of];
  REPEAT WEAK_STRIP_TAC;
  SUBCONJ_TAC;
    DISCH_TAC;
    INTRO_TAC (CONJUNCT1 SEGMENT_EQ_SING) [`b`;`b`;`b`];
    REWRITE_TAC[];
    DISCH_TAC;
    FIRST_X_ASSUM_ST `voronoi_list` MP_TAC;
    FIRST_X_ASSUM_ST `convex` kill;
    ASM_REWRITE_TAC[];
    DISCH_TAC;
    FIRST_X_ASSUM_ST `1` MP_TAC;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[AFF_DIM_SING];
    BY(INT_ARITH_TAC);
  DISCH_TAC;
  GEN_TAC;
  TYPIFY `{{a},{b}} f <=> f IN {{a},{b}}` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[IN]);
  REWRITE_TAC[IN_INSERT;NOT_IN_EMPTY];
  TYPIFY `aff_dim(segment[a,b]) - &1 = &0` (C SUBGOAL_THEN SUBST1_TAC);
    BY(ASM_MESON_TAC[arith ` &1 - int_of_num 1 = &0`]);
  REWRITE_TAC[AFF_DIM_EQ_0];
  SUBGOAL_THEN `!(x:real^3). ~({x} = {})` ASSUME_TAC;
    BY(SET_TAC[]);
  REWRITE_TAC[TAUT `(b <=> a) <=> ((a ==> b) /\ (b ==> a))`];
  CONJ_TAC;
    BY(DISCH_THEN DISJ_CASES_TAC THEN ASM_MESON_TAC[]);
  REPEAT WEAK_STRIP_TAC;
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let PERMUTES_a_PERMUTES_b = prove_by_refinement(
  `!p a b. a <= b /\ p permutes 0..a ==> p permutes 0..b`,
  (* {{{ proof *)
  [
  REWRITE_TAC[permutes;IN_NUMSEG];
  REPEAT WEAK_STRIP_TAC;
  ASM_REWRITE_TAC[];
  REPEAT WEAK_STRIP_TAC;
  FIRST_X_ASSUM MATCH_MP_TAC;
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC)
  ]);;
  (* }}} *)

let PERMUTE_BARV3 = prove_by_refinement(
  `!V ul p.  packing V /\ saturated V /\  ul IN barV V 3 /\
    hl (truncate_simplex 2 ul) < sqrt2 /\ p permutes 0..1 ==>
   left_action_list p ul IN barV V 3`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  TYPIFY `hl ul < sqrt2` ASM_CASES_TAC;
    MATCH_MP_TAC Rogers.YIFVQDV_1;
    ASM_REWRITE_TAC[GSYM Sphere.sqrt2];
    MATCH_MP_TAC PERMUTES_a_PERMUTES_b;
    BY(ASM_MESON_TAC[arith `1 <= 3`]);
  INTRO_TAC Ynhyjit.YNHYJIT [`V`;`ul`;`3`;`p`;`left_action_list p ul`];
  ASM_SIMP_TAC[GSYM Sphere.sqrt2;arith `3 -1 = 2`];
  ASM_SIMP_TAC[arith `~(x < y) ==> y <= x`];
  ANTS_TAC;
    CONJ_TAC;
      BY(ASM_MESON_TAC[IN]);
    CONJ_TAC;
      BY(SET_TAC[]);
    MATCH_MP_TAC PERMUTES_a_PERMUTES_b;
    BY(ASM_MESON_TAC[arith `1 <= 2`]);
  BY(MESON_TAC[IN])
  ]);;
  (* }}} *)

let ZASUVOR = prove_by_refinement(
  `!V u0 u1 u2.  packing V /\ saturated V /\ leaf V [u0;u1;u2] ==>
   leaf V [u1;u0;u2] /\ (stem [u0;u1;u2] = stem [u1;u0;u2])`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC YBZFUPO [`V`;`[u0;u1;u2]`];
  ASM_REWRITE_TAC[];
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC NWVRFMF [`V`;`[u0;u1;u2]`;`p1`];
  FIRST_X_ASSUM_ST `convex` kill;
  ASM_REWRITE_TAC[];
  REWRITE_TAC[IN_INSERT];
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC PERMUTES_SWAP [`0`;`1`;`0..1`];
  ANTS_TAC;
    REWRITE_TAC[IN_NUMSEG];
    BY(ARITH_TAC);
  DISCH_TAC;
  CONJ2_TAC;
    REWRITE_TAC[stem];
    REWRITE_TAC[Marchal_cells.TRUNCATE_SIMPLEX_EXPLICIT_1];
    REWRITE_TAC[set_of_list];
    BY(SET_TAC[]);
  SUBGOAL_THEN `left_action_list (swap(0,1)) vl IN barV V 3` ASSUME_TAC;
    MATCH_MP_TAC PERMUTE_BARV3;
    ASM_REWRITE_TAC[];
    BY(ASM_MESON_TAC[leaf]);
  FIRST_X_ASSUM_ST `leaf` MP_TAC;
  REWRITE_TAC[leaf;IN];
  REWRITE_TAC[Pack_defs.HL;set_of_list];
  REPEAT WEAK_STRIP_TAC;
  TYPIFY `{u1,u0,u2} = {u0,u1,u2}` (C SUBGOAL_THEN SUBST1_TAC);
    BY(SET_TAC[]);
  ASM_REWRITE_TAC[];
  INTRO_TAC Packing3.TRUNCATE_SIMPLEX_BARV [`V`;`2`;`3`;`left_action_list (swap(0,1)) vl`];
  ANTS_TAC;
    BY(ASM_MESON_TAC[IN;arith `2 <= 3`]);
  TYPIFY `truncate_simplex 2 (left_action_list (swap (0,1)) vl) = [u1;u0;u2]` ENOUGH_TO_SHOW_TAC;
    DISCH_THEN SUBST1_TAC;
    BY(MESON_TAC[]);
  TYPIFY `?w. left_action_list (swap (0,1)) vl = [u1;u0;u2;w]` ENOUGH_TO_SHOW_TAC;
    REPEAT WEAK_STRIP_TAC;
    ASM_REWRITE_TAC[];
    BY(REWRITE_TAC[Marchal_cells.TRUNCATE_SIMPLEX_EXPLICIT_2]);
  TYPIFY `EL 3 vl` EXISTS_TAC;
  REWRITE_TAC[Pack_defs.left_action_list];
  REWRITE_TAC[Packing3.LIST_EL_EQ];
  TYPIFY `LENGTH vl = 4` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT (FIRST_X_ASSUM_ST `barV` MP_TAC);
    REWRITE_TAC[Sphere.BARV;IN];
    BY(MESON_TAC[arith `3 + 1 = 4`]);
  REWRITE_TAC[Packing3.LENGTH_TABLE];
  ASM_REWRITE_TAC[];
  REWRITE_TAC[LENGTH];
  CONJ_TAC;
    BY(ARITH_TAC);
  GEN_TAC;
  SIMP_TAC[Packing3.EL_TABLE];
  REWRITE_TAC[INVERSE_SWAP];
  REWRITE_TAC[arith `j< 4 <=> (j = 0 \/ j = 1 \/ j = 2 \/ j = 3)`];
  INTRO_TAC (GSYM Packing3.EL_TRUNCATE_SIMPLEX) [`vl`;`2`];
  ASM_REWRITE_TAC[arith `2 + 1 <= 4`];
  BY(REPEAT WEAK_STRIP_TAC THEN ASM_SIMP_TAC[swap;EL;HD;arith `0 <= 2 /\ 1 <= 2 /\ 2 <= 2 /\ ~(1 = 0) /\ ~(2 = 1) /\ ~(2=0) /\ ~(3=0) /\ ~(3=1)`] THEN REWRITE_TAC[arith `1 = SUC 0 /\ 2 = SUC 1 /\ 3 = SUC 2`;EL;HD;TL])
  ]);;
  (* }}} *)

