(* Nov 2010 *)

1;;
Sphere.h0;;



(* Desktop init.                                *)
let thackmac_init _ = 
  let _ = load_path := 
     "/Users/thomashales/Desktop/googlecode/flyspeck/text_formalization/" :: 
       !load_path in
   needs "strictbuild.hl";;

thackmac_init();;
(* #load "unix.cma";; (* dynamic loading not supported *) *)

(* Build.build_all();; *)
flyspeck_needs"build.hl";;
reneeds "strictbuild.hl";;

(* map reneeds Build.build_sequence;; *)
build_silent();;
build_and_report();;

(* reset of project: see bottom of strictbuild file 
*)


let open_search =
  let _ = flyspeck_needs "general/tactics.hl" in
  let _ = flyspeck_needs "usr/thales/hales_tactic.hl" in
    reneeds "usr/thales/searching.hl";;

open Searching;;

(* END LOCAL BUILD *)


(* to generate flypaper graphics in the file /tmp/x.txt *)
flyspeck_needs  "../kepler_tex/tikz/tikz.ml";;
Tikz.gen_out();;

(* SEARCH *)

help "ABBREV_TAC";;
help "help";;
help_grep "ASM";;
help_grep "apropos";;
help_flag 'i' "r.*w";;
help_flag 'l' "search";;
help_flag '?' "";;
help_flag 'd' "face";;
def_of_regexp "face";;

apropos();;
help "apropos_searching";;
help "apropos_types";;

srch [`cos`];;
more();;
less();;

(* load misc files *)


flyspeck_needs "packing/YNHYJIT.hl";;
flyspeck_needs "packing/NJIUTIU.hl";;
flyspeck_needs "packing/TEZFFSK.hl";;
flyspeck_needs "packing/sum_beta_bump.hl";;

reneeds "usr/thales/hales_tactic.hl";;
flyspeck_needs "packing/YSSKQOY.hl";;
open Counting_spheres;;
flyspeck_needs"packing/counting_spheres.hl";;

flyspeck_needs "packing/.hl";;
flyspeck_needs"general/update_database_310.ml";;
flyspeck_needs"nonlinear/calc_derivative.hl";;
flyspeck_needs"fan/polyhedron.hl";;

flyspeck_needs"packing/marchal_cells_2.hl";;
flyspeck_needs"packing/SLTSTLO.hl";;
flyspeck_needs"trigonometry/HVIHVEC.hl";;
flyspeck_needs "local/NKEZBFC.hl";;
flyspeck_needs "../development/thales/holcode/rank_boost.hl";;
reneeds "../../hol_light/meson.ml";;
flyspeck_needs "../development/thales/holcode/meson_edit.hl";;
let MESON_TAC=Meson_edit.MESON_SAVE_FOF_TAC;;
reneeds"trigonometry/trig2.hl";;
open Calc_derivative;;
(* RUNNING LINEAR PROGRAMS, see build_lp.hl.  *)

(* RUNNING NONLINEAR INTERVAL AND CFSQP, see nonlinear/scripts.hl *)

(* SCRIPT *)
let svnstring = 
  "svn commit -m \"\" /Users/thomashales/Desktop/googlecode/flyspeck";;
let svn_commit() = Sys.command(svnstring);;

let test_and_commit t = (let _ = testsplit true t in svn_commit());;

!testids;;


let weekend_jan28() = map test_and_commit ( !testids);;


Sys.command("svn /Users/Users/thomashales/Desktop/googlecode/flyspeck");
flyspeck_needs "general/sphere.hl";;
reneeds "nonlinear/ineq.hl";;
reneeds "nonlinear/strongdodec_ineq.hl";;
reneeds "nonlinear/parse_ineq.ml";;
reneeds "nonlinear/optimize.hl";;
map (testsplit_report true) ( !testids);;


(* fin *)
