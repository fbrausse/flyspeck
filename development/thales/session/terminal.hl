(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(* Section: Conclusions                                                       *)
(* Chapter: Local Fan                                                         *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2013-04-17                                                           *)
(* ========================================================================== *)

(*
Terminal cases of main estimate.
*)

flyspeck_needs "local/appendix_main_estimate.hl";;

module Terminal = struct


open Hales_tactic;;

(* Start with OWZLKVY. *)

let SOL_SOLID_TRIANGLE_ALT = prove_by_refinement(
  `!v0 v1 v2 v3.
         ~coplanar {v0, v1, v2, v3} 
         ==> sol v0 (convex hull {v0, v1, v2, v3}) = dihV v0 v1 v2 v3 + dihV v0 v2 v3 v1 + dihV v0 v3 v1 v2 - pi`,
  (* {{{ proof *)
  [
    BY(MESON_TAC[Tskajxy_lemmas.SOL_SOLID_TRIANGLE])
  ]);;
  (* }}} *)

let sol_x_nn = prove_by_refinement(
  `!x1 x2 x3 x4 x5 x6.
    &0 < x1 /\ &0 < x2 /\ &0 < x3 /\
            &0 < ups_x x1 x2 x6 /\
            &0 < ups_x x2 x3 x4 /\
            &0 < ups_x x1 x3 x5 /\
            &0 < eulerA_x x1 x2 x3 x4 x5 x6 /\
            &0 < delta_x x1 x2 x3 x4 x5 x6 ==>
    &0 < sol_x x1 x2 x3 x4 x5 x6`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  GMATCH_SIMP_TAC Merge_ineq.sol_x_sol_euler_x;
  ASM_REWRITE_TAC[Sphere.sol_euler_x;LET_DEF;LET_END_DEF];
  REPEAT (GMATCH_SIMP_TAC SQRT_MUL);
  REWRITE_TAC[GSYM Sphere.eulerA_x];
  GMATCH_SIMP_TAC REAL_LE_MUL;
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  MATCH_MP_TAC (arith `&0 < x ==> &0 < &2 * x `);
  GMATCH_SIMP_TAC Merge_ineq.ATN2_POS;
  CONJ_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  GMATCH_SIMP_TAC REAL_LT_RSQRT;
  BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let OWZLKVY0 = prove_by_refinement(
  `main_nonlinear_v24 ==>
    (!y1 y2 y3 y4 y5 y6.
       &2 <= y1 /\ y1 <= &2 * h0 /\
    &2 <= y1  /\ y2 <= &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    cstab <= y4 /\ y4 <= #3.915 /\
    y5 = &2 /\
    y6 = &2 /\ &200 <= delta_y y1 y2 y3 y4 y5 y6 ==>
	&0 <= taum y1 y2 y3 y4 y5 y6)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.cstab];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "6762190381") [];
  DISCH_THEN (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
  REWRITE_TAC[Sphere.ineq];
  REPEAT (FIRST_X_ASSUM MP_TAC);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let DIH_X_NN = prove_by_refinement(
  `!x1 x2 x3 x4 x5 x6. &0 < x1 /\ &0 <= delta_x x1 x2 x3 x4 x5 x6 
           ==> &0 <= dih_x x1 x2 x3 x4 x5 x6`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  ASM_CASES_TAC `&0 < delta_x x1 x2 x3 x4 x5 x6`;
    MATCH_MP_TAC Merge_ineq.dih_x_nn;
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `delta_x x1 x2 x3 x4 x5 x6 = &0` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  ASM_REWRITE_TAC[Sphere.dih_x;LET_DEF;LET_END_DEF];
  REWRITE_TAC[arith `x * &0 = &0`;SQRT_0];
  TYPED_ABBREV_TAC `d4 = -- delta_x4 x1 x2 x3 x4 x5 x6`;
  INTRO_TAC Merge_ineq.atn2_0 [`d4`];
  REPEAT WEAKER_STRIP_TAC;
  ASSUME_TAC PI_POS;
  MP_TAC (arith `&0 < d4 \/ d4 < &0 \/ d4 = &0`);
  DISCH_THEN DISJ_CASES_TAC;
    ASM_SIMP_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  FIRST_X_ASSUM DISJ_CASES_TAC;
    ASM_SIMP_TAC[];
    BY(REAL_ARITH_TAC);
  ASM_SIMP_TAC[];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let DIH_Y_NN = prove_by_refinement(
  `!y1 y2 y3 y4 y5 y6.
    &0 < y1 /\ &0 <= delta_y y1 y2 y3 y4 y5 y6 ==>
    &0 <= dih_y y1 y2 y3 y4 y5 y6`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Sphere.dih_y;LET_DEF;LET_END_DEF];
  MATCH_MP_TAC DIH_X_NN;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  ASM_REWRITE_TAC[];
  FIRST_X_ASSUM MP_TAC;
  BY(REWRITE_TAC[Sphere.delta_y])
  ]);;
  (* }}} *)

let RHO_LB = prove_by_refinement(
  `!y. &2 <= y  ==> &1 <= rho y`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Nonlinear_lemma.rho_alt];
  MATCH_MP_TAC (arith `&0 <= x ==> &1 <= &1 + x `);
  GMATCH_SIMP_TAC REAL_LE_MUL;
  REWRITE_TAC[GSYM Nonlinear_lemma.sol0_over_pi_EQ_const1];
  GMATCH_SIMP_TAC REAL_LE_RDIV_EQ;
  GMATCH_SIMP_TAC REAL_LE_RDIV_EQ;
  REWRITE_TAC[arith `&0 * x = &0`];
  REWRITE_TAC[PI_POS];
  INTRO_TAC Flyspeck_constants.bounds [];
  FIRST_X_ASSUM MP_TAC;
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let DIH_Y_LT_RHAZIM = prove_by_refinement(
  `!y1 y2 y3 y4 y5 y6.
    &2 <= y1 /\ &0 <= delta_y y1 y2 y3 y4 y5 y6 ==>
    dih_y y1 y2 y3 y4 y5 y6 <= rhazim y1 y2 y3 y4 y5 y6`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Sphere.rhazim];
  MATCH_MP_TAC (arith `&0 <= (r - &1) * d ==> d <= r * d`);
  GMATCH_SIMP_TAC REAL_LE_MUL;
  CONJ2_TAC;
    MATCH_MP_TAC DIH_Y_NN;
    ASM_REWRITE_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  MATCH_MP_TAC (arith `&1 <= r ==> &0 <= r - &1`);
  MATCH_MP_TAC RHO_LB;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

(* was EAR_ANGLE_ACUTE *)

let EAR_DELTA_X4 = prove_by_refinement(
  `main_nonlinear_v24 ==> (!y1 y2 y3 y4 y5 y6.  &2 <= y1  /\ y1 <= &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    cstab <= y4 /\ y4 <= #3.915 /\
    y5 = &2 /\
    y6 = &2 /\
	delta_y y1 y2 y3 y4 y5 y6 <= &200 ==>
	(delta_x4 (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6) <
      &0 /\
  &0 < delta_x4 (y2 * y2) (y3 * y3) (y1 * y1) (y5 * y5) (y6 * y6) (y4 * y4)
       /\
 &0 < delta_x4 (y3 * y3) (y1 * y1) (y2 * y2) (y6 * y6) (y4 * y4) (y5 * y5)
      ) )`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  CONJ_TAC;
    INTRO_TAC (Appendix.get_main_nonlinear "8346775862") [];
    DISCH_THEN (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
    REWRITE_TAC[Sphere.ineq;Sphere.delta_y;Sphere.y_of_x];
    REWRITE_TAC[TAUT `a ==> b ==> c <=> a /\ b ==> c`];
    ANTS_TAC;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab] THEN REAL_ARITH_TAC);
    BY(FIRST_X_ASSUM MP_TAC THEN REWRITE_TAC[Sphere.delta_y] THEN REAL_ARITH_TAC);
  CONJ_TAC;
    TYPIFY `delta_x4 (y2 * y2) (y3 * y3) (y1 * y1) (y5 * y5) (y6 * y6) (y4 * y4) = delta_x4 (y2 * y2) (y1 * y1) (y3 * y3) (y5 * y5) (y4 * y4) (y6 * y6)` (C SUBGOAL_THEN SUBST1_TAC);
      REWRITE_TAC[Sphere.delta_x4];
      BY(REAL_ARITH_TAC);
    INTRO_TAC (Appendix.get_main_nonlinear "8631418063") [];
    DISCH_THEN (C INTRO_TAC [`y2`;`y1`;`y3`;`y5`;`y4`;`y6`]);
    REWRITE_TAC[Sphere.ineq;Sphere.delta_y;Sphere.y_of_x];
    REWRITE_TAC[arith `x > &0 <=> &0 < x`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab] THEN REAL_ARITH_TAC);
  INTRO_TAC (Appendix.get_main_nonlinear "8631418063") [];
  DISCH_THEN (C INTRO_TAC [`y3`;`y1`;`y2`;`y6`;`y4`;`y5`]);
  REWRITE_TAC[Sphere.ineq;Sphere.delta_y;Sphere.y_of_x];
  REWRITE_TAC[arith `x > &0 <=> &0 < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let EAR_DIH1_DELTA_0 = prove_by_refinement(
  `main_nonlinear_v24 ==> (!y1 y2 y3 y4 y5 y6.  &2 <= y1  /\ y1 <= &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    cstab <= y4 /\ y4 <= #3.915 /\
    y5 = &2 /\
    y6 = &2 /\
	delta_y y1 y2 y3 y4 y5 y6 = &0 ==>
	dih_y y1 y2 y3 y4 y5 y6 = pi)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (UNDISCH EAR_DELTA_X4) [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  ANTS_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab] THEN REAL_ARITH_TAC);
  DISCH_TAC;
  FIRST_X_ASSUM_ST `delta_y` MP_TAC;
  REWRITE_TAC[Sphere.dih_y;Sphere.dih_x;LET_DEF;LET_END_DEF;Sphere.delta_y];
  DISCH_THEN (unlist REWRITE_TAC);
  REWRITE_TAC[arith `x * &0 = &0`;SQRT_0];
  TYPED_ABBREV_TAC `d = delta_x4 (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6)`;
  INTRO_TAC Merge_ineq.atn2_0 [`-- d`];
  REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let OWZLKVY3 = prove_by_refinement(
  `main_nonlinear_v24 ==> ( !y1 y2 y3 y4 y5 y6.
    &2 <= y1  /\ y1 <= &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    cstab <= y4 /\ y4 <= #3.915 /\
    y5 = &2 /\
    y6 = &2 /\
	&0 <= delta_y y1 y2 y3 y4 y5 y6 /\
	dih_y y1 y2 y3 y4 y5 y6 = pi ==>
	sol0 * (y1 - &2 * h0) / (&2 * h0 - &2) <= taum y1 y2 y3 y4 y5 y6)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  ASM_CASES_TAC `&200 <= delta_y y1 y2 y3 y4 y5 y6`;
    INTRO_TAC OWZLKVY0 [];
    ASM_REWRITE_TAC[];
    DISCH_THEN (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
    ASM_REWRITE_TAC[];
    MATCH_MP_TAC (arith `&0 <= s * (-- u) /v ==> (&0 <= t ==>  s * u / v <= t)`);
    GMATCH_SIMP_TAC REAL_LE_MUL;
    CONJ_TAC;
      INTRO_TAC Flyspeck_constants.bounds [];
      BY(REAL_ARITH_TAC);
    GMATCH_SIMP_TAC REAL_LE_RDIV_EQ;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC);
  RULE_ASSUM_TAC (REWRITE_RULE[arith `~(x <= y) <=> y < x`]);
  REWRITE_TAC[Nonlinear_lemma.taum_123;Sphere.rhazim2;Sphere.rhazim3;Sphere.node2_y;Sphere.node3_y];
  REWRITE_TAC[Sphere.rhazim];
  TYPIFY `delta_y y1 y2 y3 y4 y5 y6 = &0` (C SUBGOAL_THEN ASSUME_TAC);
    PROOF_BY_CONTR_TAC;
    INTRO_TAC Oxlzlez.DIH_X_LT_PI [`y1 * y1`;`y2*y2`;`y3*y3`;`y4*y4`;`y5*y5`;`y6*y6`];
    ANTS_TAC;
      GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
      REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.delta_y];
      MP_TAC (arith `&2 <= y1 ==> &0 < y1`);
      BY(REAL_ARITH_TAC);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.dih_y;LET_DEF;LET_END_DEF] THEN REAL_ARITH_TAC);
  COMMENT "...";
  INTRO_TAC (UNDISCH EAR_DELTA_X4) [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  ANTS_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `dih_y y2 y3 y1 y5 y6 y4 = &0` (C SUBGOAL_THEN SUBST1_TAC);
    REWRITE_TAC[Sphere.dih_y;Sphere.dih_x;LET_DEF;LET_END_DEF];
    REPEAT (FIRST_X_ASSUM_ST `x = &2` kill);
    RULE_ASSUM_TAC (REWRITE_RULE[Sphere.delta_y]);
    TYPIFY `delta_x (y2 * y2) (y3 * y3) (y1 * y1) (y5 * y5) (y6 * y6) (y4 * y4) = &0` (C SUBGOAL_THEN SUBST1_TAC);
      FIRST_X_ASSUM_ST `x = &0` MP_TAC;
      BY(MESON_TAC[Merge_ineq.delta_x_sym]);
    REWRITE_TAC[arith `x * &0 = &0`;SQRT_0];
    TYPED_ABBREV_TAC `d = delta_x4 (y2 * y2) (y3 * y3) (y1 * y1) (y5 * y5) (y6 * y6) (y4 * y4)`;
    INTRO_TAC Merge_ineq.atn2_0 [`-- d`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  COMMENT "..";
  TYPIFY `dih_y y3 y1 y2 y6 y4 y5 = &0` (C SUBGOAL_THEN SUBST1_TAC);
    REWRITE_TAC[Sphere.dih_y;Sphere.dih_x;LET_DEF;LET_END_DEF];
    REPEAT (FIRST_X_ASSUM_ST `x = &2` kill);
    RULE_ASSUM_TAC (REWRITE_RULE[Sphere.delta_y]);
    TYPIFY `delta_x (y3 * y3) (y1 * y1) (y2 * y2) (y6 * y6) (y4 * y4) (y5 * y5) = &0` (C SUBGOAL_THEN SUBST1_TAC);
      FIRST_X_ASSUM_ST `x = &0` MP_TAC;
      BY(MESON_TAC[Merge_ineq.delta_x_sym]);
    REWRITE_TAC[arith `x * &0 = &0`;SQRT_0];
    TYPED_ABBREV_TAC `d = delta_x4 (y3 * y3) (y1 * y1) (y2 * y2) (y6 * y6) (y4 * y4) (y5 * y5)`;
    INTRO_TAC Merge_ineq.atn2_0 [`-- d`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  COMMENT "A";
  TYPIFY `dih_y y1 y2 y3 y4 y5 y6 = pi` (C SUBGOAL_THEN SUBST1_TAC);
    REWRITE_TAC[Sphere.dih_y;Sphere.dih_x;LET_DEF;LET_END_DEF];
    REPEAT (FIRST_X_ASSUM_ST `x = &2` kill);
    RULE_ASSUM_TAC (REWRITE_RULE[Sphere.delta_y]);
    TYPIFY `delta_x (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6) = &0` (C SUBGOAL_THEN SUBST1_TAC);
      FIRST_X_ASSUM_ST `x = &0` MP_TAC;
      BY(MESON_TAC[Merge_ineq.delta_x_sym]);
    REWRITE_TAC[arith `x * &0 = &0`;SQRT_0];
    TYPED_ABBREV_TAC `d = delta_x4 (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6)`;
    INTRO_TAC Merge_ineq.atn2_0 [`-- d`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  REWRITE_TAC[arith `x * &0 = &0 /\ x + &0 = x`];
  REWRITE_TAC[Nonlinear_lemma.rho_alt;Nonlinear_lemma.sol0_const1];
  MATCH_MP_TAC (arith `x = y ==> x <= y`);
  Calc_derivative.CALC_ID_TAC;
  REWRITE_TAC[Sphere.h0];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let OWZLKVY1 = prove_by_refinement(
  `main_nonlinear_v24 ==> ( !y1 y2 y3 y4 y5 y6.
    &2 <= y1  /\ y1 <= &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    cstab <= y4 /\ y4 <= #3.915 /\
    y5 = &2 /\
    y6 = &2 /\
	&0 <= delta_y y1 y2 y3 y4 y5 y6 ==>
	-- sol0 <= taum y1 y2 y3 y4 y5 y6)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  ASM_CASES_TAC `&200 <= delta_y y1 y2 y3 y4 y5 y6`;
    INTRO_TAC OWZLKVY0 [];
    ASM_REWRITE_TAC[];
    DISCH_THEN (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
    ASM_REWRITE_TAC[];
    MATCH_MP_TAC (arith `&0 <= s ==> (&0 <= t ==> -- s <= t)`);
    INTRO_TAC Flyspeck_constants.bounds [];
    BY(REAL_ARITH_TAC);
  COMMENT "delta=0";
  ASM_CASES_TAC `delta_y y1 y2 y3 y4 y5 y6 = &0`;
    INTRO_TAC (UNDISCH EAR_DIH1_DELTA_0) [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
    ANTS_TAC;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    DISCH_TAC;
    MATCH_MP_TAC REAL_LE_TRANS;
    EXISTS_TAC `sol0 * (y1 - &2 * h0) / (&2 * h0 - &2)`;
    CONJ_TAC;
      MATCH_MP_TAC (arith `&0 <= s * (&1 + y /z) ==> --s <= s * y /z`);
      GMATCH_SIMP_TAC REAL_LE_MUL;
      CONJ_TAC;
        INTRO_TAC Flyspeck_constants.bounds [];
        BY(REAL_ARITH_TAC);
      TYPIFY `&1 + (y1 - &2 * h0) / (&2 * h0 - &2) = (y1 - &2) / (&2 * h0 - &2)` (C SUBGOAL_THEN SUBST1_TAC);
        Calc_derivative.CALC_ID_TAC;
        BY(REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC);
      GMATCH_SIMP_TAC REAL_LE_RDIV_EQ;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC);
    MATCH_MP_TAC (UNDISCH OWZLKVY3);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  COMMENT "replace taum with solid angle";
  TYPIFY `&0 < delta_y y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN MP_TAC);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  DISCH_TAC;
  REWRITE_TAC[Nonlinear_lemma.taum_123;Sphere.rhazim2;Sphere.rhazim3;Sphere.node2_y;Sphere.node3_y];
  REWRITE_TAC[arith `-- sol0 <= r1 + r2 + r3 - (&1 + c)*pi <=> (-- sol0 + c * pi) + pi <= (r1 + r2 + r3)`];
  MATCH_MP_TAC REAL_LE_TRANS;
  EXISTS_TAC `dih_y y1 y2 y3 y4 y5 y6 + dih_y y2 y3 y1 y5 y6 y4 + dih_y y3 y1 y2 y6 y4 y5`;
  CONJ2_TAC;
    MATCH_MP_TAC (arith `d1 <= r1 /\ d2 <= r2 /\ d3x <= r3 ==> d1 + d2 + d3x <= r1 + r2 + r3`);
    REPEAT (GMATCH_SIMP_TAC DIH_Y_LT_RHAZIM);
    ASM_REWRITE_TAC[];
    BY(ASM_MESON_TAC[Merge_ineq.delta_y_sym]);
  REWRITE_TAC[Nonlinear_lemma.sol0_const1;arith `(-- (pi * c) + c * pi) + pi = pi`];
  RULE_ASSUM_TAC(REWRITE_RULE[arith `~(x <= d) <=> (d < x)`]);
  ENOUGH_TO_SHOW_TAC `&0 < sol_y y1 y2 y3 y4 y5 y6`;
    REWRITE_TAC[Sphere.sol_y];
    BY(REAL_ARITH_TAC);
  REWRITE_TAC[Merge_ineq.sol_y_sol_x];
  MATCH_MP_TAC sol_x_nn;
  REPEAT (GMATCH_SIMP_TAC REAL_LT_MUL_EQ);
  REWRITE_TAC[Trigonometry1.UPS_X_SQUARES];
  REPEAT (GMATCH_SIMP_TAC REAL_LT_MUL_EQ);
  TYPIFY `&0 < eulerA_x (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6)` (C SUBGOAL_THEN (unlist REWRITE_TAC));
    INTRO_TAC (Appendix.get_main_nonlinear "4821120729") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
    REWRITE_TAC[Sphere.ineq;Sphere.y_of_x;arith `x > &0 <=> &0 < x`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab] THEN REAL_ARITH_TAC);
  TYPIFY `&0 < delta_x (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6)` (C SUBGOAL_THEN (unlist REWRITE_TAC));
    FIRST_X_ASSUM MP_TAC;
    BY(REWRITE_TAC[Sphere.delta_y]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN (REWRITE_TAC[Appendix.cstab;Sphere.h0]) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let taum_taum_x = prove_by_refinement(
  `!y1 y2 y3 y4 y5 y6.
    &0 <= y1 /\ &0 <= y2 /\ &0 <= y3 /\ &0 <= y4 /\ &0 <= y5 /\ &0 <= y6 ==>
    taum y1 y2 y3 y4 y5 y6 = y_of_x taum_x y1 y2 y3 y4 y5 y6`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Sphere.y_of_x;Sphere.taum_x;Sphere.rhazim_x;Sphere.rhazim2_x;Sphere.rhazim3_x];
  REWRITE_TAC[Nonlinear_lemma.taum_123];
  REPEAT WEAKER_STRIP_TAC;
  BY(ASM_SIMP_TAC[Nonlinear_lemma.sqrtxx])
  ]);;
  (* }}} *)

let OWZLKVY2 = prove_by_refinement(
  `main_nonlinear_v24 ==> ( !y1 y2 y3 y4 y5 y6.
    y1 = &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    cstab <= y4 /\ y4 <= #3.915 /\
    y5 = &2 /\
    y6 = &2 /\
	&0 <= delta_y y1 y2 y3 y4 y5 y6 ==>
	&0 <= taum y1 y2 y3 y4 y5 y6)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  ASM_CASES_TAC `&200 <= delta_y y1 y2 y3 y4 y5 y6`;
    INTRO_TAC OWZLKVY0 [];
    ASM_REWRITE_TAC[];
    DISCH_THEN (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
    ASM_REWRITE_TAC[];
    DISCH_THEN MATCH_MP_TAC;
    BY(REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC);
  TYPIFY `&0 <= delta_x (y1 * y1) (y2 * y2) (y3 * y3) (y4 * y4) (y5 * y5) (y6 * y6)` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM_ST `&0 <= d` MP_TAC;
    BY(REWRITE_TAC[Sphere.delta_y] THEN REAL_ARITH_TAC);
  GMATCH_SIMP_TAC taum_taum_x;
  CONJ_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab] THEN REAL_ARITH_TAC);
  REWRITE_TAC[Sphere.y_of_x];
  GMATCH_SIMP_TAC Merge_ineq.tau_x_tau_residual_x;
  COMMENT "residue hypotheses";
  CONJ_TAC;
    GMATCH_SIMP_TAC Nonlinear_lemma.sqrtxx;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    REPEAT (GMATCH_SIMP_TAC REAL_LT_MUL_EQ);
    INTRO_TAC (UNDISCH EAR_DELTA_X4) [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
    ANTS_TAC;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    DISCH_THEN (unlist REWRITE_TAC);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.delta_y;Sphere.h0;Appendix.cstab] THEN REAL_ARITH_TAC);
  GMATCH_SIMP_TAC REAL_LE_MUL;
  CONJ_TAC;
    GMATCH_SIMP_TAC SQRT_POS_LE;
    BY(FIRST_X_ASSUM (unlist REWRITE_TAC));
  INTRO_TAC (Appendix.get_main_nonlinear "5202826650 a") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;Sphere.y_of_x];
  REWRITE_TAC[TAUT `a ==> b ==> c <=> (a /\ b ==> c)`];
  ANTS_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Appendix.cstab;Sphere.h0] THEN REAL_ARITH_TAC);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)


(* Now do OCBICBY *)

let BBs_terminal = `!s vv. MEM s scs_terminal_v24 /\  BBs_v24 s vv ==> &0 <= taustar_v24 s vv`;;

(*
let scs_unadorned_explicit = prove_by_refinement(
  `!k a b c. scs_k_v24 (mk_unadorned_v24 k a b c) = k`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Appendix.scs_k_v24_explicit;Appendix.mk_unadorned_v24])
  ]);;
  (* }}} *)
*)

let scs_unadorned_explicit = prove_by_refinement(
  `(!k d a b.
             scs_k_v24 (mk_unadorned_v24 k d a b) = k) /\
        (!k d a b .
             scs_d_v24 (mk_unadorned_v24 k d a b) = d) /\
        (!k d a b .
             scs_a_v24 (mk_unadorned_v24 k d a b) = a) /\
        (!k d a b .
             scs_am_v24 (mk_unadorned_v24 k d a b) = a) /\
        (!k d a b .
             scs_b_v24 (mk_unadorned_v24 k d a b) = b) /\
        (!k d a b .
             scs_bm_v24 (mk_unadorned_v24 k d a b) = b) /\
        (!k d a b .
             scs_J_v24 (mk_unadorned_v24 k d a b) = (\ i j. F)) /\
        (!k d a b .
             scs_lo_v24 (mk_unadorned_v24 k d a b) = {}) /\
        (!k d a b .
             scs_str_v24 (mk_unadorned_v24 k d a b) = {})`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Appendix.scs_v24_explicit;Appendix.mk_unadorned_v24])
  ]);;
  (* }}} *)

let UNADORNED_NOT_EAR = prove_by_refinement(
  `!k d a b.
    ~(is_ear_v24 (mk_unadorned_v24 k d a b))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.is_ear_v24;scs_unadorned_explicit;EMPTY_GSPEC];
  BY(MESON_TAC[NOT_IN_EMPTY;IN_SING])
  ]);;
  (* }}} *)

let dsv_unadorned = prove_by_refinement(
  `!k d a b vv.
    dsv_v24 (mk_unadorned_v24 k d a b) vv = d `,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.dsv_v24;UNADORNED_NOT_EAR;scs_unadorned_explicit;EMPTY_GSPEC;SUM_CLAUSES];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let IMAGE_SUBSET_IN = prove_by_refinement(
  `!(f:A->B) A B. IMAGE f A SUBSET B <=> (!a. a IN A ==> f a IN B)`,
  (* {{{ proof *)
  [
  SET_TAC[]
  ]);;
  (* }}} *)

let taustar3  = prove_by_refinement(
  `!d a b. 
			     (let s = mk_unadorned_v24     3 d a b in
				((!v0 v1 v2. 
				    &2 <= norm v0 /\ norm v0 <= &2 * h0 /\
				    &2 <= norm v1 /\ norm v1 <= &2 * h0 /\
				    &2 <= norm v2 /\ norm v2 <= &2 * h0 /\
				    a 0 1 <= dist(v0,v1) /\ dist(v0,v1) <= b 0 1 /\
				    a 1 2 <= dist(v1,v2) /\ dist(v1,v2) <= b 1 2 /\
				    a 0 2 <= dist(v0,v2) /\ dist(v0,v2) <= b 0 2 ==>
				    d <= tau3 v0 v1 v2) ==>
    (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv)))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Appendix.taustar_v24;scs_unadorned_explicit;arith `3 <= 3`];
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  REWRITE_TAC[dsv_unadorned];
  REWRITE_TAC[arith `&0 <= t - d <=> d <= t`];
  FIRST_X_ASSUM MATCH_MP_TAC;
  FIRST_X_ASSUM MP_TAC;
  REWRITE_TAC[Appendix.BBs_v24;scs_unadorned_explicit;arith `3 <= 3`];
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  REWRITE_TAC[IMAGE_SUBSET_IN;IN_UNIV;Fnjlbxs.in_ball_annulus];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let NONPARALLEL_BALL_ANNULUS_ALT = prove_by_refinement(
  `!v w. &2 <= dist(v,w) /\
     dist(v,w) <= #3.62 /\ // was cstab.
     v IN ball_annulus /\
     w IN ball_annulus
     ==> ~collinear ({vec 0,v, w})`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM MP_TAC;
  TYPIFY `{vec 0,v,w} = {vec 0} UNION {v,w}` (C SUBGOAL_THEN SUBST1_TAC);
    BY(SET_TAC[]);
  REWRITE_TAC[];
  MATCH_MP_TAC Dih2k_hypermap.NONPARALLEL_BALL_ANNULUS362;
  REWRITE_TAC[GSYM dist];
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let tau3_taum = prove_by_refinement(
  `!(v0:real^3) v1 v2.
    v0 IN ball_annulus /\ v1 IN ball_annulus /\ v2 IN ball_annulus /\
    &2 <= dist(v0,v1) /\ &2 <= dist(v0,v2) /\ &2 <= dist(v1,v2) /\
    dist(v0,v1) <= #3.62 /\ dist(v0,v2) <= #3.62 /\ dist(v1,v2) <= #3.62 ==>
    tau3 v0 v1 v2 = taum (norm v0) (norm v1) (norm v2) (dist(v1,v2)) (dist(v0,v2)) (dist(v0,v1))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.tau3;Nonlinear_lemma.taum_123;Sphere.rhazim2;Sphere.rhazim3;Sphere.node2_y;Sphere.node3_y];
  REWRITE_TAC[Sphere.rhazim;Nonlinear_lemma.sol0_const1];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `dihV (vec 0) v0 v1 v2 = dih_y (norm v0) (norm v1) (norm v2) (dist (v1,v2)) (dist (v0,v2)) (dist (v0,v1)) /\ dihV (vec 0) v1 v2 v0  = dih_y (norm v1) (norm v2) (norm v0) (dist (v0,v2)) (dist (v0,v1)) (dist (v1,v2)) /\ dihV (vec 0) v2 v0 v1 = dih_y (norm v2) (norm v0) (norm v1) (dist (v0,v1)) (dist (v1,v2))  (dist (v0,v2))` ENOUGH_TO_SHOW_TAC;
    DISCH_THEN (unlist REWRITE_TAC);
    BY(REAL_ARITH_TAC);
  REPEAT (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] Merge_ineq.DIHV_EQ_DIH_Y));
  REWRITE_TAC[DIST_0];
  TYPIFY `dist(v2,v0) = dist(v0,v2) /\ dist(v2,v1) = dist(v1,v2) /\ dist(v1,v0) = dist(v0,v1)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(MESON_TAC[DIST_SYM]);
  ASM_REWRITE_TAC[];
  REPEAT (GMATCH_SIMP_TAC NONPARALLEL_BALL_ANNULUS_ALT);
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)


let DELTA_Y_POS_4POINTS = prove_by_refinement(
  `!v0 v1 v2 (v3:real^3).
    &0 <= delta_y (dist(v0,v1)) (dist(v0,v2)) (dist(v0,v3)) (dist(v2,v3)) (dist(v1,v3)) (dist(v1,v2))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Sphere.delta_y;arith `x * x = x pow 2`];
  REWRITE_TAC[GSYM Merge_ineq.delta_delta_x];
  BY(REWRITE_TAC[Collect_geom.DELTA_POS_4POINTS])
  ]);;
  (* }}} *)

let tau3_taum_d = prove_by_refinement(
  `!d  a01 a12 a02 b01 b12 b02. 
    (&2 <= a01 /\ &2 <= a12 /\ &2 <= a02 /\ b01 <= #3.62 /\ b12 <= #3.62 /\ b02 <= #3.62 /\
				(!y1 y2 y3 y4 y5 y6. 
				    &2 <= y1 /\ y1 <= &2 * h0 /\
				    &2 <= y2 /\ y2 <= &2 * h0 /\
				    &2 <= y3 /\ y3 <= &2 * h0 /\
				    a01 <= y6 /\ y6 <= b01 /\
				    a12 <= y4 /\ y4 <= b12 /\
				    a02 <= y5 /\ y5 <= b02 /\
				    &0 <= delta_y y1 y2 y3 y4 y5 y6 ==>
				    d <= taum y1 y2 y3 y4 y5 y6) ==>
    (!v0 v1 v2. 
				    &2 <= norm v0 /\ norm v0 <= &2 * h0 /\
				    &2 <= norm v1 /\ norm v1 <= &2 * h0 /\
				    &2 <= norm v2 /\ norm v2 <= &2 * h0 /\
				    a01 <= dist(v0,v1) /\ dist(v0,v1) <= b01 /\
				    a12 <= dist(v1,v2) /\ dist(v1,v2) <= b12 /\
				    a02 <= dist(v0,v2) /\ dist(v0,v2) <= b02 ==>
				    d <= tau3 v0 v1 v2))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  GMATCH_SIMP_TAC tau3_taum;
  CONJ_TAC;
    REWRITE_TAC[Fnjlbxs.in_ball_annulus];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  FIRST_X_ASSUM MATCH_MP_TAC;
  TYPIFY `&0 <= delta_y (norm v0) (norm v1) (norm v2) (dist (v1,v2)) (dist (v0,v2))  (dist (v0,v1))` (C SUBGOAL_THEN (unlist REWRITE_TAC));
    REWRITE_TAC[GSYM Trigonometry1.DIST_L_ZERO];
    BY(REWRITE_TAC[DELTA_Y_POS_4POINTS]);
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let taustar_taum = prove_by_refinement(
    `!d a b.   
    (&2 <= a 0 1 /\ &2 <= a 1 2 /\ &2 <= a 0 2 /\ b 0 1 <= #3.62 /\ b 1 2 <= #3.62 /\ b 0 2 <= #3.62 /\
				(!y1 y2 y3 y4 y5 y6. 
				    &2 <= y1 /\ y1 <= &2 * h0 /\
				    &2 <= y2 /\ y2 <= &2 * h0 /\
				    &2 <= y3 /\ y3 <= &2 * h0 /\
				    a 0 1 <= y6 /\ y6 <= b 0 1 /\
				    a 1 2 <= y4 /\ y4 <= b 1 2 /\
				    a 0 2 <= y5 /\ y5 <= b 0 2 /\
				    &0 <= delta_y y1 y2 y3 y4 y5 y6 ==>
				    d <= taum y1 y2 y3 y4 y5 y6) ==>
    (let s = mk_unadorned_v24     3 d a b in  (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv)))
`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  MATCH_MP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] taustar3);
  MATCH_MP_TAC tau3_taum_d;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let taum_sym = prove_by_refinement(
  `!y1 y2 y3 y4 y5 y6. taum y1 y2 y3 y4 y5 y6 = taum y2 y1 y3 y5 y4 y6 /\
    taum y1 y2 y3 y4 y5 y6 = taum y1 y3 y2 y4 y6 y5`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Nonlinear_lemma.taum_123;Sphere.rhazim2;Sphere.rhazim3;Sphere.node2_y;Sphere.node3_y];
  REWRITE_TAC[Sphere.rhazim];
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC (REAL_RING `((e1:real) = e1' /\ e2 = e2' /\ e3 = e3' /\ e1 = e1'' /\ e2 = e2'' /\ e3 = e3'') ==> ((r1 * e1 + r2 * e2 + r3 * e3 - c = r2 * e2' + r1 * e1' + r3 * e3' - c) /\ (r1 * e1 + r2 * e2 + r3 * e3 - c = r1 * e1'' + r3 * e3'' + r2 * e2'' - c))`);
  BY(MESON_TAC[Nonlinear_lemma.dih_y_sym;Nonlinear_lemma.dih_y_sym2])
  ]);;
  (* }}} *)

let FUNLIST_EXPLICIT = prove_by_refinement(
`(!data d k i j.
     funlist_v24 data d k i j =
     (if i MOD k = j MOD k
      then &0
      else ASSOCD_v24 (psort k (i,j)) (MAP (\ (u,d). psort k u,d) data) d)) /\
     0 MOD 3 = 0 /\
     1 MOD 3 = 1 /\
     2 MOD 3 = 2 /\
     (! (x:real) . x = x) /\
     ~(0 = 1) /\
     ~(0 = 2) /\
     ~(1 = 2) /\
     psort 3 (0,1) = 0,1 /\
     psort 3 (0,2) = 0,2 /\
     psort 3 (1,2) = 1,2 /\
      (!(a:A) (b:B) c d. (a,b) = (c,d) <=> (a = c) /\ (b = d)) /\ 
      (!(a:A) (d:B).  ASSOCD_v24 a [] d = d) /\
      (!(a:A) (d:B) h t. ASSOCD_v24 a (CONS h t) d =
 	 (if a = FST h then SND h else ASSOCD_v24 a t d)) /\
     (!k. MAP (\ (u,(d:real)). psort k u,d) [] = [])  /\
     (!p d. ASSOCD_v24 (p:A) [] (d:B) = d)  /\
     (!k i j r t.
          MAP (\ (u,(d:real)). psort k u,d) (CONS ((i,j),r) t) =
          CONS (psort k (i,j),r) (MAP (\ (u,d). psort k u,d) t))
`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Appendix.funlist_v24;Appendix.ASSOCD_v24;PAIR_EQ];
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  REWRITE_TAC[arith `~(0  = 1) /\ ~(0=2) /\ ~(1=2)`];
  REWRITE_TAC[MAP];
  REWRITE_TAC[Appendix.psort;LET_DEF;LET_END_DEF];
  TYPIFY `0 MOD 3 = 0 /\ 1 MOD 3 = 1 /\ 2 MOD 3 = 2` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT (GMATCH_SIMP_TAC MOD_LT);
    BY(ARITH_TAC);
  ASM_REWRITE_TAC[];
  BY(REWRITE_TAC[arith `0 <= 1 /\ 0 <= 2 /\ 1 <= 2`])
  ]);;
  (* }}} *)

let  terminal_std_tri_OMKYNLT_3336871894_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (&0) (funlist_v24 [] (&2) 3) (funlist_v24 [] (&2) 3) in
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;arith `&2 <= &2 /\ &2 <= #3.01 /\ &2 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "OMKYNLT 3336871894") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;arith `x >= #0.0 <=> &0 <= x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_4528012043_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (tame_table_d 0 3 +  #3.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [] cstab 3)
   (funlist_v24 [] cstab 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;arith `x <= x /\ &2 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "4528012043") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_7459553847_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3
   (tame_table_d 0 3 +  #3.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [(0,1),&2 * h0] cstab 3)
   (funlist_v24 [(0,1),&2 * h0] cstab 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "7459553847") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_4143829594_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3
   (tame_table_d 0 3 +  #3.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [(0,1),cstab] (&2 * h0) 3)
   (funlist_v24 [(0,1),cstab] (&2 * h0) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "4143829594") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_1080462150_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3
   (tame_table_d 0 3 +  #3.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [] (&2 * h0) 3)
   (funlist_v24 [] (&2 * h0) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "1080462150") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_9816718044_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3
   (tame_table_d 1 2 +  #2.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [(0,1),&2] cstab 3)
   (funlist_v24 [(0,1),&2] cstab 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "9816718044") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

(* was sqrt2_bounds *)

let sqrt8_bounds = prove_by_refinement(
  `sqrt8 <= #3.01 /\ &2 <= sqrt8 /\ sqrt8 <= #3.62`,
  (* {{{ proof *)
  [
  INTRO_TAC Flyspeck_constants.bounds [];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_3106201101_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3
   (tame_table_d 1 2 +  #2.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [(0,1),&2; (0,2),cstab] sqrt8 3)
   (funlist_v24 [(0,1),&2; (0,2),cstab] sqrt8 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "3106201101") [`y3`;`y1`;`y2`;`y6`;`y4`;`y5`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y3 y1 y2 y6 y4 y5 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_2200527225_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3
   (tame_table_d 1 2 +  #2.0 * (tame_table_d 2 1 -  #0.11))
   (funlist_v24 [(0,1),&2] sqrt8 3)
   (funlist_v24 [(0,1),&2] sqrt8 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "2200527225") [`y3`;`y1`;`y2`;`y6`;`y4`;`y5`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y3 y1 y2 y6 y4 y5 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_2900061606_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (tame_table_d 1 2 + tame_table_d 2 1 -  #0.11)
   (funlist_v24 [(0,1),&2 * h0; (0,2),cstab] (&2) 3)
   (funlist_v24 [(0,1),&2 * h0; (0,2),cstab] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "2900061606") [`y1`;`y3`;`y2`;`y4`;`y6`;`y5`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y1 y3 y2 y4 y6 y5 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_7097350062a_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (tame_table_d 1 2)
   (funlist_v24 [(0,1),&2 * h0; (0,2),sqrt8] (&2) 3)
   (funlist_v24 [(0,1),&2 * h0; (0,2),sqrt8] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "7097350062a") [`y1`;`y3`;`y2`;`y4`;`y6`;`y5`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y1 y3 y2 y4 y6 y5 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_OMKYNLT_1_2_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (tame_table_d 1 2) (funlist_v24 [(0,1),&2] (&2 * h0) 3)
   (funlist_v24 [(0,1),&2] (&2 * h0) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "OMKYNLT 1 2") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_7645170609_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (tame_table_d 2 1) (funlist_v24 [(0,1),sqrt8] (&2) 3)
   (funlist_v24 [(0,1),sqrt8] (&2) 3) in
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "7645170609") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_OMKYNLT_2_1_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 (tame_table_d 2 1) (funlist_v24 [(0,1),&2 * h0] (&2) 3)
   (funlist_v24 [(0,1),&2 * h0] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "OMKYNLT 2 1") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_7881254908_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 ( #0.696 -  #2.0 *  #0.11)
   (funlist_v24 [(0,1),sqrt8; (1,2),sqrt8] (&2 * h0) 3)
   (funlist_v24 [(0,1),cstab; (1,2),cstab] (&2 * h0) 3) in
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "7881254908") [`y2`;`y1`;`y3`;`y5`;`y4`;`y6`];
  TYPIFY `taum y2 y1 y3 y5 y4 y6 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_5026777310a_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 ( #0.6548 -  #2.0 *  #0.11)
   (funlist_v24 [(0,1),sqrt8; (1,2),sqrt8] (&2) 3)
   (funlist_v24 [(0,1),cstab; (1,2),cstab] (&2 * h0) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "5026777310a") [`y3`;`y1`;`y2`;`y6`;`y4`;`y5`];
  TYPIFY `taum y3 y1 y2 y6 y4 y5 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  REWRITE_TAC[arith `4 + 2 * 1 > 3`];
  TYPIFY `delta_y y3 y1 y2 y6 y4 y5 = delta_y y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN ASSUME_TAC);
    BY(MESON_TAC[Merge_ineq.delta_y_sym]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_7720405539_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 ( #0.5518 /  #2.0 -  #0.2)
   (funlist_v24 [(0,1),cstab; (0,2),&2 * h0; (1,2),&2] (&2) 3)
   (funlist_v24 [(0,1), #3.41; (0,2),&2 * h0; (1,2),&2] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62 /\ #3.41 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "7720405539") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  REWRITE_TAC[arith `2 + 2 * 2 > 3`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_2739661360_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 ( #0.5518 /  #2.0 +  #0.2)
   (funlist_v24 [(0,1),cstab; (0,2),cstab; (1,2),&2] (&2) 3)
   (funlist_v24 [(0,1), #3.41; (0,2),cstab; (1,2),&2] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62 /\ #3.41 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "2739661360") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  REWRITE_TAC[arith `2 + 2 * 2 > 3`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_9269152105_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 ( #0.5518 /  #2.0)
   (funlist_v24 [(0,1),cstab; (0,2),cstab; (1,2),&2] (&2) 3)
   (funlist_v24 [(0,1), #3.62; (0,2),cstab; (1,2),&2] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62 /\ #3.41 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "9269152105") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  INTRO_TAC (Appendix.get_main_nonlinear "2739661360") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  REWRITE_TAC[arith `2 + 2 * 2 > 3`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_4922521904_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3 ( #0.5518 /  #2.0)
   (funlist_v24 [(0,1),cstab; (0,2),&2 * h0; (1,2),&2] (&2) 3)
   (funlist_v24 [(0,1), #3.339; (0,2),&2 * h0; (1,2),&2] (&2) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62 /\ #3.41 <= #3.62 /\ #3.339 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "4922521904") [`y3`;`y2`;`y1`;`y6`;`y5`;`y4`];
  TYPIFY `taum y3 y2 y1 y6 y5 y4 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  REWRITE_TAC[arith `2 + 2 * 2 > 3`];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let  terminal_std_tri_ear_stab_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = mk_unadorned_v24 3  #0.11 (funlist_v24 [(0,2),cstab] (&2) 3)
   (funlist_v24 [(0,2),cstab] (&2 * h0) 3) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62 /\ #3.41 <= #3.62 /\ #3.339 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "3603097872") [`y2`;`y1`;`y3`;`y5`;`y4`;`y6`];
  TYPIFY `taum y2 y1 y3 y5 y4 y6 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  TYPIFY `delta_y y2 y1 y3 y5 y4 y6 = delta_y y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN ASSUME_TAC);
    BY(MESON_TAC[Merge_ineq.delta_y_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  MP_TAC sqrt8_bounds;
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let periodic2_funlist = prove_by_refinement(
  `!a a0 k. periodic2 (funlist_v24 a a0 k) k`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.periodic2;Appendix.funlist_v24];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  TYPIFY `!i. (i + k) MOD k = i MOD k` (C SUBGOAL_THEN ASSUME_TAC);
    GEN_TAC;
    ONCE_REWRITE_TAC[arith `i + (k:num) = 1 * k + i`];
    BY(REWRITE_TAC[MOD_MULT_ADD]);
  TYPIFY `psort k (i + k,j) = psort k (i,j) /\ psort k (i,j+k) = psort k (i,j)` (C SUBGOAL_THEN (unlist REWRITE_TAC));
    BY(ASM_REWRITE_TAC[Appendix.psort]);
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let periodic2_funlistA = prove_by_refinement(
  `!j1 j' j'' k. periodic2 (funlistA_v24 j1 j' (j'':A) k) k`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.periodic2;Appendix.funlistA_v24];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  TYPIFY `!i. (i + k) MOD k = i MOD k` (C SUBGOAL_THEN ASSUME_TAC);
    GEN_TAC;
    ONCE_REWRITE_TAC[arith `i + (k:num) = 1 * k + i`];
    BY(REWRITE_TAC[MOD_MULT_ADD]);
  TYPIFY `psort k (i + k,j) = psort k (i,j) /\ psort k (i,j+k) = psort k (i,j)` (C SUBGOAL_THEN (unlist REWRITE_TAC));
    BY(ASM_REWRITE_TAC[Appendix.psort]);
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let psort_sym = prove_by_refinement(
  `!k i j. psort k (i,j) = psort k (j,i)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Appendix.psort];
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  BY(REPEAT COND_CASES_TAC THEN REWRITE_TAC[PAIR_EQ] THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN ARITH_TAC)
  ]);;
  (* }}} *)

let funlist_sym = prove_by_refinement(
  `!k a a0 i j. funlist_v24 a a0 k i j = funlist_v24 a a0 k j i`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.funlist_v24];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `psort k (i,j) = psort k (j,i)` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[psort_sym]);
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  BY(COND_CASES_TAC THEN ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let funlistA_sym = prove_by_refinement(
  `!k a (a0:A) a1 i j. funlistA_v24 a a0 a1 k i j = funlistA_v24 a a0 a1 k j i`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.funlistA_v24];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `psort k (i,j) = psort k (j,i)` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[psort_sym]);
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  BY(COND_CASES_TAC THEN ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let funlist_diag = prove_by_refinement(
  `!a (a0) k i. funlist_v24 a a0 k i i = &0`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Appendix.funlist_v24;LET_DEF;LET_END_DEF])
  ]);;
  (* }}} *)

let funlistA_empty = prove_by_refinement(
  `!k. funlistA_v24 [] F F k = ( \ i j. F) `,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.funlistA_v24;FUN_EQ_THM;MAP;LET_DEF;LET_END_DEF;Appendix.ASSOCD_v24];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let periodic_mod_reduce = prove_by_refinement(
  `!P k.  ~(k = 0) /\ periodic P k /\ (!i. i < k ==> P i) ==> (!i. P i)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  GMATCH_SIMP_TAC Oxl_def.periodic_mod;
  TYPIFY `k` EXISTS_TAC;
  ASM_REWRITE_TAC[];
  FIRST_X_ASSUM MATCH_MP_TAC;
  BY(ASM_MESON_TAC[DIVISION])
  ]);;
  (* }}} *)

let periodic2_mod_reduce = prove_by_refinement(
  `!P k. ~(k = 0) /\ periodic2 P k /\ (!i j. i < k /\ j < k ==> P i j) ==> (!i j. P i j)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.periodic2];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `!i. periodic (P i) k` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[Oxl_def.periodic];
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `!j. periodic (\i. P i j) k` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[Oxl_def.periodic];
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `(\ i. P i j) i  = (\ i. P i j) (i MOD k)` ((C SUBGOAL_THEN MP_TAC));
    MATCH_MP_TAC Oxl_def.periodic_mod;
    BY(ASM_REWRITE_TAC[]);
  REWRITE_TAC[];
  DISCH_THEN SUBST1_TAC;
  TYPIFY `P (i MOD k) j = P (i MOD k) (j MOD k)` (C SUBGOAL_THEN MP_TAC);
    MATCH_MP_TAC Oxl_def.periodic_mod;
    BY(ASM_REWRITE_TAC[]);
  DISCH_THEN SUBST1_TAC;
  FIRST_X_ASSUM MATCH_MP_TAC;
  BY(ASM_MESON_TAC[DIVISION])
  ]);;
  (* }}} *)

let periodic_mod_reduce = prove_by_refinement(
  `!P k. ~(k = 0) /\ periodic P k /\ (!i. i < k ==> P i) ==> (!i. P i)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `P i = P (i MOD k)` (C SUBGOAL_THEN SUBST1_TAC);
    MATCH_MP_TAC Oxl_def.periodic_mod;
    BY(ASM_REWRITE_TAC[]);
  FIRST_X_ASSUM MATCH_MP_TAC;
  BY(ASM_MESON_TAC[DIVISION])
  ]);;
  (* }}} *)

let periodic2_mod_sym_reduce = prove_by_refinement(
  `!P k. ~(k = 0) /\ periodic2 P k /\ (!i. P i i) /\
    (!i j. P i j = P j i) /\ (!i j. i < j /\ j < k ==> P i j) ==> (!i j. P i j)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  GMATCH_SIMP_TAC periodic2_mod_reduce;
  TYPIFY `k` EXISTS_TAC;
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `(i:num) < j` ASM_CASES_TAC;
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `(j:num) < i \/ (j = i)` (C SUBGOAL_THEN MP_TAC);
    BY(FIRST_X_ASSUM MP_TAC THEN ARITH_TAC);
  DISCH_THEN DISJ_CASES_TAC;
    BY(ASM_MESON_TAC[]);
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let periodic2_SUC_periodic = prove_by_refinement(
  `!f i. periodic2 (f:num->num->A) k ==> periodic (\i. f i (SUC i)) k`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Appendix.periodic2;Oxl_def.periodic];
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[];
  TYPIFY `SUC (i + k) = SUC i + k` (C SUBGOAL_THEN SUBST1_TAC);
    BY(ARITH_TAC);
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let I_LT_J_LT_3_EXPLICIT = prove_by_refinement(
  `!i j. (i < j /\ j < 3) <=> ((i = 0 /\ j = 1) \/ (i = 0 /\ j = 2) \/ (i = 1 /\ j = 2))`,
  (* {{{ proof *)
  [
  BY(ARITH_TAC)
  ]);;
  (* }}} *)

let I_LT_J_LT_4_EXPLICIT = prove_by_refinement(
  `!i j. (i < j /\ j < 4) <=> ((i = 0 /\ j = 1) \/ (i = 0 /\ j = 2) \/ (i = 0 /\ j = 3) \/ (i = 1 /\ j = 2) \/
			      (i = 1 /\ j = 3) \/ (i = 2 /\ j = 3))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Geomdetail.EQ_EXPAND];
  CONJ2_TAC;
    BY(ARITH_TAC);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `j = 1 \/ j = 2 \/ j = 3` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  REPEAT (FIRST_X_ASSUM DISJ_CASES_TAC) THEN ASM_REWRITE_TAC[] THEN REPEAT (FIRST_X_ASSUM MP_TAC);
      BY(ARITH_TAC);
    BY(ARITH_TAC);
  BY(ARITH_TAC)
  ]);;
  (* }}} *)

let funlistA_diag = prove_by_refinement(
  `!j1 j2 j3 k i. funlistA_v24 j1 j2 j3 k i i = (j2:A)`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Appendix.funlistA_v24;LET_DEF;LET_END_DEF])
  ]);;
  (* }}} *)

let is_scs_funlist = prove_by_refinement(
  `!k d a0 b0 j0 a b j1 u u'. d < #0.9 /\ 3 <= k /\ k <= 6 /\
  periodic u k /\ periodic u' k /\
  (!i j. i < j /\ j < k ==> funlist_v24 a a0 k i j <= funlist_v24 b b0 k i j) /\
 (!i j. i < j /\ j < k  ==> &2 <= funlist_v24 a a0 k i j) /\
 (!i. i < 3 /\ k = 3 ==> funlist_v24 b b0 k i (SUC i) < &4) /\
 (!i. i < k /\ 3 < k ==> funlist_v24 b b0 k i (SUC i) < cstab) /\
 (!i j. i < j /\ j < k /\
      funlistA_v24 j1 F j0 k i j
      ==> funlist_v24 a a0 k i j = sqrt8 /\ funlist_v24 b b0 k i j = cstab) /\
 CARD
 {i | i < k /\
      (&2 * h0 < funlist_v24 b b0 k i (SUC i) \/
       &2 < funlist_v24 a a0 k i (SUC i))} +
 k <=  6 ==>
    is_scs_v24 (scs_v24 (k,d,
			 funlist_v24 a a0 k,funlist_v24 a a0 k,
			 funlist_v24 b b0 k,funlist_v24 b b0 k,
			 funlistA_v24 j1 F j0 k,u,u'))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[Appendix.is_scs_v24;Appendix.scs_v24_explicit;arith `x <= x`;Appendix.periodic_empty];
  REWRITE_TAC[periodic2_funlist;periodic2_funlistA];
  REWRITE_TAC[funlist_sym;funlistA_sym;funlist_diag];
  CONJ_TAC;
    MATCH_MP_TAC periodic2_mod_sym_reduce;
    TYPIFY `k` EXISTS_TAC;
    ASM_REWRITE_TAC[TAUT `(a /\ a' ==> b ==> c) <=> (a /\ a' /\ b ==> c)` ];
    ASM_SIMP_TAC[arith `3 <= k ==> ~(k=0)`];
    REWRITE_TAC[funlist_diag;arith `&0 <= &0`];
    CONJ_TAC;
      REWRITE_TAC[Appendix.periodic2];
      BY(MESON_TAC[periodic2_funlist;Appendix.periodic2]);
    BY(MESON_TAC[funlist_sym]);
  COMMENT "next goal";
  CONJ_TAC;
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `i < (j:num)` ASM_CASES_TAC;
      BY(ASM_MESON_TAC[]);
    ONCE_REWRITE_TAC[funlist_sym];
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_SIMP_TAC[arith `~(i = j) /\ ~(i < j) ==> (j < (i:num))`]);
  COMMENT "next goal again";
  CONJ_TAC;
    REWRITE_TAC[RIGHT_FORALL_IMP_THM];
    DISCH_TAC;
    MATCH_MP_TAC periodic_mod_reduce;
    TYPIFY `k` EXISTS_TAC;
    ASM_SIMP_TAC [arith `k=3 ==> ~(k=0)`];
    REWRITE_TAC[Oxl_def.periodic];
    BY(ASM_MESON_TAC[periodic2_funlist;periodic2_SUC_periodic;Oxl_def.periodic]);
  COMMENT "next";
  CONJ_TAC;
    REWRITE_TAC[RIGHT_FORALL_IMP_THM];
    DISCH_TAC;
    MATCH_MP_TAC periodic_mod_reduce;
    TYPIFY `k` EXISTS_TAC;
    ASM_SIMP_TAC [arith `3 < k ==> ~(k=0)`];
    REWRITE_TAC[Oxl_def.periodic];
    BY(ASM_MESON_TAC[periodic2_funlist;periodic2_SUC_periodic;Oxl_def.periodic]);
  COMMENT "final";
  MATCH_MP_TAC periodic2_mod_sym_reduce;
  TYPIFY `k` EXISTS_TAC;
  ASM_SIMP_TAC [arith `3 <= k ==> ~(k=0)`];
  CONJ_TAC;
    REWRITE_TAC[Appendix.periodic2];
    BY(REWRITE_TAC[ (REWRITE_RULE[Appendix.periodic2] periodic2_funlist); (REWRITE_RULE[Appendix.periodic2] periodic2_funlistA)]);
  REWRITE_TAC[funlistA_diag];
  BY(MESON_TAC[funlistA_sym;funlist_sym])
  ]);;
  (* }}} *)

 end;;


(*
let is_scs_unadorned3 = prove_by_refinement(
  `! d a a0 b b0.  d < #0.9 /\
   funlist_v24 a a0 3 0 1 <= funlist_v24 b b0 3 0 1 /\
   funlist_v24 a a0 3 0 2 <= funlist_v24 b b0 3 0 2 /\
   funlist_v24 a a0 3 1 2 <= funlist_v24 b b0 3 1 2 /\
   &2 <= funlist_v24 a a0 3 0 1 /\
   &2 <= funlist_v24 a a0 3 0 2 /\
   &2 <= funlist_v24 a a0 3 1 2 /\
   funlist_v24 b b0 3 0 1 < &4 /\
   funlist_v24 b b0 3 0 2 < &4 /\
   funlist_v24 b b0 3 1 2 < &4 
   ==>
    is_scs_v24 (mk_unadorned_v24 3 d  (funlist_v24 a a0 3)
   (funlist_v24 b b0 3))`,
  (* {{{ proof *)
  [
    intro (funlistA_empty) [`3`]
  rt[Appendix.mk_unadorned_v24;]
    st/r
      fast `F` (sub1 o GSYM)
    mmp is_scs_funlist
    art[periodic_empty;arith `3 <= 3 /\ 3 <= 6 /\ ~(3 < 3)`]
(* ... to here ... xxd *)

   conj
mmp periodic2_mod_sym_reduce
typ `3` ex
  ]);;
  (* }}} *)


(* to here *)
let  terminal_std_ear_3603097872_empty  = prove_by_refinement(
  `main_nonlinear_v24 ==> 
	(let s = scs_v24
   (3,
     #0.11,
    funlist_v24 [(0,1),sqrt8] (&2) 3,
    funlist_v24 [(0,1),sqrt8] (&2) 3,
    funlist_v24 [(0,1),cstab] (&2 * h0) 3,
    funlist_v24 [(0,1),cstab] (&2 * h0) 3,
    funlistA_v24 [(0,1),T] F F 3,
    {},
    {}) in 
	   (!vv. BBs_v24 s vv ==> &0 <= taustar_v24 s vv))` ,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
...
  MATCH_MP_TAC taustar_taum;
  REWRITE_TAC[FUNLIST_EXPLICIT];
  REWRITE_TAC[Appendix.cstab;Sphere.h0;arith `x <= x /\ &2 <= #3.01 /\ &2 <= &2 * #1.26 /\ &2 * #1.26 <= #3.01 /\ &2 <= #3.62 /\ #3.01 <= #3.62 /\ &2 * #1.26 <= #3.62 /\ #3.41 <= #3.62 /\ #3.339 <= #3.62`];
  REWRITE_TAC[sqrt8_bounds];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Appendix.get_main_nonlinear "3603097872") [`y2`;`y1`;`y3`;`y5`;`y4`;`y6`];
  TYPIFY `taum y2 y1 y3 y5 y4 y6 = taum y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[taum_sym]);
  TYPIFY `delta_y y2 y1 y3 y5 y4 y6 = delta_y y1 y2 y3 y4 y5 y6` (C SUBGOAL_THEN ASSUME_TAC);
    BY(MESON_TAC[Merge_ineq.delta_y_sym]);
  REWRITE_TAC[Sphere.ineq;arith `x >= y <=> y <= x`;arith `x > y <=> y < x`;Sphere.tame_table_d];
  MP_TAC sqrt8_bounds;
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[Sphere.h0] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)


Appendix.terminal_ear_3603097872;; (* adorned *)
Appendix.ear_jnull;; (* adorned *)
Appendix.terminal_tri_5405130650;; (* adorned *)
Appendix.terminal_tri_5766053833;; (*adorned*)


Appendix.terminal_hex;;
Appendix.terminal_pent;; 
Appendix.terminal_adhoc_quad_5691615370;; 
Appendix.terminal_adhoc_quad_9563139965B;; 
Appendix.terminal_adhoc_quad_4680581274;; 
Appendix.terminal_adhoc_quad_7697147739;; 


*)


