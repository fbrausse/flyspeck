(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Packing                                                           *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2012-11-23                                                           *)
(* ========================================================================== *)

(*
Use nonlinear inequalities to prove OXLZLEZ
*)

let cc_eps = new_definition `cc_eps = #0.0057`;;

let cc_v4_exists = MESON[]   `?(x:((num->real) list) # ((num->bool)list) # num ). T`;;

let cc_v4 = REWRITE_RULE[] (new_type_definition "cc_v4" ("cc_v4", "pair_of_cc_v4")cc_v4_exists);;

(* discarded ccx1, cc_bool *)

let cc_real_v4 = new_definition `cc_real_v4 cc = FST (pair_of_cc_v4 cc)`;;
let cc_bool_v4 = new_definition `cc_bool_v4 (cc) = FST(SND (pair_of_cc_v4 cc))`;;
let cc_card_v4 = new_definition `cc_card_v4 (cc) = SND(SND (pair_of_cc_v4 cc))`;;

let cc_azim_v4 = new_definition `cc_azim_v4 cc i = EL 0 (cc_real_v4 cc) i`;;
let cc_gg_v4 = new_definition `cc_gg_v4 cc i = EL 1 (cc_real_v4 cc) i`;;
let cc_gg3a_v4 = new_definition `cc_gg3a_v4 cc i = EL 2 (cc_real_v4 cc) i`;;
let cc_gg3b_v4 = new_definition `cc_gg3b_v4 cc i = EL 3 (cc_real_v4 cc) i`;;


let cc_subcrit_v4 = new_definition `cc_subcrit_v4 cc i = EL 0 (cc_bool_v4 cc) i`;;
let cc_crit_v4 = new_definition `cc_crit_v4 cc i = EL 1 (cc_bool_v4 cc) i`;;
let cc_supercrit_v4 = new_definition `cc_supercrit_v4 cc i = EL 2 (cc_bool_v4 cc) i`;;
let cc_small_v4 = new_definition `cc_small_v4 cc i = EL 3 (cc_bool_v4 cc) i`;;
let cc_small_eta_v4 = new_definition `cc_small_eta_v4 cc i = EL 4 (cc_bool_v4 cc) i`;;
let cc_4cell_v4 = new_definition `cc_4cell_v4 cc i = EL 5 (cc_bool_v4 cc) i`;;


let cc_hassmall_v4 = new_definition 
  `cc_hassmall_v4 cc i = (cc_small_v4 cc i /\ cc_small_v4 cc (i+1))`;;

let cc_qu_v4 = new_definition `cc_qu_v4 cc i = (cc_hassmall_v4 cc i /\ cc_4cell_v4 cc i /\ cc_subcrit_v4 cc i)`;;
let cc_qx_v4 = new_definition `cc_qx_v4 cc i = (cc_4cell_v4 cc i /\ ~(cc_qu_v4 cc i))`;;
let cc_qy_v4 = new_definition `cc_qy_v4 cc i = ~cc_4cell_v4 cc i`;;

let cc_negqu_v4 = new_definition `cc_negqu_v4 cc i <=> cc_qu_v4 cc i /\ cc_gg_v4 cc i < &0`;;
let cc_posqu_v4 = new_definition `cc_posqu_v4 cc i <=> cc_qu_v4 cc i /\ &0 <= cc_gg_v4 cc i`;;

let cc_size_v4 = new_definition `cc_size_v4 cc p = 
  CARD {i | i IN 0..(cc_card_v4 cc -1) /\ p i }`;;

(* derived.
let cc_qx10_v4 = new_definition `cc_qx10_v4 cc i = EL 8 (cc_bool_v4 cc) i`;;
let cc_qx11_v4 = new_definition `cc_qx11_v4 cc i = EL 9 (cc_bool_v4 cc) i`;;
*)

let periodic = new_definition `periodic (f:num->A) n = (!i. (f (i+n) = f (i:num)))`;;

(*
let cc_onesmalla_v4  = new_definition 
  `cc_onesmalla_v4 cc i = (cc_small_v4 cc i /\ ~cc_small_v4 cc (i+1))`;;

let cc_onesmallb_v4  = new_definition 
  `cc_onesmallb_v4 cc i = (~cc_small_v4 cc i /\ cc_small_v4 cc (i+1))`;;
*)

let cc_bool_model_v4 = new_definition `cc_bool_model_v4 cc <=> 
  periodic (cc_subcrit_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_crit_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_supercrit_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_small_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_small_eta_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_4cell_v4 cc) (cc_card_v4 cc) /\
(!i. ~(cc_crit_v4 cc i /\ cc_supercrit_v4 cc i)) /\
(!i. ~(cc_crit_v4 cc i /\ cc_subcrit_v4 cc i)) /\
(!i. ~(cc_supercrit_v4 cc i /\ cc_subcrit_v4 cc i)) /\
(!i. (cc_4cell_v4 cc i ==> cc_crit_v4 cc i \/ cc_subcrit_v4 cc i \/ cc_supercrit_v4 cc i)) /\
(!i. (cc_small_eta_v4 cc i ==> cc_small_v4 cc i)) // jsp
`;;

let cc_bool_prep_v4 = new_definition `cc_bool_prep_v4 cc = (!i. cc_qy_v4 cc i ==> ~cc_qy_v4 cc (i+1))`;;


let cc_real_model_v4 = new_definition `cc_real_model_v4 cc <=> 
  periodic (cc_azim_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_gg_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_gg3a_v4 cc) (cc_card_v4 cc) /\
  periodic (cc_gg3b_v4 cc) (cc_card_v4 cc) /\
//
// general bounds.
//
(!i. #0.606 <= cc_azim_v4 cc i) /\ // gckb
(!i. cc_4cell_v4 cc i ==> cc_azim_v4 cc i < #2.8) /\ // azim_c4
(sum (1.. (cc_card_v4 cc)) (\j. cc_azim_v4 cc j) = &2 * pi) /\
((cc_card_v4 cc = 4) /\ (?i. cc_4cell_v4 cc i /\ cc_crit_v4 cc i /\ 
			   cc_qu_v4 cc (i+1) /\ cc_qu_v4 cc (i+2) /\ cc_qu_v4 cc (i+3)) ==>
   (&0 <= sum (1.. (cc_card_v4 cc -1)) (\j. cc_gg_v4 cc j))) /\  // ox3q1h
//
// quarters
//
(!i. cc_qu_v4 cc i ==> -- cc_eps <= cc_gg_v4 cc i) /\ // gamma_qu
(!i. cc_qu_v4 cc i /\ ~(cc_small_eta_v4 cc i) ==> cc_eps <= cc_gg_v4 cc i ) /\ // fhbv2
(!i. cc_qu_v4 cc i /\ ~(cc_small_eta_v4 cc (i+1)) ==> cc_eps <= cc_gg_v4 cc i ) /\ // fhbv2
(!i. cc_qu_v4 cc i /\ cc_qu_v4 cc (i+1) ==> cc_eps <= cc_gg_v4 cc i + cc_gg_v4 cc (i+1)) /\ // quqy
(!i. cc_qu_v4 cc (i+1) /\ cc_qu_v4 cc i ==> cc_eps <= cc_gg_v4 cc i + cc_gg_v4 cc (i+1)) /\ // quqy
(!i. cc_4cell_v4 cc  i ==> a_spine5 + b_spine5 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // ztg4
(!i. cc_qu_v4 cc  i ==>  -- #0.0659 + #0.042 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // azim1
(!i. cc_qu_v4 cc  i ==> -- #0.0142852 + #0.00609451 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // gaz4
(!i. cc_qu_v4 cc  i ==>  #0.161517 - #0.119482 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // gaz6
//
// nonquarter 4-cells
//
(!i. cc_qx_v4 cc i ==> #0.0 <= cc_gg_v4 cc i) /\ // gamma_qx
(!i. cc_qx_v4 cc i /\ #2.3 < cc_azim_v4 cc i ==> cc_eps <= cc_gg_v4 cc i) /\ // gamma_qxd
(!i. cc_qx_v4 cc i /\ cc_hassmall_v4 cc i /\ cc_qy_v4 cc (i+1) ==> &0 <= cc_gg_v4 cc i + cc_gg_v4 cc (i+1)) /\ // gamma10
(!i. cc_qx_v4 cc (i+1) /\ cc_hassmall_v4 cc (i+1) /\ cc_qy_v4 cc i ==> &0 <= cc_gg_v4 cc i + cc_gg_v4 cc (i+1)) /\ // gamma11
(!i. cc_qx_v4 cc i /\ cc_small_v4 cc i /\ ~cc_small_v4 cc (i+1)  ==> cc_eps <= cc_gg_v4 cc i) /\ // gamma8
(!i. cc_qx_v4 cc i /\ cc_small_v4 cc (i+1) /\ ~cc_small_v4 cc i  ==> cc_eps <= cc_gg_v4 cc i) /\ // gamma8
(!i. cc_qx_v4 cc i /\ cc_hassmall_v4 cc i ==>  #0.213849 - #0.119482* cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // gaz9
(!i. cc_qx_v4 cc i /\ cc_hassmall_v4 cc i /\ cc_supercrit_v4 cc i ==>  #0.00457511 + #0.00609451*cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // azim2
//
// 23-cells
//
(!i. cc_qy_v4 cc i ==> #0.008 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // cell3, grki
(!i. cc_qy_v4 cc i /\ cc_small_eta_v4 cc i /\ ~cc_small_eta_v4 cc (i+1) /\ cc_azim_v4 cc i < #1.074 ==>
   a_spine5 + b_spine5 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // pem
(!i. cc_qy_v4 cc i /\ ~cc_small_eta_v4 cc i /\ cc_small_eta_v4 cc (i+1) /\ cc_azim_v4 cc i < #1.074 ==>
   a_spine5 + b_spine5 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // pem
(!i. cc_qy_v4 cc i /\ cc_small_eta_v4 cc i /\ cc_small_eta_v4 cc (i+1) ==> 
   a_spine5 + b_spine5 * cc_azim_v4 cc i <= cc_gg_v4 cc i) /\ // tew
(!i. cc_qy_v4 cc i /\ cc_small_eta_v4 cc i /\ cc_small_eta_v4 cc (i+1) /\ #1.946 <= cc_azim_v4 cc i /\ 
 cc_azim_v4 cc i <= #2.089 ==> 
 #3.0 * cc_eps <= cc_gg_v4 cc i) // txq
`;;

let periodic_nk = prove_by_refinement(
  `!i k f n. periodic (f:num->A) n /\ (0 < n) ==> (f (i + k * n) = f i)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[periodic];
  REPEAT WEAK_STRIP_TAC;
  SPEC_TAC (`k:num`,`k:num`);
  INDUCT_TAC;
    AP_TERM_TAC;
    BY(ARITH_TAC);
  SUBST1_TAC (arith `i + SUC k * n  = (i+ k * n) + n`);
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let periodic_mod = prove_by_refinement(
  `!f n m. periodic (f:num->A) n /\ ~( n=0) ==> (f m = f (m MOD n))`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC DIVISION [`m`;`n`];
  ASM_REWRITE_TAC[];
  ONCE_REWRITE_TAC[arith `x + (y:num) = y + x`];
  BY(ASM_MESON_TAC[periodic_nk;arith `~(n=0) ==> (0 < n)`])
  ]);;
  (* }}} *)

let MOD_IN_NUMSEG = prove_by_refinement(
  `!m n. ~(n =0) ==> (m MOD n IN (0..(n-1)))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[IN_NUMSEG];
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC DIVISION [`m`;`n`];
  ASM_REWRITE_TAC[];
  BY(ARITH_TAC)
  ]);;
  (* }}} *)

let MOD_INJ = prove_by_refinement(
  `!n r a b. ~(n = 0) /\ a IN (r..((n-1)+r)) /\ b IN (r..((n-1)+r)) /\ a MOD n = b MOD n ==> (a = b)`,
  (* {{{ proof *)
  [
  REPEAT GEN_TAC;
  SUBGOAL_THEN `!P. ((!a b. (a <= (b:num)) ==> P a b) /\ (!a b. P a b <=> P b a)) ==> (P a b)` MATCH_MP_TAC;
    BY(MESON_TAC[ (arith `a <= b \/ b <= (a:num)`)]);
  CONJ2_TAC;
    BY(ASM_MESON_TAC[]);
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC DIVISION [`a`;`n`];
  ANTS_TAC;
    BY(ASM_REWRITE_TAC[]);
  INTRO_TAC DIVISION [`b`;`n`];
  ANTS_TAC;
    BY(ASM_REWRITE_TAC[]);
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `(b - a) DIV n = 0` ASSUME_TAC;
    GMATCH_SIMP_TAC DIV_LT;
    REPEAT (FIRST_X_ASSUM_ST `IN` MP_TAC);
    REWRITE_TAC[IN_NUMSEG];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  SUBGOAL_THEN `(b - a) MOD n = 0` ASSUME_TAC;
    REWRITE_TAC[MOD_EQ_0];
    ASM_SIMP_TAC[MOD_EQ_0];
    EXISTS_TAC (`b DIV n - a DIV n`);
    REPEAT (FIRST_X_ASSUM_ST `( * ):num->num->num` MP_TAC);
    ASM_REWRITE_TAC[];
    REWRITE_TAC[RIGHT_SUB_DISTRIB];
    FIRST_X_ASSUM_ST `a <= (b:num)` MP_TAC;
    BY(ARITH_TAC);
  ENOUGH_TO_SHOW_TAC `b - a = 0`;
    FIRST_X_ASSUM_ST `a <= (b:num)` MP_TAC;
    BY(ARITH_TAC);
  INTRO_TAC DIVISION [`b - (a:num)`;`n`];
  ASM_REWRITE_TAC[];
  BY(ARITH_TAC)
  ]);;
  (* }}} *)

let MOD_SURJ = prove_by_refinement(
  `!n r a. ~(n=0) /\ a IN (0..(n-1)) ==> (?b. b IN (r..((n-1)+r)) /\ b MOD n = a)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[IN_NUMSEG];
  REPEAT WEAK_STRIP_TAC;
  ASM_CASES_TAC `r MOD n <= a`;
    EXISTS_TAC (`(r DIV n) * n + a`);
    INTRO_TAC DIVISION [`r`;`n`];
    ASM_REWRITE_TAC[];
    REPEAT WEAK_STRIP_TAC;
    CONJ_TAC;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
    REWRITE_TAC[ MOD_MULT_ADD];
    MATCH_MP_TAC MOD_LT;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  EXISTS_TAC (`((r DIV n) + 1) * n + a`);
  REWRITE_TAC[ MOD_MULT_ADD ];
  CONJ2_TAC;
    MATCH_MP_TAC MOD_LT;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  INTRO_TAC DIVISION [`r`;`n`];
  ASM_REWRITE_TAC[];
  REPEAT WEAK_STRIP_TAC;
  CONJ_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC)
  ]);;
  (* }}} *)

let periodic_sum = prove_by_refinement(
  `!f n. periodic f n /\ ~( n=0) ==> (!i. sum (i..((n-1) +i)) f = sum (0..(n-1)) f)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  INTRO_TAC Counting_spheres.BIJ_SUM [`i..((n-1)+i)`;`0..(n-1)`;`f`;`(\j. (j MOD n))`];
  ANTS_TAC;
    REWRITE_TAC[BIJ;INJ];
    SUBCONJ_TAC;
      CONJ_TAC;
        REPEAT WEAK_STRIP_TAC;
        BY(ASM_SIMP_TAC[ MOD_IN_NUMSEG]);
      REPEAT WEAK_STRIP_TAC;
      MATCH_MP_TAC MOD_INJ;
      BY(ASM_MESON_TAC[]);
    REPEAT WEAK_STRIP_TAC;
    REWRITE_TAC[SURJ];
    ASM_REWRITE_TAC[];
    REPEAT WEAK_STRIP_TAC;
    BY(ASM_MESON_TAC[MOD_SURJ]);
  DISCH_THEN (SUBST1_TAC o GSYM);
  AP_TERM_TAC;
  REWRITE_TAC[FUN_EQ_THM];
  GEN_TAC;
  REWRITE_TAC[o_THM];
  BY(ASM_MESON_TAC[periodic_mod])
  ]);;
  (* }}} *)

let XSBYGIQ_concl = ` (!cc. cc_bool_model_v4 cc /\ cc_bool_prep_v4 cc /\ cc_real_model_v4 cc  ==> (&0 <= sum (0..cc_card_v4 cc -1) (cc_gg_v4 cc))) ==> (!cc. cc_bool_model_v4 cc /\ cc_real_model_v4 cc ==> (&0 <= sum (0..cc_card_v4 cc -1) (cc_gg_v4 cc)))`;;

let CHQSQEY_concl = `!cc. cc_bool_model_v4 cc /\ cc_bool_prep_v4 cc /\ cc_real_model_v4 cc /\ 
   (sum (0..cc_card_v4 cc -1) (cc_gg_v4 cc) < &0) ==> (3 <= cc_size_v4 cc (cc_4cell_v4 cc))`;;

let MTMLSRF_concl = `!cc. cc_bool_model_v4 cc /\ cc_bool_prep_v4 cc /\ cc_real_model_v4 cc /\ 
   (sum (0..cc_card_v4 cc -1) (cc_gg_v4 cc) < &0) ==> (?i. 0 < i /\ cc_gg_v4 cc i < &0 /\ cc_qu_v4 cc i /\
						      cc_4cell_v4 cc (i+1) /\ cc_4cell_v4 cc (i-1))`;;

let LXDEYBO_concl = `!cc. cc_bool_model_v4 cc /\ cc_bool_prep_v4 cc /\ cc_real_model_v4 cc /\ 
   (sum (0..cc_card_v4 cc -1) (cc_gg_v4 cc) < &0) ==> (cc_size_v4 cc (cc_4cell_v4 cc) <= 4)`;;

let UNPNFVW_concl = `!cc. cc_bool_model_v4 cc /\ cc_bool_prep_v4 cc /\ cc_real_model_v4 cc /\ 
   (sum (0..cc_card_v4 cc -1) (cc_gg_v4 cc) < &0) ==> (cc_size_v4 cc (cc_qy_v4 cc) <= 1)`;;

let DHCVTVE_concl = `T`;; (* This is just a repeat of CHQSQEY, LXDEYBO, UNPNFVW *)

let PMZTATI_concl = `!cc i. cc_bool_model_v4 cc /\ cc_real_model_v4 cc 
  cc_qx_v4 cc i /\ 


Print_types.print_goal_types();;


  
