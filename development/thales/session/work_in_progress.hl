
module Work_in_progress = struct
end;;


open Hales_tactic;;


let LET_THM = CONJ LET_DEF LET_END_DEF;;



(* *************************************************************************** *)
(* COMPLETED LEMMAS *)
(* *************************************************************************** *)

let cos_bounds_0_pi = prove_by_refinement(
  `!z. &0 < z /\ z < pi ==> -- &1 < cos z /\ cos z < &1`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `(&0 < z /\ z < pi / &2) \/ z = pi / &2 \/ (&0 < pi - z /\ pi - z < pi / &2)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  REPEAT (FIRST_X_ASSUM DISJ_CASES_TAC);
      BY(ASM_MESON_TAC[Counting_spheres.cos_bounds_0_Pi2;arith `&0 < x ==> -- &1 < x`]);
    ASM_REWRITE_TAC[COS_PI2];
    BY(REAL_ARITH_TAC);
  TYPIFY `-- &1 < --cos z /\ --cos z < &1` ENOUGH_TO_SHOW_TAC;
    BY(REAL_ARITH_TAC);
  ONCE_REWRITE_TAC[GSYM COS_NEG];
  REWRITE_TAC[GSYM COS_PERIODIC_PI;arith `--z + pi = pi - z`];
  BY(ASM_MESON_TAC[Counting_spheres.cos_bounds_0_Pi2;arith `&0 < x ==> -- &1 < x`])
  ]);;
  (* }}} *)


(* *************************************************************************** *)
(* WORK IN PROGRESS *)
(* *************************************************************************** *)




let ear_acute = prove_by_refinement(
  `main_nonlinear_terminal_v11 ==> (!y1 y2 y3 y4 y5 y6. 
    &2 <= y1 /\ y1 <= &2 * h0 /\
    &2 <= y2 /\ y2 <= &2 * h0 /\
    &2 <= y3 /\ y3 <= &2 * h0 /\
    &2 <= y4 /\ y4 <= &2 * h0 /\
    &2 <= y6 /\ y6 <= &2 * h0 /\
    &3 <= y5 /\
    &0 < ups_x (y1*y1) (y3*y3) (y5*y5) 
    ==> dih_y y1 y2 y3 y4 y5 y6 < pi / &2)
`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Sphere.h0;arith `&2 * #1.26  = #2.52`;Trigonometry.IHIQXLM];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Terminal.get_main_nonlinear "2485876245a") [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  ASM_REWRITE_TAC[Sphere.ineq;TAUT `a ==> b ==> c <=> a /\ b ==> c`;arith `#3.0 = &3`;];
  ANTS_TAC;
    REWRITE_TAC[arith `x <= y <=> ~(y < x)`];
    DISCH_TAC;
    FIRST_X_ASSUM_ST `&16` MP_TAC THEN REWRITE_TAC[arith `a * b * c = (a * b) * c`];
    REWRITE_TAC[arith `~(&0 < x * y) <=> &0 <= x * (-- y)`];
    REPEAT (GMATCH_SIMP_TAC REAL_LE_MUL_EQ);
    REPEAT (GMATCH_SIMP_TAC REAL_LT_MUL_EQ);
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  REWRITE_TAC[Nonlinear_lemma.dih_x_alt;Sphere.dih_y;LET_THM;GSYM Sphere.delta_y];
  REWRITE_TAC[GSYM Sphere.delta4_y;GSYM Sphere.y_of_x];
  REWRITE_TAC[arith `pi2 + a < pi2 <=> a < &0`];
  DISCH_TAC;
  GMATCH_SIMP_TAC Tskajxy.ATN2_Y_NEG;
  CONJ_TAC;
    BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
  BY(REWRITE_TAC[arith `p - a = p + -- a`;GSYM ATN_NEG;arith `-- p + a < &0 <=> a < p`;ATN_BOUNDS])
  ]);;
  (* }}} *)

let quad_nonexist_849 = prove_by_refinement(
  `main_nonlinear_terminal_v11 ==> ~(?(v1:real^3) v2 v3 v4.
      dist(v1,v2) = &2 /\ dist(v2,v3) = &2 /\ dist(v3,v4) = &2 /\ dist(v1,v4)= &2 * h0 /\
      cstab <= dist(v1,v3) /\ cstab <= dist(v2,v4))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[NOT_EXISTS_THM;Sphere.cstab];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Terminal.get_main_nonlinear "8495326405") [`dist(v3,v4)`;`dist(v2,v3)`;`dist(v1,v3)`;`dist(v1,v2)`;`dist(v1,v4)`;`dist(v2,v4)`];
  REWRITE_TAC[Sphere.ineq;TAUT `a ==> b ==> c <=> a /\ b ==> c`;arith `x <= x`];
  DISCH_THEN MP_TAC THEN ANTS_TAC;
    ASM_REWRITE_TAC[arith `x <= x`];
    TYPIFY `!w1 w3 w2. dist(w1,w2) = &2 /\ dist(w2,w3) = &2 ==> dist((w1:real^3),w3) <= &6` ENOUGH_TO_SHOW_TAC;
      BY(DISCH_TAC THEN CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_MESON_TAC[DIST_SYM]);
    REPEAT GEN_TAC THEN (INTRO_TAC DIST_TRIANGLE[`w1`;`w2`;`w3`]);
    BY(REAL_ARITH_TAC);
  REWRITE_TAC[arith `~(x < &0) <=> &0 <= x`];
  BY(INTRO_TAC Terminal.DELTA_Y_POS_4POINTS [`v3`;`v4`;`v2`;`v1`] THEN REWRITE_TAC[DIST_SYM])
  ]);;
  (* }}} *)

(* shortest diag < 3.62 *)

let quad_diag_362 = prove_by_refinement(
  `main_nonlinear_terminal_v11 ==> (!(v1:real^3) v2 v3 v4.
      dist(v1,v2) = &2 /\ dist(v2,v3) = cstab /\ dist(v3,v4) = &2 /\ dist(v1,v4)= cstab ==>
      (dist(v1,v3) <= #3.62 \/ dist(v2,v4) <= #3.62))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Sphere.cstab;arith `x <= y <=> ~(y < x)`;GSYM DE_MORGAN_THM];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (Terminal.get_main_nonlinear "2171548893") [`dist(v3,v4)`;`dist(v2,v3)`;`dist(v1,v3)`;`dist(v1,v2)`;`dist(v1,v4)`;`dist(v2,v4)`];
  REWRITE_TAC[Sphere.ineq;TAUT `a ==> b ==> c <=> a /\ b ==> c`;arith `x <= x`];
  DISCH_THEN MP_TAC THEN ANTS_TAC;
    ASM_REWRITE_TAC[arith `x <= x`];
    ASM_SIMP_TAC[arith `x < y ==> x <= y`];
    TYPIFY `!w1 w3 w2. dist(w1,w2) = &2 /\ dist(w2,w3) = #3.01 ==> dist((w1:real^3),w3) <= &6` ENOUGH_TO_SHOW_TAC;
      BY(DISCH_TAC THEN CONJ_TAC THENL [ALL_TAC;ONCE_REWRITE_TAC[DIST_SYM]] THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_MESON_TAC[DIST_SYM]);
    REPEAT GEN_TAC THEN (INTRO_TAC DIST_TRIANGLE[`w1`;`w2`;`w3`]);
    BY(REAL_ARITH_TAC);
  REWRITE_TAC[arith `~(x < &0) <=> &0 <= x`];
  BY(INTRO_TAC Terminal.DELTA_Y_POS_4POINTS [`v3`;`v4`;`v2`;`v1`] THEN REWRITE_TAC[DIST_SYM])
  ]);;
  (* }}} *)


let INV_ARCLENGTH = prove_by_refinement(
  `!y1 y3 z. 
   &0 < z /\ z < pi /\ &0 < y1 /\ &0 < y3 ==>
    &0 < y1 pow 2 + y3 pow 2 - &2 * y1  *y3 * cos z /\
    z = arclength y1 y3 (sqrt (y1 pow 2 + y3 pow 2 - &2 * y1 *y3 * cos z))`,
    `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC cos_bounds_0_pi [`z`];
  ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  SUBCONJ_TAC;
    REWRITE_TAC[arith `y1 pow 2 + y3 pow 2 - &2 * y1 * y3 * cos z = (y1 - y3) pow 2 + &2 * y1 *y3 * (&1 - cos z)`];
    MATCH_MP_TAC (arith `&0 <= a /\ &0 < b ==> &0 < a + b`);
    REWRITE_TAC[ REAL_LE_POW_2];
    REPEAT (GMATCH_SIMP_TAC REAL_LT_MUL_EQ);
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  DISCH_TAC;
  TYPED_ABBREV_TAC `c = sqrt (y1 pow 2 + y3 pow 2 - &2 * y1 * y3 * cos z)`;
  GMATCH_SIMP_TAC Trigonometry1.ACS_ARCLENGTH;
  SUBCONJ_TAC;
    ASM_REWRITE_TAC[];
    CONJ_TAC;
      EXPAND_TAC "c";
      GMATCH_SIMP_TAC SQRT_POS_LE;
      BY(ASM_TAC THEN REAL_ARITH_TAC);
    CONJ_TAC;
      EXPAND_TAC "c";
      TYPIFY `y1 + y3 = sqrt( (y1 + y3) pow 2)` ENOUGH_TO_SHOW_TAC;
        DISCH_THEN SUBST1_TAC;
        GMATCH_SIMP_TAC SQRT_MONO_LE_EQ;
        CONJ_TAC;
          REWRITE_TAC[ REAL_LE_POW_2];
          BY(ASM_TAC THEN REAL_ARITH_TAC);
        BY(REWRITE_TAC[arith `(y1 + y3) pow 2 = y1 pow 2 + y3 pow 2 + &2 * y1 * y3`])

xxd

mmp (arith `&0 <= &2 * y1 * y3 * (&1 - cos z) ==> a + b - &2 * y1 * y3 * cos z <= a + b + &2 * y1 * y3`)

art[]
fyn2
gm Merge_ineq.sqrtpow2
asimp[arith `&0 < x ==> &0 <= x`]

typ `

art[]

  rt[
  ]);;
  (* }}} *)

