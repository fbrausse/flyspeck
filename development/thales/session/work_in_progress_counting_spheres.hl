open Counting_spheres;;
open Hales_tactic;;

let DLWCHEM_concl = `!V. packing V /\ packing_ineq_def_a /\
  V SUBSET ball_annulus /\ ~(lmfun_ineq_center V) ==>
   (CARD V = 13 \/ CARD V = 14 \/ CARD V = 15)`;;


let XULJEPR_concl = `!V. packing V /\ V SUBSET ball_annulus /\ packing_ineq_def_a /\
 (?v.  v IN V /\ norm (v) = &2 /\ (!u.  (u IN V) /\ ~(u = v) ==> &2 * h0 <= dist(u,v) ))
==> (lmfun_ineq_center V)`;;


(* ========================================================================== *)
(* COMPLETED LEMMAS  *)
(* ========================================================================== *)


let AZIM_SUM_LE = prove_by_refinement(
  `!x y z w1 w2 w3.
    ~(collinear {x,y,z}) /\ ~(collinear {x,y,w1}) /\ ~(collinear {x,y,w2}) /\
   ~(collinear {x,y,w3}) /\
    azim x y z w1 <= azim x y z w2 /\
    azim x y z w2 <= azim x y z w3 ==>
   (azim x y w1 w3 = azim x y w1 w2 + azim x y w2 w3)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `azim x y z w3 = azim x y z w1 + azim x y w1 w3` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    ASM_REWRITE_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  SUBGOAL_THEN `azim x y z w2 = azim x y z w1 + azim x y w1 w2` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    BY(ASM_REWRITE_TAC[]);
  SUBGOAL_THEN `azim x y z w3 = azim x y z w2 + azim x y w2 w3` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    BY(ASM_REWRITE_TAC[]);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let AZIM_NN = prove_by_refinement(
  `!x y z u. &0 <= azim x y z u`,
  (* {{{ proof *)
  [
  MESON_TAC[azim]
  ]);;
  (* }}} *)


let AZIM_BASE_SHIFT_LT = prove_by_refinement(
  `!x y z z' w1 w2 w3.
    ~(collinear {x,y,z}) /\ ~(collinear {x,y,z'}) /\ ~(collinear {x,y,w1}) /\
    ~(collinear {x,y,w2}) /\ ~(collinear {x,y,w3}) /\
    azim x y z w1 < azim x y z w2 /\
    azim x y z w2 < azim x y z w3 /\
    azim x y z' w1 < azim x y z' w3 ==>
   (azim x y z' w1 < azim x y z' w2 /\ azim x y z' w2 < azim x y z' w3)
`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `azim x y w1 w3 = azim x y w1 w2 + azim x y w2 w3` ASSUME_TAC;
    MATCH_MP_TAC AZIM_SUM_LE;
    EXISTS_TAC `z:real^3`;
    ASM_REWRITE_TAC[];
    BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  REWRITE_TAC[arith `a < b <=> ~(b <= a)`];
  CONJ_TAC THEN WEAK_STRIP_TAC;
    SUBGOAL_THEN `azim x y w2 w3 = azim x y w2 w1 + azim x y w1 w3` ASSUME_TAC;
      MATCH_MP_TAC AZIM_SUM_LE;
      EXISTS_TAC `z':real^3`;
      ASM_REWRITE_TAC[];
      BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
    SUBGOAL_THEN `azim x y w1 w2 = &0 /\ azim x y w2 w1 = &0` (MP_TAC);
      BY(ASM_MESON_TAC[AZIM_NN;arith `a = b + c /\ c = e + a /\ &0 <= b /\ &0 <= e ==> (b = &0 /\ e = &0)`]);
    STRIP_TAC;
    SUBGOAL_THEN `azim x y z w2 = azim x y z w1 + azim x y w1 w2` ASSUME_TAC;
      MATCH_MP_TAC Fan.sum4_azim_fan;
      ASM_REWRITE_TAC[];
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  COMMENT "1 left";
  SUBGOAL_THEN `azim x y w1 w2 = azim x y w1 w3 + azim x y w3 w2` ASSUME_TAC;
    MATCH_MP_TAC AZIM_SUM_LE;
    EXISTS_TAC `z':real^3`;
    ASM_REWRITE_TAC[];
    BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  SUBGOAL_THEN `azim x y w2 w3 = &0 /\ azim x y w3 w2 = &0` (MP_TAC);
    BY(ASM_MESON_TAC[AZIM_NN;arith `a = b + c /\ b = a + c' /\ &0 <= c /\ &0 <= c' ==> (c = &0 /\ c' = &0)`]);
  STRIP_TAC;
  SUBGOAL_THEN `azim x y z w3 = azim x y z w2 + azim x y w2 w3` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    ASM_REWRITE_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let AZIM_COMP_LT = prove_by_refinement(
  `!x y z u v. &0 < azim x y z u /\  azim x y z u < azim x y z v ==>
     azim x y v z < azim x y u z `,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  ONCE_REWRITE_TAC[Rogers.AZIM_COMPL_EXT];
  BY(REPEAT COND_CASES_TAC THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let AZIM_COMP_LE = prove_by_refinement(
  `!x y z u v. &0 < azim x y z u /\  azim x y z u <= azim x y z v ==>
     azim x y v z <= azim x y u z `,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  ONCE_REWRITE_TAC[Rogers.AZIM_COMPL_EXT];
  BY(REPEAT COND_CASES_TAC THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let AZIM_COMP2_LE = prove_by_refinement(
  `!x y z u v. &0 < azim x y u z /\  &0 < azim x y v z /\ azim x y u z <= azim x y v z ==>
     azim x y z v <= azim x y z u `,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  ONCE_REWRITE_TAC[Rogers.AZIM_COMPL_EXT];
  BY(REPEAT COND_CASES_TAC THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let AZIM_COMP2_LT = prove_by_refinement(
  `!x y z u v. &0 < azim x y u z /\  &0 < azim x y v z /\ azim x y u z < azim x y v z ==>
     azim x y z v < azim x y z u `,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  ONCE_REWRITE_TAC[Rogers.AZIM_COMPL_EXT];
  BY(REPEAT COND_CASES_TAC THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let WEDGE_ORDER_DISJOINT = prove_by_refinement(
  `!x y z n g.
     ~(collinear {x,y,z}) /\
    (!i. i IN 1..n ==> ~(collinear {x,y, g i})) /\
     (g (n+1) = g 1) /\
        (!j k. j IN 1..n /\ k IN 1..n /\ (j < k) ==>  
	  azim x y z (g j) < azim x y z (g k))
    ==>
    (!j k. j IN 1..n /\ k IN 1..n /\ ~(j = k) ==>
       wedge x y (g j) (g (j+1)) INTER wedge x y (g k) (g (k+1)) = {})
	 `,
  (* {{{ proof *)
  [
  REPEAT GEN_TAC;
  DISCH_TAC;
  MATCH_MP_TAC WLOG_LT;
  REWRITE_TAC[];
  CONJ_TAC;
    BY(SET_TAC[]);
  GEN_TAC;
  X_GEN_TAC `k:num`;
  FIRST_X_ASSUM MP_TAC;
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[FUN_EQ_THM];
  X_GEN_TAC `p:real^3`;
  REWRITE_TAC[INTER;IN_ELIM_THM;wedge;X_IN NOT_IN_EMPTY];
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `j + 1 IN 1..n` ASSUME_TAC;
    REPEAT (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[IN_NUMSEG];
    BY(ARITH_TAC);
  SUBGOAL_THEN `(azim x y z (g (j:num)) < azim x y z p)` ASSUME_TAC;
    REWRITE_TAC [arith `a <  b <=> ~(b <= a)`];
    WEAK_STRIP_TAC;
    (fun (asl,w) -> (MP_TAC (SPECL ( envl (asl,w)[`x`;`y`;`g j`;`z`;`g j`;`p`;`g (j+1)` ]) AZIM_BASE_SHIFT_LT)) (asl,w));
    ASM_SIMP_TAC[AZIM_REFL;arith `j < j+1`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  COMMENT "A";
  SUBGOAL_THEN `azim x y z p < azim x y z (g (j+1))` ASSUME_TAC;
    REWRITE_TAC[arith `a < b <=> ~(b <= a)`];
    WEAK_STRIP_TAC;
    (fun (asl,w) -> (MP_TAC (SPECL ( envl (asl,w)[`x`;`y`;`g j`;`z`;`g j`;`p`;`g (j+1)` ]) AZIM_BASE_SHIFT_LT)) (asl,w));
    ASM_SIMP_TAC[AZIM_REFL;arith `j < j+1`];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  COMMENT "B";
  SUBGOAL_THEN `k = (n:num) /\ 1 IN 1..n` ASSUME_TAC;
    MATCH_MP_TAC (prove (`k IN 1..n /\ ~(k+1 IN 1..n) ==> ((k = n) /\ 1 IN 1..n)`, REWRITE_TAC [ IN_NUMSEG ] THEN ARITH_TAC ));
    ASM_SIMP_TAC[];
    WEAK_STRIP_TAC;
    FIRST_ASSUM (MP_TAC o (SPECL[`k:num`;`k+1`]));
    FIRST_X_ASSUM (MP_TAC o (SPECL[`j+1`;`k:num`]));
    ASM_SIMP_TAC[arith `k < k+1`];
    REPEAT WEAK_STRIP_TAC;
    (fun (asl,w) -> (MP_TAC (SPECL ( envl (asl,w)[`x`;`y`;`g k`;`z`;`g k`;`p`;`g (k+1)`]) AZIM_BASE_SHIFT_LT)) (asl,w));
    ASM_SIMP_TAC[AZIM_REFL];
    SUBGOAL_THEN `azim x y z (g (j+1)) <= azim x y z (g (k:num))` ASSUME_TAC;
      BY(ASM_MESON_TAC[arith `a <= b <=> (a<b \/ a = b)`;arith `j<k ==> (j+1=k)\/ (j+1<k)`]);
    REPEAT (FIRST_X_ASSUM MP_TAC);
    BY(REAL_ARITH_TAC);
  COMMENT "C";
  SUBGOAL_THEN `azim x y (g 1) (g n) < azim x y p (g (n:num))` ASSUME_TAC;
    MATCH_MP_TAC AZIM_COMP_LT;
    BY(ASM_MESON_TAC[]);
  SUBGOAL_THEN `1 < n` ASSUME_TAC;
    BY(ASM_MESON_TAC[IN_NUMSEG;arith `1 <= j /\ j < k /\ k <= n ==> 1 < n`]);
  SUBGOAL_THEN `azim x y z (g n) = azim x y z (g 1) + azim x y (g 1) (g n)` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    BY(ASM_MESON_TAC[arith `a<b ==> a <= b`]);
  SUBGOAL_THEN `azim x y z p = azim x y z (g 1) + azim x y (g 1) p` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    ASM_SIMP_TAC[];
    MATCH_MP_TAC (arith `a<b ==> a <= b`);
    ASM_CASES_TAC `(1=j)`;
      BY(ASM_SIMP_TAC[]);
    MATCH_MP_TAC (arith `a < azim x y z (g (j:num)) /\ azim x y z (g j) < c ==> a < c`);
    ASM_SIMP_TAC[];
    FIRST_X_ASSUM MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    BY(ASM_MESON_TAC[IN_NUMSEG; arith `1 <= j ==> ((1=j) \/ (1 < j))`]);
  FIRST_X_ASSUM MP_TAC;
  SUBGOAL_THEN `azim x y z (g n) = azim x y z p + azim x y p (g (n:num))` ASSUME_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    ASM_SIMP_TAC[];
    MATCH_MP_TAC (TAUT `a /\ b ==> b /\ a`);
    CONJ_TAC;
      BY(ASM_MESON_TAC[]);
    MATCH_MP_TAC (arith `a<b ==> a <= b`);
    ASM_CASES_TAC `(j+1=n)`;
      BY(ASM_MESON_TAC[]);
    MATCH_MP_TAC (arith `a < azim x y z (g (j+1)) /\ azim x y z (g (j+1)) < c ==> a < c`);
    ASM_SIMP_TAC[];
    BY(ASM_MESON_TAC[IN_NUMSEG; arith `~(j+1=n) /\ ~(j=n) /\ (j<=n) ==> (j+1 < n)`]);
  DISCH_TAC;
  SUBGOAL_THEN `azim x y (g 1) p < &0` ASSUME_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  BY(ASM_MESON_TAC[azim;arith `x < &0 ==> ~(&0 <= x)`])
  ]);;
  (* }}} *)

let ORDER_AZIM_SUM2Pi = prove_by_refinement(
   `!x y z n g.
     ~(collinear {x,y,z}) /\
    (!i. i IN 1..n ==> ~(collinear {x,y, g i})) /\
     (g (n+1) = g 1) /\ (1 < n) /\
        (!j k. j IN 1..n /\ k IN 1..n /\ (j < k) ==>  
	  azim x y z (g j) < azim x y z (g k))
    ==>
     sum (1..n) (\i. azim x y (g i) (g (i+1))) = &2 * pi`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `!i. i IN 1..(n-1) /\ 1 < n ==> (i < i+1 /\ i IN 1..n /\ (i+1) IN 1..n)` MP_TAC;
    REWRITE_TAC[IN_NUMSEG];
    BY(ARITH_TAC);
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `!i. i IN 1..(n-1) ==> azim x y (g i) (g(i+1)) = azim x y z (g(i+1)) - azim x y z (g i)` ASSUME_TAC;
    REPEAT WEAK_STRIP_TAC;
    REWRITE_TAC[arith `a = b - c <=> b = c + a`];
    MATCH_MP_TAC Fan.sum4_azim_fan;
    ASM_SIMP_TAC[];
    MATCH_MP_TAC (arith `a < b ==> a <= b`);
    BY(ASM_MESON_TAC[arith `i < i+1`]);
  SUBGOAL_THEN `sum (1..n) (\i. azim x y (g i) (g (i+1))) = sum (1..(n-1)) (\i. azim x y (g i) (g (i+1))) + sum (n..n) (\i. azim x y (g i) (g (i+1)))` SUBST1_TAC;
    BY(ASM_MESON_TAC[arith `1 <= (n-1)+1 /\ ((1<n) ==>(n-1)+1 = n)`;SUM_ADD_SPLIT]);
  REWRITE_TAC[SUM_SING_NUMSEG];
  SUBGOAL_THEN `sum (1..(n-1)) (\i. azim x y (g i) (g(i+1))) = sum(1..(n-1)) (\i. azim x y z (g (i+1)) - azim x y z (g i))` SUBST1_TAC;
    BY(ASM_MESON_TAC[SUM_EQ]);
  SIMP_TAC[SUM_DIFFS_ALT];
  ASM_SIMP_TAC[arith `1< n ==> 1 <= n-1`;arith `1 < n==> (n-1)+1 = n`];
  MATCH_MP_TAC (arith `  a = b + azim x y (g 1) (g n)  /\ c = &2 * pi - azim x y (g 1) (g n) ==> a - b + c = &2 * pi`);
  SUBGOAL_THEN `1 IN 1..n /\ n IN 1..n` MP_TAC;
    REWRITE_TAC[IN_NUMSEG];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  REPEAT WEAK_STRIP_TAC;
  SUBCONJ_TAC;
    MATCH_MP_TAC Fan.sum4_azim_fan;
    BY(ASM_SIMP_TAC[arith `a< b ==> a<=b`]);
  DISCH_TAC;
  (fun (asl,w) -> (REWRITE_TAC[SPECL ( envl (asl,w)[`x`;`y`;`g (1)`;`g(n:num)`]) Rogers.AZIM_COMPL_EXT]) (asl,w));
  COND_CASES_TAC;
    BY(ASM_MESON_TAC[arith `x = y + &0 ==> ~(y<x)`]);
  BY(REWRITE_TAC[])
  ]);;
  (* }}} *)


let AFFINE_VEC0 = prove_by_refinement(
  `!(u:real^A) t.  ~(t= &1) ==> vec 0 IN affine hull {u, t % u}`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[ AFFINE_HULL_2_ALT ; IN_ELIM_THM ];
  ASM_CASES_TAC (`(u:real^A) = vec 0`);
    ASM_REWRITE_TAC[];
    REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO];
    REWRITE_TAC[VECTOR_MUL_RZERO];
    BY(REWRITE_TAC[IN_UNIV]);
  REWRITE_TAC[IN_UNIV];
  EXISTS_TAC `&1 / (&1 - t)`;
  REWRITE_TAC[ VECTOR_ARITH `(u + s % (t % u - (u:real^A))) = (&1 + s * t - s) % u`];
  MATCH_MP_TAC (VECTOR_ARITH (`(a:real^A) = b ==> b = a`));
  ASM_REWRITE_TAC [ VECTOR_MUL_EQ_0 ];
  MATCH_MP_TAC (Calc_derivative.rational_identity `&1 + &1 / (&1 - t) * t - &1 / (&1 - t) = &0`);
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let RELATIVE_INTERIOR_AFFINE_FACE = prove_by_refinement(
  `!C (p:real^N) f. convex C /\ f face_of C /\ p IN affine hull f /\ (p IN relative_interior C) ==> (f = C) `,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  (fun (asl,w) -> (ENOUGH_TO_SHOW_TAC ( env (asl,w) `~(f INTER relative_interior C = {})`)) (asl,w));
    BY(ASM_MESON_TAC[ FACE_OF_DISJOINT_RELATIVE_INTERIOR ]);
  REWRITE_TAC[Local_lemmas.EXISTS_IN];
  (fun (asl,w) -> (EXISTS_TAC ( env (asl,w) `p`)) (asl,w));
  ASM_REWRITE_TAC[ IN_INTER ];
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w) `f = affine hull f INTER C`) SUBST1_TAC) (asl,w));
    BY(ASM_MESON_TAC [ FACE_OF_STILLCONVEX ]);
  ASM_REWRITE_TAC[ IN_INTER ];
  FIRST_X_ASSUM (MP_TAC);
  BY(ASM_MESON_TAC[ RELATIVE_INTERIOR_SUBSET ;SUBSET; IN ])
  ]);;
  (* }}} *)

let SUBSET_P_HULL = prove(` (S:A -> bool) SUBSET P hull S`,
REWRITE_TAC[HULL_SUBSET]);;


let FCHANGED_AFFINE = prove_by_refinement(
  `!p (f:real^3->bool).
    polyhedron p /\ bounded p /\ vec 0 IN interior p /\ f facet_of p ==>
    (fchanged f INTER affine hull f = relative_interior f)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  MATCH_MP_TAC SUBSET_ANTISYM;
  ROT_TAC;
  CONJ_TAC;
    REWRITE_TAC[SUBSET_INTER];
    CONJ_TAC;
      BY(BY(ASM_MESON_TAC[ Polyhedron.RELATIVE_SUBSET_FCHANGE ]));
    BY(BY(ASM_MESON_TAC[ Qzksykg.SET_SUBSET_AFFINE_HULL ; RELATIVE_INTERIOR_SUBSET ; SUBSET]));
  REWRITE_TAC[ SUBSET ; IN_INTER ; Polyhedron.fchanged ; IN_ELIM_THM ];
  (REPEAT WEAK_STRIP_TAC);
  (fun (asl,w) -> (ASM_CASES_TAC ( env (asl,w)`x = v1` )) (asl,w));
    BY(ASM_MESON_TAC[]);
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w) `vec 0 IN affine hull f`) ASSUME_TAC) (asl,w));
    (fun (asl,w) -> (ENOUGH_TO_SHOW_TAC ( env (asl,w) `vec 0 IN affine hull {v1, t % v1 } /\ {v1 , t % v1 } SUBSET affine hull f`)) (asl,w));
      BY(ASM_MESON_TAC[ SUBSET; IN; Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA ; HULL_MONO; HULL_HULL ]);
    CONJ_TAC;
      MATCH_MP_TAC AFFINE_VEC0;
      BY(ASM_MESON_TAC [ VECTOR_MUL_LID ]);
    REWRITE_TAC[ SUBSET ];
    GEN_TAC;
    REWRITE_TAC[Collect_geom.IN_SET2];
    REPEAT WEAK_STRIP_TAC THEN ASM_REWRITE_TAC[];
      BY(ASM_MESON_TAC [ RELATIVE_INTERIOR_SUBSET; SUBSET_P_HULL ; SUBSET; IN]);
    BY(ASM_MESON_TAC[]);
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w)`f = p`) ASSUME_TAC) (asl,w));
    MATCH_MP_TAC (INST_TYPE [(`:3`,`:N`)] RELATIVE_INTERIOR_AFFINE_FACE);
    EXISTS_TAC `(vec 0):real^3`;
    ASM_REWRITE_TAC[];
    BY(ASM_MESON_TAC[ POLYHEDRON_IMP_CONVEX ; facet_of; INTERIOR_SUBSET_RELATIVE_INTERIOR ; SUBSET; IN]);
  HASH_UNDISCH_TAC 8736;
  ASM_REWRITE_TAC[ facet_of ];
  BY(MESON_TAC[ ( arith `T ==> ~((x:int) = x - &1)`)])
  ]);;
  (* }}} *)

let RCONE_PREP = prove_by_refinement(
  `!p (v:real^3) u0 b.
    &0 < b /\ ~(v = vec 0) /\ (&0 < v dot v)  /\
    u0= (b / (v dot v)) % v /\ 
    (&0 < t ) /\ (t < &1) /\
    p dot v = b ==>
   ( (u0 dot u0 = (b * b) / (v dot v)) /\
       (p dot u0 = (b * b )/ (v dot v)) /\ 
     (dist (p,u0) pow 2 = p dot p -  (b * b)/(v dot v)   ))`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  SUBCONJ_TAC;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[DOT_LMUL];
    REWRITE_TAC[DOT_RMUL];
    CALC_ID_TAC;
    BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  DISCH_TAC;
  SUBCONJ_TAC;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[DOT_RMUL];
    ASM_REWRITE_TAC[];
    CALC_ID_TAC;
    BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  DISCH_TAC;
  REWRITE_TAC[ Collect_geom.DIST_POW2_DOT ];
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w) `(p - u0) dot (p - u0) = (p dot p) - (b * b)/(v dot v)`) SUBST1_TAC) (asl,w));
    (fun (asl,w) -> (REWRITE_TAC [ VECTOR_ARITH ( env (asl,w) `(p - u0) dot (p - u0) = p dot p - &2 * (p dot u0) + u0 dot u0`)]) (asl,w));
    HASH_KILL_TAC 9721;
    ASM_REWRITE_TAC[];
    BY(BY(REAL_ARITH_TAC));
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

(*
let RCONE_DISK = prove_by_refinement(
  `!p (v:real^3) u0 b r t.
    &0 < b /\ ~(v = vec 0) /\ (&0 < v dot v) /\ dist(p,u0) < r /\
    u0= (b / (v dot v)) % v /\ 
    (&0 < t ) /\ (t < &1) /\
    p dot v = b /\ (r = b * sqrt(&1 - t pow 2)/(t * norm v)) ==>
    (p IN rcone_gt (vec 0) v t)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[rcone_gt;rconesgn;IN_ELIM_THM];
  REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO];
  REWRITE_TAC[DIST_0];
  ASM_REWRITE_TAC[];
  (* done above *)
  SUBGOAL_THEN `(u0:real^3) dot u0 = (b * b)/((v:real^3) dot v)` ASSUME_TAC;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[DOT_LMUL];
    REWRITE_TAC[DOT_RMUL];
    CALC_ID_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    (* done above *)
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w)`(p dot u0 = (b * b)/(v dot v))`) ASSUME_TAC) (asl,w));
    ASM_REWRITE_TAC[];
    REWRITE_TAC[DOT_RMUL];
    CALC_ID_TAC;
    ASM_REWRITE_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  REWRITE_TAC[arith `a > b <=> b < a`];
  MATCH_MP_TAC Tactics_jordan.REAL_POW_2_LT;
  REWRITE_TAC[ Trigonometry2.MUL_POW2 ];
  REWRITE_TAC[ NORM_POW_2 ];
  CONJ_TAC;
    REPEAT (MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2) THEN REWRITE_TAC[ NORM_POS_LE ];
    REPEAT (MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2) THEN REWRITE_TAC[ NORM_POS_LE ];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  CONJ_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    (* some above *)
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w) `(p - u0) dot (p - u0) = (p dot p) - (b * b)/(v dot v)`) MP_TAC) (asl,w));
    (fun (asl,w) -> (REWRITE_TAC [ VECTOR_ARITH ( env (asl,w) `(p - u0) dot (p - u0) = p dot p - &2 * (p dot u0) + u0 dot u0`)]) (asl,w));
    ASM_REWRITE_TAC[];
    BY(REAL_ARITH_TAC);
  DISCH_TAC;
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w) `p dot p < (b * b)/ ((t pow 2) * (v dot v))`) ASSUME_TAC) (asl,w));
    FIRST_X_ASSUM (fun t -> MP_TAC (MATCH_MP Tarjjuw.CHANGE_TARJJUW_4 t));
    ASM_REWRITE_TAC[ Collect_geom.DIST_POW2_DOT ];
    MATCH_MP_TAC (arith `(c + u = v) ==> (a - c < u ==> a< v)`);
    CALC_ID_TAC;
    REWRITE_TAC[ NORM_EQ_0 ];
    ASM_SIMP_TAC[arith `&0 < k ==> ~(k = &0)`];
    REWRITE_TAC[ Trigonometry2.MUL_POW2 ; NORM_POW_2 ];
    SUBGOAL_THEN `&0 <= &1 - t pow 2` ASSUME_TAC;
      MATCH_MP_TAC Trigonometry2.UNIT_BOUNDED_IN_TOW_FORMS;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    ASM_SIMP_TAC [ SQRT_POW_2 ];
    BY(REAL_ARITH_TAC);
  COMMENT "1";
  FIRST_X_ASSUM (fun t -> ASSUME_TAC (MATCH_MP ( REWRITE_RULE[ TAUT `(a /\ b ==> c) <=> (a ==> (b ==> c))`] REAL_LT_RMUL) t));
  (fun (asl,w) -> (FIRST_X_ASSUM (fun t -> MP_TAC (ISPEC ( env (asl,w) `(v dot v) * t pow 2`) t))) (asl,w));
  ANTS_TAC;
    MATCH_MP_TAC REAL_LT_MUL THEN ASM_REWRITE_TAC[];
    REWRITE_TAC[ GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT ];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  MATCH_MP_TAC (arith `(b = c) ==> (a < b ==> (a < c))`);
  CALC_ID_TAC;
  BY(REPEAT CONJ_TAC THEN REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
 ]);;
  (* }}} *)
*)

let RCONE_DISK = prove_by_refinement(
  `!p (v:real^3) u0 b r t.
    &0 < b /\ ~(v = vec 0) /\ (&0 < v dot v) /\ dist(p,u0) < r /\
    u0= (b / (v dot v)) % v /\ 
    (&0 < t ) /\ (t < &1) /\
    p dot v = b /\ (r = b * sqrt(&1 - t pow 2)/(t * norm v)) ==>
    (p IN rcone_gt (vec 0) v t)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[rcone_gt;rconesgn;IN_ELIM_THM];
  REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO];
  REWRITE_TAC[DIST_0];
  GOAL_TERM (fun w -> (MP_TAC (ISPECL ( envl w [`p`;`v`;`u0`;`b`]) RCONE_PREP)));
  ANTS_TAC;
    BY(ASM_MESON_TAC[]);
  REPEAT WEAK_STRIP_TAC;
  HASH_KILL_TAC 9721;
  REWRITE_TAC[arith `a > b <=> b < a`];
  MATCH_MP_TAC Tactics_jordan.REAL_POW_2_LT;
  REWRITE_TAC[ Trigonometry2.MUL_POW2 ];
  REWRITE_TAC[ NORM_POW_2 ];
  CONJ_TAC;
    REPEAT (MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2) THEN REWRITE_TAC[ NORM_POS_LE ];
    REPEAT (MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2) THEN REWRITE_TAC[ NORM_POS_LE ];
    BY(BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  CONJ_TAC;
    BY(BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w) `p dot p < (b * b)/ ((t pow 2) * (v dot v))`) ASSUME_TAC) (asl,w));
    FIRST_X_ASSUM (fun t -> MP_TAC (MATCH_MP Tarjjuw.CHANGE_TARJJUW_4 t));
    ASM_REWRITE_TAC[];
    MATCH_MP_TAC (arith `(c + u = v) ==> (a - c < u ==> a< v)`);
    CALC_ID_TAC;
    REWRITE_TAC[ NORM_EQ_0 ];
    ASM_SIMP_TAC[arith `&0 < k ==> ~(k = &0)`];
    REWRITE_TAC[ Trigonometry2.MUL_POW2 ; NORM_POW_2 ];
    SUBGOAL_THEN `&0 <= &1 - t pow 2` ASSUME_TAC;
      MATCH_MP_TAC Trigonometry2.UNIT_BOUNDED_IN_TOW_FORMS;
      BY(BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
    ASM_SIMP_TAC [ SQRT_POW_2 ];
    BY(BY(REAL_ARITH_TAC));
  COMMENT "1";
  FIRST_X_ASSUM (fun t -> ASSUME_TAC (MATCH_MP ( REWRITE_RULE[ TAUT `(a /\ b ==> c) <=> (a ==> (b ==> c))`] REAL_LT_RMUL) t));
  (fun (asl,w) -> (FIRST_X_ASSUM (fun t -> MP_TAC (ISPEC ( env (asl,w) `(v dot v) * t pow 2`) t))) (asl,w));
  ANTS_TAC;
    MATCH_MP_TAC REAL_LT_MUL THEN ASM_REWRITE_TAC[];
    REWRITE_TAC[ GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT ];
    BY(BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  MATCH_MP_TAC (arith `(b = c) ==> (a < b ==> (a < c))`);
  ASM_REWRITE_TAC[];
  CALC_ID_TAC;
  BY(BY(REPEAT CONJ_TAC THEN REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC))
 ]);;
  (* }}} *)


let RDISK_R = prove_by_refinement(
    `! (v:real^3) u0 b  t.
    &0 < b /\ ~(v = vec 0) /\ (&0 < v dot v) /\     (&0 < t ) /\ (t < &1) /\ 
    u0= (b / (v dot v)) % v ==>
    (?r. (&0 < r) /\ (!p.  dist(p,u0) < r /\  p dot v = b ==>  (p IN rcone_gt (vec 0) v t)) /\
       (!w. dist(w,u0) = r /\ w dot v = b ==> cos (arcV(vec 0) u0 w) = t))`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (ABBREV_TAC ( env w `r = b * sqrt(&1 - t pow 2)/(t * norm v)`)));
  SUBGOAL_THEN `&0 < &1 - t pow 2` ASSUME_TAC;
    REWRITE_TAC[ arith `&0 < &1 - x <=> x < &1` ];
    REWRITE_TAC[ ABS_SQUARE_LT_1 ];
    BY(BY(BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)));
  EXISTS_TAC `r:real`;
  SUBCONJ_TAC;
    EXPAND_TAC "r";
    MATCH_MP_TAC REAL_LT_MUL;
    CONJ_TAC THEN ASM_REWRITE_TAC[ Calc_derivative.invert_den_lt ];
    MATCH_MP_TAC REAL_LT_MUL;
    ASM_SIMP_TAC [ SQRT_POS_LT ];
    MATCH_MP_TAC REAL_LT_MUL THEN ASM_REWRITE_TAC[];
    BY(ASM_REWRITE_TAC[ NORM_POS_LT ]);
  DISCH_TAC;
  CONJ_TAC;
    REPEAT WEAK_STRIP_TAC;
    BY(ASM_MESON_TAC[ RCONE_DISK]);
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun REWRITE_TAC -> (MP_TAC (ISPECL ( envl REWRITE_TAC [`w`;`v`;`u0`;`b`]) RCONE_PREP)));
  ANTS_TAC;
    BY(BY(ASM_MESON_TAC[]));
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (ENOUGH_TO_SHOW_TAC ( env w `norm u0 * norm w * cos (arcV (vec 0) u0 w) = norm u0 * norm w * t`)));
    REWRITE_TAC[ REAL_EQ_MUL_LCANCEL ; NORM_EQ_0 ];
    MATCH_MP_TAC (TAUT `~a /\ ~b ==> (a \/ b \/ c ==> c)`);
    CONJ_TAC;
      ASM_REWRITE_TAC[];
      REWRITE_TAC [ VECTOR_MUL_EQ_0 ];
      ASM_REWRITE_TAC[];
      REWRITE_TAC [ Calc_derivative.invert_den_eq ];
      REWRITE_TAC[ REAL_ENTIRE];
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    DISCH_TAC;
    HASH_UNDISCH_TAC 287;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[ DOT_LZERO ];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  REWRITE_TAC[ GSYM Trigonometry1.DOT_COS ];
  FIRST_X_ASSUM (MP_TAC);
  HASH_KILL_TAC 9721;
  ASM_REWRITE_TAC[];
  HASH_KILL_TAC 1350;
  EXPAND_TAC "r";
  REWRITE_TAC[ Trigonometry2.MUL_POW2 ; Trigonometry2.DIV_POW2 ];
  REWRITE_TAC[ arith `a = b - c <=> b = a + c`];
  ASM_SIMP_TAC [ SQRT_POW_2 ; arith `&0 < u ==> &0 <= u`];
  DISCH_TAC;
  GOAL_TERM (fun w -> (ENOUGH_TO_SHOW_TAC ( env w `&0 <= u0 dot w /\ &0 <= norm u0 * norm w * t /\ ((u0 dot w) pow 2 = (norm u0 * norm w * t) pow 2)`)));
    BY(ASM_MESON_TAC[ Collect_geom.EQ_POW2_COND ]);
  ONCE_REWRITE_TAC[ DOT_SYM ];
  ASM_REWRITE_TAC[];
  REWRITE_TAC[ Trigonometry2.MUL_POW2 ; Trigonometry2.DIV_POW2 ];
  REWRITE_TAC[ NORM_POW_2 ];
  ASM_REWRITE_TAC[];
  CONJ_TAC;
    REWRITE_TAC[ Calc_derivative.invert_den_le ];
    BY(MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2 THEN CONJ_TAC THEN TRY (MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2 ) THEN (REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  CONJ_TAC;
    REPEAT (MATCH_MP_TAC Real_ext.REAL_PROP_NN_MUL2 THEN REWRITE_TAC[ NORM_POS_LE ] THEN TRY CONJ_TAC);
    BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  CALC_ID_TAC;
  ASM_REWRITE_TAC[ DOT_EQ_0 ; NORM_EQ_0 ];
  CONJ_TAC;
    BY((REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC));
  REWRITE_TAC[ NORM_POW_2 ];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let FCHANGED_MEASURABLE = prove_by_refinement(
  `!(p:real^3->bool) f r.
    bounded p /\ polyhedron p /\ vec 0 IN interior p /\ f facet_of p ==>
    measurable ( fchanged f  INTER normball (vec 0) r)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  MATCH_MP_TAC Conforming.MEASURABLE_TOPOLOGICAL_COMPONENT_YFAN_INTER_BALL;
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `vertices p`)));
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `edges p`)));
  SUBCONJ_TAC;
    MATCH_MP_TAC Polyhedron.POLYHEDRON_FAN;
    BY(ASM_REWRITE_TAC[]);
  DISCH_TAC;
  SUBCONJ_TAC;
    MATCH_MP_TAC Conforming.PIIJBJK;
    ASM_REWRITE_TAC[];
    ROT_TAC;
    SUBCONJ_TAC;
      MATCH_MP_TAC Polyhedron.POLYTOPE_FAN80;
      BY(ASM_REWRITE_TAC[]);
    DISCH_TAC;
    BY(ASM_MESON_TAC [ Polyhedron.CARD_SET_OF_EDGE_INEQ_1_POLYHEDRON ]);
  DISCH_TAC;
  BY(ASM_MESON_TAC [ Polyhedron.FCHANGED_IN_COMPONENT ])
  ]);;
  (* }}} *)

let RADIAL_NORMBALL = prove_by_refinement(
  `!(p:real^3) r. (radial r p (normball p r))`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[ Sphere.radial ];
  REWRITE_TAC[ NORMBALL_BALL ];
  REWRITE_TAC[ IN_BALL ];
  CONJ_TAC;
    BY(SET_TAC[]);
  REWRITE_TAC[ dist ];
  REWRITE_TAC[VECTOR_ARITH `(p - (p + u)) = (-- (u:real^3))`];
  REWRITE_TAC[ NORM_NEG ];
  REWRITE_TAC [ NORM_MUL ];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let FCHANGED_RADIAL = prove_by_refinement(
  `!(p:real^3->bool) f r.
    bounded p /\ polyhedron p /\ vec 0 IN interior p /\ f facet_of p ==>
    radial r (vec 0) ( fchanged f INTER normball (vec 0) r)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ Sphere.radial ];
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[ NORMBALL_BALL ];
  REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO];
  CONJ_TAC;
    BY(SET_TAC[]);
  REPEAT WEAK_STRIP_TAC;
  HASH_UNDISCH_TAC 7645;
  REWRITE_TAC[IN_INTER];
  REWRITE_TAC[ Polyhedron.fchanged ];
  REWRITE_TAC[ IN_ELIM_THM ];
  REPEAT WEAK_STRIP_TAC;
  CONJ_TAC;
    GOAL_TERM (fun w -> (EXISTS_TAC ( env w `v1`)));
    ASM_REWRITE_TAC[];
    EXISTS_TAC ( `t * t'`);
    REWRITE_TAC [ VECTOR_MUL_ASSOC ];
    ALL_SEARCH [`a > b`];
    REWRITE_TAC [arith `a > b <=> b < a`];
    BY(MESON_TAC[ REAL_LT_MUL ]);
  MP_TAC (ISPECL ( [`(vec 0):real^3`;`r:real`]) RADIAL_NORMBALL);
  REWRITE_TAC[ NORMBALL_BALL ];
  REWRITE_TAC[ Sphere.radial ];
  REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO];
  FIRST_X_ASSUM MP_TAC;
  REWRITE_TAC[ IN_BALL ];
  REWRITE_TAC[ dist ];
  REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO];
  REWRITE_TAC[ NORM_NEG ];
  BY(ASM_MESON_TAC[SUBSET])
]
);;
  (* }}} *)

let WEDGE_SPLIT = prove_by_refinement(
  `!u0 u1 u2 u3 w.
    ~(collinear {u0,u1,u2}) /\
    ~(collinear {u0,u1,u3}) /\
    w IN wedge u0 u1 u2 u3 ==>
   (     ~(collinear {u0,u1,w}) /\
   (wedge u0 u1 u2 w INTER wedge u0 u1 w u3 = {}) /\
    wedge u0 u1 u2 w SUBSET wedge u0 u1 u2 u3 /\
    wedge u0 u1 w u3 SUBSET wedge u0 u1 u2 u3)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ wedge ; Counting_spheres.EMPTY_NOT_EXISTS_IN ];
  REWRITE_TAC[ IN_ELIM_THM ; SUBSET ; IN_INTER];
  REPEAT WEAK_STRIP_TAC;
  ASM_REWRITE_TAC[];
  CONJ_TAC;
    REPEAT WEAK_STRIP_TAC;
    GOAL_TERM (fun w -> (MP_TAC (ISPECL ( envl w [`u0`;`u1`;`u2`;`w`;`x`;`w`;`u3`]) AZIM_BASE_SHIFT_LT)));
    ASM_REWRITE_TAC[];
    REWRITE_TAC[ AZIM_REFL ];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  CONJ_TAC;
    REPEAT WEAK_STRIP_TAC;
    ASM_REWRITE_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  REPEAT WEAK_STRIP_TAC;
  ASM_REWRITE_TAC[];
  GOAL_TERM (fun w -> (MP_TAC (ISPECL ( envl w [`u0`;`u1`;`w`;`u2`;`w`;`x`;`u3`]) AZIM_BASE_SHIFT_LT)));
  ASM_REWRITE_TAC[ AZIM_REFL ];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let cone0_subset_lune = prove_by_refinement(
  `!u0 u1 u2 u3.  cone0 u0 {u1,u2,u3} SUBSET aff_gt { u0 , u1} { u2, u3}`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ Sphere.aff_gt_def ;SUBSET ];
  REWRITE_TAC[ Sphere.cone0 ];
  REWRITE_TAC[ IN; affsign ];
  REPEAT GEN_TAC;
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `{u0 } UNION {u1,u2,u3} = {u0,u1,u2,u3}`) SUBST1_TAC));
    BY(SET_TAC[]);
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `{u0,u1 } UNION {u2,u3} = {u0,u1,u2,u3}`) SUBST1_TAC));
    BY(SET_TAC[]);
  REWRITE_TAC [ X_IN IN_INSERT ];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)




let COLLINEAR_UNEQUAL = prove_by_refinement(
  `!u0 u1 (u2:real^N). ~collinear {u0,u1,u2} ==>
    ~(u2 IN {u0,u1}) /\ ~(u1 IN {u0})`,
  (* {{{ proof *)
  [
  REPEAT GEN_TAC;
  DISCH_TAC;
  REWRITE_TAC[IN_INSERT; NOT_IN_EMPTY ];
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `{u0,u1,u2} = {u1,u2,u0}`) ASSUME_TAC));
    BY(SET_TAC[]);
  BY(ASM_MESON_TAC[ Collect_geom.NOT_COLLINEAR_IMP_2_UNEQUAL ])
  ]);;
  (* }}} *)

let HAS_SIZE_GE_2 = prove_by_refinement(
  `!(s:A->bool). FINITE s /\ CARD s > 1 ==> (!x. x IN s ==> (?y. y IN s /\ ~(y = x)))`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `~(s HAS_SIZE 0) /\ ~(s HAS_SIZE 1)`) MP_TAC));
    REWRITE_TAC[HAS_SIZE];
    ASM_REWRITE_TAC[];
    BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  REWRITE_TAC[ HAS_SIZE_0 ];
  REWRITE_TAC[ HAS_SIZE_1_EXISTS ];
  FIRST_X_ASSUM MP_TAC;
  BY(SET_TAC[])
  ]);;
  (* }}} *)

let TWO_IMP_HAS_SIZE_GE_2 = prove_by_refinement(
  `!(s:A->bool) x y. x IN s /\ y IN s /\ ~(x = y) /\ FINITE s ==> CARD s > 1`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun REWRITE_TAC -> (SUBGOAL_THEN ( env REWRITE_TAC `~(s HAS_SIZE 0) /\ ~(s HAS_SIZE 1)`) MP_TAC));
    REWRITE_TAC[ HAS_SIZE_0 ];
    REWRITE_TAC[ HAS_SIZE_1_EXISTS ];
    REPEAT( FIRST_X_ASSUM MP_TAC);
    BY(BY(SET_TAC[]));
  BY(ASM_MESON_TAC[HAS_SIZE; arith `~(n=0) /\ ~(n=1) ==> (n >1)`])
  ]);;
  (* }}} *)

let AFF_GT_RELATIVE_INTERIOR = prove_by_refinement(
  `!(s:real^N->bool). FINITE s /\ CARD s > 1 
     ==> aff_gt {} s SUBSET relative_interior (convex hull s)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  FIRST_ASSUM (fun t -> (MP_TAC (MATCH_MP EXPLICIT_SUBSET_RELATIVE_INTERIOR_CONVEX_HULL t)));
  DISCH_TAC;
  MATCH_MP_TAC SUBSET_TRANS;
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `{y | ?u. (!x. x IN s ==> &0 < u x /\ u x < &1) /\                sum s u = &1 /\               vsum s (\x. u x % x) = y}` )));
  ASM_REWRITE_TAC[];
  REWRITE_TAC[Sphere.aff_gt_def;AFFSIGN];
  REWRITE_TAC[ IN_ELIM_THM; SUBSET ;IN_INSERT ; UNION_EMPTY ];
  REWRITE_TAC[ sgn_gt ];
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `f`)));
  ASM_REWRITE_TAC[];
  REPEAT WEAK_STRIP_TAC;
  ASM_SIMP_TAC[];
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `?y. y IN s /\ ~(y = x')`) MP_TAC));
    BY(ASM_MESON_TAC [ HAS_SIZE_GE_2 ]);
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `(sum {y,x'} f <= sum s f )`) ASSUME_TAC));
    MATCH_MP_TAC SUM_SUBSET_SIMPLE;
    ASM_REWRITE_TAC[];
    CONJ_TAC;
      ALL_SEARCH [`IN`];
      BY(SET_TAC[]);
    REWRITE_TAC[IN_DIFF];
    BY(ASM_MESON_TAC[ arith `&0 < a ==> &0 <= a`]);
  FIRST_X_ASSUM MP_TAC;
  ASM_REWRITE_TAC[];
  ASM_SIMP_TAC[ Upfzbzm_support_lemmas.SUM_SET_OF_2_ELEMENTS ];
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `&0 < f y`) MP_TAC));
    BY(ASM_SIMP_TAC[]);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let NOT_COLLINEAR_AFF_DIM_2 = prove_by_refinement(
  `!u0 u1 (u2:real^N). ~collinear{u0,u1,u2} ==> aff_dim {u0,u1,u2}= &2`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  ONCE_REWRITE_TAC[ AFF_DIM_INSERT ];
  REWRITE_TAC[ AFF_DIM_2 ];
  BY(ASM_MESON_TAC[ Collect_geom.IN_AFFINE_HULL_IMP_COLLINEAR ; arith `(&1 + &1 = (&2):int)`; COLLINEAR_UNEQUAL; IN_INSERT])
  ]);;
  (* }}} *)

let FACET_AFF_DIM_2 = prove_by_refinement(
  `!(p:real^3->bool) f .
     polyhedron p /\  (vec 0 IN interior p) /\
    f facet_of p 
    ==> aff_dim f = &2 `,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  FIRST_ASSUM (fun t -> ASSUME_TAC (MATCH_MP (Polyhedron.AFF_DIM_INTERIOR_EQ_3) t));
  BY(BY(ASM_MESON_TAC[ facet_of ; arith `&3 - &1 = (&2):int` ;arith `(x:int <= x)`]))
]
);;
  (* }}} *)

let CONE0_RELATIVE_INTERIOR_FACET = prove_by_refinement(
  `!p f (u0:real^3) u1 u2.
     polyhedron p /\ bounded p /\ (vec 0 IN interior p) /\
    f facet_of p /\ ~(collinear {u0,u1,u2}) /\
    {u0,u1,u2} SUBSET f  ==>
    aff_gt {}  {u0,u1,u2} SUBSET relative_interior f
`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  MATCH_MP_TAC SUBSET_TRANS;
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `relative_interior (convex hull {u0,u1,u2})`)));
  CONJ_TAC;
    MATCH_MP_TAC AFF_GT_RELATIVE_INTERIOR;
    SUBCONJ_TAC;
      BY(REWRITE_TAC[ FINITE_INSERT; FINITE_EMPTY ]);
    DISCH_TAC;
    MATCH_MP_TAC TWO_IMP_HAS_SIZE_GE_2;
    GOAL_TERM (fun w -> (EXISTS_TAC ( env w `u0`)));
    GOAL_TERM (fun w -> (EXISTS_TAC ( env w `u1`)));
    ASM_REWRITE_TAC[ IN_INSERT ];
    BY(BY(ASM_MESON_TAC[ Collect_geom.NOT_COLLINEAR_IMP_2_UNEQUAL ]));
  MATCH_MP_TAC SUBSET_RELATIVE_INTERIOR;
  CONJ_TAC;
    BY(ASM_MESON_TAC[ FACE_OF_IMP_CONVEX; Marchal_cells.CONVEX_HULL_SUBSET; CONVEX_HULL_EQ ; facet_of ]);
  MATCH_MP_TAC AFF_DIM_EQ_AFFINE_HULL;
  SUBCONJ_TAC;
    BY(ASM_MESON_TAC[ FACE_OF_IMP_CONVEX; Marchal_cells.CONVEX_HULL_SUBSET; CONVEX_HULL_EQ ; facet_of ]);
  DISCH_TAC;
  MATCH_MP_TAC (arith ` (a <= &2 /\ &2 <= c ==> (a:int) <= c)`);
  CONJ_TAC;
    FIRST_ASSUM (fun t -> ASSUME_TAC (MATCH_MP (Polyhedron.AFF_DIM_INTERIOR_EQ_3) t));
    BY(ASM_MESON_TAC[ facet_of ; arith `&3 - &1 = (&2):int` ;arith `(x:int <= x)`]);
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `{u0,u1,u2} SUBSET convex hull {u0,u1,u2}`) ASSUME_TAC));
    BY(REWRITE_TAC[ Ldurdpn.SUBSET_P_HULL ]);
  FIRST_ASSUM (fun t -> ASSUME_TAC (MATCH_MP (AFF_DIM_SUBSET) t));
  MATCH_MP_TAC (arith `!b. (a:int) <= b /\ b <= c ==> (a <=c)`);
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `aff_dim {u0,u1,u2}`)));
  ASM_REWRITE_TAC[];
  BY(ASM_MESON_TAC [ NOT_COLLINEAR_AFF_DIM_2 ; arith `(x:int <= x)`])
  ]);;
  (* }}} *)


let CONE0_FCHANGED_AFF_GT = prove_by_refinement(
  `!(s:real^N->bool). FINITE s /\ CARD s > 1 /\ ~(vec 0 IN s)
    ==>
   cone0 (vec 0) s SUBSET fchanged (convex hull s)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[ Sphere.cone0 ];
  REWRITE_TAC[ Polyhedron.fchanged ];
  REWRITE_TAC[ SUBSET; IN_ELIM_THM ];
  REWRITE_TAC[AFFSIGN];
  REWRITE_TAC[ IN_ELIM_THM ; sgn_gt];
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (ABBREV_TAC ( env w `(a:real) = f (vec 0)`)));
  GOAL_TERM (fun w -> (ABBREV_TAC ( env w`(v1:real^N) = vsum s (\v. (f v / (&1 - a)) % v)`)));
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `v1`)));
  EXISTS_TAC (`&1 - a`);
  SUBGOAL_THEN `&1 - a > &0` ASSUME_TAC;
    REWRITE_TAC[ arith `&1 - a > &0 <=> ~(&1 <= a)`];
    DISCH_TAC;
    GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w`~(s HAS_SIZE 0)`) MP_TAC));
      BY(ASM_MESON_TAC[ HAS_SIZE; arith `x > 1 ==> ~(x = 0)`]);
    REWRITE_TAC[ HAS_SIZE_0 ];
    REWRITE_TAC[ Counting_spheres.EMPTY_NOT_EXISTS_IN ];
    REPEAT WEAK_STRIP_TAC;
    GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `sum {x',vec 0} f <= sum ({vec 0 } UNION s) f`) MP_TAC));
      MATCH_MP_TAC SUM_SUBSET_SIMPLE;
      SUBCONJ_TAC;
        BY(ASM_REWRITE_TAC[ FINITE_UNION ;FINITE_INSERT; FINITE_EMPTY]);
      DISCH_TAC;
      SUBCONJ_TAC;
        ALL_SEARCH [`IN`];
        BY(SET_TAC[]);
      DISCH_TAC;
      REPEAT WEAK_STRIP_TAC;
      MATCH_MP_TAC (arith `&0 < x ==> &0 <= x`);
      FIRST_X_ASSUM MATCH_MP_TAC;
      FIRST_X_ASSUM MP_TAC;
      BY(SET_TAC[]);
    ASM_REWRITE_TAC[];
    GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w`~(x' = vec 0)`) ASSUME_TAC));
      BY(ASM_MESON_TAC[]);
    ASM_SIMP_TAC[ Upfzbzm_support_lemmas.SUM_SET_OF_2_ELEMENTS ];
    GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `&0 < f x'`) MP_TAC));
      BY(ASM_MESON_TAC[]);
    ALL_SEARCH [`<=`];
    BY(REAL_ARITH_TAC);
  ASM_REWRITE_TAC[];
  SUBCONJ_TAC;
    EXPAND_TAC "v1";
    REWRITE_TAC[ GSYM VSUM_LMUL ];
    REWRITE_TAC[ VECTOR_MUL_ASSOC ];
    SUBGOAL_THEN `!u. (&1 - a) * u/(&1- a) = u` (fun t-> REWRITE_TAC[t]);
      GEN_TAC;
      CALC_ID_TAC;
      FIRST_X_ASSUM MP_TAC;
      BY(REAL_ARITH_TAC);
    REWRITE_TAC[ Packing3.SING_UNION_EQ_INSERT ];
    GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `vsum (vec 0 INSERT s) (\v. f v % v) = f (vec 0) % (vec 0) + vsum s (\v. f v % v)`) SUBST1_TAC));
      BY(ASM_MESON_TAC[ Marchal_cells_2.VSUM_CLAUSES_alt ]);
    REWRITE_TAC[ VECTOR_MUL_RZERO ];
    BY(REWRITE_TAC[VECTOR_ADD_RID;VECTOR_SUB_RZERO;VECTOR_ADD_LID;VECTOR_SUB_LZERO]);
  DISCH_TAC;
  GOAL_TERM (fun w -> (ENOUGH_TO_SHOW_TAC ( env w `v1 IN aff_gt {} s`)));
    GOAL_TERM (fun w -> (ENOUGH_TO_SHOW_TAC ( env w `aff_gt {} s SUBSET relative_interior (convex hull s)`)));
      BY(SET_TAC[]);
    MATCH_MP_TAC AFF_GT_RELATIVE_INTERIOR;
    BY(ASM_REWRITE_TAC[]);
  REWRITE_TAC[ aff_gt_def ; AFFSIGN ];
  REWRITE_TAC[ UNION_EMPTY ; sgn_gt ];
  REWRITE_TAC[ IN_ELIM_THM ];
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `\v. f v / (&1 - a)`)));
  BETA_TAC;
  ASM_REWRITE_TAC[];
  SUBCONJ_TAC;
    REPEAT WEAK_STRIP_TAC;
    REWRITE_TAC[ Calc_derivative.invert_den_lt ];
    MATCH_MP_TAC REAL_LT_MUL;
    CONJ_TAC;
      BY(ASM_MESON_TAC[]);
    ALL_SEARCH [`>`];
    BY(REAL_ARITH_TAC);
  DISCH_TAC;
  ALL_SEARCH [`sum`];
  REWRITE_TAC[ Packing3.SING_UNION_EQ_INSERT ];
  GOAL_TERM (fun w -> (SUBGOAL_THEN ( env w `sum (vec 0 INSERT s) f = f (vec 0) + sum s f`) SUBST1_TAC));
    BY(ASM_MESON_TAC[ SUM_CLAUSES ]);
  REWRITE_TAC[ real_div ];
  REWRITE_TAC[ SUM_RMUL ];
  ASM_REWRITE_TAC[];
  REWRITE_TAC [arith `a + b = c <=> b = c - a`];
  DISCH_THEN SUBST1_TAC;
  CALC_ID_TAC;
  ALL_SEARCH [`>`];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let CONE0_FCHANGED = prove_by_refinement(
  `!p f (u0:real^3) u1 u2. 
    polyhedron p /\ bounded p /\ (vec 0 IN interior p) /\
    f facet_of p /\ ~(collinear {u0,u1,u2}) /\
    {u0,u1,u2} SUBSET f  ==>
    cone0 (vec 0) {u0,u1,u2} SUBSET fchanged f`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  MATCH_MP_TAC SUBSET_TRANS;
  GOAL_TERM (fun w -> (EXISTS_TAC ( env w `fchanged (convex hull {u0,u1,u2})`)));
  SUBCONJ_TAC;
    MATCH_MP_TAC CONE0_FCHANGED_AFF_GT;
    SUBCONJ_TAC;
      BY(REWRITE_TAC[ FINITE_INSERT; FINITE_EMPTY ]);
    DISCH_TAC;
    SUBCONJ_TAC;
      BY(ASM_MESON_TAC[ COLLINEAR_UNEQUAL; TWO_IMP_HAS_SIZE_GE_2; IN_INSERT ]);
    DISCH_TAC;
    GOAL_TERM (fun w -> (ENOUGH_TO_SHOW_TAC ( env w `~(vec 0 IN f)`)));
      ALL_SEARCH [`SUBSET`];
      BY(SET_TAC[]);
    BY(ASM_MESON_TAC [ FACE_OF_DISJOINT_INTERIOR ; Hypermap.lemma_in_disjoint ; facet_of ; arith `~(x = x - (&1):int)`]);
  DISCH_TAC;
  REWRITE_TAC[ Polyhedron.fchanged ];
  REWRITE_TAC[ SUBSET ; IN_ELIM_THM ];
  REPEAT WEAK_STRIP_TAC;
  GOAL_TERM (fun w -> (ENOUGH_TO_SHOW_TAC ( env w`relative_interior (convex hull {u0,u1,u2}) SUBSET relative_interior f`)));
    REPLICATE_TAC 3 (FIRST_X_ASSUM MP_TAC);
    BY(SET_TAC[]);
  MATCH_MP_TAC SUBSET_RELATIVE_INTERIOR;
  SUBCONJ_TAC;
    BY(BY(ASM_MESON_TAC[ FACE_OF_IMP_CONVEX; Marchal_cells.CONVEX_HULL_SUBSET; CONVEX_HULL_EQ ; facet_of ]));
  DISCH_TAC;
  MATCH_MP_TAC AFF_DIM_EQ_AFFINE_HULL;
  ASM_REWRITE_TAC[];
  MATCH_MP_TAC (arith `a = &2 /\ b = &2 ==> (a:int) <= b`);
  CONJ_TAC;
    BY(ASM_MESON_TAC[ FACET_AFF_DIM_2]);
  BY(ASM_MESON_TAC[ AFF_DIM_CONVEX_HULL; NOT_COLLINEAR_AFF_DIM_2 ])
  ]);;
  (* }}} *)


let COLLINEAR_ORTHO_PLANE = prove_by_refinement(
  `!p v u0 b (u1:real^N).
    ~(v = vec 0) /\
    ~(u0 = u1) /\
    u0 dot v = b /\
    p dot v = b /\
    (u1 = u0 + v) /\
    collinear {u0,u1,p } ==>
    (p = u0)`,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  ALL_SEARCH [`collinear`];
  ASM_SIMP_TAC [ COLLINEAR_3_AFFINE_HULL ];
  REWRITE_TAC [ AFFINE_HULL_2_ALT ];
  REWRITE_TAC[ IN_ELIM_THM ; IN_UNIV];
  SUBST1_TAC ( VECTOR_ARITH ( `(u0 + (v:real^N) ) - u0 = v`));
  REPEAT WEAK_STRIP_TAC;
  ALL_SEARCH [`dot`];
  ASM_REWRITE_TAC[];
  GOAL_TERM (fun t -> (REWRITE_TAC[ VECTOR_ARITH ( env t`(u0 + u % (v)) dot v = u0 dot v + u * (v dot v)`)]));
  DISCH_THEN SUBST1_TAC;
  GOAL_TERM (fun t -> (REWRITE_TAC[ VECTOR_ARITH ( env t` (u0 + u % v = u0) <=> u % v = vec 0`); arith `b + c = b <=> c = &0`;REAL_ENTIRE; VECTOR_MUL_EQ_0 ]));
  BY(REWRITE_TAC[ DOT_EQ_0 ])
  ]);;
  (* }}} *)


(* ========================================================================== *)
(* WORK IN PROGRESS *)
(* ========================================================================== *)

let azim_axis = prove_by_refinement(
  `!u0 u1 u w.
    ~(collinear {u0,u1,u}) /\
    ~(collinear {u0,u1,w}) /\
   (collinear {vec 0 ,u0,u1 }) ==>
    ~(collinear {vec 0, u1-u0,u}) /\
    ~(collinear {vec 0,u1-u0,w}) /\
    azim u0 u1 u w = azim (vec 0) (u1-u0) u w`,
  (* {{{ proof *)
  [
ort[ ?153 ]
st/r
  ]);;
  (* }}} *)


let CONE0_SUBSET_WEDGE = prove_by_refinement(
  `!u0 u1 u w.
    (collinear {vec0,u0,u1}) /\
    ~(u0 u1) ==>
    cone0 (vec 0) {u0,u,w} SUBSET azim u0 u1 u w`,
  (* {{{ proof *)
  [
  #
  ]);;
  (* }}} *)


(* mixed up u0 u1 and vec 0 *)

let gotcjah_sol_lemma = prove_by_refinement(
  `!c3 v b P W t rho bet u u0 u1 u2 w.
    polyhedron P /\ bounded P /\ (&0 < b) /\
    (vec 0 IN interior P) /\
    (c3 facet_of P) /\
    (fchanged c3 = W) /\
    (&0 < t /\ t < &1 ) /\
    (&0 < rho) /\
    (c3 = P INTER { p | p dot v = b } /\ rcone_gt (vec 0) v t SUBSET W) /\
    (b / (v dot v ) % v = u0) /\
    ~(v = vec 0) /\
    ~(u1 = u0) /\
    ~(u2 = u0) /\
    &0 < v dot v /\
    u0 IN rcone_gt (vec 0 ) v t /\
    u0 IN c3 /\
    cos (arcV(vec 0) u0 w) = t /\
    cos (arcV(vec 0) u0 w) = t /\
    u IN c3 /\
    v IN c3 /\
    w IN c3 /\
    azim u0 u1 u w / &2 = bet /\
    &0 < azim u0 u1 u w /\
    azim u0 u1 u w < pi /\
    azim u0 u1 u2 u < azim u0 u1 u2 w /\
    azim u0 u1 u v = bet /\
    azim u0 u1 v w = bet /\
    (u - u0) dot (v - u) = &0 /\
    (w - u0) dot (v - w) = &0 /\
    ~(u = u0) /\
    ~(v = u0) /\
    ~(w = u0) /\
    azim u0 u1 u w < pi ==>
    (?X.  X SUBSET (wedge u0 u1 u w INTER W) /\
       measurable (X INTER normball (vec 0) rho) /\
       radial_norm rho (vec 0) (X INTER normball (vec 0) rho) /\
       &2 * (bet - asn (sin bet * t)) <= sol (vec 0) X)
`,
  (* {{{ proof *)
  [
str/r
exist (% `cone0 (vec 0) {u0,u,v} UNION cone0 (vec 0) {u0,v,w}`)
comment "cone0 subset ... "
sgth (%` cone0 (vec 0) {u0,u,v} SUBSET wedge u0 u1 u v`) assume


subconj 
rt [ UNION_SUBSET ; SUBSET_INTER]
mmp (taut `(a /\ c) /\ (b /\ d) ==> (a /\ b) /\ c /\ d`)
conj

  ]);;
  (* }}} *)


let GOTCJAH_concl = `!c v b P  WF t n. 
    polyhedron P /\ bounded P /\  (&0 < b) /\
    (vec 0 IN interior P) /\ 
    c facet_of P /\ 
    fchanged c = WF /\
    (&0 < t /\ t < &1) /\
    (c = P INTER { p | p dot v = b } /\ rcone_gt (vec 0) v t SUBSET WF) /\
    ( {u | u facet_of c } HAS_SIZE n) 
   ==> &2 * pi - &2* &n * asn (t* sin(pi/ &n)) <= sol (vec 0)  WF`;;

let GOTCJAH = prove_by_refinement(
  GOTCJAH_concl,
  (* {{{ proof *)
  [
  X_GENv_TAC "c3";
  REPEAT WEAK_STRIP_TAC;
  ABBREV_TAC (`A = { (p:real^3) | p dot v = b}`);
  ABBREV_TAC `u0 = (b / (v dot v)) % (v:real^3)`;
  SUBGOAL_THEN `~((v:real^3) = vec 0)` ASSUME_TAC;
    DISCH_TAC;
    HASH_UNDISCH_TAC 2896;
    ASM_REWRITE_TAC[DOT_RZERO];
    REWRITE_TAC[ FUN_EQ_THM ;IN_ELIM_THM];
    DISCH_TAC;
    (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w)`A = {}`) ASSUME_TAC) (asl,w));
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN SET_TAC[arith `&0 < b ==> ~(&0 = b)`]);
    (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w)`c3 = {}`) ASSUME_TAC) (asl,w));
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN SET_TAC[]);
    BY(ASM_MESON_TAC[ facet_of ]);
  COMMENT "1";
  COMMENT "v dot v";
  SUBGOAL_THEN `&0 < (v:real^3) dot v` ASSUME_TAC;
    BY(ASM_REWRITE_TAC[DOT_POS_LT]);
  COMMENT "subgoal";
  SUBGOAL_THEN `(u0:real^3) IN rcone_gt (vec 0) v t` ASSUME_TAC;
    REWRITE_TAC[rcone_gt ; rconesgn ; IN_ELIM_THM ; VECTOR_SUB_RZERO ; DIST_0 ];
    EXPAND_TAC "u0";
    REWRITE_TAC[ DOT_LMUL ];
    REWRITE_TAC[ NORM_MUL ];
    REWRITE_TAC[ GSYM NORM_POW_2 ];
    REWRITE_TAC[ arith `x pow 2 = x * x`];
    REWRITE_TAC[ arith `x > y <=> y < x`];
    (fun (asl,w) -> (SUBGOAL_THEN ( env (asl,w)`abs (b / (norm v * norm v)) = b / (norm v * norm v)`) SUBST1_TAC) (asl,w));
      MATCH_MP_TAC Trigonometry2.LT_IMP_ABS_REFL;
      MATCH_MP_TAC REAL_LT_DIV;
      BY(ASM_MESON_TAC [ NORM_POW_2 ; arith `x pow 2 = x * x` ]);
    REWRITE_TAC[ arith `(a * b) * c = a * (b * c)`];
    REWRITE_TAC[ arith `x * x = x pow 2`; NORM_POW_2 ; arith `a * b * c * d = a * (b * c) * d`];
    MATCH_MP_TAC REAL_LT_LMUL;
    CONJ_TAC;
      BY(ASM_MESON_TAC [ REAL_LT_DIV ]);
    REWRITE_TAC[ arith `a * t < a <=> &0 < a * (&1 - t)`];
    BY(ASM_MESON_TAC [ REAL_LT_MUL ; arith `t < &1 <=> &0 < &1 - t`])
  COMMENT "u0";
  SUBGOAL_THEN `(u0:real^3) IN c3` ASSUME_TAC;
    ENOUGH_TO_SHOW_TAC `(u0:real^3) IN fchanged c3 /\ (u0 IN affine hull c3)`;
      REWRITE_TAC[ GSYM IN_INTER];
      BY(ASM_MESON_TAC[FCHANGED_AFFINE; SUBSET; IN; RELATIVE_INTERIOR_SUBSET ]);
    CONJ_TAC;
      BY(ASM_MESON_TAC[SUBSET; IN]);
    GOAL_TERM (fun w -> (MP_TAC (ISPECL ( envl w[`P`;`c3`;`v`;`b`]) Counting_spheres.affine_facet_hyper )));
    ANTS_TAC;
      ASM_REWRITE_TAC[];
      CONJ_TAC;
        MATCH_MP_TAC Polyhedron.INTERIOR_AFFINIE_HUL_EQ_UNIV;
        BY(ASM_MESON_TAC[]);
      AP_TERM_TAC;
      EXPAND_TAC "A";
      MATCH_MP_TAC EQ_EXT;
      REWRITE_TAC[ IN_ELIM_THM ];
      BY(MESON_TAC[ DOT_SYM ]);
    DISCH_THEN SUBST1_TAC;
    REWRITE_TAC[ IN_ELIM_THM ];
    EXPAND_TAC "u0";
    REWRITE_TAC [ DOT_RMUL ];
    CALC_ID_TAC;
    BY(REPEAT (FIRST_X_ASSUM MP_TAC ) THEN REAL_ARITH_TAC)
      comment "1"
      mptac (specl (%% [`v`;`u0`;`b`;`t`]) RDISK_R)
      art[]
      st/r
      abbrev (`(s:(real^3->bool)->bool) = {u | u facet_of c3}`)
      (* to here *)
   sgth  `?uperp. ~(uperp = vec 0) /\ ((v:real^3) dot uperp = &0)` mptac
      amt[ ?5 ]
   st/r
      abbrev (`(u2:real^3) = u0 + uperp`)
      abbrev (`(u1:real^3) = u0 + v`)
      mptac (specl (%% [`c3`;`A`;`n`;`s`;`r`;`u0`;`u1`;`u2`]) EUSOTYP_general)
      art[]
      alls [`INTER`]
      dthen (fun t -> assume (sym  t))
      art[]
(* XXD to here *)



  ]);;
  (* }}} *)

RDISK_R;;
