let h1 = 
  let p1 = !Prep.prep_ineqs in
  let i1 = map (fun t -> t.ineq) p1 in
      fun k-> (ASSUME (snd(strip_forall (List.nth i1 k))));;

let h1 = 
  let i1 = map (get_nth) (map (fun t -> Random.int 5070) (0--80)) in
    fun k -> (ASSUME (snd(strip_forall (List.nth i1 k))));;


let domain6_assum = prove_by_refinement(
  `!h g f. domain6 h f g ==> (F ==> (f = g))`,
  (* {{{ proof *)
  [
  MESON_TAC[]
  ]);;
  (* }}} *)

  let strip_domain6 thm = 
    try 
      UNDISCH (MATCH_MP domain6_assum (SPEC_ALL thm))
    with Failure _ -> thm;;

  let rec get_const_names tm = 
    match tm with       
        Var(s,t) -> []
      | Const(s,t) ->  [s] 
      | Comb (t1,t2) -> get_const_names t1 @ get_const_names t2 
      | Abs (t1,t2) -> get_const_names t1 @ get_const_names t2 ;;

  let suppressed = 
    ["==>";"?";"!";"/\\";"\\/";",";"~";"APPEND";"CONS";"HD";"LAST";
     "NIL";"=";"real_lt";"real_gt";"real_le";"real_ge";"BIT0";"BIT1";"NUMERAL";
     "DECIMAL";"real_sub";"real_add";"real_neg";
     "real_of_num";"_0";"_1";"real_div";"real_mul";"real_pow";"COND";"LET";"LET_END";
     "sol0";"tau0";"mm1";"mm2";"const1";"h0";"rho";"pi";"sqrt8";
     "hminus";"hplus";"rh0";"arc_hhn";"sqrt3";"cos797";
     "ineq";
     "sqrt";"atn";"sin";"acs";"asn";"matan";] 
   @ [
     "delta_x"; "delta_x4";"delta_x1";"ups_x";"rho_x";"eulerA_x";"lfun";"num1";
     "sqrt_x1";"sqrt_x2";"sqrt_x3";"sqrt_x4";"sqrt_x5";"sqrt_x6";
      "rotate2";"rotate3";"rotate3";"rotate4";"rotate5";"rotate6";
      "pow2";

   ] @
   ["dihatn_x";"dih2atn_x";"dih3atn_x";"dih4atn_x";"dih5atn_x";"dih6atn_x";
    "ineqm";"bisect_left";"bisect_right";"frac_left";"frac_right"]

    @
   ["proj_x1";"proj_x2";"proj_x3";"proj_x4";"proj_x5";"proj_x6";
"proj_y1";"proj_y2";"proj_y3";"proj_y4";"proj_y5";"proj_y6";]
     ;;


let const_names i = 
  filter (fun t -> not(mem t suppressed)) (setify ( (get_const_names i)));;


(* ignore domain6 constraints *)

(* expand is in prep_def.hl *)

  let rewrite_to_cpp_library_functions = map strip_domain6 
   expand2;;

  let test k = 
    let u = REWRITE_RULE rewrite_to_cpp_library_functions
     (h1 k) in
    let v = REWRITE_RULE (rewrite_to_cpp_library_functions @ [Sphere.rotate2;Sphere.rotate3;Sphere.rotate4;Sphere.rotate5;Sphere.rotate6]) u in
       (concl v);;

  let ptest k = const_names (test k);;

test 30;;
map ptest (0--79);;
filter (fun i -> not (ptest i = [])) (0--79);;
ptest 328;;
Sphere.norm2hh_x;;

  let uu = List.flatten it;;


let cons1 = (map (const_types o test) (100--200));;
let cons = (map (const_types o test) (0--(List.length !Prep.prep_ineqs - 1)));;
let nubcons = Flyspeck_lib.nub cons;;
let z1 = zip !Prep.prep_ineqs cons;;
let z2 = filter (fun (_,c) -> mem "sol_x" c) z1;;
List.length z2;;
map (fun (t,_) -> t.idv) z2;;

let has_const x i = 
  mem x (const_types (test i));;

filter (has_const "sol_y") (0--30);;

test 1;;

Sphere.hminus;;

(*old*)
  let rewrite_to_cpp_library_functions = map strip_domain6 [
Sphere.ineq;
    Sphere.gchi;
   Functional_equation.uni;
Functional_equation.functional_vol_x;
Functional_equation.functional_dih2_x;
Functional_equation.functional_dih3_x;
Functional_equation.functional_dih4_x;
Functional_equation.functional_dih5_x;
Functional_equation.functional_dih6_x;
Functional_equation.functional_gchi1_x;
Functional_equation.functional_gchi2_x;
Functional_equation.functional_gchi3_x;
Functional_equation.functional_gchi4_x;
Functional_equation.functional_gchi5_x;
Functional_equation.functional_gchi6_x;
Functional_equation.functional_ldih2_x;
Functional_equation.functional_ldih3_x;
Functional_equation.functional_eulerA_x;
Functional_equation.functional_sol156_euler_x_div_sqrtdelta;
Functional_equation.functional_sol246_euler_x_div_sqrtdelta;
Functional_equation.functional_sol345_euler_x_div_sqrtdelta;
   Functional_equation.add6;
   Functional_equation.sub6;
   Functional_equation.mul6;
   Functional_equation.div6;
   Functional_equation.mk_126;
   Functional_equation.mk_135;
   Functional_equation.mk_456;
   Nonlinear_lemma.proj_x1;
   Nonlinear_lemma.proj_x2;
   Nonlinear_lemma.proj_x3;
   Nonlinear_lemma.proj_x4;
   Nonlinear_lemma.proj_x5;
   Nonlinear_lemma.proj_x6;
   Functional_equation.compose6;
   Functional_equation.functional_rotate2;
   Functional_equation.functional_rotate3;
   Functional_equation.functional_rotate4;
   Functional_equation.functional_rotate5;
   Functional_equation.functional_rotate6;
   Functional_equation.proj_y1;
   Functional_equation.functional_proj_y2;
   Functional_equation.functional_proj_y3;
   Functional_equation.functional_proj_y4;
   Functional_equation.functional_proj_y5;
   Functional_equation.functional_proj_y6;
Functional_equation.functional_delta_126_x;
Functional_equation.functional_delta_234_x;
Functional_equation.functional_delta_135_x;
Nonlin_def.flat_term2_135_x;Nonlin_def.flat_term2_234_x;
Functional_equation.functional_mud_135_x;Functional_equation.functional_mud_126_x;
Functional_equation.functional_mud_234_x;
Functional_equation.functional_ldih2_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih3_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih5_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih6_x_div_sqrtdelta_posbranch; 
(*   Sphere.delta_x; *)
Functional_equation.functional_ldih_x_div_sqrtdelta_posbranch;
Functional_equation.functional_sol_euler_x_divsqrtdelta;
Functional_equation.functional_dih_x_div_sqrtdelta_posbranch;
Functional_equation.functional_rhazim_x;
Functional_equation.functional_rhazim2_x;
Functional_equation.functional_rhazim3_x;
    Functional_equation.rh0;
Functional_equation.functional_delta4_squared_x;
Functional_equation.functional_x1_delta_x;
Functional_equation.functional_tau_residual;
Nonlin_def.mu6_x;Functional_equation.taud_x_ALT;
Nonlin_def.taud_D2_num_x;Nonlin_def.taud_D1_num_x;
Functional_equation.functional_edge2_126_x;Functional_equation.functional_edge2_135_x;
Functional_equation.functional_edge2_234_x;
Nonlin_def.flat_term2_126_x;Nonlin_def.flat_term2_135_x;Nonlin_def.flat_term2_234_x;
Functional_equation.functional_delta_x1;
    REWRITE_RULE[Sphere.flat_term] Sphere.flat_term_x;
Functional_equation.functional_rhazim_x_div_sqrt_delta_posbranch;
Functional_equation.functional_rhazim2_x_div_sqrt_delta_posbranch;
Functional_equation.functional_rhazim3_x_div_sqrt_delta_posbranch;
Nonlin_def.mudLs_234_x;Nonlin_def.mudLs_126_x;
Nonlin_def.mudLs_135_x;
Functional_equation.functional_taum_x;
Functional_equation.functional_dnum1;
Nonlinear_lemma.halfbump_x;
Functional_equation.functional_halfbump_x1;
Functional_equation.functional_halfbump_x4;
Functional_equation.functional_asn797k;
Functional_equation.functional_asnFnhk;
Functional_equation.functional_acs_sqrt_x1_d4;
   Sphere.arc_hhn;
Functional_equation.functional_arclength_x1;
REWRITE_RULE[LET_DEF;LET_END_DEF] Functional_equation.functional_arclength_x_123;
Functional_equation.vol3f_456;
Functional_equation.functional_vol3_x_sqrt;
Functional_equation.functional_vol3f_x_sqrt2_lmplus;
Functional_equation.functional_vol3f_x_lfun;
Functional_equation.functional_eta2_135;
Functional_equation.functional_eta2_456;
Functional_equation.gamma3_x;
Functional_equation.gamma23_full8_x;
Functional_equation.gamma23_keep135_x;
Functional_equation.gamma3f_x_div_sqrtdelta_alt;
Functional_equation.functional_dih4_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih6_x;
Functional_equation.functional_ldih_x;
   Functional_equation.functional_norm2hh_x;
     Nonlin_def.unit6;Sphere.rad2_x;Sphere.y_of_x;Sphere.rho_x;
(*  Sphere.dih_x; *)
Sphere.const1;Sphere.delta_x4;Nonlin_def.scalar6;
    ];;

