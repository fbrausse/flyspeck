(* June 2, 2015. Expand out atn *)

open Hales_tactic;;

module Prep_def = struct
end;;

let FREEZE_SIMP_TAC t = 
  MP_TAC t THEN SIMP_TAC[] THEN DISCH_THEN kill;;

let IMP_IMP_THM = prove_by_refinement(
  `!a b. (a ==> b ==> c) <=> (a /\ b ==> c)`,
  (* {{{ proof *)
  [
  MESON_TAC[]
  ]);;
  (* }}} *)
  
let new_definition' t = 
    if has_stv t 
    then (Print_types.print_term_types t; failwith "new_definition has stv") 
    else new_definition t;;

let dihatn_x = new_definition' 
  `!x1 x2 x3 x4 x5 x6.
         dihatn_x x1 x2 x3 x4 x5 x6 =
         (let d_x4 = delta_x4 x1 x2 x3 x4 x5 x6 in
          let d = delta_x x1 x2 x3 x4 x5 x6 in
          pi / &2 + atn ((--d_x4)/sqrt (&4 * x1 * d)))`;;

let dih2atn_x = new_definition' 
  `!x1 x2 x3 x4 x5 x6.
         dih2atn_x x1 x2 x3 x4 x5 x6 =
         (let e = rotate2 delta_x4 x1 x2 x3 x4 x5 x6 in
          let d = delta_x x1 x2 x3 x4 x5 x6 in
          pi / &2 + atn ((--e)/sqrt (&4 * x2 * d)))`;;

let dih3atn_x = new_definition' 
  `!x1 x2 x3 x4 x5 x6.
         dih3atn_x x1 x2 x3 x4 x5 x6 =
         (let e = rotate3 delta_x4 x1 x2 x3 x4 x5 x6 in
          let d = delta_x x1 x2 x3 x4 x5 x6 in
          pi / &2 + atn ((--e)/sqrt (&4 * x3 * d)))`;;

let dih4atn_x = new_definition' 
  `!x1 x2 x3 x4 x5 x6.
         dih4atn_x x1 x2 x3 x4 x5 x6 =
         (let e = rotate4 delta_x4 x1 x2 x3 x4 x5 x6 in
          let d = delta_x x1 x2 x3 x4 x5 x6 in
          pi / &2 + atn ((--e)/sqrt (&4 * x4 * d)))`;;

let dih5atn_x = new_definition' 
  `!x1 x2 x3 x4 x5 x6.
         dih5atn_x x1 x2 x3 x4 x5 x6 =
         (let e = rotate5 delta_x4 x1 x2 x3 x4 x5 x6 in
          let d = delta_x x1 x2 x3 x4 x5 x6 in
          pi / &2 + atn ((--e)/sqrt (&4 * x5 * d)))`;;

let dih6atn_x = new_definition' 
  `!x1 x2 x3 x4 x5 x6.
         dih6atn_x x1 x2 x3 x4 x5 x6 =
         (let e = rotate6 delta_x4 x1 x2 x3 x4 x5 x6 in
          let d = delta_x x1 x2 x3 x4 x5 x6 in
          pi / &2 + atn ((--e)/sqrt (&4 * x6 * d)))`;;


let domain6 = Nonlin_def.domain6;;

let atn2_xpos = prove_by_refinement(
  `!x y. &0 < x ==> atn2 (x,y) = atn (y/x)`,
  (* {{{ proof *)
  [
  MESON_TAC[Trigonometry1.ATN2_BREAKDOWN]
  ]);;
  (* }}} *)

let delta_x_symmetries = prove_by_refinement(

  `
delta_x x2 x1 x3 x5 x4 x6 = delta_x x1 x2 x3 x4 x5 x6 /\
delta_x x2 x3 x1 x5 x6 x4 = delta_x x1 x2 x3 x4 x5 x6 /\
delta_x x3 x1 x2 x6 x4 x5 = delta_x x1 x2 x3 x4 x5 x6 /\
delta_x x4 x2 x6 x1 x5 x3 = delta_x x1 x2 x3 x4 x5 x6 /\
delta_x x5 x3 x4 x2 x6 x1 = delta_x x1 x2 x3 x4 x5 x6 /\
delta_x x6 x1 x5 x3 x4 x2 = delta_x x1 x2 x3 x4 x5 x6
  `,
  (* {{{ proof *)
  [
    BY(REWRITE_TAC[Sphere.delta_x] THEN REAL_ARITH_TAC);
  ]);;
  (* }}} *)

let rot2_delta_x = prove_by_refinement(
  `rotate2 delta_x = delta_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;Sphere.rotate2;Sphere.delta_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let rot_delta_x = prove_by_refinement(
  `rotate2 delta_x = delta_x /\
rotate3 delta_x = delta_x /\
rotate4 delta_x = delta_x /\
rotate5 delta_x = delta_x /\
rotate6 delta_x = delta_x 
`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;Sphere.rotate2;Sphere.rotate3;Sphere.rotate4;Sphere.rotate5;Sphere.rotate6;Sphere.delta_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let dih_x_dihatn_x = prove_by_refinement(
  `    domain6 (\x1 x2 x3 x4 x5 x6. &0 < delta_x x1 x2 x3 x4 x5 x6 /\
    &0 < x1)
    dih_x dihatn_x `,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Sphere.dih_x;dihatn_x];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[LET_THM];
  GMATCH_SIMP_TAC atn2_xpos;
  GMATCH_SIMP_TAC SQRT_POS_LT;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  nCONJ_TAC 1;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    BY(ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let dih2_x_dih2atn_x = prove_by_refinement(
  `    domain6 (\x1 x2 x3 x4 x5 x6. &0 < delta_x x1 x2 x3 x4 x5 x6 /\
    &0 < x2)
    dih2_x dih2atn_x `,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Sphere.dih2_x;dih2atn_x;Sphere.dih_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[LET_THM];
  GMATCH_SIMP_TAC atn2_xpos;
  GMATCH_SIMP_TAC SQRT_POS_LT;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  FREEZE_SIMP_TAC delta_x_symmetries;
  nCONJ_TAC 1;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    BY(ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  CONJ_TAC;
    BY(REAL_ARITH_TAC);
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  REWRITE_TAC[Sphere.delta_x4];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let dih3_x_dih3atn_x = prove_by_refinement(
  `    domain6 (\x1 x2 x3 x4 x5 x6. &0 < delta_x x1 x2 x3 x4 x5 x6 /\
    &0 < x3)
    dih3_x dih3atn_x `,
  (* {{{ proof *)
  [
  REWRITE_TAC[LET_THM;domain6;Sphere.dih3_x;dih3atn_x;Sphere.dih_x;Sphere.rotate3];
  REPEAT WEAKER_STRIP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  GMATCH_SIMP_TAC atn2_xpos;
  GMATCH_SIMP_TAC SQRT_POS_LT;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  nCONJ_TAC 1;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    BY(ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let dih4_x_dih4atn_x = prove_by_refinement(
  `    domain6 (\x1 x2 x3 x4 x5 x6. &0 < delta_x x1 x2 x3 x4 x5 x6 /\
    &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\ &0 < x4 /\ &0 <= x5 /\ &0 <= x6)
    dih4_x dih4atn_x `,
  (* {{{ proof *)
  [
  INTRO_TAC Functional_equation.functional_dih4_x [];
  REWRITE_TAC[LET_THM;domain6;dih4atn_x;Sphere.dih_x;Sphere.rotate4];
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate4;Sphere.dih_x;LET_THM];
  DISCH_THEN kill;
  REPEAT WEAKER_STRIP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  GMATCH_SIMP_TAC atn2_xpos;
  GMATCH_SIMP_TAC SQRT_POS_LT;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  nCONJ_TAC 1;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    BY(ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let dih5_x_dih5atn_x = prove_by_refinement(
  `    domain6 (\x1 x2 x3 x4 x5 x6. &0 < delta_x x1 x2 x3 x4 x5 x6 /\
    &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\ &0 <= x4 /\ &0 < x5 /\ &0 <= x6)
    dih5_x dih5atn_x `,
  (* {{{ proof *)
  [
  INTRO_TAC Functional_equation.functional_dih5_x [];
  REWRITE_TAC[LET_THM;domain6;dih5atn_x;Sphere.dih_x;Sphere.rotate5];
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate5;Sphere.dih_x;LET_THM];
  DISCH_THEN kill;
  REPEAT WEAKER_STRIP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  GMATCH_SIMP_TAC atn2_xpos;
  GMATCH_SIMP_TAC SQRT_POS_LT;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  nCONJ_TAC 1;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    BY(ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let dih6_x_dih6atn_x = prove_by_refinement(
  `    domain6 (\x1 x2 x3 x4 x5 x6. &0 < delta_x x1 x2 x3 x4 x5 x6 /\
    &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\ &0 <= x4 /\ &0 <= x5 /\ &0 < x6)
    dih6_x dih6atn_x `,
  (* {{{ proof *)
  [
  INTRO_TAC Functional_equation.functional_dih6_x [];
  REWRITE_TAC[LET_THM;domain6;dih6atn_x;Sphere.dih_x;Sphere.rotate6];
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate6;Sphere.dih_x;LET_THM];
  DISCH_THEN kill;
  REPEAT WEAKER_STRIP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  GMATCH_SIMP_TAC atn2_xpos;
  GMATCH_SIMP_TAC SQRT_POS_LT;
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  nCONJ_TAC 1;
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    BY(ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)



(* no expand *)
let sol0 = Sphere.sol0;;
let tau0 = Sphere.tau0;;
let mm1 = Sphere.mm1;;
let mm2 = Sphere.mm2;;
let const1 = Sphere.const1;;
let h0 = Sphere.h0;;
let rh0 =    Functional_equation.rh0;;


let ineq = Sphere.ineq;;


let constant6  = Functional_equation.constant6;;
let two6 = Nonlin_def.two6;;
let uni =  Functional_equation.uni;;
let compose6 = Functional_equation.compose6;;
let scalar6 = Nonlin_def.scalar6;;

let proj_x1 =   Nonlinear_lemma.proj_x1;;
let proj_x2 =    Nonlinear_lemma.proj_x2;;
let proj_x3 =    Nonlinear_lemma.proj_x3;;
let proj_x4 =    Nonlinear_lemma.proj_x4;;
let proj_x5 =   Nonlinear_lemma.proj_x5;;
let proj_x6 =    Nonlinear_lemma.proj_x6;;

let rotate2 =   Functional_equation.functional_rotate2;;
let rotate3 =   Functional_equation.functional_rotate3;;
let rotate4 =   Functional_equation.functional_rotate4;;
let rotate5 =   Functional_equation.functional_rotate5;;
let rotate6 =   Functional_equation.functional_rotate6;;

let proj_y1 =    Functional_equation.proj_y1;;
let proj_y2 =       Functional_equation.functional_proj_y2;;
let proj_y3 =          Functional_equation.functional_proj_y3;;
let proj_y4 =          Functional_equation.functional_proj_y4;;
let proj_y5 =          Functional_equation.functional_proj_y5;;
let proj_y6 =          Functional_equation.functional_proj_y6;;

let add6 =   Functional_equation.add6;;
let sub6 =    Functional_equation.sub6;;
let mul6 =   Functional_equation.mul6;;
let div6 =    Functional_equation.div6;;

let mk_126 =    Functional_equation.mk_126;;
let mk_135 =    Functional_equation.mk_135;;
let mk_456 =    Functional_equation.mk_456;;


let gchi = Sphere.gchi;;
let vol_x = Functional_equation.functional_vol_x;;
let flat_term_x =     REWRITE_RULE[Sphere.flat_term] Sphere.flat_term_x;;

let unit6 =  Nonlin_def.unit6;;
let rad2_x = Sphere.rad2_x;;
let rho_x = Sphere.rho_x;;

let eulerA_x = Functional_equation.functional_eulerA_x;;
let delta_x4 = Sphere.delta_x4;;

let atn_gchi1_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x1) 
   gchi1_x (mul6 (uni (gchi,proj_y1)) dihatn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Functional_equation.functional_gchi1_x;dihatn_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[mul6];
  REPEAT AP_TERM_TAC;
  MP_TAC dih_x_dihatn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let atn_gchi2_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x2) 
   gchi2_x (mul6 (uni (gchi,proj_y2)) dih2atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Functional_equation.functional_gchi2_x;dihatn_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[mul6];
  REPEAT AP_TERM_TAC;
  MP_TAC dih2_x_dih2atn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let atn_gchi3_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x3) 
   gchi3_x (mul6 (uni (gchi,proj_y3)) dih3atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Functional_equation.functional_gchi3_x;dihatn_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[mul6];
  REPEAT AP_TERM_TAC;
  MP_TAC dih3_x_dih3atn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let atn_gchi4_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\  &0 <= x1 /\
      &0 <= x2 /\
      &0 <= x3 /\
      &0 < x4 /\
      &0 <= x5 /\
      &0 <= x6) 
   gchi4_x (mul6 (uni (gchi,proj_y4)) dih4atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Functional_equation.functional_gchi4_x;dihatn_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[mul6];
  REPEAT AP_TERM_TAC;
  MP_TAC dih4_x_dih4atn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let atn_gchi5_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\  &0 <= x1 /\
      &0 <= x2 /\
      &0 <= x3 /\
      &0 <= x4 /\
      &0 < x5 /\
      &0 <= x6) 
   gchi5_x (mul6 (uni (gchi,proj_y5)) dih5atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Functional_equation.functional_gchi5_x;dihatn_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[mul6];
  REPEAT AP_TERM_TAC;
  MP_TAC dih5_x_dih5atn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let atn_gchi6_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\  &0 <= x1 /\
      &0 <= x2 /\
      &0 <= x3 /\
      &0 <= x4 /\
      &0 <= x5 /\
      &0 < x6) 
   gchi6_x (mul6 (uni (gchi,proj_y6)) dih6atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Functional_equation.functional_gchi6_x;dihatn_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[mul6];
  REPEAT AP_TERM_TAC;
  MP_TAC dih6_x_dih6atn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let gchi_all_atn = prove_by_refinement(
  `!x1 x2 x3 x4 x5 x6.
      &0 < delta_x x1 x2 x3 x4 x5 x6 /\
 &0 < x1 /\
 &0 < x2 /\
 &0 < x3 /\
 &0 < x4 /\
 &0 < x5 /\
 &0 < x6 ==>
    gchi1_x x1 x2 x3 x4 x5 x6 = gchi(sqrt(x1)) * dihatn_x x1 x2 x3 x4 x5 x6 /\
    gchi2_x x1 x2 x3 x4 x5 x6 = gchi(sqrt(x2)) * dih2atn_x x1 x2 x3 x4 x5 x6 /\
    gchi3_x x1 x2 x3 x4 x5 x6 = gchi(sqrt(x3)) * dih3atn_x x1 x2 x3 x4 x5 x6 /\
    gchi4_x x1 x2 x3 x4 x5 x6 = gchi(sqrt(x4)) * dih4atn_x x1 x2 x3 x4 x5 x6 /\
    gchi5_x x1 x2 x3 x4 x5 x6 = gchi(sqrt(x5)) * dih5atn_x x1 x2 x3 x4 x5 x6 /\
    gchi6_x x1 x2 x3 x4 x5 x6 = gchi(sqrt(x6)) * dih6atn_x x1 x2 x3 x4 x5 x6

`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC atn_gchi1_x [];
  INTRO_TAC atn_gchi2_x [];
  INTRO_TAC atn_gchi3_x [];
  INTRO_TAC atn_gchi4_x [];
  INTRO_TAC atn_gchi5_x [];
  INTRO_TAC atn_gchi6_x [];
  REWRITE_TAC[domain6;mul6;compose6;rotate5;rotate6;rotate4;rotate3;rotate2;uni;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;proj_y1;proj_y2;proj_y3;proj_y4;proj_y5;proj_y6];
  REPEAT (DISCH_THEN (C INTRO_TAC [`x1`;`x2`;`x3`;`x4`;`x5`;`x6`]) THEN ASM_REWRITE_TAC[] THEN DISCH_TAC);
  ASM_REWRITE_TAC[];
  REPEAT (FIRST_X_ASSUM_ST `==>` GMATCH_SIMP_TAC);
  BY(ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`])
  ]);;
  (* }}} *)

let dih_all_atn = prove_by_refinement(
  `!x1 x2 x3 x4 x5 x6.
      &0 < delta_x x1 x2 x3 x4 x5 x6 /\
 &0 < x1 /\
 &0 < x2 /\
 &0 < x3 /\
 &0 < x4 /\
 &0 < x5 /\
 &0 < x6 ==>
    dih_x x1 x2 x3 x4 x5 x6 = dihatn_x x1 x2 x3 x4 x5 x6 /\
    dih2_x x1 x2 x3 x4 x5 x6 =  dih2atn_x x1 x2 x3 x4 x5 x6 /\
    dih3_x x1 x2 x3 x4 x5 x6 =  dih3atn_x x1 x2 x3 x4 x5 x6 /\
    dih4_x x1 x2 x3 x4 x5 x6 =  dih4atn_x x1 x2 x3 x4 x5 x6 /\
    dih5_x x1 x2 x3 x4 x5 x6 =  dih5atn_x x1 x2 x3 x4 x5 x6 /\
    dih6_x x1 x2 x3 x4 x5 x6 =  dih6atn_x x1 x2 x3 x4 x5 x6

`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC dih_x_dihatn_x [];
  INTRO_TAC dih2_x_dih2atn_x [];
  INTRO_TAC dih3_x_dih3atn_x [];
  INTRO_TAC dih4_x_dih4atn_x [];
  INTRO_TAC dih5_x_dih5atn_x [];
  INTRO_TAC dih6_x_dih6atn_x [];
  REWRITE_TAC[domain6];
  REPEAT (DISCH_THEN (C INTRO_TAC [`x1`;`x2`;`x3`;`x4`;`x5`;`x6`]) THEN ASM_REWRITE_TAC[] THEN DISCH_TAC);
  ASM_REWRITE_TAC[];
  REPEAT (FIRST_X_ASSUM_ST `==>` GMATCH_SIMP_TAC);
  BY(ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`])
  ]);;
  (* }}} *)

let rotate2_dihatn_x = prove_by_refinement(
  `rotate2 dihatn_x = dih2atn_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[dih2atn_x;dihatn_x;Sphere.rotate2;LET_THM];
  REPEAT WEAKER_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  BY(REWRITE_TAC[delta_x] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let rotate3_dihatn_x = prove_by_refinement(
  `rotate3 dihatn_x = dih3atn_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[dih3atn_x;Sphere.rotate3;dihatn_x;LET_THM];
  REPEAT WEAKER_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  BY(REWRITE_TAC[delta_x] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let rotate4_dihatn_x = prove_by_refinement(
  `rotate4 dihatn_x = dih4atn_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[dih4atn_x;Sphere.rotate4;dihatn_x;LET_THM];
  REPEAT WEAKER_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  BY(REWRITE_TAC[delta_x] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let rotate5_dihatn_x = prove_by_refinement(
  `rotate5 dihatn_x = dih5atn_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[dih5atn_x;Sphere.rotate5;dihatn_x;LET_THM];
  REPEAT WEAKER_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  BY(REWRITE_TAC[delta_x] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let rotate6_dihatn_x = prove_by_refinement(
  `rotate6 dihatn_x = dih6atn_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[dih6atn_x;Sphere.rotate6;dihatn_x;LET_THM];
  REPEAT WEAKER_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  BY(REWRITE_TAC[delta_x] THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let atn_ldih_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x1)
   ldih_x ( mul6 (scalar6 (sub6 (scalar6 unit6 h0) (scalar6 proj_y1  #0.5)) rh0)
     dihatn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[LET_THM;domain6;mul6;Functional_equation.functional_ldih_x;];
  REPEAT WEAKER_STRIP_TAC;
  REPEAT AP_TERM_TAC;
  MP_TAC dih_x_dihatn_x;
  REWRITE_TAC[domain6];
  DISCH_THEN MATCH_MP_TAC;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let atn_ldih2_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x2)
   ldih2_x ( mul6 (scalar6 (sub6 (scalar6 unit6 h0) (scalar6 proj_y2  #0.5)) rh0)
     dih2atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[LET_THM;domain6;mul6;Functional_equation.functional_ldih2_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  MP_TAC atn_ldih_x;
  REWRITE_TAC[domain6;mul6];
  DISCH_THEN GMATCH_SIMP_TAC;
  MP_TAC delta_x_symmetries;
  ASM_SIMP_TAC[];
  DISCH_THEN kill;
  BY(REWRITE_TAC[scalar6;sub6;proj_y1;proj_y2;Sphere.rotate2;unit6;GSYM rotate2_dihatn_x])
  ]);;
  (* }}} *)

let atn_ldih3_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x3)
   ldih3_x ( mul6 (scalar6 (sub6 (scalar6 unit6 h0) (scalar6 proj_y3  #0.5)) rh0)
     dih3atn_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[LET_THM;domain6;mul6;Functional_equation.functional_ldih3_x;Sphere.rotate3];
  REPEAT WEAKER_STRIP_TAC;
  MP_TAC atn_ldih_x;
  REWRITE_TAC[domain6;mul6];
  DISCH_THEN GMATCH_SIMP_TAC;
  MP_TAC delta_x_symmetries;
  ASM_SIMP_TAC[];
  DISCH_THEN kill;
  BY(REWRITE_TAC[scalar6;sub6;proj_y1;proj_y3;Sphere.rotate3;unit6;GSYM rotate3_dihatn_x])
  ]);;
  (* }}} *)

let atn_ldih6_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 <= x1 /\
          &0 <= x2 /\
          &0 <= x3 /\
          &0 <= x4 /\
          &0 <= x5 /\
          &0 < x6)
   ldih6_x ( mul6 (scalar6 (sub6 (scalar6 unit6 h0) (scalar6 proj_y6  #0.5)) rh0)
     dih6atn_x)`,
  (* {{{ proof *)
  [
  SIMP_TAC[LET_THM;domain6;mul6;Functional_equation.functional_ldih6_x;Sphere.rotate6;arith `&0 < x ==> &0 <= x`];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Functional_equation.functional_ldih6_x [];
  REWRITE_TAC[domain6];
  DISCH_THEN GMATCH_SIMP_TAC;
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate6];
  MP_TAC atn_ldih_x;
  REWRITE_TAC[domain6;mul6];
  DISCH_THEN GMATCH_SIMP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  ASM_REWRITE_TAC[];
  BY((REWRITE_TAC[scalar6;sub6;proj_y1;proj_y6;Sphere.rotate6;unit6;GSYM rotate6_dihatn_x]))
  ]);;
  (* }}} *)

let atn_rhazim_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 < x1 /\
          &0 <= x2 /\
          &0 <= x3 /\
          &0 <= x4 /\
          &0 <= x5 /\
          &0 <= x6)
   rhazim_x ( (mul6 (uni (rho,proj_y1)) dihatn_x))`,
  (* {{{ proof *)
  [
  SIMP_TAC[LET_THM;domain6;mul6];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Functional_equation.functional_rhazim_x [];
  REWRITE_TAC[domain6];
  DISCH_THEN GMATCH_SIMP_TAC;
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate6];
  INTRO_TAC dih_x_dihatn_x [];
  REWRITE_TAC[domain6;mul6];
  BY(ASM_SIMP_TAC[])
  ]);;
  (* }}} *)

let atn_rhazim2_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 <= x1 /\
          &0 < x2 /\
          &0 <= x3 /\
          &0 <= x4 /\
          &0 <= x5 /\
          &0 <= x6)
   rhazim2_x ( (mul6 (uni (rho,proj_y2)) dih2atn_x))`,
  (* {{{ proof *)
  [
  SIMP_TAC[LET_THM;domain6;mul6;Functional_equation.functional_rhazim2_x;Sphere.rotate2];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Functional_equation.functional_rhazim_x [];
  REWRITE_TAC[domain6];
  DISCH_THEN GMATCH_SIMP_TAC;
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate6;mul6;Nonlin_def.uni;proj_y1;proj_y2;Sphere.rotate2];
  AP_TERM_TAC;
  INTRO_TAC dih_x_dihatn_x [];
  REWRITE_TAC[domain6;mul6];
  DISCH_THEN GMATCH_SIMP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  ASM_REWRITE_TAC[];
  BY(REWRITE_TAC[GSYM rotate2_dihatn_x;Sphere.rotate2])
  ]);;
  (* }}} *)

let atn_rhazim3_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 < delta_x x1 x2 x3 x4 x5 x6 /\ &0 <= x1 /\
          &0 <= x2 /\
          &0 < x3 /\
          &0 <= x4 /\
          &0 <= x5 /\
          &0 <= x6)
   rhazim3_x ( (mul6 (uni (rho,proj_y3)) dih3atn_x))`,
  (* {{{ proof *)
  [
  SIMP_TAC[LET_THM;domain6;mul6;Functional_equation.functional_rhazim3_x;Sphere.rotate3];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Functional_equation.functional_rhazim_x [];
  REWRITE_TAC[domain6];
  DISCH_THEN GMATCH_SIMP_TAC;
  ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
  REWRITE_TAC[Sphere.rotate6;mul6;Nonlin_def.uni;proj_y1;proj_y3;Sphere.rotate3];
  AP_TERM_TAC;
  INTRO_TAC dih_x_dihatn_x [];
  REWRITE_TAC[domain6;mul6];
  DISCH_THEN GMATCH_SIMP_TAC;
  FREEZE_SIMP_TAC delta_x_symmetries;
  ASM_REWRITE_TAC[];
  BY(REWRITE_TAC[GSYM rotate3_dihatn_x;Sphere.rotate3])
  ]);;
  (* }}} *)

let proj_y = prove_by_refinement(
  `!x1 x2 x3 x4 x5 x6. 
proj_y1 x1 x2 x3 x4 x5 x6 = sqrt(x1) /\
proj_y2 x1 x2 x3 x4 x5 x6 = sqrt(x2) /\
proj_y3 x1 x2 x3 x4 x5 x6 = sqrt(x3) /\
proj_y4 x1 x2 x3 x4 x5 x6 = sqrt(x4) /\
proj_y5 x1 x2 x3 x4 x5 x6 = sqrt(x5) /\
proj_y6 x1 x2 x3 x4 x5 x6 = sqrt(x6) 
`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[proj_y1;proj_y2;proj_y3;proj_y4;proj_y5;proj_y6;Sphere.rotate2;Sphere.rotate3;Sphere.rotate4;Sphere.rotate5;Sphere.rotate6;])
  ]);;
  (* }}} *)


let rotate_rules = prove_by_refinement(
  `(!f g. rotate2 (mul6 f g) = mul6 (rotate2 f) (rotate2 g)) /\
(!f g. rotate3 (mul6 f g) = mul6 (rotate3 f) (rotate3 g)) /\
(!f g. rotate4 (mul6 f g) = mul6 (rotate4 f) (rotate4 g)) /\
(!f g. rotate5 (mul6 f g) = mul6 (rotate5 f) (rotate5 g)) /\
(!f g. rotate6 (mul6 f g) = mul6 (rotate6 f) (rotate6 g)) /\

(!f g. rotate2 (add6 f g) = add6 (rotate2 f) (rotate2 g)) /\
(!f g. rotate3 (add6 f g) = add6 (rotate3 f) (rotate3 g)) /\
(!f g. rotate4 (add6 f g) = add6 (rotate4 f) (rotate4 g)) /\
(!f g. rotate5 (add6 f g) = add6 (rotate5 f) (rotate5 g)) /\
(!f g. rotate6 (add6 f g) = add6 (rotate6 f) (rotate6 g)) /\

(!f g. rotate2 (div6 f g) = div6 (rotate2 f) (rotate2 g)) /\
(!f g. rotate3 (div6 f g) = div6 (rotate3 f) (rotate3 g)) /\
(!f g. rotate4 (div6 f g) = div6 (rotate4 f) (rotate4 g)) /\
(!f g. rotate5 (div6 f g) = div6 (rotate5 f) (rotate5 g)) /\
(!f g. rotate6 (div6 f g) = div6 (rotate6 f) (rotate6 g)) /\

(!f g. rotate2 (sub6 f g) = sub6 (rotate2 f) (rotate2 g)) /\
(!f g. rotate3 (sub6 f g) = sub6 (rotate3 f) (rotate3 g)) /\
(!f g. rotate4 (sub6 f g) = sub6 (rotate4 f) (rotate4 g)) /\
(!f g. rotate5 (sub6 f g) = sub6 (rotate5 f) (rotate5 g)) /\
(!f g. rotate6 (sub6 f g) = sub6 (rotate6 f) (rotate6 g)) /\

(!f t. rotate2 (uni (f,t)) = uni (f,rotate2 t)) /\
(!f t. rotate3 (uni (f,t)) = uni (f,rotate3 t)) /\
(!f t. rotate4 (uni (f,t)) = uni (f,rotate4 t)) /\
(!f t. rotate5 (uni (f,t)) = uni (f,rotate5 t)) /\
(!f t. rotate6 (uni (f,t)) = uni (f,rotate6 t)) /\

(!f r. rotate2 (scalar6 f r) = scalar6 (rotate2 f) r) /\ 
(!f r. rotate3 (scalar6 f r) = scalar6 (rotate3 f) r) /\ 
(!f r. rotate4 (scalar6 f r) = scalar6 (rotate4 f) r) /\ 
(!f r. rotate5 (scalar6 f r) = scalar6 (rotate5 f) r) /\ 
(!f r. rotate6 (scalar6 f r) = scalar6 (rotate6 f) r) /\ 

(!t. rotate2 (constant6 t) = (constant6 t)) /\
(!t. rotate3 (constant6 t) = (constant6 t)) /\
(!t. rotate4 (constant6 t) = (constant6 t)) /\
(!t. rotate5 (constant6 t) = (constant6 t)) /\
(!t. rotate6 (constant6 t) = (constant6 t)) /\

rotate2 proj_y1 = proj_y2 /\
rotate3 proj_y1 = proj_y3 /\
rotate4 proj_y1 = proj_y4 /\
rotate5 proj_y1 = proj_y5 /\
rotate6 proj_y1 = proj_y6 /\

rotate2 proj_x1 = proj_x2 /\
rotate3 proj_x1 = proj_x3 /\
rotate4 proj_x1 = proj_x4 /\
rotate5 proj_x1 = proj_x5 /\
rotate6 proj_x1 = proj_x6 /\

(!f x1 x2 x3 x4 x5 x6. rotate2 (promote1_to_6 f) x1 x2 x3 x4 x5 x6 = f x2) /\
(!f x1 x2 x3 x4 x5 x6. rotate3 (promote1_to_6 f) x1 x2 x3 x4 x5 x6 = f x3) /\
(!f x1 x2 x3 x4 x5 x6. rotate4 (promote1_to_6 f) x1 x2 x3 x4 x5 x6 = f x4) /\
(!f x1 x2 x3 x4 x5 x6. rotate5 (promote1_to_6 f) x1 x2 x3 x4 x5 x6 = f x5) /\
(!f x1 x2 x3 x4 x5 x6. rotate6 (promote1_to_6 f) x1 x2 x3 x4 x5 x6 = f x6) /\

(!f p1 p2 p3 p4 p5 p6. rotate2 (compose6 f p1 p2 p3 p4 p5 p6) = 
    compose6 f (rotate2 p1) (rotate2 p2) (rotate2 p3) (rotate2 p4) (rotate2 p5) (rotate2 p6)) /\

(!f p1 p2 p3 p4 p5 p6. rotate3 (compose6 f p1 p2 p3 p4 p5 p6) = 
    compose6 f (rotate3 p1) (rotate3 p2) (rotate3 p3) (rotate3 p4) (rotate3 p5) (rotate3 p6)) /\

(!f p1 p2 p3 p4 p5 p6. rotate4 (compose6 f p1 p2 p3 p4 p5 p6) = 
    compose6 f (rotate4 p1) (rotate4 p2) (rotate4 p3) (rotate4 p4) (rotate4 p5) (rotate4 p6)) /\

(!f p1 p2 p3 p4 p5 p6. rotate5 (compose6 f p1 p2 p3 p4 p5 p6) = 
    compose6 f (rotate5 p1) (rotate5 p2) (rotate5 p3) (rotate5 p4) (rotate5 p5) (rotate5 p6)) /\

(!f p1 p2 p3 p4 p5 p6. rotate6 (compose6 f p1 p2 p3 p4 p5 p6) = 
    compose6 f (rotate6 p1) (rotate6 p2) (rotate6 p3) (rotate6 p4) (rotate6 p5) (rotate6 p6))

`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;mul6;add6;div6;sub6;uni;scalar6;constant6;proj_y1;proj_y2;proj_y3;proj_y4;proj_y5;proj_y6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;Sphere.rotate2;Sphere.rotate3;Sphere.rotate4;Sphere.rotate5;Sphere.rotate6;Functional_equation.promote1_to_6;compose6])
  ]);;
  (* }}} *)


   
(*   Sphere.delta_x;; *)







(* domain 6 *)





let expand = [LET_THM;
	constant6;two6;Nonlin_def.dummy6;Nonlin_def.zero6;uni;compose6;scalar6;Nonlin_def.uni;
	proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;
        proj_y;
        add6;sub6;mul6;div6;mk_126;mk_135;mk_456;
	gchi;vol_x;flat_term_x;
	unit6;rad2_x;
   dihatn_x;dih2atn_x;dih3atn_x;dih4atn_x;dih5atn_x;dih6atn_x;
   dih_x_dihatn_x;dih2_x_dih2atn_x;dih3_x_dih3atn_x;dih4_x_dih4atn_x;dih5_x_dih5atn_x;dih6_x_dih6atn_x;
	atn_gchi1_x;atn_gchi2_x;atn_gchi3_x;
	atn_gchi4_x;atn_gchi5_x;atn_gchi6_x;
rot_delta_x;
Functional_equation.functional_dih_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih2_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih3_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_dih4_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih5_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih6_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_sol_euler_x_divsqrtdelta;
Functional_equation.functional_sol156_euler_x_div_sqrtdelta;
Functional_equation.functional_sol246_euler_x_div_sqrtdelta;
Functional_equation.functional_sol345_euler_x_div_sqrtdelta;
   Functional_equation.functional_norm2hh_x;
Sphere.bump;
Nonlinear_lemma.halfbump_x;
Functional_equation.functional_halfbump_x1;
Functional_equation.functional_halfbump_x4;
Functional_equation.functional_eta2_135;
Functional_equation.functional_eta2_456;
Functional_equation.functional_eta2_126;
Sphere.eta_x;
Functional_equation.promote1_to_6;
Functional_equation.promote3_to_6;
rotate_rules;
Functional_equation.rotate126;
Functional_equation.functional_vol3_x_sqrt;
Functional_equation.functional_vol3f_x_sqrt2_lmplus;
Functional_equation.functional_vol3f_x_lfun;
atn_ldih_x;
atn_ldih2_x;
atn_ldih3_x;
atn_ldih6_x;
Functional_equation.nonf_gamma23_full8_x;
Functional_equation.gamma3_x;
Functional_equation.functional_vol_x;
Functional_equation.vol3f_456;
Sphere.sol_x;
proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;
Functional_equation.nonf_gamma2_x1_div_a_v2;
Nonlin_def.gamma2_x_div_azim_v2;
Functional_equation.gamma23_keep135_x;
Functional_equation.gamma3f_x_div_sqrtdelta_alt;
Functional_equation.functional_delta4_squared_x;
Functional_equation.functional_x1_delta_x;
Sphere.lfun_y1;
Functional_equation.functional_asn797k;
Functional_equation.functional_asnFnhk;
Functional_equation.functional_acs_sqrt_x1_d4;
REWRITE_RULE[LET_THM] Functional_equation.functional_arclength_x_123;
Functional_equation.functional_arclength_x1;
atn_rhazim_x;
atn_rhazim2_x;
atn_rhazim3_x;
Functional_equation.functional_taum_x;
Functional_equation.functional_dnum1;
Functional_equation.functional_delta_126_x;
Functional_equation.functional_delta_234_x;
Functional_equation.functional_delta_135_x;
Nonlin_def.flat_term2_135_x;
Nonlin_def.flat_term2_234_x;
Functional_equation.functional_tau_residual;
Nonlin_def.mu6_x;
Functional_equation.taud_x_ALT;
Nonlin_def.taud_D2_num_x;
Nonlin_def.taud_D1_num_x;
Functional_equation.functional_edge2_126_x;
Functional_equation.functional_edge2_135_x;
Functional_equation.functional_edge2_234_x;
Nonlin_def.flat_term2_126_x;
Nonlin_def.flat_term2_135_x;
Nonlin_def.flat_term2_234_x;
Functional_equation.functional_rhazim_x_div_sqrt_delta_posbranch;
Functional_equation.functional_rhazim2_x_div_sqrt_delta_posbranch;
Functional_equation.functional_rhazim3_x_div_sqrt_delta_posbranch;
Nonlin_def.mudLs_234_x;
Nonlin_def.mudLs_126_x;
Nonlin_def.mudLs_135_x;
Functional_equation.functional_mud_135_x;
Functional_equation.functional_mud_126_x;
Functional_equation.functional_mud_234_x;
Nonlin_def.ups_126;
   ];;

let domain6_ineq = prove_by_refinement(
  `!c1 c2 P F1 x1 x2 x3 x4 x5 x6 a1 a2 a3 a4 a5 a6 b1 b2 b3 b4 b5 b6.
        domain6 P c2 c1 ==>
    ineq [(a1,x1,b1);(a2,x2,b2);(a3,x3,b3);(a4,x4,b4);(a5,x5,b5);(a6,x6,b6)]
    (P x1 x2 x3 x4 x5 x6) ==>

    (ineq [(a1,x1,b1);(a2,x2,b2);(a3,x3,b3);(a4,x4,b4);(a5,x5,b5);(a6,x6,b6)]
    (F1 (c2 x1 x2 x3 x4 x5 x6)) <=>
    ineq [(a1,x1,b1);(a2,x2,b2);(a3,x3,b3);(a4,x4,b4);(a5,x5,b5);(a6,x6,b6)]
    (F1 (c1 x1 x2 x3 x4 x5 x6)))
`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ineq;domain6];
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[IMP_IMP_THM];
  TYPIFY `(((((a1 <= x1 /\ x1 <= b1) /\ a2 <= x2 /\ x2 <= b2) /\ a3 <= x3 /\ x3 <= b3) /\   a4 <= x4 /\   x4 <= b4) /\  a5 <= x5 /\  x5 <= b5) /\ a6 <= x6 /\ x6 <= b6` ASM_CASES_TAC THEN ASM_REWRITE_TAC[];
  FIRST_X_ASSUM (C INTRO_TAC [`x1`;`x2`;`x3`;`x4`;`x5`;`x6`]);
  BY(ASM_SIMP_TAC[])
  ]);;
  (* }}} *)

let domain6_ineq2 = prove_by_refinement(
  `!c1 c2 P F1 x1 x2 x3 x4 x5 x6 a1 a2 a3 a4 a5 a6 b1 b2 b3 b4 b5 b6.
        domain6 P c2 c1 ==>
    (ineq [(a1,x1,b1);(a2,x2,b2);(a3,x3,b3);(a4,x4,b4);(a5,x5,b5);(a6,x6,b6)]
    (P x1 x2 x3 x4 x5 x6) /\
    (ineq [(a1,x1,b1);(a2,x2,b2);(a3,x3,b3);(a4,x4,b4);(a5,x5,b5);(a6,x6,b6)]
    (F1 (c1 x1 x2 x3 x4 x5 x6)))) ==>
    ineq [(a1,x1,b1);(a2,x2,b2);(a3,x3,b3);(a4,x4,b4);(a5,x5,b5);(a6,x6,b6)]
    (F1 (c2 x1 x2 x3 x4 x5 x6))
`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ineq;domain6;IMP_IMP_THM];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM (C INTRO_TAC [`x1`;`x2`;`x3`;`x4`;`x5`;`x6`]);
  BY(ASM_SIMP_TAC[])
  ]);;
  (* }}} *)



(* scratch area *)

let has_subterm sub tm = 
  can (find_term ((=) sub)) tm;; 

let has_domain6 = has_subterm `(domain6:(real->real->real->real->real->real->bool)->(real->real->real->real->real->real->real)->(real->real->real->real->real->real->real)->bool)`;;

let expand_domain = filter (has_domain6 o concl ) expand;;

let uu = hd expand_domain;;

List.length expand_domain;;

let ff i =   (MATCH_MP domain6_ineq2) (List.nth expand_domain i);;
map ff (0--19);;
map ff (20 --25);;
ff 0;;
List.nth expand_domain 23;;
domain6_ineq2;;
Print_types.print_thm_types (List.nth expand_domain 23);;
List.nth expand_domain 0;;


expand;;






st 5 [`num1`];;
["rhazim2_x"; "rhazim3_x"; "rhazim_x"];
   ["rhazim2_x"; "rhazim3_x"; "rhazim_x"]; [];
   ["quad_cross_diag2_x"; "taum_x"];;



Enclosed.quad_cross_diag2_x;;
Enclosed.enclosed;;
st 5 [`lfun_y1`];;
st  5 [`quad_cross_diag2_x`];;
Functional_equation.functional_delta4_squared_x;;
Functional_equation.functional_x1_delta_x;;
Nonlin_def.uni;;
Functional_equation.nonf_gamma2_x1_div_a_v2;;
st 5 [`gamma2_x_div_azim_v2`];;
Sphere.lfun;;
proj_x2;;
st 5 [`vol3f_456`];;
