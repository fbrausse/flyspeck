(* June 2, 2015. Expand out atn *)

open Hales_tactic;;

module Prep_def = struct
end;;

let sol0 = Sphere.sol0;;
let tau0 = Sphere.tau0;;
let mm1 = Sphere.mm1;;
let mm2 = Sphere.mm2;;
let const1 = Sphere.const1;;
let h0 = Sphere.h0;;
let ineq = Sphere.ineq;;
let two6 = Nonlin_def.two6;;
let scalar6 = Nonlin_def.scalar6;;

let proj_x1 =   Nonlinear_lemma.proj_x1;;
let proj_x2 =    Nonlinear_lemma.proj_x2;;
let proj_x3 =    Nonlinear_lemma.proj_x3;;
let proj_x4 =    Nonlinear_lemma.proj_x4;;
let proj_x5 =   Nonlinear_lemma.proj_x5;;
let proj_x6 =    Nonlinear_lemma.proj_x6;;

let rotate2 =   (* Functional_equation. *)functional_rotate2;;
let rotate3 =   (* Functional_equation. *)functional_rotate3;;
let rotate4 =   (* Functional_equation. *)functional_rotate4;;
let rotate5 =   (* Functional_equation. *)functional_rotate5;;
let rotate6 =   (* Functional_equation. *)functional_rotate6;;

let proj_y1 =    (* Functional_equation. *)proj_y1;;
let proj_y2 =       (* Functional_equation. *)functional_proj_y2;;
let proj_y3 =          (* Functional_equation. *)functional_proj_y3;;
let proj_y4 =          (* Functional_equation. *)functional_proj_y4;;
let proj_y5 =          (* Functional_equation. *)functional_proj_y5;;
let proj_y6 =          (* Functional_equation. *)functional_proj_y6;;

let add6 =   (* Functional_equation. *)add6;;
let sub6 =    (* Functional_equation. *)sub6;;
let mul6 =   (* Functional_equation. *)mul6;;
let div6 =    (* Functional_equation. *)div6;;

let mk_126 =    (* Functional_equation. *)mk_126;;
let mk_135 =    (* Functional_equation. *)mk_135;;
let mk_456 =    (* Functional_equation. *)mk_456;;


let gchi = Sphere.gchi;;
let vol_x = (* Functional_equation. *)functional_vol_x;;
let flat_term_x =     REWRITE_RULE[Sphere.flat_term] Sphere.flat_term_x;;

let unit6 =  Nonlin_def.unit6;;
let rad2_x = Sphere.rad2_x;;
let rho_x = Sphere.rho_x;;

let eulerA_x = (* Functional_equation. *)functional_eulerA_x;;
let delta_x4 = Sphere.delta_x4;;

let expand2 = [
Nonlin_def.halfbump_x1;
Nonlin_def.halfbump_x4;
Nonlin_def.halfbump_x;
Sphere.bump;
Nonlin_def.unit6;
Nonlin_def.sqrt_x1;
Nonlin_def.sqrt_x2;
Nonlin_def.sqrt_x3;
Nonlin_def.sqrt_x4;
Nonlin_def.sqrt_x5;
Nonlin_def.sqrt_x6;
Sphere.vol_x;
Sphere.gchi;
];;

atn_gchi1_x;;
let expand = [LET_THM;
	constant6;two6;Nonlin_def.dummy6;Nonlin_def.zero6;uni;compose6;scalar6;Nonlin_def.uni;
	proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;
        Functional_equation.proj_y;
        add6;sub6;mul6;div6;mk_126;mk_135;mk_456;
	gchi;vol_x;flat_term_x;
	unit6;rad2_x;
   dihatn_x;dih2atn_x;dih3atn_x;dih4atn_x;dih5atn_x;dih6atn_x;
   dih_x_dihatn_x;dih2_x_dih2atn_x;dih3_x_dih3atn_x;dih4_x_dih4atn_x;dih5_x_dih5atn_x;dih6_x_dih6atn_x;
	atn_gchi1_x;atn_gchi2_x;atn_gchi3_x;
	atn_gchi4_x;atn_gchi5_x;atn_gchi6_x;
rot_delta_x;
Functional_equation.functional_dih_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih2_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih3_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_dih4_x_div_sqrtdelta_posbranch;
Functional_equation.functional_ldih5_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_ldih6_x_div_sqrtdelta_posbranch; 
Functional_equation.functional_sol_euler_x_divsqrtdelta;
Functional_equation.functional_sol156_euler_x_div_sqrtdelta;
Functional_equation.functional_sol246_euler_x_div_sqrtdelta;
Functional_equation.functional_sol345_euler_x_div_sqrtdelta;
   Functional_equation.functional_norm2hh_x;
Sphere.bump;
Nonlinear_lemma.halfbump_x;
Functional_equation.functional_halfbump_x1;
Functional_equation.functional_halfbump_x4;
Functional_equation.functional_eta2_135;
Functional_equation.functional_eta2_456;
Functional_equation.functional_eta2_126;
Sphere.eta_x;
Functional_equation.promote1_to_6;
Functional_equation.promote3_to_6;
Functional_equation.rotate_rules;
Functional_equation.rotate126;
Functional_equation.functional_vol3_x_sqrt;
Functional_equation.functional_vol3f_x_sqrt2_lmplus;
Functional_equation.functional_vol3f_x_lfun;
Functional_equation.atn_ldih_x;
Functional_equation.atn_ldih2_x;
Functional_equation.atn_ldih3_x;
Functional_equation.atn_ldih6_x;
Functional_equation.nonf_gamma23_full8_x;
Functional_equation.gamma3_x;
Functional_equation.functional_vol_x;
Functional_equation.vol3f_456;
Sphere.sol_x;
proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;
Functional_equation.nonf_gamma2_x1_div_a_v2;
Nonlin_def.gamma2_x_div_azim_v2;
Functional_equation.gamma23_keep135_x;
Functional_equation.gamma3f_x_div_sqrtdelta_alt;
Functional_equation.functional_delta4_squared_x;
Functional_equation.functional_x1_delta_x;
Sphere.lfun_y1;
Functional_equation.functional_asn797k;
Functional_equation.functional_asnFnhk;
Functional_equation.functional_acs_sqrt_x1_d4;
REWRITE_RULE[LET_THM] Functional_equation.functional_arclength_x_123;
Functional_equation.functional_arclength_x1;
Functional_equation.atn_rhazim_x;
Functional_equation.atn_rhazim2_x;
Functional_equation.atn_rhazim3_x;
Functional_equation.functional_taum_x;
Functional_equation.functional_dnum1;
Functional_equation.functional_delta_126_x;
Functional_equation.functional_delta_234_x;
Functional_equation.functional_delta_135_x;
Nonlin_def.flat_term2_135_x;
Nonlin_def.flat_term2_234_x;
Functional_equation.functional_tau_residual;
Nonlin_def.mu6_x;
Functional_equation.taud_x_ALT;
Nonlin_def.taud_D2_num_x;
Nonlin_def.taud_D1_num_x;
Functional_equation.functional_edge2_126_x;
Functional_equation.functional_edge2_135_x;
Functional_equation.functional_edge2_234_x;
Nonlin_def.flat_term2_126_x;
Nonlin_def.flat_term2_135_x;
Nonlin_def.flat_term2_234_x;
Functional_equation.functional_rhazim_x_div_sqrt_delta_posbranch;
Functional_equation.functional_rhazim2_x_div_sqrt_delta_posbranch;
Functional_equation.functional_rhazim3_x_div_sqrt_delta_posbranch;
Nonlin_def.mudLs_234_x;
Nonlin_def.mudLs_126_x;
Nonlin_def.mudLs_135_x;
Functional_equation.functional_mud_135_x;
Functional_equation.functional_mud_126_x;
Functional_equation.functional_mud_234_x;
Nonlin_def.ups_126;
   ];;

Functional_equation.functional_dih_x_div_sqrtdelta_posbranch;;
Functional_equation.functional_sol_euler_x_divsqrtdelta;;
Functional_equation.taud_x_ALT;;
subset;;

(* scratch area *)

let has_subterm sub tm = 
  can (find_term ((=) sub)) tm;; 

help "find_term";;
let has_match pat tm = (can ((term_match []) pat)) tm;;

let has_quad = 
  let a = `quad_cross_diag2_x` in
    filter (has_subterm a o concl o h1) (0--795);;


let has_domain6 = has_subterm `(domain6:(real->real->real->real->real->real->bool)->(real->real->real->real->real->real->real)->(real->real->real->real->real->real->real)->bool)`;;

let expand_nodomain = filter (not o has_domain6 o concl ) expand;;

let expand_nodelta_domain = filter (fun t -> has_domain6 (concl t) && not (has_subterm `delta_x` (concl t) )) expand;;

let exp2 = expand_nodomain @ expand_nodelta_domain;;




filter (has_subterm `delta_x` o concl) expand_domain;;

let uu = hd expand_domain;;

List.length expand_domain;;

let ff i =   (MATCH_MP domain6_ineq2) (List.nth expand_domain i);;
map ff (0--19);;
map ff (20 --25);;
ff 0;;
List.nth expand_domain 23;;
domain6_ineq2;;
Print_types.print_thm_types (List.nth expand_domain 23);;
List.nth expand_domain 0;;


expand;;






st 5 [`num1`];;
["rhazim2_x"; "rhazim3_x"; "rhazim_x"];
   ["rhazim2_x"; "rhazim3_x"; "rhazim_x"]; [];
   ["quad_cross_diag2_x"; "taum_x"];;



Enclosed.quad_cross_diag2_x;;
Enclosed.enclosed;;
st 5 [`lfun_y1`];;
st  5 [`quad_cross_diag2_x`];;
Functional_equation.functional_delta4_squared_x;;
Functional_equation.functional_x1_delta_x;;
Nonlin_def.uni;;
Functional_equation.nonf_gamma2_x1_div_a_v2;;
st 5 [`gamma2_x_div_azim_v2`];;
Sphere.lfun;;
proj_x2;;
st 5 [`vol3f_456`];;
