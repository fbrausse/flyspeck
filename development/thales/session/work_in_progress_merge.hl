
(*  *)

(* ========================================================================== *)
(* COMPLETED LEMMAS  *)
(* ========================================================================== *)

(* ========================================================================== *)
(* WORK IN PROGRESS  *)
(* ========================================================================== *)


module Work_in_progess = struct

open Hales_tactic;;

let CUXVZOZ_concl = 
`!s FF k p v.
  FF = IMAGE (\i. (v i,v (SUC i))) (:num) /\
  is_scs_v39 s /\
  k = scs_k_v39 s /\
  3 < k /\
  MMs_v39 s v /\
  scs_basic_v39 s /\
  scs_generic v /\
  &3 <= dist(v p,v(p+2)) /\
  (!i j. scs_diag k i j /\ ~(psort k (i, j) = psort k (p, (p+2))) ==> scs_a_v39 s i j < dist(v i,v j)) /\
  (!i j. scs_diag k i j ==> &4 * h0 < scs_b_v39 s i j) /\
     interior_angle1 (vec 0) FF (v (p+1)) < pi /\
     pi/ &2 < interior_angle1 (vec 0) FF (v (p+1)) /\
  scs_a_v39 s (p+1) (p+2) = &2 /\
  scs_b_v39 s (p+1) (p+2) = &2 * h0 /\
  &2 <= dist(v p,v (p+1)) /\
  dist(v p, v(p+1)) <= cstab ==>
  dist(v (p+1),v(p+2)) = &2`;;

let VV_SUC_EQ_IVS_RHO_NODE_PRIME = prove_by_refinement(
  `!V E FF s vv u k p1. 
    scs_k_v39 s = k /\
     vv p1 = u /\
     IMAGE vv (:num) = V /\
     IMAGE (\i. {vv i, vv (SUC i)}) (:num) = E /\
     IMAGE (\i. vv i,vv (SUC i)) (:num) = FF /\
     is_scs_v39 s /\
     ~(k <= 3) /\
     BBs_v39 s vv
     ==> (ivs_rho_node1 FF u = vv (p1 + (k-1)))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Appendix.BBs_v39 [`s`;`vv`];
  ASM_REWRITE_TAC[LET_DEF;LET_END_DEF;Terminal.IMAGE_SUBSET_IN;IN_UNIV];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `local_fan (V,E,FF)` (C SUBGOAL_THEN ASSUME_TAC);
    MATCH_MP_TAC Local_lemmas.CVX_LO_IMP_LO;
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `!i. vv i IN V` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    EXPAND_TAC "V";
    REWRITE_TAC[IN_IMAGE;IN_UNIV];
    BY(MESON_TAC[]);
  TYPIFY `ivs_rho_node1 FF u IN V` (C SUBGOAL_THEN ASSUME_TAC);
    MATCH_MP_TAC Local_lemmas1.LOCAL_FAN_IVS_IN_V;
    BY(ASM_MESON_TAC[]);
  TYPIFY `rho_node1 FF (ivs_rho_node1 FF u) = rho_node1 FF (vv (p1 + k - 1))` ENOUGH_TO_SHOW_TAC;
    BY(ASM_MESON_TAC[Polar_fan.RHO_NODE1_INJECTIVE]);
  GMATCH_SIMP_TAC Local_lemmas1.LOCAL_FAN_RHO_NODE_IVS;
  CONJ_TAC;
    BY(ASM_MESON_TAC[]);
  INTRO_TAC (GEN_ALL Qknvmlb.VV_SUC_EQ_RHO_NODE_PRIME) [`V`;`E`;`k`;`s`;`FF`;`vv (p1+(k-1))`;`vv`;`p1 + (k-1)`];
  ASM_REWRITE_TAC[];
  DISCH_THEN (C INTRO_TAC [`1`]);
  REWRITE_TAC[ITER_1];
  DISCH_THEN SUBST1_TAC;
  ASM_SIMP_TAC[arith `~(k <= 3) ==> 1 + p1 + k - 1 = p1 + k`];
  BY(ASM_MESON_TAC[Oxl_def.periodic])
  ]);;
  (* }}} *)

let PQCSXWG1_SYM = prove_by_refinement(
  `!v0 v1 v2 v3 x1 x2 x3 x4 x5 x6.
         &0 < x1 /\
         &0 < x2 /\
         &0 < x3 /\
         &0 < x4 /\
         &0 < x5 /\
         &0 < x6 /\
         ~collinear {v0, v1, v2} /\
         x1 = dist (v1,v0) pow 2 /\
         x2 = dist (v2,v0) pow 2 /\
         x6 = dist (v1,v2) pow 2 /\
         &0 < delta_x x1 x2 x3 x4 x5 x6 /\
         v3 = mk_simplex1 v0 v2 v1 x2 x1 x3 x5 x4 x6
         ==> x3 = dist (v3,v0) pow 2 /\
             x5 = dist (v3,v1) pow 2 /\
             x4 = dist (v3,v2) pow 2 /\
             (v2 - v0) dot ((v1 - v0) cross (v3 - v0)) > &0`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Pqcsxwg.PQCSXWG1 [`v0`;`v2`;`v1`;`v3`;`x2`;`x1`;`x3`;`x5`;`x4`;`x6`];
  ASM_TAC THEN REWRITE_TAC[DIST_SYM] THEN REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM MP_TAC;
  RULE_ASSUM_TAC(ONCE_REWRITE_RULE[EQ_SYM_EQ]);
  ASM_REWRITE_TAC[];
  ANTS_TAC;
    CONJ_TAC;
      FIRST_X_ASSUM_ST `collinear` MP_TAC;
      MATCH_MP_TAC (TAUT `(a = b) ==> (a ==> b)`);
      REPEAT AP_TERM_TAC;
      BY(SET_TAC[]);
    FIRST_X_ASSUM_ST `delta_x` MP_TAC;
    BY(MESON_TAC[Merge_ineq.delta_x_sym]);
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let homog_2x2 = prove_by_refinement(
  `!a b c d x y. ~(a*d - b*c = &0) /\ a * x + b * y = &0 /\ c * x + d * y = &0 ==> (x = &0 /\ y = &0)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `d * (a * x + b * y) - b* (c * x + d*y) = &0 /\  a * (c * x + d *y) - c * (a * x + b* y) = &0` (C SUBGOAL_THEN MP_TAC);
    ASM_REWRITE_TAC[];
    BY(REAL_ARITH_TAC);
  TYPIFY_GOAL_THEN `d * (a * x + b * y) - b * (c * x + d * y) = (a*d-b*c)*x /\  a * (c * x + d *y) - c * (a * x + b* y) = (a*d-b*c)* y` (unlist REWRITE_TAC);
    BY(REAL_ARITH_TAC);
  BY(ASM_REWRITE_TAC[REAL_ENTIRE])
  ]);;
  (* }}} *)

let simplex_unique = prove_by_refinement(
  `!v0 v1 v2 v3 v3'.
    ~collinear {v0,v1,v2} /\
    dist(v0,v3) = dist(v0,v3') /\
    dist(v1,v3) = dist(v1,v3') /\
    dist(v2,v3) = dist(v2,v3') /\
    re_eqvl ((v3 - v0) dot ((v1 - v0) cross (v2 - v0))) ((v3' - v0) dot ((v1 - v0) cross (v2 - v0))) ==>
    (v3 = v3')`,
  (* {{{ proof *)
  [
  GEOM_ORIGIN_TAC `v0:real^3` THEN REPEAT GEN_TAC;
  REWRITE_TAC[VECTOR_SUB_RZERO];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (GEN_ALL Local_lemmas.NOT_COLL_IMP_COPL) [`v1`;`v2`];
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  INTRO_TAC Trigonometry2.NONCOPLANAR_3_BASIS [`v1`;`v2`;`v1 cross v2`;`(vec 0):real^3`;`v3`];
  INTRO_TAC Trigonometry2.NONCOPLANAR_3_BASIS [`v1`;`v2`;`v1 cross v2`;`(vec 0):real^3`;`v3'`];
  ASM_REWRITE_TAC[VECTOR_SUB_RZERO];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `~(v1 cross v2 = vec 0)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_REWRITE_TAC[CROSS_EQ_0]);
  TYPIFY `~((v1 cross v2) dot (v1 cross v2) = &0)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_REWRITE_TAC[DOT_EQ_0]);
  TYPIFY `!a1 a2 a3. (a1 % v1 + a2 % v2 + a3 % (v1 cross v2)) dot (v1 cross v2) = a3 * ((v1 cross v2) dot (v1 cross v2))` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[DOT_LADD;DOT_LMUL;DOT_CROSS_SELF];
    BY(REAL_ARITH_TAC);
  FIRST_X_ASSUM_ST `re_eqvl` MP_TAC;
  ASM_REWRITE_TAC[Trigonometry2.re_eqvl;REAL_ENTIRE;arith `t3' * u = t * t3 * u <=> (t3' - t * t3) * u = &0`;arith `t3' - t *t3 = &0 <=> t3' = t * t3`];
  REPEAT WEAKER_STRIP_TAC;
  PROOF_BY_CONTR_TAC;
  TYPIFY `t1' = t1 /\ t2' = t2` ENOUGH_TO_SHOW_TAC;
    DISCH_TAC;
    ASM_REWRITE_TAC[];
    FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    TYPIFY `norm v3 pow 2 = norm v3' pow 2` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_MESON_TAC[DIST_0]);
    ASM_REWRITE_TAC[];
    REWRITE_TAC[arith `(a:real^3) + b + c = (a + b) + c`];
    TYPED_ABBREV_TAC `a = t1 % v1 + t2 % v2`;
    REPEAT (GMATCH_SIMP_TAC NORM_ADD_PYTHAGOREAN );
    EXPAND_TAC "a";
    REWRITE_TAC[CONJ_ASSOC];
    CONJ_TAC;
      BY(REWRITE_TAC[orthogonal] THEN VEC3_TAC);
    REWRITE_TAC[arith `a +b = a + c <=> b = c`];
    REWRITE_TAC[NORM_MUL;arith `(a * b) pow 2 = a pow 2 * b pow 2`;arith `abs t pow 2 = t pow 2`];
    REWRITE_TAC[NORM_POW_2];
    ONCE_REWRITE_TAC[EQ_SYM_EQ];
    ASM_REWRITE_TAC[REAL_ENTIRE;arith `t3' * u = (t * t3) * u <=> (t3' - t * t3) * u = &0`;arith `t3' - t *t3 = &0 <=> t3' = t * t3`];
    REWRITE_TAC[REAL_ENTIRE;arith `a = b * a <=> (b - &1) * (a) = &0`;arith `a - &1 = &0 <=> a = &1`;ABS_SQUARE_EQ_1;Trigonometry2.POW2_EQ_0];
    GMATCH_SIMP_TAC (arith `&0 < t ==> (abs t = &1 <=> t = &1)`);
    ASM_REWRITE_TAC[];
    DISCH_TAC;
    TYPIFY `t3' = t3` (C SUBGOAL_THEN ASSUME_TAC);
      FIRST_X_ASSUM DISJ_CASES_TAC;
        ASM_REWRITE_TAC[];
        BY(REAL_ARITH_TAC);
      ASM_REWRITE_TAC[];
      BY(REAL_ARITH_TAC);
    BY(ASM_MESON_TAC[]);
  COMMENT "down to t1 and t2";
  TYPED_ABBREV_TAC `x3 = dist(v3,vec 0) pow 2`;
  TYPED_ABBREV_TAC `x5 = dist(v3,v1) pow 2`;
  TYPED_ABBREV_TAC `      x4 = dist(v3,v2) pow 2`;
  TYPIFY `!a1 a2 a3. (let u = a1 % v1 + a2 % v2 + a3 % (v1 cross v2) in (dist(vec 0,v3) = dist(vec 0,u) /\ dist(v1,v3) = dist(v1,u) /\ dist(v2,v3) = dist(v2,u) ==> ((v1 dot v1) * a1 + (v1 dot v2) * a2 = ((v1 dot v1) + x3 - x5) / &2 /\ ((v1 dot v2) * a1 + (v2 dot v2) * a2 = ((v2 dot v2) + x3 - x4) / &2))))` ENOUGH_TO_SHOW_TAC;
    DISCH_TAC;
    FIRST_ASSUM (C INTRO_TAC [`t1`;`t2`;`t3`]);
    FIRST_X_ASSUM (C INTRO_TAC [`t1'`;`t2'`;`t3'`]);
    REWRITE_TAC[LET_DEF;LET_END_DEF];
    ANTS_TAC;
      BY(ASM_MESON_TAC[]);
    DISCH_TAC;
    ANTS_TAC;
      BY(ASM_MESON_TAC[]);
    DISCH_TAC;
    TYPIFY `(v1 dot v1) * (t1-t1') + (v1 dot v2) * (t2-t2') = &0 /\      (v1 dot v2) * (t1-t1') + (v2 dot v2) * (t2-t2') = &0` (C SUBGOAL_THEN ASSUME_TAC);
      BY(REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    ONCE_REWRITE_TAC[arith `a = b <=> b - a = &0`];
    MATCH_MP_TAC homog_2x2;
    GEXISTL_TAC [ `(v1 dot v1)`;`(v1 dot v2)`;`(v1 dot v2)`;`(v2 dot v2)`];
    ASM_REWRITE_TAC[];
    TYPIFY `(v1 dot v1) * (v2 dot v2) - (v1 dot v2) * (v1 dot v2)  = (v1 cross v2) dot (v1 cross v2)` (C SUBGOAL_THEN ASSUME_TAC);
      ONCE_REWRITE_TAC[CROSS_TRIPLE];
      BY(VEC3_TAC);
    BY(ASM_REWRITE_TAC[]);
  REWRITE_TAC[LET_DEF;LET_END_DEF];
  REPEAT WEAKER_STRIP_TAC;
  MAP_EVERY EXPAND_TAC ["x3";"x4";"x5"];
  REPLICATE_TAC 3 (FIRST_X_ASSUM MP_TAC) THEN REWRITE_TAC[DIST_SYM] THEN REPEAT (FIRST_X_ASSUM_ST `%` kill) THEN REPEAT (FIRST_X_ASSUM_ST `dist` kill) THEN REPEAT WEAKER_STRIP_TAC THEN ASM_REWRITE_TAC[];
  ONCE_REWRITE_TAC[DIST_SYM];
  REWRITE_TAC[dist;VECTOR_SUB_RZERO];
  REWRITE_TAC[VECTOR_ARITH `(a + x % b + c) - b:real^N = a + (x - &1) % b + c`; VECTOR_ARITH `(x % a + b +  c) - a:real^N = (x - &1) % a + b +  c`];
  SUBGOAL_THEN `!a b c. norm(a % v1 + b % v2 + c % (v1 cross v2)) pow 2 =            norm(a % v1 + b % v2)  pow 2 + norm(c % (v1 cross v2)) pow 2` (unlist REWRITE_TAC);
    REPEAT GEN_TAC THEN REWRITE_TAC[arith `(a:real^3) + b + c = (a + b) + c`];
    TYPED_ABBREV_TAC `u = a % v1 + b % v2`;
    REPEAT (GMATCH_SIMP_TAC NORM_ADD_PYTHAGOREAN );
    EXPAND_TAC "u";
    BY(REWRITE_TAC[orthogonal] THEN VEC3_TAC);
  REWRITE_TAC[GSYM DOT_SQUARE_NORM;DOT_LADD;DOT_RADD;DOT_LMUL;DOT_RMUL];
  REWRITE_TAC[DOT_SYM];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let re_eqvl_pos_pos = prove_by_refinement(
  `!a b. &0 < a /\ &0 < b ==> re_eqvl a b`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Trigonometry2.re_eqvl];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `a/b` EXISTS_TAC;
  GMATCH_SIMP_TAC REAL_LT_DIV;
  ASM_REWRITE_TAC[];
  Calc_derivative.CALC_ID_TAC;
  BY(ASM_TAC THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let mk_simplex_uniq = prove_by_refinement(
  `!v0 v1 v2 v3.
    ~coplanar {v0,v1,v2,v3} /\
    (v1 - v0) dot ((v2 - v0) cross (v3 - v0)) > &0 ==>
    mk_simplex1 v0 v1 v2 (dist(v0,v1) pow 2) (dist(v0,v2) pow 2) (dist(v0,v3) pow 2)
    (dist(v2,v3) pow 2) (dist (v1,v3) pow 2) (dist (v1,v2) pow 2) = v3`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC simplex_unique;
  GEXISTL_TAC [`v0`;`v1`;`v2`];
  TYPED_ABBREV_TAC `v3' = mk_simplex1 v0 v1 v2 (dist(v0,v1) pow 2) (dist(v0,v2) pow 2) (dist(v0,v3) pow 2)     (dist(v2,v3) pow 2) (dist (v1,v3) pow 2) (dist (v1,v2) pow 2)`;
  INTRO_TAC Pqcsxwg.PQCSXWG1 [`v0`;`v1`;`v2`;`v3'`;`(dist(v0,v1) pow 2)`;`(dist(v0,v2) pow 2)`;`(dist(v0,v3) pow 2)`;`(dist(v2,v3) pow 2) `;`(dist (v1,v3) pow 2)`;` (dist (v1,v2) pow 2)`];
  ASM_REWRITE_TAC[DIST_SYM];
  REWRITE_TAC[GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
  REWRITE_TAC[DIST_EQ_0];
  TYPIFY `~collinear {v0,v1,v2}` (C SUBGOAL_THEN ASSUME_TAC);
    MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR;
    BY(ASM_MESON_TAC[]);
  TYPIFY_GOAL_THEN `~(v0 = v1) /\  ~(v0 = v2) /\  ~(v0 = v3) /\  ~(v2 = v3) /\  ~(v1 = v3) /\  ~(v1 = v2)` (unlist REWRITE_TAC);
    BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
  ASM_REWRITE_TAC[];
  ANTS_TAC;
    REWRITE_TAC[GSYM Sphere.delta_y;arith `x pow 2 = x*x`];
    BY(ASM_MESON_TAC[Oxlzlez.coplanar_delta_y]);
  REPEAT (GMATCH_SIMP_TAC (GSYM Collect_geom.EQ_POW2_COND));
  REWRITE_TAC[DIST_POS_LE];
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[];
  MATCH_MP_TAC re_eqvl_pos_pos;
  REPEAT (FIRST_X_ASSUM_ST `cross` MP_TAC);
  MATCH_MP_TAC (arith `a = b /\ c = d ==> (a > &0 ==> c > &0 ==> &0 < d /\ &0 < b)`);
  BY(VEC3_TAC)
  ]);;
  (* }}} *)

let continuous_nbd_pos = prove_by_refinement(
  `!f t. f real_continuous atreal t /\ &0 < f t ==>
    (?e. &0 < e /\ (!t'. abs (t' - t) < e ==> &0 < f t'))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[real_continuous_atreal];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM (C INTRO_TAC [`f t`]);
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `d` EXISTS_TAC;
  ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM (C INTRO_TAC [`t'`]);
  ASM_REWRITE_TAC[];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let epsilon_pair = prove_by_refinement(
  `!e e'. &0 < e /\ &0 < e' ==> (?e''. &0 < e'' /\ (!t. abs t < e'' ==> abs t < e) /\ (!t. abs t < e'' ==> abs t < e'))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `if e <= e' then e else e'` EXISTS_TAC;
  CONJ_TAC;
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  BY(CONJ_TAC THEN REPEAT WEAKER_STRIP_TAC THEN ASM_TAC THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let deform_simplex_decrease_edge23 = prove_by_refinement(
  `!V g01 g12 v0 v1 v2 e.
    (
      let f = (\ w t. if w = v1 then 
		 mk_simplex1 (vec 0) v2 v0 (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)
		   ((dist(v0,v1)+g01 t) pow 2)  ((dist(v2,v1) + g12 t) pow 2) (dist(v0,v2) pow 2) else w) in 
       (~coplanar {vec 0,v0,v1,v2} /\ v1 dot (v2 cross v0) > &0 /\ &0 < e /\
	  g01 real_continuous_on (real_interval (--e,e)) /\
	  g12 real_continuous_on (real_interval (--e,e)) /\
	  g01 (&0) = &0 /\ g12 (&0) = &0
	==> 
	  (?e'. &0 < e' /\ deformation f V  (-- e', e') /\
	     (!v t. ~(v = v1) ==> f v t = v) /\
	     (!t. abs t < e' ==> 
		dist(v0,f v1 t) = dist(v0,v1) + g01 t /\
		dist(v2,f v1 t) = dist(v2,v1) + g12 t /\
		norm(f v1 t) = norm(v1)))))`,
  (* {{{ proof *)
  [
  REPEAT GEN_TAC;
  REPEAT LET_TAC;
  REWRITE_TAC[Localization.deformation];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `{vec 0,v2,v0,v1} = { vec 0,v0,v1,v2} /\ {vec 0, v0, v2, v1} = {vec 0,v0,v1,v2}` (C SUBGOAL_THEN ASSUME_TAC);
    BY(SET_TAC[]);
  COMMENT "easy continuity";
  TYPIFY `&0 IN real_interval( --e,e)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[IN_REAL_INTERVAL];
    BY(ASM_SIMP_TAC[arith `&0 < e ==> --e < &0`]);
  TYPIFY `g01 real_continuous atreal (&0) /\ g12 real_continuous atreal (&0)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_MESON_TAC[REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT;Ocbicby.REAL_OPEN_REAL_INTERVAL]);
  TYPIFY `(\t.  delta_x (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)		   ((dist(v0,v1)+g01 t) pow 2)  ((dist(v2,v1) + g12 t) pow 2) (dist(v0,v2) pow 2)) real_continuous atreal (&0)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[Sphere.delta_x];
    BY(REPEAT (ASM_REWRITE_TAC[REAL_CONTINUOUS_CONST] THEN REPEAT CONJ_TAC THEN (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_POW ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB)));
  TYPIFY `&0 < delta_x (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)           ((dist (v0,v1)) pow 2)           ((dist (v2,v1)) pow 2)           (dist (v0,v2) pow 2)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[GSYM Sphere.delta_y;arith `x pow 2 = x*x`;GSYM DIST_0];
    FIRST_X_ASSUM_ST `coplanar` MP_TAC;
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,d,b,c}`];
    REWRITE_TAC[ Oxlzlez.coplanar_delta_y];
    BY(REWRITE_TAC[DIST_SYM]);
  TYPIFY `?e1. &0 < e1 /\ (!t. abs t < e1 ==> &0 < delta_x (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)		   ((dist(v0,v1)+g01 t) pow 2)  ((dist(v2,v1) + g12 t) pow 2) (dist(v0,v2) pow 2))` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM_ST `real_continuous` MP_TAC;
    REWRITE_TAC[real_continuous_atreal];
    DISCH_THEN (C INTRO_TAC [`delta_x (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)           ((dist (v0,v1)) pow 2)           ((dist (v2,v1)) pow 2)           (dist (v0,v2) pow 2)`]);
    ASM_REWRITE_TAC[arith `abs(x - &0) = abs x`];
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `d` EXISTS_TAC;
    ASM_REWRITE_TAC[];
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`t`]);
    ASM_REWRITE_TAC[arith `x + &0 = x`];
    BY(REPLICATE_TAC 3 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  FIRST_X_ASSUM MP_TAC THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `?e2. &0 < e2 /\ (!t. abs t < e2 ==> &0 < (dist (v0,v1) + g01 t)  /\ &0 <       ((dist (v2,v1) + g12 t) ))` (C SUBGOAL_THEN ASSUME_TAC);
    TYPIFY `(\t. (dist (v0,v1) + g01 t) ) real_continuous atreal (&0) /\ (\t. ((dist (v2,v1) + g12 t) )) real_continuous atreal (&0)` ENOUGH_TO_SHOW_TAC;
      REPEAT WEAKER_STRIP_TAC;
      INTRO_TAC continuous_nbd_pos [`(\t. (dist (v0,v1) + g01 t) )`;`&0`];
      INTRO_TAC continuous_nbd_pos [`(\t. (dist (v2,v1) + g12 t) )`;`&0`];
      ASM_REWRITE_TAC[];
      REWRITE_TAC[arith `x + &0 = x`];
      REWRITE_TAC[DIST_POS_LT];
      REWRITE_TAC[GSYM DIST_POS_LT];
      REWRITE_TAC[GSYM DIST_NZ];
      TYPIFY_GOAL_THEN `~(v2 = v1) /\ ~(v0 = v1)` (unlist REWRITE_TAC);
        BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
      REWRITE_TAC[arith `abs (t' - &0) = abs t'`];
      REPEAT WEAKER_STRIP_TAC;
      INTRO_TAC epsilon_pair [`e'`;`e''`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
      TYPIFY `e'''` EXISTS_TAC;
      BY(ASM_MESON_TAC[]);
    BY(CONJ_TAC THEN REPEAT (ASM_REWRITE_TAC[REAL_CONTINUOUS_CONST] THEN REPEAT CONJ_TAC THEN (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_POW ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB)));
  FIRST_X_ASSUM MP_TAC THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY ` (!t. abs t < e2 ==> &0 < (dist (v0,v1) + g01 t) pow 2  /\ &0 <       ((dist (v2,v1) + g12 t) pow 2 ))` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    REWRITE_TAC[GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
    BY(ASM_SIMP_TAC[arith `&0 < x ==> ~(x = &0)`]);
  INTRO_TAC epsilon_pair [`e1`;`e2`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  COMMENT "distances";
  TYPIFY `!t. abs t < e'' ==> norm v1 pow 2 = dist (f v1 t,vec 0) pow 2 /\      (dist (v0,v1) + g01 t) pow 2 = dist (f v1 t,v0) pow 2 /\      (dist (v2,v1) + g12 t) pow 2 = dist (f v1 t,v2) pow 2 /\      v2 dot (v0 cross f v1 t) > &0` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    INTRO_TAC PQCSXWG1_SYM [`(vec 0):real^3`;` v0 `;`v2`;`f v1 t`;` (norm v0 pow 2)`;` (norm v2 pow 2)`;`(norm v1 pow 2)`;`                ((dist (v2,v1) + g12 t) pow 2)`;`                ((dist (v0,v1) + g01 t) pow 2)`;`                (dist (v0,v2) pow 2)`];
    REWRITE_TAC[VECTOR_SUB_RZERO];
    DISCH_THEN MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    REWRITE_TAC[CONJ_ASSOC] THEN CONJ2_TAC;
      EXPAND_TAC "f";
      BY(REWRITE_TAC[]);
    CONJ2_TAC;
      FIRST_X_ASSUM_ST `delta_x` (C INTRO_TAC [`t`]);
      ASM_SIMP_TAC[];
      BY(MESON_TAC[Merge_ineq.delta_x_sym]);
    REWRITE_TAC[DIST_0];
    REWRITE_TAC[GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
    REWRITE_TAC[GSYM DIST_0];
    REWRITE_TAC[DIST_EQ_0];
    CONJ_TAC;
      BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
    MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR;
    TYPIFY `v1` EXISTS_TAC;
    BY(ASM_REWRITE_TAC[]);
  COMMENT "continuity";
  INTRO_TAC epsilon_pair [`e`;`e''`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `!t. abs t < e''' /\ ~coplanar{vec 0,v0,f v1 t,v2} ==> f v1 continuous atreal t` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `g01 real_continuous atreal t /\ g12 real_continuous atreal t` (C SUBGOAL_THEN ASSUME_TAC);
      REPEAT (FIRST_X_ASSUM_ST `real_continuous_on` MP_TAC);
      REPEAT (GMATCH_SIMP_TAC REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT);
      REWRITE_TAC[ Ocbicby.REAL_OPEN_REAL_INTERVAL;IN_REAL_INTERVAL;arith `-- e < t /\ t < e <=> abs t < e`];
      BY(ASM_MESON_TAC[]);
    INTRO_TAC Pqcsxwg.PQCSXWG2_ATREAL [`(\ (t:real). (vec 0):real^3)`;`\ (t:real). v2`;`\ (t:real). v0`;`\ (t:real). (norm v2 pow 2)`;`\ (t:real). (norm v0 pow 2)`;`\ (t:real).      (norm v1 pow 2)`;`\ (t:real).       ((dist (v0,v1)+ g01 t) pow 2)`;`\ (t:real).       ((dist (v2,v1)+ g12 t) pow 2)`;`\ (t:real).      (dist (v0,v2) pow 2)`;`t`];
    REWRITE_TAC[CONTINUOUS_CONST;REAL_CONTINUOUS_CONST];
    EXPAND_TAC "f";
    REWRITE_TAC[];
    DISCH_THEN MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    REWRITE_TAC[DIST_0;DIST_SYM];
    CONJ_TAC;
      MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR;
      TYPIFY `v1` EXISTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    BY((CONJ_TAC THEN REPEAT (ASM_REWRITE_TAC[REAL_CONTINUOUS_CONST] THEN REPEAT CONJ_TAC THEN (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_POW ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB))));
  COMMENT "coplanarity";
  TYPIFY `f v1 (&0) = v1` (C SUBGOAL_THEN ASSUME_TAC);
    EXPAND_TAC "f";
    ASM_REWRITE_TAC[arith `x + &0 = x`];
    INTRO_TAC mk_simplex_uniq [`(vec 0):real^3`;`v2`;`v0`;`v1`];
    REWRITE_TAC[GSYM DIST_0;DIST_SYM];
    DISCH_THEN MATCH_MP_TAC;
    REWRITE_TAC[VECTOR_SUB_RZERO];
    ASM_REWRITE_TAC[];
    FIRST_X_ASSUM_ST `cross` kill;
    FIRST_X_ASSUM_ST `cross` MP_TAC;
    MATCH_MP_TAC (arith `a = b ==> a > &0 ==> b > &0`);
    BY(VEC3_TAC);
  TYPIFY `f v1 continuous atreal (&0)` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[arith `abs(&0) = &0`]);
  INTRO_TAC NONPLANAR_OPEN [`\ (t:real). (vec 0):real^3`;`\ (t:real). v0`;`\ (t:real). v2`;`f v1`;`&0`];
  ASM_REWRITE_TAC[CONTINUOUS_CONST;arith `abs(&0 - t)= abs t`];
  REPEAT WEAKER_STRIP_TAC;
  COMMENT "final kill";
  INTRO_TAC epsilon_pair [`e'''`;`e'`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `e''''` EXISTS_TAC;
  ASM_REWRITE_TAC[IN_REAL_INTERVAL;arith `-- e < t /\ t < e <=> abs t < e`;arith `abs(&0) = &0`;GSYM CONJ_ASSOC];
  REWRITE_TAC[CONJ_ASSOC] THEN CONJ2_TAC;
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM_ST `cross` (C INTRO_TAC [`t`]);
    ANTS_TAC;
      BY(ASM_SIMP_TAC[]);
    REPEAT (GMATCH_SIMP_TAC (GSYM Collect_geom.EQ_POW2_COND));
    REWRITE_TAC[DIST_POS_LE];
    REWRITE_TAC[NORM_POS_LE];
    CONJ_TAC;
      BY(ASM_MESON_TAC[arith `&0 < x ==> &0 <= x`]);
    CONJ_TAC;
      BY(ASM_MESON_TAC[arith `&0 < x ==> &0 <= x`]);
    DISCH_THEN (unlist REWRITE_TAC);
    BY(MESON_TAC[DIST_SYM;DIST_0]);
  SUBCONJ2_TAC;
    REPEAT WEAKER_STRIP_TAC;
    EXPAND_TAC "f";
    BY(ASM_REWRITE_TAC[]);
  DISCH_TAC;
  CONJ2_TAC;
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `v = v1` ASM_CASES_TAC;
      BY(ASM_REWRITE_TAC[]);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `v = v1` ASM_CASES_TAC;
    ASM_REWRITE_TAC[];
    FIRST_X_ASSUM MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`];
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_SIMP_TAC[]);
  TYPIFY `f v = (\t. v)` (C SUBGOAL_THEN SUBST1_TAC);
    REWRITE_TAC[FUN_EQ_THM];
    GEN_TAC;
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[]);
  BY(REWRITE_TAC[CONTINUOUS_CONST])
  ]);;
  (* }}} *)

let deform_simplex_edge_exists  = prove_by_refinement(
  `!V g01 g12 v0 v1 v2 e. ?f.
       (~coplanar {vec 0,v0,v1,v2} /\ v1 dot (v2 cross v0) > &0 /\ &0 < e /\
	  g01 real_continuous_on (real_interval (--e,e)) /\
	  g12 real_continuous_on (real_interval (--e,e)) /\
	  g01 (&0) = &0 /\ g12 (&0) = &0
	==> 
	  (?e'. &0 < e' /\ deformation f V  (-- e', e') /\
	     (!v t. ~(v = v1) ==> f v t = v) /\
	     (!t. abs t < e' ==> 
		dist(v0,f v1 t) = dist(v0,v1) + g01 t /\
		dist(v2,f v1 t) = dist(v2,v1) + g12 t /\
		norm(f v1 t) = norm(v1))))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPED_ABBREV_TAC `f = (\w t.                  if w = v1                  then mk_simplex1 (vec 0) v2 v0 (norm v2 pow 2)                       (norm v0 pow 2)                       (norm v1 pow 2)                       ((dist (v0,v1) + g01 t) pow 2)                       ((dist (v2,v1) + g12 t) pow 2)                       (dist (v0,v2) pow 2)                  else w)`;
  TYPIFY `f` EXISTS_TAC;
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC deform_simplex_decrease_edge23 [`V`;`g01`;`g12`;`v0`;`v1`;`v2`;`e`];
  ASM_REWRITE_TAC[];
  BY(REWRITE_TAC[LET_DEF;LET_END_DEF])
  ]);;
  (* }}} *)

let deform_simplex_684_pent = prove_by_refinement(
  `!V g23 v0 v1 v2 v3 e.
    (
      let f1 = (\ w t. if w = v2 then 
		 mk_simplex1 (vec 0) v3 v0 (norm v3 pow 2) (norm v0 pow 2) (norm v2 pow 2)
		   ((dist(v0,v2)) pow 2)  ((dist(v3,v2) + g23 t) pow 2) (dist(v0,v3) pow 2) else w) in 
      let f = (\ w t. if w = v2 then f1 v2 t
	       else if w = v1 then
		 mk_simplex1 (vec 0) (f1 v2 t) v0 (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)
		   ((dist(v0,v1)) pow 2)  ((dist(v2,v1)) pow 2) (dist(v0,v2) pow 2) else w) in 
       (~coplanar {vec 0,v0,v2,v3} /\ ~coplanar {vec 0,v0,v1,v2} /\
	  v2 dot (v3 cross v0) > &0 /\ 
	  v1 dot (v2 cross v0) > &0 /\ &0 < e /\
	  g23 real_continuous_on (real_interval (--e,e)) /\
	  g23 (&0) = &0 
	==> 
	  (?e'. &0 < e' /\ deformation f V  (-- e', e') /\
	     (!v t. ~(v = v1) /\ ~(v = v2) ==> f v t = v) /\
	     (!t. abs t < e' ==> 
		dist(v0,f v1 t) = dist(v0,v1) /\
		dist(f v2 t,f v1 t) = dist(v2,v1) /\
		norm(f v1 t) = norm(v1) /\
		  dist (f v2 t,v0) = dist(v2,v0) /\
		  dist (f v2 t,v3) = dist(v2,v3)+ g23 t /\
		  norm(f v2 t) = norm (v2)
	     ))))`,
  (* {{{ proof *)
  [

  REPEAT GEN_TAC;
  REPEAT LET_TAC;
  REWRITE_TAC[Localization.deformation];
  REPEAT WEAKER_STRIP_TAC;
  comment "preliminaries"
  TYPIFY `{vec 0,v3,v0,v2} = { vec 0,v0,v2,v3} /\ {vec 0, v0, v3, v2} = {vec 0,v0,v2,v3}` (C SUBGOAL_THEN ASSUME_TAC);
    BY(SET_TAC[]);
  COMMENT "easy continuity";
  TYPIFY `&0 IN real_interval( --e,e)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[IN_REAL_INTERVAL];
    BY(ASM_SIMP_TAC[arith `&0 < e ==> --e < &0`]);
  TYPIFY `g23 real_continuous atreal (&0)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_MESON_TAC[REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT;Ocbicby.REAL_OPEN_REAL_INTERVAL]);
  TYPIFY `(\t.  delta_x (norm v3 pow 2) (norm v0 pow 2) (norm v2 pow 2)		   ((dist(v0,v2)) pow 2)  ((dist(v3,v2) + g23 t) pow 2) (dist(v0,v3) pow 2)) real_continuous atreal (&0)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[Sphere.delta_x];
    BY(REPEAT (ASM_REWRITE_TAC[REAL_CONTINUOUS_CONST] THEN REPEAT CONJ_TAC THEN (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_POW ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB)));
  TYPIFY `&0 < delta_x (norm v3 pow 2) (norm v0 pow 2) (norm v2 pow 2)           ((dist (v0,v2)) pow 2)           ((dist (v3,v2)) pow 2)           (dist (v0,v3) pow 2)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[GSYM Sphere.delta_y;arith `x pow 2 = x*x`;GSYM DIST_0];
    fxast `coplanar` kill
    FIRST_X_ASSUM_ST `coplanar` MP_TAC;
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,d,b,c}`];
    REWRITE_TAC[ Oxlzlez.coplanar_delta_y];
    BY(REWRITE_TAC[DIST_SYM]);
  TYPIFY `&0 < delta_x (norm v2 pow 2) (norm v0 pow 2) (norm v1 pow 2)           ((dist (v0,v1)) pow 2)           ((dist (v2,v1)) pow 2)           (dist (v0,v2) pow 2)` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[GSYM Sphere.delta_y;arith `x pow 2 = x*x`;GSYM DIST_0];
    FIRST_X_ASSUM_ST `coplanar` MP_TAC;
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,d,b,c}`];
    REWRITE_TAC[ Oxlzlez.coplanar_delta_y];
    BY(REWRITE_TAC[DIST_SYM]);

  TYPIFY `?e1. &0 < e1 /\ (!t. abs t < e1 ==> &0 < delta_x (norm v3 pow 2) (norm v0 pow 2) (norm v2 pow 2)		   ((dist(v0,v2)) pow 2)  ((dist(v3,v2) + g23 t) pow 2) (dist(v0,v3) pow 2))` (C SUBGOAL_THEN ASSUME_TAC);
intro continuous_nbd_pos [`(\t. delta_x (norm v3 pow 2) (norm v0 pow 2) (norm v2 pow 2)           (dist (v0,v2) pow 2)           ((dist (v3,v2) + g23 t) pow 2)           (dist (v0,v3) pow 2))`;`&0`]
art[arith `x + &0 = x`;arith `abs (t' - &0) = abs t'`]
fxa mp then st/r
  TYPIFY `?e2. &0 < e2 /\  (!t. abs t < e2 ==> &0 < dist (v3,v2) + g23 t)` (C SUBGOAL_THEN ASSUME_TAC);
    TYPIFY `(\t. (dist (v3,v2) + g23 t) ) real_continuous atreal (&0)` ENOUGH_TO_SHOW_TAC;
      REPEAT WEAKER_STRIP_TAC;
      INTRO_TAC continuous_nbd_pos [`(\t. (dist (v3,v2) + g23 t) )`;`&0`];
      ASM_REWRITE_TAC[arith `x + &0 = x`;GSYM DIST_NZ;arith `abs (t' - &0) = abs t'`];
      TYPIFY_GOAL_THEN `~(v3 = v2)` (unlist REWRITE_TAC);
        BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
    BY(REPEAT (ASM_REWRITE_TAC[REAL_CONTINUOUS_CONST] THEN REPEAT CONJ_TAC THEN (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_POW ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB)));
  FIRST_X_ASSUM MP_TAC THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `!t. abs t < e2 ==> &0 < (dist (v3,v2) + g23 t) pow 2` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    REWRITE_TAC[GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
    BY(ASM_SIMP_TAC[arith `&0 < x ==> ~(x = &0)`]);
  INTRO_TAC epsilon_pair [`e1`;`e2`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  COMMENT "distances on 023 triangle";
  TYPIFY `!t. abs t < e'' ==> norm v2 pow 2 = dist (f v2 t,vec 0) pow 2 /\      (dist (v0,v2)) pow 2 = dist (f v2 t,v0) pow 2 /\      (dist (v3,v2) + g23 t) pow 2 = dist (f v2 t,v3) pow 2 /\      v3  dot (v0 cross f v2 t) > &0` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    INTRO_TAC PQCSXWG1_SYM [`(vec 0):real^3`;` v0 `;`v3`;`f v2 t`;` (norm v0 pow 2)`;` (norm v3 pow 2)`;`(norm v2 pow 2)`;`                ((dist (v3,v2) + g23 t) pow 2)`;`                ((dist (v0,v2) ) pow 2)`;`                (dist (v0,v3) pow 2)`];
    REWRITE_TAC[VECTOR_SUB_RZERO];
    DISCH_THEN MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    REWRITE_TAC[CONJ_ASSOC] THEN CONJ2_TAC;
      EXPAND_TAC "f";
      (REWRITE_TAC[]);
      expand "f1"
	rt[]
    CONJ2_TAC;
      FIRST_X_ASSUM_ST `delta_x` (C INTRO_TAC [`t`]);
      ASM_SIMP_TAC[];
      BY(MESON_TAC[Merge_ineq.delta_x_sym]);
    REWRITE_TAC[DIST_0];
    REWRITE_TAC[GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
    REWRITE_TAC[GSYM DIST_0];
    REWRITE_TAC[DIST_EQ_0];
    CONJ_TAC;
      BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
    MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR;
    TYPIFY `v2` EXISTS_TAC;
    BY(ASM_REWRITE_TAC[]);

  COMMENT "distances on 012 triangle";


typ `f v2 = f1 v2` sat
expand "f"
rt[FUN_EQ_THM]
  TYPIFY `!t. abs t < e'' ==>  norm v1 pow 2 = dist (f v1 t,vec 0) pow 2 /\      dist (v0,v1) pow 2 = dist (f v1 t,v0) pow 2 /\      dist (v2,v1) pow 2 = dist (f v1 t,f v2 t) pow 2 /\      f v2 t dot (v0 cross f v1 t) > &0` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    INTRO_TAC PQCSXWG1_SYM [`(vec 0):real^3`;` v0 `;`f v2 t`;`f v1 t`;` (norm v0 pow 2)`;` (norm v2 pow 2)`;`(norm v1 pow 2)`;`                ((dist (v2,v1)) pow 2)`;`                ((dist (v0,v1) ) pow 2)`;`                (dist (v0,v2) pow 2)`];
    REWRITE_TAC[VECTOR_SUB_RZERO];
    DISCH_THEN MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    REWRITE_TAC[CONJ_ASSOC] THEN CONJ2_TAC;
      EXPAND_TAC "f";
      (REWRITE_TAC[]);
gtyp `~(v1 = v2)` (unlist rt)
      BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
asimp[]
conj2
typ `(dist (f1 v2 t,vec 0) pow 2) = norm v2 pow 2 /\ dist (f1 v2 t,v0) pow 2 = dist(v2,v0) pow 2` ets
dthen (unlist rt)
fxast `delta_x` kill
fxast `delta_x` mp
mmp (arith `(a = b) ==> &0 < a ==> &0 < b`)

xxd to here.
   BY(MESON_TAC[Merge_ineq.delta_x_sym]);
xxd

      FIRST_X_ASSUM_ST `delta_x` (C INTRO_TAC [`t`]);
      ASM_SIMP_TAC[];
      BY(MESON_TAC[Merge_ineq.delta_x_sym]);
    REWRITE_TAC[DIST_0];
    REWRITE_TAC[GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
    REWRITE_TAC[GSYM DIST_0];
    REWRITE_TAC[DIST_EQ_0];
    CONJ_TAC;
      BY(ASM_MESON_TAC[Planarity.notcoplanar_disjoint]);
    MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR;
    TYPIFY `v2` EXISTS_TAC;
    BY(ASM_REWRITE_TAC[]);


xxd
  COMMENT "continuity";
  INTRO_TAC epsilon_pair [`e`;`e''`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `!t. abs t < e''' /\ ~coplanar{vec 0,v0,f v1 t,v2} ==> f v1 continuous atreal t` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `g01 real_continuous atreal t /\ g12 real_continuous atreal t` (C SUBGOAL_THEN ASSUME_TAC);
      REPEAT (FIRST_X_ASSUM_ST `real_continuous_on` MP_TAC);
      REPEAT (GMATCH_SIMP_TAC REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT);
      REWRITE_TAC[ Ocbicby.REAL_OPEN_REAL_INTERVAL;IN_REAL_INTERVAL;arith `-- e < t /\ t < e <=> abs t < e`];
      BY(ASM_MESON_TAC[]);
    INTRO_TAC Pqcsxwg.PQCSXWG2_ATREAL [`(\ (t:real). (vec 0):real^3)`;`\ (t:real). v2`;`\ (t:real). v0`;`\ (t:real). (norm v2 pow 2)`;`\ (t:real). (norm v0 pow 2)`;`\ (t:real).      (norm v1 pow 2)`;`\ (t:real).       ((dist (v0,v1)+ g01 t) pow 2)`;`\ (t:real).       ((dist (v2,v1)+ g12 t) pow 2)`;`\ (t:real).      (dist (v0,v2) pow 2)`;`t`];
    REWRITE_TAC[CONTINUOUS_CONST;REAL_CONTINUOUS_CONST];
    EXPAND_TAC "f";
    REWRITE_TAC[];
    DISCH_THEN MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    REWRITE_TAC[DIST_0;DIST_SYM];
    CONJ_TAC;
      MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR;
      TYPIFY `v1` EXISTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    BY((CONJ_TAC THEN REPEAT (ASM_REWRITE_TAC[REAL_CONTINUOUS_CONST] THEN REPEAT CONJ_TAC THEN (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_POW ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB))));
  COMMENT "coplanarity";
  TYPIFY `f v1 (&0) = v1` (C SUBGOAL_THEN ASSUME_TAC);
    EXPAND_TAC "f";
    ASM_REWRITE_TAC[arith `x + &0 = x`];
    INTRO_TAC mk_simplex_uniq [`(vec 0):real^3`;`v2`;`v0`;`v1`];
    REWRITE_TAC[GSYM DIST_0;DIST_SYM];
    DISCH_THEN MATCH_MP_TAC;
    REWRITE_TAC[VECTOR_SUB_RZERO];
    ASM_REWRITE_TAC[];
    FIRST_X_ASSUM_ST `cross` kill;
    FIRST_X_ASSUM_ST `cross` MP_TAC;
    MATCH_MP_TAC (arith `a = b ==> a > &0 ==> b > &0`);
    BY(VEC3_TAC);
  TYPIFY `f v1 continuous atreal (&0)` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[arith `abs(&0) = &0`]);
  INTRO_TAC NONPLANAR_OPEN [`\ (t:real). (vec 0):real^3`;`\ (t:real). v0`;`\ (t:real). v2`;`f v1`;`&0`];
  ASM_REWRITE_TAC[CONTINUOUS_CONST;arith `abs(&0 - t)= abs t`];
  REPEAT WEAKER_STRIP_TAC;
  COMMENT "final kill";
  INTRO_TAC epsilon_pair [`e'''`;`e'`] THEN ASM_REWRITE_TAC[] THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `e''''` EXISTS_TAC;
  ASM_REWRITE_TAC[IN_REAL_INTERVAL;arith `-- e < t /\ t < e <=> abs t < e`;arith `abs(&0) = &0`;GSYM CONJ_ASSOC];
  REWRITE_TAC[CONJ_ASSOC] THEN CONJ2_TAC;
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM_ST `cross` (C INTRO_TAC [`t`]);
    ANTS_TAC;
      BY(ASM_SIMP_TAC[]);
    REPEAT (GMATCH_SIMP_TAC (GSYM Collect_geom.EQ_POW2_COND));
    REWRITE_TAC[DIST_POS_LE];
    REWRITE_TAC[NORM_POS_LE];
    CONJ_TAC;
      BY(ASM_MESON_TAC[arith `&0 < x ==> &0 <= x`]);
    CONJ_TAC;
      BY(ASM_MESON_TAC[arith `&0 < x ==> &0 <= x`]);
    DISCH_THEN (unlist REWRITE_TAC);
    BY(MESON_TAC[DIST_SYM;DIST_0]);
  SUBCONJ2_TAC;
    REPEAT WEAKER_STRIP_TAC;
    EXPAND_TAC "f";
    BY(ASM_REWRITE_TAC[]);
  DISCH_TAC;
  CONJ2_TAC;
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `v = v1` ASM_CASES_TAC;
      BY(ASM_REWRITE_TAC[]);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `v = v1` ASM_CASES_TAC;
    ASM_REWRITE_TAC[];
    FIRST_X_ASSUM MATCH_MP_TAC;
    ASM_SIMP_TAC[];
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`];
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_SIMP_TAC[]);
  TYPIFY `f v = (\t. v)` (C SUBGOAL_THEN SUBST1_TAC);
    REWRITE_TAC[FUN_EQ_THM];
    GEN_TAC;
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[]);
  BY(REWRITE_TAC[CONTINUOUS_CONST])
  ]);;
  (* }}} *)




let general_482_deformation = prove_by_refinement(
`main_nonlinear_terminal_v11 ==> 
  (!s FF k p0 p1 p2 v.
  {v p0,v p2} = {v (p1+1),v (p1 + (k-1))} /\
  FF = IMAGE (\i. (v i,v (SUC i))) (:num) /\
  is_scs_v39 s /\
  k = scs_k_v39 s /\
  3 < k /\
  MMs_v39 s v /\
  scs_basic_v39 s /\
  scs_generic v /\
  &3 <= dist(v p0,v p2) /\
  (!i j. scs_diag k i j /\ ~(psort k (i, j) = psort k (p0,p2)) ==> scs_a_v39 s i j < dist(v i,v j)) /\
  (!i j. scs_diag k i j ==> &4 * h0 < scs_b_v39 s i j) /\
     interior_angle1 (vec 0) FF (v p1) < pi /\
  (pi/ &2 < interior_angle1 (vec 0) FF (v p1) \/ interior_angle1 (vec 0) FF (v p2) < pi) /\
  scs_a_v39 s p1 p2 = &2 /\
  scs_b_v39 s p1 p2 = &2 * h0 /\
  &2 <= dist(v p0,v p1) /\
  dist(v p0, v p1) <= cstab ==>
  dist(v p1,v p2) = &2)`,
  (* {{{ proof *)
  [
comment "preliminaries"
st/r
typ `~(k<=3)` sat
mmp (arith `3 < k ==> ~(k <= 3)`)
art[]
rule (orr[EQ_SYM_EQ])
fxast `&2 = x` (assume o (orr[EQ_SYM_EQ]))
fxast `&2 *h0 = x` (assume o (orr[EQ_SYM_EQ]))
typ `unadorned_v39 s` sat
amt[Appendix.scs_basic]
typ `BBprime2_v39 s v` sat
amt[Appendix.scs_basic;Ayqjtmd.unadorned_MMs]
typ `BBprime_v39 s v` sat
amt[Appendix.BBprime2_v39]
typ `BBs_v39 s v` sat
amt[Appendix.BBprime_v39]
intro Appendix.BBs_v39 [`s`;`v`]
art[LET_DEF;LET_END_DEF;Terminal.IMAGE_SUBSET_IN;IN_UNIV]
st/r
abbrev `V = IMAGE v (:num)`
abbrev `E = IMAGE (\i. {v i, v (SUC i)}) (:num)`
typ `local_fan (V,E,FF)` sat
mmp Local_lemmas.CVX_LO_IMP_LO
art[]
typ `!i. v i IN V` sat
st/r
expand "V"
rt[IN_IMAGE;IN_UNIV]
mt[]
intro (GEN_ALL Local_lemmas.INTERIOR_ANGLE1_POS) [`E`;`V`;`FF`;`v p1`]
art[]
dt
intro (GEN_ALL Nkezbfc_local.CONVEX_LOFA_IMP_INANGLE_EQ_AZIM_IVS ) [`E`;`V`;`FF`]
art[]
dt
typ `!i m. ITER m (rho_node1 FF) (v i) = v (m + i)` sat
g
intro (GEN_ALL Qknvmlb.VV_SUC_EQ_RHO_NODE_PRIME) [`V`;`E`;`k`;`s`;`FF`;`v i`;`v`;`i`]
art[]
typ `!i. v (i + (k:num)) = v i` sat
amt[Oxl_def.periodic]
typ `!i. ivs_rho_node1 FF (v i) = v ( i + (k-1))` sat
g
mmp VV_SUC_EQ_IVS_RHO_NODE_PRIME
exl [`V`;`E`;`s`]
art[]
typ `generic V E` sat
amt[Appendix.scs_generic]
comment "collinearity"
typ `~collinear {vec 0,v (p1 + (k-1)),v (p1 + 1)}` sat
mmp PROPERTIES_GENERIC_LOCAL_FAN_ALT
exl [`V`;`E`;`FF`]
art[]
dt
intro Ocbicby.scs_lb_2 [`s`;`v`;`(p1+1)`;`(p1+(k-1))`]
art[DIST_REFL;arith `~(&2 <= &0)`]
gm Ocbicby.MOD_EQ_MOD_SHIFT
asimp[arith `3 < k ==> ~(k=0)`]
repeat (gm MOD_LT)
fxast `3 < k` mp then ARITH_TAC
comment "coplanarity"
typ `interior_angle1 (vec 0) FF (v p1) = azim (vec 0) (v p1) (v (p1+1)) (v (p1 + k -1))` sat
fxast `interior_angle1` (C intro [`v p1`])
art[]
fxast `ITER` (C intro [`p1`;`1`])
rt[ITER_1]
mt[arith `1 + p1 = p1 + 1`]
typ `~coplanar {vec 0, v p1,v(p1+1),v(p1 + k- 1)}` sat
art[GSYM Local_lemmas1.AZIM_COND_FOR_COPLANAR]
fxa (sub1 o GSYM)
asimp[DE_MORGAN_THM;arith `&0 <x ==> ~(x = &0)`; arith `(x < pi ==> ~(x = pi))`]
comment "482"
intro (UNDISCH Ocbicby.LEMMA_4828966562) [`norm (v p0)`;`norm (v p2)`;`norm (v p1)`;`dist(v p1,v p2)`;`dist (v p0,v p1)`;`dist(v p0,v p2)`]
ants
art[GSYM Sphere.cstab]
gtyp `&2 <= norm (v p0) /\ norm (v p0) <= &2 * h0 /\ &2 <= norm (v p2) /\ norm (v p2) <= &2 * h0 /\ &2 <= norm (v p1) /\ norm (v p1) <= &2 * h0 /\ &2 <= dist (v p1,v p2) /\ dist (v p1,v p2) <= &2 * h0 ` (unlist rt)
amt[ ( Fnjlbxs.in_ball_annulus)]
conj
typ `dist(v p1, v p2) = dist(v p2,v p1)` s1
rt[DIST_SYM]
rt[GSYM Trigonometry1.DIST_L_ZERO]
rt[GSYM Oxlzlez.coplanar_delta_y]
fxa mp
mmp (taut `(a = b) ==> (a ==> b)`)
apterm
apterm
apterm
fxast `{a,b} = y` mp then set[]
comment "ups"
rt[GSYM Trigonometry1.DIST_L_ZERO;arith `x*x = x pow 2`]
rt[GSYM Collect_geom2.NOT_COL_EQ_UPS_X_POS]
fxast `collinear` mp
mmp (taut `(a = b) ==> (a ==> b)`)
repeat apterm
fxast `{a,b} = y` mp then set[]
st/r


  ]);;
  (* }}} *)


mmp (arith `&0 <= x /\ ~(x = &0) ==> &0 < x`)
rt[rr[LET_DEF;LET_END_DEF] Tame_lemmas.delta_y_pos]
