
(*  *)

module Work_in_progess = struct

open Hales_tactic;;

end;;

(* ========================================================================== *)
(* COMPLETED LEMMAS  *)
(* ========================================================================== *)


let FOR_ASM th =
  let th1 = REWRITE_RULE[MESON[]` a /\ b ==> c <=> a ==> b ==> c `] th in
  let th2 = SPEC_ALL th1 in 
    UNDISCH_ALL th2;;

let ASSUME_TAC2 = ASSUME_TAC o FOR_ASM;;
let DOWN = FIRST_X_ASSUM MP_TAC;;
let ATTACH thm = MATCH_MP (MESON[]` ! a b. ( a ==> b ) ==> ( a <=> a /\ b )`) thm;;
let NHANH tm = ONCE_REWRITE_TAC[ ATTACH (SPEC_ALL ( tm ))];;
let SWITCH_TAC tm = UNDISCH_TAC tm THEN DISCH_THEN (ASSUME_TAC o GSYM);;
let PHA = REWRITE_TAC[ MESON[] ` (a/\b)/\c <=> a/\ b /\ c `; MESON[]` a ==> b ==> c <=> a /\ b ==> c `];;



let NONCOLLINEAR_OPEN = Local_lemmas1.CONTINUOUS_PRESERVE_COLLINEAR;;

let NONPLANAR_OPEN = prove_by_refinement(
  `!(v1:real->real^3) v2 v3 v4 t. ~coplanar {v1 t,v2 t,v3 t, v4 t} /\
    v1 continuous atreal t /\ v2 continuous atreal t /\ v3 continuous atreal t /\ 
    v4 continuous atreal t
    ==>
       (?e. &0 < e /\ !t'. abs(t - t') < e ==>  ~coplanar {v1 t', v2 t' ,v3 t',v4 t'})`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Oxlzlez.coplanar_delta_y];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `(\t. delta_y (dist (v1 t,v2 t)) (dist (v1 t,v3 t))               (dist (v1 t,v4 t))               (dist (v3 t,v4 t))               (dist (v2 t,v4 t))               (dist (v2 t,v3 t))) real_continuous atreal t` ENOUGH_TO_SHOW_TAC;
    REWRITE_TAC[real_continuous_atreal];
    DISCH_THEN (C INTRO_TAC [`delta_y (dist (v1 t,v2 t)) (dist (v1 t,v3 t)) (dist (v1 t,v4 t))      (dist (v3 t,v4 t))      (dist (v2 t,v4 t))      (dist (v2 t,v3 t))`]);
    ASM_REWRITE_TAC[];
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `d` EXISTS_TAC;
    ASM_REWRITE_TAC[];
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`t'`]);
    ASM_REWRITE_TAC[];
    BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
  REWRITE_TAC[Sphere.delta_y;Sphere.delta_x];
  BY((REPEAT ( (MATCH_MP_TAC REAL_CONTINUOUS_ADD ORELSE MATCH_MP_TAC REAL_CONTINUOUS_SUB ORELSE MATCH_MP_TAC REAL_CONTINUOUS_MUL ORELSE MATCH_MP_TAC REAL_CONTINUOUS_NEG ORELSE MATCH_MP_TAC Local_lemmas1.CON_ATREAL_REAL_CON2_REDO) THEN (REPEAT CONJ_TAC))) THEN ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let COLL_IFF_COLL_CROSS2 = prove_by_refinement(
  `!v w. collinear {vec 0, v, w} <=> collinear {vec 0, w, v cross w}`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPED_ABBREV_TAC `s = {vec 0,v,w}`;
  (ONCE_REWRITE_TAC[CROSS_SKEW]);
  ONCE_REWRITE_TAC[SET_RULE `{a,b,(c:real^3)} = {a,c,b}`];
  (REWRITE_TAC[arith `-- (u:real^3) = (-- &1) % u`]);
  GMATCH_SIMP_TAC COLLINEAR_SPECIAL_SCALE;
  (ONCE_REWRITE_TAC[SET_RULE `{vec 0,a,(b:real^3)} = {vec 0,b,a}`]);
  RULE_ASSUM_TAC( ONCE_REWRITE_RULE[SET_RULE `{a,b,(c:real^3)} = {a,c,b}`]);
  REWRITE_TAC[arith` ~( -- &1 = &0)`];
  BY(ASM_MESON_TAC([Local_lemmas.COLL_IFF_COLL_CROSS]))
  ]);;
  (* }}} *)

let azim_cross_0 = prove_by_refinement(
  `!v w. ~(collinear {vec 0,v,w}) ==> ~(azim (vec 0) (v cross w) v w = &0)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  BY(ASM_MESON_TAC[Local_lemmas1.AZIM_COND_FOR_COPLANAR;Local_lemmas.NOT_COLL_IMP_COPL;SET_RULE `{vec 0,v,w,v cross w} = {vec 0,v cross w,v,(w:real^3)}`])
  ]);;
  (* }}} *)

let wedge_ge_cross = prove_by_refinement(
  `!v w. ~collinear {vec 0,v,w} ==> wedge_ge (vec 0) (v cross w) v w = aff_ge {vec 0, v cross w} {v, w}`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  GMATCH_SIMP_TAC Local_lemmas.WEDGE_GE_EQ_AFF_GE;
  CONJ_TAC;
    TYPIFY `&0 < sin(azim (vec 0) (v cross w) v w)` ENOUGH_TO_SHOW_TAC;
      REWRITE_TAC[arith `a < pi <=> a <= pi /\ ~(a = pi)`];
      STRIP_TAC;
      CONJ_TAC;
        REWRITE_TAC[GSYM Local_lemmas.SIN_AZIM_POS_PI_LT];
        BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
      BY(ASM_MESON_TAC[SIN_PI;arith `~(&0 < &0)`]);
    REWRITE_TAC[Local_lemmas.SIN_AZIM_MUTUAL_SROSS];
    ONCE_REWRITE_TAC[CROSS_TRIPLE];
    BY(ASM_REWRITE_TAC[DOT_POS_LT;CROSS_EQ_0]);
  ONCE_REWRITE_TAC[SET_RULE `{a,b,(c:real^3)} = {a,c,b}`];
  BY(ASM_MESON_TAC[COLL_IFF_COLL_CROSS2;Local_lemmas.COLL_IFF_COLL_CROSS])
  ]);;
  (* }}} *)

let azim_lt_pi_cross = prove_by_refinement(
  `!u1 u2 u3. (&0 < azim (vec 0) u1 u2 u3 /\ azim(vec 0) u1 u2 u3 < pi) <=> &0 < (u1 cross u2) dot u3`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Trigonometry.JBDNJJB [`u1`;`u2`;`u3`];
  ONCE_REWRITE_TAC[Leaf_cell.RE_EQVL_SYM];
  REWRITE_TAC[Trigonometry2.re_eqvl];
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[];
  ASM_CASES_TAC `&0 < sin(azim(vec 0) u1 u2 u3)`;
    ASM_REWRITE_TAC[];
    GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[arith `a < pi <=> a <= pi /\ ~(a = pi)`];
    REWRITE_TAC[GSYM Local_lemmas.SIN_AZIM_POS_PI_LT];
    ASM_SIMP_TAC[arith `&0 < x ==> &0 <= x`];
    CONJ2_TAC;
      DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
      BY(ASM_MESON_TAC[SIN_PI;arith `~(&0 < &0)`]);
    BY(ASM_MESON_TAC[Counting_spheres.AZIM_NN;SIN_0;arith `&0 < x <=> &0 <= x /\ ~(x = &0)`;arith `~(&0 < &0)`]);
  COMMENT "other direction";
  TYPED_ABBREV_TAC `s = sin (azim (vec 0) u1 u2 u3)`;
  REWRITE_TAC[arith `&0 < t * s <=> ~(&0 <= t* (-- s))`];
  GMATCH_SIMP_TAC REAL_LE_MUL;
  CONJ_TAC;
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `~` MP_TAC;
  EXPAND_TAC "s";
  REWRITE_TAC[];
  BY(ASM_MESON_TAC[SIN_POS_PI])
  ]);;
  (* }}} *)

let generic_alt = prove_by_refinement(
  `!u v w. ~collinear {vec 0,v,w} /\ ~(u = vec 0) ==>
     (aff_ge {vec 0} {v,w} INTER aff_lt {vec 0} {u} = {} <=> 
      ~coplanar {vec 0,u,v,w} \/ ((-- u) IN wedge (vec 0) (v cross w) w v))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC (TAUT `((a ==>b) /\ (b ==> a)) ==> (a = b)`);
  CONJ_TAC THEN STRIP_TAC;
      MATCH_MP_TAC (TAUT `(a ==> b ) ==> (~a \/ b)`);
      DISCH_TAC;
      GMATCH_SIMP_TAC (GSYM Leaf_cell.WEDGE_GE_COMPLEMENT);
      REWRITE_TAC[IN_DIFF;IN_UNIV];
      ASM_SIMP_TAC[azim_cross_0];
      ASM_SIMP_TAC[wedge_ge_cross];
      COMMENT "down to three";
      GMATCH_SIMP_TAC Marchal_cells_2_new.AFF_GE_2_2;
      REWRITE_TAC[IN_ELIM_THM;arith `t1 % (vec 0):real^3 = vec 0`];
      CONJ_TAC;
        TYPIFY `DISJOINT  {v, w} {vec 0} /\ ~(v cross w = v) /\ ~(v cross w = w)` ENOUGH_TO_SHOW_TAC;
          REWRITE_TAC[DISJOINT];
          BY(SET_TAC[]);
        CONJ_TAC;
          MATCH_MP_TAC Collect_geom.COLLINEAR_DISJOINT3;
          BY(ASM_REWRITE_TAC[]);
        REWRITE_TAC[CROSS_EQ_SELF];
        BY(CONJ_TAC THEN ASM_MESON_TAC[COLLINEAR_2;SET_RULE `{vec 0,(v:real^3),vec 0} = {vec 0,v} /\ {vec 0,vec 0,(w:real^3)} = {vec 0,w}`]);
      REPEAT WEAKER_STRIP_TAC;
      RULE_ASSUM_TAC( REWRITE_RULE[arith `-- (u:real^3) = w <=> u = -- w`] );
      FIRST_X_ASSUM_ST `aff_ge` MP_TAC;
      REWRITE_TAC[EXTENSION;NOT_IN_EMPTY;IN_INTER;NOT_FORALL_THM];
      TYPIFY `-- (u:real^3)` EXISTS_TAC;
      CONJ2_TAC;
        GMATCH_SIMP_TAC AFF_LT_1_1;
        REWRITE_TAC[IN_ELIM_THM;DISJOINT];
        CONJ_TAC;
          BY(ASM_TAC THEN SET_TAC[]);
        GEXISTL_TAC [`&2`;`-- &1`];
        BY(REPEAT CONJ_TAC THEN TRY REAL_ARITH_TAC THEN VECTOR_ARITH_TAC);
      RULE_ASSUM_TAC(REWRITE_RULE[GSYM Local_lemmas.CROSS_DOT_COPLANAR]);
      RULE_ASSUM_TAC(ONCE_REWRITE_RULE[CROSS_TRIPLE]);
      FIRST_X_ASSUM_ST `x = &0` MP_TAC;
      ASM_REWRITE_TAC[];
      REWRITE_TAC[DOT_RNEG;DOT_RADD;DOT_RMUL];
      REWRITE_TAC[DOT_RZERO];
      REWRITE_TAC[DOT_CROSS_SELF];
      (REWRITE_TAC[arith `--(&0 + t2 * a + t3 * &0 + t4 * &0) = &0 <=> t2 * a = &0`]);
      REWRITE_TAC[REAL_ENTIRE];
      ASM_SIMP_TAC[DOT_POS_LT;CROSS_EQ_0;arith `&0 < x ==> ~(x = &0)`];
      DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
      REWRITE_TAC[arith `-- --(vec 0 + &0 % a + b + (c:real^3)) = b + c`];
      GMATCH_SIMP_TAC AFF_GE_1_2;
      CONJ_TAC;
        ONCE_REWRITE_TAC[DISJOINT_SYM] THEN MATCH_MP_TAC Collect_geom.COLLINEAR_DISJOINT3;
        BY(ASM_REWRITE_TAC[]);
      REWRITE_TAC[IN_ELIM_THM];
      GEXISTL_TAC [`t1`;`t3`;`t4`];
      ASM_REWRITE_TAC[];
      CONJ_TAC;
        BY(ASM_TAC THEN REAL_ARITH_TAC);
      BY(VECTOR_ARITH_TAC);
    COMMENT "second case";
    REWRITE_TAC[EXTENSION;NOT_IN_EMPTY;IN_INTER];
    GMATCH_SIMP_TAC AFF_GE_1_2;
    CONJ_TAC;
      ONCE_REWRITE_TAC[DISJOINT_SYM] THEN MATCH_MP_TAC Collect_geom.COLLINEAR_DISJOINT3;
      BY(ASM_REWRITE_TAC[]);
    REWRITE_TAC[IN_ELIM_THM];
    GMATCH_SIMP_TAC Nkezbfc_local.AFF_LT_1_1;
    ASM_REWRITE_TAC[IN_ELIM_THM];
    REPEAT WEAKER_STRIP_TAC;
    RULE_ASSUM_TAC(REWRITE_RULE[GSYM Local_lemmas.CROSS_DOT_COPLANAR]);
    RULE_ASSUM_TAC(ONCE_REWRITE_RULE[CROSS_TRIPLE]);
    TYPIFY `(v cross w) dot (t1 % vec 0 + t2 % v + t3 % w) = (v cross w) dot (t1' % vec 0 + t2' % u)` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_MESON_TAC[]);
    REWRITE_TAC[DOT_RNEG;DOT_RADD;DOT_RMUL;DOT_RZERO;DOT_CROSS_SELF];
    TYPIFY `~(t2' * ((v cross w) dot u) = &0)` ENOUGH_TO_SHOW_TAC;
      BY(REAL_ARITH_TAC);
    ASM_REWRITE_TAC[REAL_ENTIRE];
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  COMMENT "third and final case";
  REWRITE_TAC[EXTENSION;NOT_IN_EMPTY;IN_INTER];
  GMATCH_SIMP_TAC AFF_GE_1_2;
  CONJ_TAC;
    ONCE_REWRITE_TAC[DISJOINT_SYM] THEN MATCH_MP_TAC Collect_geom.COLLINEAR_DISJOINT3;
    BY(ASM_REWRITE_TAC[]);
  REWRITE_TAC[IN_ELIM_THM];
  GMATCH_SIMP_TAC Nkezbfc_local.AFF_LT_1_1;
  ASM_REWRITE_TAC[IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `x IN wedge (vec 0) (v cross w) w v` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM_ST `wedge` MP_TAC;
    REWRITE_TAC[Reuhady.WEDGE_SIMPLE;IN_ELIM_THM];
    FIRST_X_ASSUM SUBST1_TAC;
    TYPIFY `t1' % vec 0 + t2' % u = (-- t2') % (-- u)` (C SUBGOAL_THEN SUBST1_TAC);
      BY(VECTOR_ARITH_TAC);
    FIRST_X_ASSUM_ST `t < &0` MP_TAC;
    BY(MESON_TAC[AZIM_SCALE_ALL;arith `&0 < &1`;arith `t < &0 ==> &0 < -- t`;arith `&1 % (v:real^3) = v`]);
  FIRST_X_ASSUM_ST `x = y` kill;
  TYPIFY `~(x IN wedge (vec 0) (v cross w) w v)` (C SUBGOAL_THEN ASSUME_TAC);
    GMATCH_SIMP_TAC (GSYM Leaf_cell.WEDGE_GE_COMPLEMENT);
    (REWRITE_TAC[IN_DIFF;IN_UNIV]);
    ASM_SIMP_TAC[azim_cross_0];
    ASM_SIMP_TAC[wedge_ge_cross];
    GMATCH_SIMP_TAC Marchal_cells_2_new.AFF_GE_2_2;
    REWRITE_TAC[IN_ELIM_THM];
    CONJ_TAC;
      TYPIFY `DISJOINT  {v, w} {vec 0} /\ ~(v cross w = v) /\ ~(v cross w = w)` ENOUGH_TO_SHOW_TAC;
        REWRITE_TAC[DISJOINT];
        BY(SET_TAC[]);
      CONJ_TAC;
        MATCH_MP_TAC Collect_geom.COLLINEAR_DISJOINT3;
        BY(ASM_REWRITE_TAC[]);
      REWRITE_TAC[CROSS_EQ_SELF];
      BY(CONJ_TAC THEN ASM_MESON_TAC[COLLINEAR_2;SET_RULE `{vec 0,(v:real^3),vec 0} = {vec 0,v} /\ {vec 0,vec 0,(w:real^3)} = {vec 0,w}`]);
    GEXISTL_TAC [`t1`;`&0`;`t2`;`t3`];
    REPEAT CONJ_TAC THEN ASM_TAC THEN TRY REAL_ARITH_TAC;
    BY(REPEAT WEAKER_STRIP_TAC THEN VECTOR_ARITH_TAC);
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)


(* ========================================================================== *)
(* WORK IN PROGRESS *)
(* ========================================================================== *)

(* deprecated version.
let vuy1 = prove_by_refinement(
  `!v u0 u1 ur.
        ~collinear {vec 0,u0,v} /\ ~collinear {vec 0,u0,u1} /\ 
    ~collinear {vec 0,u0,ur} /\ 
    v IN aff_ge {vec 0,u0 cross u1} {u1,ur} ==> 
    (?t0 t1 tr. &0 <= t1 /\ &0 <= tr /\ &0 < t1 + tr /\ v = t0 % u0 + t1 % u1 + tr % ur)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `aff_ge` MP_TAC;
  GMATCH_SIMP_TAC Marchal_cells_2_new.AFF_GE_2_2;
  REWRITE_TAC[IN_ELIM_THM;DISJOINT_PAIR];
  ASM_SIMP_TAC[Fan.th3a];
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[];
  GEXISTL_TAC [`t2`;`t3`;`t4`];
  ASM_REWRITE_TAC[];
  CONJ_TAC;
    PROOF_BY_CONTR_TAC;
    TYPIFY `t3 = &0 /\ t4 = &0` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_TAC THEN REAL_ARITH_TAC);
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    TYPIFY `v = t2 % u0` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_REWRITE_TAC[] THEN VECTOR_ARITH_TAC);
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    BY(ASM_MESON_TAC[COLLINEAR_LEMMA_ALT]);
  BY(VECTOR_ARITH_TAC)
  ]);;
  (* }}} *)
*)

let vuy1 = prove_by_refinement(
  `!v u0 u1.
        ~collinear {vec 0,u0,v} /\ ~collinear {vec 0,u0,u1} /\ v IN aff_ge {vec 0,u0} {u1} ==> 
    (?t0 t1. &0 < t1 /\ v = t0 % u0 + t1 % u1)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `aff_ge` MP_TAC;
  GMATCH_SIMP_TAC AFF_GE_2_1;
  REWRITE_TAC[IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  ASM_SIMP_TAC[Fan.th3a];
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[];
  GEXISTL_TAC [`t2`;`t3`];
  CONJ_TAC;
    PROOF_BY_CONTR_TAC;
    TYPIFY `t3 = &0` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_TAC THEN REAL_ARITH_TAC);
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    TYPIFY `v = t2 % u0` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_REWRITE_TAC[] THEN VECTOR_ARITH_TAC);
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    BY(ASM_MESON_TAC[COLLINEAR_LEMMA_ALT]);
  BY(VECTOR_ARITH_TAC)
  ]);;
  (* }}} *)

let DISJOINT_PAIR = prove_by_refinement(
  `!a b c. DISJOINT a {b,c} <=> DISJOINT a {b} /\ DISJOINT a {c}`,
  (* {{{ proof *)
  [
  REWRITE_TAC[DISJOINT];
  BY(SET_TAC[])
  ]);;
  (* }}} *)

let vuy2 = prove_by_refinement(
  `!v u0 u1.
         ~collinear {vec 0, u0, v} /\
         ~collinear {vec 0, u0, u1} /\
         v IN aff_ge {vec 0, u0} {u1} ==>
       (u0 cross u1) dot v = &0`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC vuy1 [`v`;`u0`;`u1`];
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  ASM_REWRITE_TAC[];
  REWRITE_TAC[DOT_RADD;DOT_RMUL;DOT_CROSS_SELF];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let vuy3 = prove_by_refinement(
  `!v u0 u1. ~collinear {vec 0, u0, v} /\
         ~collinear {vec 0, u0, u1} /\
         v IN aff_ge {vec 0, u0} {u1} ==>
    ~collinear {vec 0,u0 cross u1, v}`,
  (* {{{ proof *)
  [
  REPEAT GEN_TAC;
  DISCH_TAC;
  REWRITE_TAC[COLLINEAR_LEMMA_ALT;DE_MORGAN_THM];
  SUBCONJ_TAC;
    BY(ASM_REWRITE_TAC[CROSS_EQ_0]);
  ASM_TAC THEN REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC vuy1 [`v`;`u0`;`u1`];
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `v dot v = c % (u0 cross u1) dot (t0' % u0 + t1 % u1)` (C SUBGOAL_THEN MP_TAC);
    BY(ASM_MESON_TAC[]);
  REWRITE_TAC[DOT_RMUL;DOT_LMUL;DOT_RADD;DOT_CROSS_SELF];
  TYPIFY ` c * (t0' * &0 + t1 * &0) = &0` (C SUBGOAL_THEN SUBST1_TAC);
    BY(REAL_ARITH_TAC);
  REWRITE_TAC[DOT_EQ_0];
  DISCH_TAC;
  BY(ASM_MESON_TAC[COLLINEAR_2;SET_RULE `{vec 0,u0,vec 0} = {vec 0,(u0:real^3)}`])
  ]);;
  (* }}} *)

let vuy4 = prove_by_refinement(
  `!v u0 u1. ~collinear {vec 0, u0, v} /\
         ~collinear {vec 0, u0, u1} /\
         v IN aff_ge {vec 0, u0} {u1} ==>
    azim (vec 0) (u0 cross u1) u0 v < pi`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `&0 < ((u0 cross u1) cross u0) dot v` ENOUGH_TO_SHOW_TAC;
    BY(MESON_TAC[azim_lt_pi_cross]);
  INTRO_TAC vuy1 [`v`;`u0`;`u1`];
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  ONCE_REWRITE_TAC[CROSS_TRIPLE];
  ASM_REWRITE_TAC[];
  REWRITE_TAC[CROSS_RMUL;DOT_LMUL;CROSS_RADD;DOT_CROSS_SELF;CROSS_REFL;arith `t % vec 0 + (a:real^3) = a`];
  GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
  BY(ASM_REWRITE_TAC[DOT_POS_LT;CROSS_EQ_0])
  ]);;
  (* }}} *)

let vuy5 = prove_by_refinement(
  `!v u0 u1. 
         ~collinear {vec 0, u0, u1} ==>
    u0 IN aff_ge {vec 0,u0} {u1}`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  GMATCH_SIMP_TAC AFF_GE_2_1;
  ASM_SIMP_TAC[Fan.th3a];
  REWRITE_TAC[IN_ELIM_THM];
  GEXISTL_TAC [`&0`;`&1`;`&0`];
  REPEAT CONJ_TAC THEN TRY REAL_ARITH_TAC;
  BY(VECTOR_ARITH_TAC)
  ]);;
  (* }}} *)

let cross_independent = prove_by_refinement(
  `!u0 u1 a b c. ~collinear {vec 0,u0,u1} /\
    a % (u0 cross u1) + b % u0 + c % u1 = vec 0 ==> a = &0`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY ` (u0 cross  u1) dot ( (--b) % u0 + (--c) % u1 ) = a * ((u0 cross u1) dot (u0 cross u1))` (C SUBGOAL_THEN MP_TAC);
    REWRITE_TAC[GSYM DOT_RMUL];
    TYPIFY `a % (u0 cross u1)  = -- b % u0 + -- c % u1` ENOUGH_TO_SHOW_TAC;
      BY(MESON_TAC[]);
    BY(FIRST_X_ASSUM MP_TAC THEN VECTOR_ARITH_TAC);
  REWRITE_TAC[DOT_RADD;DOT_RMUL;DOT_RZERO;DOT_CROSS_SELF];
  REWRITE_TAC[arith `-- b * &0 + -- c * &0 = x <=> x = &0`];
  REWRITE_TAC[REAL_ENTIRE;DOT_EQ_0];
  BY(ASM_REWRITE_TAC[CROSS_EQ_0])
  ]);;
  (* }}} *)

let ybt_inj = prove_by_refinement(
  `!u0 u1 v1 v2 .   ~collinear {vec 0, u0, v1} /\ 
    ~collinear {vec 0, u0, v2} /\
         ~collinear {vec 0, u0, u1} /\ ~collinear {vec 0,v1,v2} /\
         v1 IN aff_ge {vec 0, u0} {u1} /\          v2 IN aff_ge {vec 0, u0} {u1} ==>
~(    azim (vec 0) (u0 cross u1) u0 v1 = azim (vec 0) (u0 cross u1) u0 v2)
     `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Topology.th [`(vec 0):real^3`;`u0 cross u1`;`u0`;`v2`];
  REWRITE_TAC[EXTENSION;IN_ELIM_THM];
  DISCH_THEN MP_TAC THEN ANTS_TAC;
    ASM_SIMP_TAC[vuy3];
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c} = {a,c,(b:real^3)}`];
    BY(ASM_MESON_TAC[Local_lemmas.COLL_IFF_COLL_CROSS]);
  DISCH_THEN (C INTRO_TAC [`v1`]);
  ASM_SIMP_TAC[vuy3];
  DISCH_TAC;
  INTRO_TAC vuy1 [`v1`;`u0`;`u1`];
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `aff_gt` MP_TAC;
  REWRITE_TAC[];
  GMATCH_SIMP_TAC AFF_GT_2_1;
  CONJ_TAC;
    REWRITE_TAC[DISJOINT;EXTENSION;IN_INTER;IN_SING;IN_INSERT;NOT_IN_EMPTY];
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    FIRST_X_ASSUM DISJ_CASES_TAC;
      FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
      BY(ASM_MESON_TAC[COLLINEAR_2;SET_RULE `{a,b,a}= {a,(b:real^3)}`]);
    FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    FIRST_X_ASSUM_ST `aff_ge` MP_TAC;
    REWRITE_TAC[];
    GMATCH_SIMP_TAC AFF_GE_2_1;
    ASM_SIMP_TAC[Fan.th3a;IN_ELIM_THM];
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `(-- &1) % (u0 cross u1) + t2 % u0 + t3 % u1 = vec 0` (C SUBGOAL_THEN MP_TAC);
      BY(FIRST_X_ASSUM MP_TAC THEN VECTOR_ARITH_TAC);
    BY(ASM_MESON_TAC[cross_independent;arith `~(-- &1 = &0)`]);
  REWRITE_TAC[IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `v1 = t3 % v2` ENOUGH_TO_SHOW_TAC;
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    BY(ASM_MESON_TAC[SET_RULE `{a,b,c} = {a,c,(b:real^3)}`;COLLINEAR_LEMMA_ALT]);
  PROOF_BY_CONTR_TAC;
  FIRST_X_ASSUM_ST `aff_ge` MP_TAC;
  REWRITE_TAC[];
  GMATCH_SIMP_TAC AFF_GE_2_1;
  ASM_SIMP_TAC[Fan.th3a;IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `x:real^3` (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
  FIRST_X_ASSUM_ST `v1 = t1' % ((vec 0):real^3) + c` (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
  RULE_ASSUM_TAC(REWRITE_RULE[VECTOR_MUL_ASSOC;VECTOR_ADD_LDISTRIB]);
  TYPIFY `t2 % (u0 cross u1) + (t3 * t2' - t0') % u0 + (t3*t3' - t1) % u1 = vec 0` (C SUBGOAL_THEN MP_TAC);
    REPLICATE_TAC 2 (FIRST_X_ASSUM_ST `x:real^3` MP_TAC);
    ONCE_REWRITE_TAC[TAUT `(a ==> b ==> c) <=> (b ==> a ==> c)`];
    DISCH_TAC;
    BY(VECTOR_ARITH_TAC);
  DISCH_TAC;
  TYPIFY `t2 = &0` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_MESON_TAC[cross_independent]);
  FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
  FIRST_X_ASSUM kill;
  FIRST_X_ASSUM_ST `x:real^3` MP_TAC;
  BY(VECTOR_ARITH_TAC)
  ]);;
  (* }}} *)

let ybt_inj_0 = prove_by_refinement(
  `!u0 u1 v2 .   
    ~collinear {vec 0, u0, v2} /\
         ~collinear {vec 0, u0, u1} /\ 
         v2 IN aff_ge {vec 0, u0} {u1} ==>
~(      azim (vec 0) (u0 cross u1) u0 v2 = &0)
     `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM MP_TAC;
  GMATCH_SIMP_TAC Local_lemmas.AZIM_EQ_0_GE_ALT2;
  CONJ_TAC;
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c} = {a,c,(b:real^3)}`];
    BY(ASM_MESON_TAC[Local_lemmas.COLL_IFF_COLL_CROSS]);
  GMATCH_SIMP_TAC AFF_GE_2_1;
  CONJ_TAC;
    REWRITE_TAC[DISJOINT;EXTENSION;IN_INTER;IN_SING;IN_INSERT;NOT_IN_EMPTY];
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    FIRST_X_ASSUM DISJ_CASES_TAC;
      FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
      BY(ASM_MESON_TAC[COLLINEAR_2;SET_RULE `{a,a,b}= {a,(b:real^3)}`]);
    TYPIFY `u0 dot u0 = (u0 cross u1) dot u0` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_MESON_TAC[]);
    REWRITE_TAC[DOT_CROSS_SELF];
    REWRITE_TAC[DOT_EQ_0];
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    BY(ASM_MESON_TAC[COLLINEAR_2;SET_RULE `{a,a,b}= {a,(b:real^3)}`]);
  REWRITE_TAC[IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `aff_ge` MP_TAC;
  REWRITE_TAC[];
  GMATCH_SIMP_TAC AFF_GE_2_1;
  ASM_SIMP_TAC[Fan.th3a;IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `t2 % (u0 cross u1) + (t3 - t2') % u0 + (-- t3') % u1 = vec 0` (C SUBGOAL_THEN MP_TAC);
    BY(FIRST_X_ASSUM MP_TAC THEN VECTOR_ARITH_TAC);
  DISCH_TAC;
  TYPIFY `t2 = &0` (C SUBGOAL_THEN ASSUME_TAC);
    BY(ASM_MESON_TAC[cross_independent]);
  FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
  REPLICATE_TAC 4 (FIRST_X_ASSUM kill);
  TYPIFY `v2 = t3 % u0` (C SUBGOAL_THEN ASSUME_TAC);
    BY(FIRST_X_ASSUM MP_TAC THEN VECTOR_ARITH_TAC);
  FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
  BY(ASM_MESON_TAC[COLLINEAR_LEMMA_ALT])
  ]);;
  (* }}} *)

let ECAU_aff_ge = prove_by_refinement(
  `!(u:num->real^3) r. (!i j. i <= r /\ j <= r /\ ~(i = j) ==> ~collinear {vec 0, u i, u j}) /\
     (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0,u 0 } {u 1} )  ==> 
  (!i. 1 <= i /\ i <= r ==> u i IN aff_ge {vec 0,u 0 } {u 1} )  `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `u i IN aff_gt {vec 0,u 0} {u 1}` (C SUBGOAL_THEN MP_TAC);
    ASM_TAC THEN REPEAT WEAKER_STRIP_TAC;
    BY(FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  INTRO_TAC AFF_GT_SUBSET_AFF_GE [`{vec 0,u 0}`;`{u 1}`];
  BY(SET_TAC[])
  ]);;
  (* }}} *)

let collinear_cross = prove_by_refinement(
  `!u i r. i <= r /\ 1 <= r /\ (!i j. i <= r /\ j <= r /\ ~(i = j) ==> ~collinear {vec 0, u i, u j}) /\
     (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0,u 0 } {u 1} ) 
  ==> ~collinear {vec 0,u 0 cross u 1,u i}`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM MP_TAC;
  REWRITE_TAC[];
  TYPIFY `i = 0` ASM_CASES_TAC;
    ASM_REWRITE_TAC[];
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c} = {a,c,b}`];
    REWRITE_TAC[GSYM Local_lemmas.COLL_IFF_COLL_CROSS];
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_TAC THEN ARITH_TAC);
  INTRO_TAC ECAU_aff_ge [`u`;`r`];
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  MATCH_MP_TAC vuy3;
  BY(REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_TAC THEN TRY ARITH_TAC)
  ]);;
  (* }}} *)

let YBTASCZ1 = prove_by_refinement(
  `!u r j.
    (j <= r) /\ (1<= r) /\
    (!i j. i <= r /\ j <= r /\ ~(i=j) ==> ~collinear {vec 0,u i ,u j}) /\
    (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0,u 0 } {u 1} ) /\
    cyclic_set {u i | i <= r} (vec 0) ((u 0) cross (u 1)) /\
    (!i. i < r ==> azim_cycle {u i | i <= r} (vec 0) ((u 0) cross (u 1)) (u i) = u (i+1)) ==>
    (!i. i < j ==> azim (vec 0) ((u 0) cross (u 1)) (u 0) (u i) < azim (vec 0) (u 0 cross (u 1)) (u 0) (u j))
    `,
  (* {{{ proof *)
  [
  REPEAT GEN_TAC;
  DISCH_TAC;
  INTRO_TAC ECAU_aff_ge [`u`;`r`];
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  INDUCT_TAC;
    DISCH_TAC;
    REWRITE_TAC[arith `a < b <=> (a <= b /\ ~(a = b))`];
    CONJ_TAC;
      BY(REWRITE_TAC[AZIM_REFL;Local_lemmas.AZIM_RANGE]);
    REWRITE_TAC[AZIM_REFL];
    ONCE_REWRITE_TAC[EQ_SYM_EQ];
    MATCH_MP_TAC ybt_inj_0;
    ASM_TAC THEN REPEAT WEAKER_STRIP_TAC;
    BY(REPEAT CONJ_TAC THEN TRY (FIRST_X_ASSUM MATCH_MP_TAC) THEN ASM_TAC THEN TRY ARITH_TAC);
  COMMENT "induction step";
  ONCE_REWRITE_TAC[arith `a < b <=> ~(b < a) /\ ~(a = b)`];
  REPEAT WEAKER_STRIP_TAC;
  CONJ2_TAC;
    MATCH_MP_TAC ybt_inj;
    ASM_TAC THEN REPEAT WEAKER_STRIP_TAC;
    BY(REPEAT CONJ_TAC THEN TRY (FIRST_X_ASSUM MATCH_MP_TAC) THEN ASM_TAC THEN TRY ARITH_TAC);
  DISCH_TAC;
  TYPIFY `i < (j:num)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN ARITH_TAC);
  ASM_TAC THEN REPEAT WEAKER_STRIP_TAC;
  TYPIFY `azim_cycle {u i | i <= r} (vec 0) (u 0 cross u 1) (u i) = u (i+1)` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_TAC THEN ARITH_TAC);
  INTRO_TAC (GEN_ALL Wrgcvdr_cizmrrh.AZIM_CYCLE_PROPERTIES) [`{u i | (i:num) <= r}`;`u i`;`u 0 cross u 1`;`(vec 0):real^3`];
  ANTS_TAC;
    CONJ_TAC;
      REWRITE_TAC[SUBSET;IN_ELIM_THM;IN_SING];
      TYPIFY `1 <= r` (C SUBGOAL_THEN MP_TAC);
        BY(ASM_REWRITE_TAC[]);
      TYPIFY (`~(u 0 = u 1)`) ENOUGH_TO_SHOW_TAC;
        BY(MESON_TAC[arith `1 <= r ==> 0 <= r /\ 1 <= r`]);
      DISCH_TAC;
      FIRST_X_ASSUM_ST `collinear` (C INTRO_TAC [`0`;`1`]);
      ANTS_TAC;
        BY(ASM_TAC THEN ARITH_TAC);
      ASM_REWRITE_TAC[];
      BY(MESON_TAC[COLLINEAR_2;SET_RULE `{a,b,b}= {a,(b:real^3)}`]);
    TYPIFY `{u i | i <= r } = IMAGE u {i | i <= (r:num)}` (C SUBGOAL_THEN SUBST1_TAC);
      BY(SET_TAC[]);
    MATCH_MP_TAC FINITE_IMAGE;
    BY(REWRITE_TAC[FINITE_NUMSEG_LE]);
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM (C INTRO_TAC [`u j`]);
  ANTS_TAC;
    CONJ_TAC;
      DISCH_TAC;
      FIRST_X_ASSUM_ST `collinear` (C INTRO_TAC [`j`;`i`]);
      ANTS_TAC;
        BY(ASM_TAC THEN ARITH_TAC);
      ASM_REWRITE_TAC[];
      BY(MESON_TAC[COLLINEAR_2;SET_RULE `{a,b,b}= {a,(b:real^3)}`]);
    TYPIFY_GOAL_THEN `(j:num) <=r ==> {u i | i <= r} (u j)` MATCH_MP_TAC;
      TYPIFY `{u i | i <= r } = IMAGE u {i | i <= (r:num)}` (C SUBGOAL_THEN SUBST1_TAC);
        BY(SET_TAC[]);
      REWRITE_TAC[IMAGE;IN_ELIM_THM];
      BY(MESON_TAC[]);
    BY(ASM_TAC THEN ARITH_TAC);
  REWRITE_TAC[arith `i+1 = SUC i`];
  REWRITE_TAC[DE_MORGAN_THM];
  PROOF_BY_CONTR_TAC;
  COMMENT "shift";
  FIRST_X_ASSUM_ST `(i:num) < j ==> b` MP_TAC;
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  FIRST_ASSUM MP_TAC;
  REWRITE_TAC[];
  ONCE_REWRITE_TAC[arith `a < b <=> &0 < b - a`];
  GMATCH_SIMP_TAC Leaf_cell.AZIM_BASE_SHIFT_LE;
  TYPIFY `u i` EXISTS_TAC;
  (ASM_SIMP_TAC[arith `x <= x` ;arith `x < y ==> x <= y`]);
  CONJ_TAC;
    BY(REPEAT (GMATCH_SIMP_TAC collinear_cross) THEN REPEAT CONJ_TAC THEN TYPIFY `r` EXISTS_TAC THEN ASM_REWRITE_TAC[] THEN ASM_TAC THEN TRY ARITH_TAC);
  REWRITE_TAC[arith `&0 < a - b <=> b < a`];
  DISCH_TAC;
  COMMENT "second shift";
  TYPIFY `azim (vec 0) (u 0 cross u 1) (u i) (u j) <      azim (vec 0) (u 0 cross u 1) (u i) (u (SUC i))` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM_ST `SUC` kill;
    FIRST_ASSUM_ST `SUC` MP_TAC;
    ONCE_REWRITE_TAC[arith `a < b <=> &0 < b - a`];
    MATCH_MP_TAC (arith `a = b ==> &0 < a ==> &0 < b`);
    MATCH_MP_TAC Leaf_cell.AZIM_BASE_SHIFT_LE;
    (ASM_SIMP_TAC[arith `x <= x` ;arith `x < y ==> x <= y`]);
    REWRITE_TAC[TAUT `(a /\ b /\ c) <=> ((a /\ b) /\ c)`];
    CONJ2_TAC;
      BY(ASM_TAC THEN REAL_ARITH_TAC);
    BY(REPEAT (GMATCH_SIMP_TAC collinear_cross) THEN REPEAT CONJ_TAC THEN TYPIFY `r` EXISTS_TAC THEN ASM_REWRITE_TAC[] THEN ASM_TAC THEN TRY ARITH_TAC);
  BY(ASM_TAC THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let YBTASCZ2 = prove_by_refinement(
  `!u r i j.
    (i < j) /\ (j <= r) /\ (1<= r) /\
    (!i j. i <= r /\ j <= r /\ ~(i=j) ==> ~collinear {vec 0,u i ,u j}) /\
    (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0,u 0 } {u 1} ) /\
    cyclic_set {u i | i <= r} (vec 0) ((u 0) cross (u 1)) /\
    (!i. i < r ==> azim_cycle {u i | i <= r} (vec 0) ((u 0) cross (u 1)) (u i) = u (i+1)) ==>
    (azim (vec 0) ((u 0) cross (u 1)) (u i) (u j) < pi)
    `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC YBTASCZ1 [`u`;`r`;`j`];
  ASM_REWRITE_TAC[];
  DISCH_THEN (C INTRO_TAC [`i`]);
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  INTRO_TAC Fan.sum4_azim_fan [`(vec 0):real^3`;`u 0 cross u 1`;`u 0`;`u i`;`u j`];
  ANTS_TAC;
    ASM_SIMP_TAC[arith `x < y ==> x <= y`];
    BY(REPEAT CONJ_TAC THEN MATCH_MP_TAC collinear_cross THEN TYPIFY `r` EXISTS_TAC THEN ASM_REWRITE_TAC[] THEN ASM_TAC THEN TRY ARITH_TAC);
  INTRO_TAC vuy4 [`u j`;`u 0`;`u 1`];
  ANTS_TAC;
    INTRO_TAC ECAU_aff_ge [`u`;`r`];
    ASM_REWRITE_TAC[];
    DISCH_TAC;
    BY(REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_TAC THEN ARITH_TAC);
  INTRO_TAC Counting_spheres.AZIM_NN [`(vec 0):real^3`;`u 0 cross u 1`;`u 0`;`u i`];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let YBTASCZ3 = prove_by_refinement(
  `!u r i j.
    (i < j) /\ (j <= r) /\ (1<= r) /\
    (!i j. i <= r /\ j <= r /\ ~(i=j) ==> ~collinear {vec 0,u i ,u j}) /\
    (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0,u 0 } {u 1} ) /\
    cyclic_set {u i | i <= r} (vec 0) ((u 0) cross (u 1)) /\
    (!i. i < r ==> azim_cycle {u i | i <= r} (vec 0) ((u 0) cross (u 1)) (u i) = u (i+1)) ==>
    (&0 < azim (vec 0) ((u 0) cross (u 1)) (u i) (u j))
    `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC YBTASCZ1 [`u`;`r`;`j`];
  ASM_REWRITE_TAC[];
  DISCH_THEN (C INTRO_TAC [`i`]);
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  INTRO_TAC Fan.sum4_azim_fan [`(vec 0):real^3`;`u 0 cross u 1`;`u 0`;`u i`;`u j`];
  ANTS_TAC;
    ASM_SIMP_TAC[arith `x < y ==> x <= y`];
    BY(REPEAT CONJ_TAC THEN MATCH_MP_TAC collinear_cross THEN TYPIFY `r` EXISTS_TAC THEN ASM_REWRITE_TAC[] THEN ASM_TAC THEN TRY ARITH_TAC);
  BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let KCZXLLE = prove_by_refinement(
  `!u r i j k.
    (j < k) /\ (k <= r) /\ (1<= r) /\ (i <= r) /\ ((i < j \/ k < i)) /\
    (!i j. i <= r /\ j <= r /\ ~(i=j) ==> ~collinear {vec 0,u i ,u j}) /\
    (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0,u 0 } {u 1} ) /\
    cyclic_set {u i | i <= r} (vec 0) ((u 0) cross (u 1)) /\
    (!i. i < r ==> azim_cycle {u i | i <= r} (vec 0) ((u 0) cross (u 1)) (u i) = u (i+1)) ==>
    (azim (vec 0) (u i) (u j) (u k) = &0)
    `,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `?r. j < k /\     k <= r /\     1 <= r /\     (!i j. i <= r /\ j <= r /\ ~(i = j) ==> ~collinear {vec 0, u i, u j}) /\     (!i. 1 <= i /\ i <= r ==> u i IN aff_gt {vec 0, u 0} {u 1}) /\     cyclic_set {u i | i <= r} (vec 0) (u 0 cross u 1) /\     (!i. i < r          ==> azim_cycle {u i | i <= r} (vec 0) (u 0 cross u 1) (u i) =              u (i + 1))` (C SUBGOAL_THEN ASSUME_TAC);
    TYPIFY `r` EXISTS_TAC;
    BY(ASM_REWRITE_TAC[]);
  INTRO_TAC ECAU_aff_ge [`u`;`r`] THEN ASM_REWRITE_TAC[] THEN DISCH_TAC;
  COMMENT "planarity";
  TYPIFY `!i. i <= r ==> u i IN affine hull {vec 0,u 0,u 1}` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    ASM_CASES_TAC `i' = 0`;
      MATCH_MP_TAC HULL_INC;
      ASM_REWRITE_TAC[];
      BY(SET_TAC[]);
    RULE_ASSUM_TAC(REWRITE_RULE[arith `~(i=0) <=> 1<= i`]);
    REWRITE_TAC[GSYM Trigonometry.UIVNNRR2];
    INTRO_TAC (GEN_ALL Local_lemmas.AFF_GT_MONO) [`{vec 0,u 0}`;`{u 1}`;`{u 1}`];
    ANTS_TAC;
      BY(SET_TAC[]);
    TYPIFY_GOAL_THEN `{vec 0,u 0} UNION {u 1} = {vec 0,u 0,u 1} /\ {u 1} DIFF {u 1} = {}` (unlist REWRITE_TAC);
      BY(SET_TAC[]);
    TYPIFY `u i' IN aff_gt {vec 0, u 0} {u 1}` ENOUGH_TO_SHOW_TAC;
      BY(SET_TAC[]);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(ASM_REWRITE_TAC[]);
  COMMENT "ARITH GOES HERE";
  TYPIFY `j <= (r:num)` (C SUBGOAL_THEN ASSUME_TAC);
    REPLICATE_TAC 10 (FIRST_X_ASSUM kill);
    BY(ASM_TAC THEN ARITH_TAC);
  TYPIFY `~(i = j) /\ ~(i = k) /\ 0 <= r` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REPLICATE_TAC 6 (FIRST_X_ASSUM kill) THEN ASM_TAC THEN ARITH_TAC);
  TYPIFY `~(0 = k) /\ (1 <= k) /\ ~(0=1)` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REPLICATE_TAC 10 (FIRST_X_ASSUM kill) THEN ASM_TAC THEN ARITH_TAC);
  COMMENT "other prelims here";
  TYPIFY `~collinear {vec 0, u 0, u 1} /\ ~collinear {vec 0,u i,u j} /\ ~collinear {vec 0,u i,u k}` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[arith `~(0=1)`]);
  TYPIFY `DISJOINT {vec 0, u 0} {u 1}` (C SUBGOAL_THEN ASSUME_TAC);
    GMATCH_SIMP_TAC Fan.th3a;
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `~collinear {vec 0, u 0, u k} /\ ~collinear {vec 0, u 0, u 1} /\ u k IN aff_ge {vec 0, u 0} {u 1} /\ u k IN aff_gt {vec 0, u 0} {u 1}` (C SUBGOAL_THEN ASSUME_TAC);
    BY((REPEAT CONJ_TAC) THEN (FIRST_X_ASSUM MATCH_MP_TAC) THEN ASM_REWRITE_TAC[]);
  TYPIFY `!i. i <= r ==> ~collinear {vec 0,u 0 cross u 1, u i}` (C SUBGOAL_THEN ASSUME_TAC);
    REPEAT WEAKER_STRIP_TAC;
    ASM_CASES_TAC `i' = 0`;
      FIRST_X_ASSUM_ST `collinear` MP_TAC;
      ASM_REWRITE_TAC[];
      ONCE_REWRITE_TAC[SET_RULE `{a,b,c} = {a,c,b}`];
      REWRITE_TAC[GSYM Local_lemmas.COLL_IFF_COLL_CROSS];
      BY(ASM_REWRITE_TAC[]);
    RULE_ASSUM_TAC (ONCE_REWRITE_RULE[arith `~(i'=0) <=> (1 <= i' /\ ~(i' = 0))`]);
    FIRST_X_ASSUM_ST `collinear` MP_TAC;
    REWRITE_TAC[];
    MATCH_MP_TAC vuy3;
    BY((REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]));
  COMMENT "standard";
  TYPIFY `coplanar {vec 0, u i, u j, u k}` (C SUBGOAL_THEN ASSUME_TAC);
    REWRITE_TAC[coplanar];
    GEXISTL_TAC [`(vec 0):real^3`;`u 0`;`u 1`];
    REWRITE_TAC[SUBSET;IN_INSERT;NOT_IN_EMPTY];
    REPEAT STRIP_TAC THEN ASM_REWRITE_TAC[] THEN (FIRST_X_ASSUM MATCH_MP_TAC ORELSE MATCH_MP_TAC HULL_INC) THEN ASM_REWRITE_TAC[];
    BY(REPEAT WEAKER_STRIP_TAC THEN SET_TAC[]);
  RULE_ASSUM_TAC(REWRITE_RULE[GSYM Local_lemmas1.AZIM_COND_FOR_COPLANAR]);
  FIRST_X_ASSUM DISJ_CASES_TAC;
    BY(ASM_REWRITE_TAC[]);
  PROOF_BY_CONTR_TAC THEN FIRST_X_ASSUM kill;
  INTRO_TAC (GEN_ALL Ldurdpn.LDURDPN) [`u i`;`u j`;`u k`];
  ANTS_TAC;
    BY(CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  ASM_REWRITE_TAC[];
  REWRITE_TAC[DE_MORGAN_THM];
  DISJ2_TAC;
  TYPIFY `conv0 {u j,u k} SUBSET aff_gt {vec 0, u 0} {u 1}` (C SUBGOAL_THEN ASSUME_TAC);
    ASM_CASES_TAC `j=0`;
      ASM_REWRITE_TAC[Geomdetail.CONV0_SET2;SUBSET;IN_ELIM_THM];
      REPEAT WEAKER_STRIP_TAC;
      GMATCH_SIMP_TAC AFF_GT_2_1;
      ASM_REWRITE_TAC[IN_ELIM_THM];
      INTRO_TAC vuy1 [`u k`;`u 0`;`u 1`];
      ANTS_TAC;
        BY(ASM_REWRITE_TAC[]);
      REPEAT WEAKER_STRIP_TAC;
      ASM_REWRITE_TAC[];
      GEXISTL_TAC [`&1 - a - b * (t0' + t1)`;`a + b * t0'`;`b*t1`];
      GMATCH_SIMP_TAC REAL_LT_MUL_EQ;
      ASM_REWRITE_TAC[];
      CONJ_TAC;
        BY(REAL_ARITH_TAC);
      BY(VECTOR_ARITH_TAC);
    COMMENT "~(j=0)";
    MATCH_MP_TAC SUBSET_TRANS;
    TYPIFY `conv {u j,u k}` EXISTS_TAC;
    REWRITE_TAC[Geomdetail.CONV02_SU_CONV2];
    MATCH_MP_TAC Geomdetail.CONVEX_IM_CONV2_SU;
    ASM_REWRITE_TAC[CONVEX_AFF_GT];
    RULE_ASSUM_TAC(REWRITE_RULE[arith `~(j=0) <=> 1<=j`]);
    BY( FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  REWRITE_TAC[EXTENSION;IN_ELIM_THM;IN_INTER;NOT_IN_EMPTY];
  REWRITE_TAC[TAUT `~(a /\ b) <=> (b ==> ~a)`];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM_ST `aff` MP_TAC;
  REWRITE_TAC[Trigonometry2.AFF2_VEC0;IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `k' % u i IN aff_gt {vec 0, u 0} {u 1}` (C SUBGOAL_THEN MP_TAC);
    BY(REPLICATE_TAC 3 (FIRST_X_ASSUM MP_TAC) THEN SET_TAC[]);
  REWRITE_TAC[];
  GMATCH_SIMP_TAC AFF_GT_2_1;
  ASM_REWRITE_TAC[IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `~(i = 0)` (C SUBGOAL_THEN ASSUME_TAC);
    DISCH_TAC;
    FIRST_X_ASSUM_ST `%` MP_TAC;
    ASM_REWRITE_TAC[];
    TYPIFY `~collinear {vec 0, u 0, u 1}` (C SUBGOAL_THEN MP_TAC);
      BY(ASM_REWRITE_TAC[]);
    REWRITE_TAC[COLLINEAR_LEMMA_ALT];
    REWRITE_TAC[DE_MORGAN_THM;NOT_EXISTS_THM];
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`(inv t3 * (k' - t2))`]);
    REWRITE_TAC[];
    TYPIFY `t3 % u 1 = t3 % (inv t3 * (k' - t2)) % u 0` ENOUGH_TO_SHOW_TAC;
      REWRITE_TAC[VECTOR_MUL_LCANCEL];
      DISCH_THEN DISJ_CASES_TAC;
        BY(FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE)) THEN FIRST_X_ASSUM_ST `&0 < &0` MP_TAC THEN REAL_ARITH_TAC);
      BY(FIRST_X_ASSUM ACCEPT_TAC);
    FIRST_X_ASSUM MP_TAC;
    REWRITE_TAC[VECTOR_MUL_ASSOC];
    TYPIFY `(t3 * inv t3 * (k' - t2)) = k' - t2` (C SUBGOAL_THEN SUBST1_TAC);
      Calc_derivative.CALC_ID_TAC;
      BY(FIRST_X_ASSUM_ST `&0 < t3` MP_TAC THEN REAL_ARITH_TAC);
    BY(VECTOR_ARITH_TAC);
  TYPIFY `?t. &0 < t /\ x = t % u i` (C SUBGOAL_THEN MP_TAC);
    FIRST_X_ASSUM_ST `aff_gt` (C INTRO_TAC [`i`]);
    (ANTS_TAC);
      BY(RULE_ASSUM_TAC(REWRITE_RULE[arith `~(i=0) <=> 1 <= i`]) THEN ASM_REWRITE_TAC[]);
    GMATCH_SIMP_TAC AFF_GT_2_1;
    ASM_REWRITE_TAC[IN_ELIM_THM];
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `k'` EXISTS_TAC;
    ASM_REWRITE_TAC[];
    TYPIFY `k' = t3/ t3'` ENOUGH_TO_SHOW_TAC;
      DISCH_THEN SUBST1_TAC;
      GMATCH_SIMP_TAC REAL_LT_DIV;
      BY(ASM_REWRITE_TAC[]);
    FIRST_X_ASSUM (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    TYPIFY `t3 = k' * t3'` ENOUGH_TO_SHOW_TAC;
      DISCH_THEN SUBST1_TAC;
      Calc_derivative.CALC_ID_TAC;
      BY((FIRST_X_ASSUM_ST `&0 < t` MP_TAC) THEN REAL_ARITH_TAC);
    PROOF_BY_CONTR_TAC;
    TYPIFY `(k'*t2' - t2) % u 0 + (k'*t3' - t3) % u 1 = vec 0` (C SUBGOAL_THEN MP_TAC);
      BY(FIRST_X_ASSUM_ST `%` MP_TAC THEN VECTOR_ARITH_TAC);
    DISCH_TAC;
    TYPIFY `inv (k' * t3' - t3) % (k' * t3' - t3) % u 1 = inv(k' * t3' - t3) % (t2 - k' * t2') % u 0` (C SUBGOAL_THEN ASSUME_TAC);
      REWRITE_TAC[VECTOR_MUL_LCANCEL];
      DISJ2_TAC;
      BY(FIRST_X_ASSUM MP_TAC THEN VECTOR_ARITH_TAC);
    FIRST_X_ASSUM MP_TAC;
    REWRITE_TAC[VECTOR_MUL_ASSOC];
    TYPIFY `inv (k' * t3' - t3) * (k' * t3' - t3) = &1` (C SUBGOAL_THEN SUBST1_TAC);
      Calc_derivative.CALC_ID_TAC;
      BY(REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    REWRITE_TAC[VECTOR_MUL_LID];
    DISCH_TAC;
    FIRST_X_ASSUM_ST `collinear` (C INTRO_TAC [`0`;`1`]);
    ANTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    BY(ASM_MESON_TAC[COLLINEAR_LEMMA_ALT]);
  REPEAT WEAKER_STRIP_TAC;
  (COMMENT "wedge");
  TYPIFY `conv0 {u j,u k}  SUBSET wedge (vec 0) (u 0 cross u 1) (u j) (u k)` (C SUBGOAL_THEN ASSUME_TAC);
    TYPIFY `wedge (vec 0) (u 0 cross u 1) (u j) (u k) = aff_gt {vec 0,u 0 cross u 1} {u j,u k}` ENOUGH_TO_SHOW_TAC;
      DISCH_THEN SUBST1_TAC;
      REWRITE_TAC[CONV0_AFF_GT];
      MATCH_MP_TAC AFF_GT_MONO_LEFT;
      BY(SET_TAC[]);
    MATCH_MP_TAC WEDGE_LUNE_GT;
    TYPIFY_GOAL_THEN `~collinear {vec 0, u 0 cross u 1, u j}` (unlist REWRITE_TAC);
      ASM_CASES_TAC `j= 0`;
        ASM_REWRITE_TAC[];
        ONCE_REWRITE_TAC[SET_RULE `{a,b,c} = {a,c,b}`];
        REWRITE_TAC[GSYM Local_lemmas.COLL_IFF_COLL_CROSS];
        FIRST_X_ASSUM MATCH_MP_TAC;
        BY(ASM_REWRITE_TAC[]);
      FIRST_X_ASSUM MATCH_MP_TAC;
      BY(ASM_REWRITE_TAC[]);
    CONJ_TAC;
      FIRST_X_ASSUM MATCH_MP_TAC;
      BY(ASM_REWRITE_TAC[]);
    GMATCH_SIMP_TAC YBTASCZ3;
    ASM_REWRITE_TAC[];
    GMATCH_SIMP_TAC YBTASCZ2;
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `x IN wedge (vec 0) (u 0 cross u 1) (u j) (u k)` (C SUBGOAL_THEN MP_TAC);
    BY(REPEAT (FIRST_X_ASSUM_ST `conv0` MP_TAC) THEN SET_TAC[]);
  REWRITE_TAC[Reuhady.WEDGE_SIMPLE;IN_ELIM_THM];
  FIRST_X_ASSUM_ST `x = (y:real^3)` SUBST1_TAC;
  TYPIFY `azim (vec 0) (u 0 cross u 1) (u j) (t % u i) = azim (vec 0) (u 0 cross u 1) (u j) (u i)` (C SUBGOAL_THEN SUBST1_TAC);
    FIRST_X_ASSUM_ST `&0 < t` MP_TAC;
    BY(MESON_TAC[AZIM_SCALE_ALL;arith `&0 < &1`;arith `&1 % v = v`]);
  COMMENT "two cases";
  REWRITE_TAC[DE_MORGAN_THM];
  DISJ2_TAC;
  FIRST_X_ASSUM DISJ_CASES_TAC;
    REWRITE_TAC[arith `~(a < b) <=> b <= a`];
    MATCH_MP_TAC REAL_LE_TRANS;
    TYPIFY `pi` EXISTS_TAC;
    SUBCONJ_TAC;
      MATCH_MP_TAC (arith `x < pi ==> x <= pi`);
      MATCH_MP_TAC YBTASCZ2;
      EXISTS_TAC `r:num`;
      BY(ASM_REWRITE_TAC[]);
    DISCH_TAC;
    ONCE_REWRITE_TAC[Rogers.AZIM_COMPL_EXT];
    COND_CASES_TAC;
      TYPIFY `&0 < azim  (vec 0) (u 0 cross u 1) (u i) (u j)` ENOUGH_TO_SHOW_TAC;
        BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
      MATCH_MP_TAC YBTASCZ3;
      TYPIFY `r` EXISTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    MATCH_MP_TAC (arith `x < pi ==> pi <= &2 * pi - x`);
    MATCH_MP_TAC YBTASCZ2;
    EXISTS_TAC `r:num`;
    BY(ASM_REWRITE_TAC[]);
  COMMENT "last case";
  REWRITE_TAC[arith `~(a < b) <=> b <= a`];
  INTRO_TAC Fan.sum3_azim_fan [`(vec 0):real^3`;`u 0 cross u 1`;`u j`;`u k`;`u i`];
  ANTS_TAC;
    CONJ_TAC;
      MATCH_MP_TAC (arith `x < pi /\ y < pi ==> x + y < &2 * pi`);
      CONJ_TAC THEN (MATCH_MP_TAC YBTASCZ2);
        TYPIFY `r` EXISTS_TAC;
        BY(ASM_REWRITE_TAC[]);
      TYPIFY `r` EXISTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    BY(REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  TYPIFY `&0 <=  azim (vec 0) (u 0 cross u 1) (u k) (u i)` ENOUGH_TO_SHOW_TAC;
    BY(REAL_ARITH_TAC);
  BY(REWRITE_TAC[Counting_spheres.AZIM_NN])
  ]);;
  (* }}} *)

(*
let NHCXLRV_PREP_LEMMA = prove_by_refinement(
  `!V E FF f a b v w0 w1 w2.       
    convex_local_fan (V,E,FF) /\
     ~circular V E /\
     deformation f V (a,b) /\
     rho_node1 FF w1 = w2 /\
     rho_node1 FF w0 = w1 /\
    v IN wedge (vec 0) w1 w2 w0 /\
    (!t. t IN real_interval (a,b) ==> (\t. azim (vec 0) (f w1 t) (f w2 t) (f v t)) real_continuous atreal t) /\
    (!t. t IN real_interval (a,b) ==> (\t. azim (vec 0) (f w1 t) (f w2 t) (f w0 t)) real_continuous atreal t) ==>
    (?e. &0 < e /\ 
       (!t. abs t < e ==> (f v t) IN wedge (vec 0) (f w1 t) (f w2 t) (f w0 t)`,
  (* {{{ proof *)
  [
  st/r
  typ `~lunar (v,w1) V E` sat
    rt[Localization.lunar]
st/r
fxast `wedge_in_fan_gt` mp
rt[Localization.wedge_in_fan_gt]
  ]);;
  (* }}} *)

WEDGE_ALT;;
*)

let open_continuous_eps = prove_by_refinement(
  `!U f t a b. (t IN real_interval (a,b)) /\ f t IN U /\
		(!x. x IN real_interval (a,b) ==> f real_continuous atreal x) /\ real_open U ==> 
   (?e. &0 < e /\ (!x. abs (x-t) < e ==> f x IN U))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Pent_hex.continuous_preimage_open [`f`;`real_interval (a,b)`;`U`];
  ASM_REWRITE_TAC[];
  ANTS_TAC;
    BY(ASM_SIMP_TAC[ Ocbicby.REAL_OPEN_REAL_INTERVAL;REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT ]);
  REWRITE_TAC[real_open;IN_ELIM_THM];
  DISCH_THEN (C INTRO_TAC [`t`]);
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let coplanar_in_affine_hull = prove_by_refinement(
  `!(u:real^A) v w x. ~collinear {u,v,w} /\ coplanar {x,u,v,w} ==> x IN affine hull {u,v,w}`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC Counting_spheres.NOT_COLLINEAR_AFF_DIM_2 [`u`;`v`;`w`];
  ASM_REWRITE_TAC[] THEN DISCH_TAC;
  MATCH_MP_TAC Leaf_cell.COPLANAR_INSERT;
  BY(ASM_REWRITE_TAC[])
  ]);;
  (* }}} *)

let azim_0_as_closed = prove_by_refinement(
  `!(v2:real^3) v3 v4. ~collinear {vec 0, v2,v3} /\ ~collinear {vec 0,v2,v4} ==>
    (azim (vec 0) v2 v3 v4 = &0 <=> (coplanar {vec 0,v2,v3,v4} /\ &0 <= ((v2 cross v3) cross v2) dot v4))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `~coplanar {vec 0,v2,v3,v4}` ASM_CASES_TAC THEN RULE_ASSUM_TAC(REWRITE_RULE[]) THEN ASM_REWRITE_TAC[];
    BY(ASM_MESON_TAC[AZIM_EQ_0_PI_IMP_COPLANAR]);
  INTRO_TAC coplanar_in_affine_hull [`(vec 0):real^3`;`v2`;`v3`;`v4`];
  ANTS_TAC;
    ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {b,c,d,a}`];
    BY(ASM_REWRITE_TAC[]);
  DISCH_TAC;
  INTRO_TAC Ckqowsa_4_points.in_affine_hull_lemma [`v2`;`v3`;`v4`];
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `&0 <= ((v2 cross v3) cross v2) dot v4 <=> &0 <= t2` (C SUBGOAL_THEN SUBST1_TAC);
    ASM_REWRITE_TAC[DOT_RADD;DOT_RMUL];
    ONCE_REWRITE_TAC[CROSS_TRIPLE];
    REWRITE_TAC[CROSS_REFL;DOT_LZERO];
    REWRITE_TAC[arith `t1 * &0 + c = c`];
    GMATCH_SIMP_TAC (CONJUNCT2 REAL_LE_MUL_EQ);
    REWRITE_TAC[DOT_POS_LT];
    BY(ASM_REWRITE_TAC[CROSS_EQ_0]);
  TYPIFY `azim (vec 0) v2 v3 v4 = &0 <=> ~(azim (vec 0) v2 v3 v4 = pi)` (C SUBGOAL_THEN SUBST1_TAC);
    BY(ASM_MESON_TAC[Local_lemmas1.AZIM_COND_FOR_COPLANAR;PI_POS;arith `&0 < pi ==> ~(&0 = pi)`]);
  GMATCH_SIMP_TAC Ldurdpn.LDURDPN;
  CONJ_TAC;
    BY(ASM_MESON_TAC[]);
  TYPIFY_GOAL_THEN `(?A. plane A /\ {vec 0, v2, v3, v4} SUBSET A)` (unlist REWRITE_TAC);
    FIRST_X_ASSUM_ST `coplanar` MP_TAC THEN REWRITE_TAC[coplanar] THEN REPEAT WEAKER_STRIP_TAC;
    TYPIFY `affine hull {vec 0,v2,v3}` EXISTS_TAC;
    CONJ2_TAC;
      TYPIFY `v4 IN affine hull {vec 0,v2,v3} /\ {vec 0 ,v2,v3} SUBSET affine hull {vec 0,v2,v3}` ENOUGH_TO_SHOW_TAC;
        BY(SET_TAC[]);
      BY(CONJ_TAC THEN ASM_MESON_TAC[Qzksykg.SET_SUBSET_AFFINE_HULL]);
    REWRITE_TAC[plane];
    BY(ASM_MESON_TAC[]);
  ASM_REWRITE_TAC[];
  REWRITE_TAC[EXTENSION;IN_INTER;NOT_IN_EMPTY];
  REWRITE_TAC[Trigonometry2.AFF2_VEC0;IN_ELIM_THM;Geomdetail.CONV0_SET2;DE_MORGAN_THM;NOT_EXISTS_THM];
  TYPIFY `(!x. (!k. ~(x = k % v2)) \/      (!a b.           ~(&0 < a) \/           ~(&0 < b) \/           ~(a + b = &1) \/           ~(x = a % v3 + b % (t1 % v2 + t2 % v3)))) <=> (!k a b. &0 < a /\ &0 < b /\ a + b = &1 ==> ~(k % v2 = a % v3 + b % (t1 % v2 + t2 % v3)))` (C SUBGOAL_THEN SUBST1_TAC);
    BY(MESON_TAC[]);
  COMMENT "first case";
  ASM_CASES_TAC `&0 <= t2`;
    ASM_REWRITE_TAC[];
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `v3 = (inv (b * t2  + a) * (-- (b * t1 - k))) % v2` ENOUGH_TO_SHOW_TAC;
      BY(ASM_MESON_TAC[COLLINEAR_LEMMA_ALT]);
    MATCH_MP_TAC VECTOR_MUL_LCANCEL_IMP;
    TYPIFY `(b * t2 + a)` EXISTS_TAC;
    SUBCONJ_TAC;
      MATCH_MP_TAC (arith `&0 <= b' /\ &0 < a ==> ~(b' + a = &0)`);
      GMATCH_SIMP_TAC REAL_LE_MUL;
      BY(ASM_TAC THEN REAL_ARITH_TAC);
    REWRITE_TAC[VECTOR_MUL_ASSOC];
    DISCH_TAC;
    TYPIFY `((b * t2 + a) * inv (b * t2 + a) * --(b * t1 - k))  = -- (b * t1 - k)` (C SUBGOAL_THEN SUBST1_TAC);
      Calc_derivative.CALC_ID_TAC;
      BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
    BY(FIRST_X_ASSUM_ST `%` MP_TAC THEN VECTOR_ARITH_TAC);
  ASM_REWRITE_TAC[NOT_FORALL_THM];
  TYPIFY `~(t2 = &1)` (C SUBGOAL_THEN ASSUME_TAC);
    DISCH_THEN (RULE_ASSUM_TAC o (unlist REWRITE_RULE));
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  GEXISTL_TAC [`t1 / (&1 - t2)`;`-- t2 / (&1 - t2)`;`&1 / (&1 - t2)`;];
  DISCH_THEN MP_TAC THEN ANTS_TAC;
    GMATCH_SIMP_TAC REAL_LT_DIV;
    GMATCH_SIMP_TAC REAL_LT_DIV;
    TYPIFY `--t2 / (&1 - t2) + &1 / (&1 - t2) = &1` (C SUBGOAL_THEN SUBST1_TAC);
      Calc_derivative.CALC_ID_TAC;
      BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
    BY(ASM_TAC THEN REAL_ARITH_TAC);
  REWRITE_TAC[];
  TYPIFY `&1 / (&1 - t2) % (t1 % v2 + t2 % v3) = t1 / (&1 - t2) % v2 - --t2 / (&1 - t2) % v3` ENOUGH_TO_SHOW_TAC;
    DISCH_THEN SUBST1_TAC;
    BY(VECTOR_ARITH_TAC);
  REWRITE_TAC[VECTOR_ADD_LDISTRIB];
  REWRITE_TAC[VECTOR_MUL_ASSOC];
  TYPIFY `(&1 / (&1 - t2) * t1) = t1 / (&1 - t2)` (C SUBGOAL_THEN SUBST1_TAC);
    BY(REAL_ARITH_TAC);
  BY(VECTOR_ARITH_TAC)
  ]);;
  (* }}} *)

let REAL_CONTINUOUS_AT_DOT2 = prove_by_refinement(
  `!(f:real->real^A) g x.  f continuous atreal x /\ g continuous atreal x
            ==> (\x. (f x dot g x)) real_continuous atreal x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[REAL_CONTINUOUS_CONTINUOUS1];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `lift o (\x. f x dot g x) = (\x. lift (f x dot g x))` (C SUBGOAL_THEN SUBST1_TAC);
    BY(REWRITE_TAC[FUN_EQ_THM;o_DEF]);
  INTRO_TAC CONTINUOUS_AT_LIFT_DOT2 [`f o drop`;`g o drop`;`lift x`];
  TYPIFY `(\x. lift ((f o drop) x dot (g o drop) x)) = (\x. lift (f x dot g x)) o drop` (C SUBGOAL_THEN SUBST1_TAC);
    BY(REWRITE_TAC[FUN_EQ_THM;o_DEF]);
  BY(ASM_REWRITE_TAC[GSYM Xbjrphc.CONTINUOUS_CONTINUOUS_ATREAL])
  ]);;
  (* }}} *)

let azim_pos_open = prove_by_refinement(
  `!v2 v3 v4 t a b.     (!x. x IN real_interval (a,b) ==> v2 continuous (atreal x)) /\
    (!x. x IN real_interval (a,b) ==> v3 continuous (atreal x)) /\
    (!x. x IN real_interval (a,b) ==> v4 continuous (atreal x)) /\
    t IN real_interval(a,b) /\
    ~collinear {(vec 0) ,(v2 t) ,(v3 t)}  /\ ~collinear {(vec 0), (v2 t), (v4 t)} /\
    ~(azim (vec 0) (v2 t) (v3 t) (v4 t) = &0) ==>
  (?e. &0 < e /\ (!t'. abs(t' - t) < e ==> ~(azim (vec 0) (v2 t') (v3 t') (v4 t') = &0)))
 `,
  (* {{{ proof *)
  [
  REWRITE_TAC[real_open;IN_ELIM_THM];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (GEN_ALL NONCOLLINEAR_OPEN ) [`t`;`(vec 0):real^3`;`v2`;`v3`];
  ANTS_TAC;
    BY(ASM_MESON_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (GEN_ALL NONCOLLINEAR_OPEN ) [`t`;`(vec 0):real^3`;`v2`;`v4`];
  ANTS_TAC;
    BY(ASM_MESON_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC azim_0_as_closed [`v2 t`;`v3 t`;`v4 t`];
  ASM_REWRITE_TAC[DE_MORGAN_THM];
  DISCH_TAC;
  TYPIFY `?e. &0 < e /\ (!t'. abs(t - t') < e ==> (~coplanar {vec 0, v2 t', v3 t', v4 t'} \/ ~(&0 <= ((v2 t' cross v3 t') cross v2 t') dot v4 t')))` (C SUBGOAL_THEN MP_TAC);
    FIRST_X_ASSUM DISJ_CASES_TAC;
      INTRO_TAC NONPLANAR_OPEN [`\(t:real). ((vec 0):real^3)`;`v2`;`v3`;`v4`;`t`];
      ANTS_TAC;
        ASM_REWRITE_TAC[CONTINUOUS_CONST];
        BY(ASM_MESON_TAC[]);
      REWRITE_TAC[];
      BY(MESON_TAC[]);
    TYPIFY `(\t. ((v2 t cross v3 t) cross v2 t) dot -- (v4 t)) real_continuous_on ( real_interval(a,b) )` (C SUBGOAL_THEN ASSUME_TAC);
      GMATCH_SIMP_TAC REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT;
      REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL];
      REPEAT WEAKER_STRIP_TAC;
      MATCH_MP_TAC REAL_CONTINUOUS_AT_DOT2;
      CONJ2_TAC;
        MATCH_MP_TAC CONTINUOUS_NEG;
        BY(ASM_MESON_TAC[]);
      MATCH_MP_TAC Xbjrphc.CONTINUOUS_CROSS;
      CONJ2_TAC;
        BY(ASM_MESON_TAC[]);
      MATCH_MP_TAC Xbjrphc.CONTINUOUS_CROSS;
      BY(ASM_MESON_TAC[]);
    INTRO_TAC Pent_hex.continuous_preimage_open [`(\x. ((v2 x cross v3 x) cross v2 x) dot -- v4 x)`;`real_interval(a,b)`;`{u | &0 < u}`];
    ANTS_TAC;
      ASM_REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL];
      BY(REWRITE_TAC[REAL_OPEN_HALFSPACE_GT;arith ` &0 < x <=> x > &0`]);
    REWRITE_TAC[IN_ELIM_THM];
    REWRITE_TAC[real_open;DOT_RNEG;arith `&0 < -- x <=> ~(&0 <= x)`;IN_ELIM_THM];
    DISCH_THEN (C INTRO_TAC [`t`]);
    ANTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    BY(MESON_TAC[arith `abs (x' - t) < e <=> abs (t - x') < e`]);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `?e'''. e''' <= e /\ e''' <= e' /\ e''' <= e'' /\ &0 < e'''` (C SUBGOAL_THEN MP_TAC);
    TYPIFY `if (e'' <= e' /\ e'' <= e) then e'' else (if (e' <= e'' /\ e' <= e) then e' else e)` EXISTS_TAC;
    BY(REPEAT (FIRST_X_ASSUM_ST `&0 < e` MP_TAC) THEN REAL_ARITH_TAC);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `e'''` EXISTS_TAC;
  ASM_REWRITE_TAC[];
  GEN_TAC;
  DISCH_TAC;
  GMATCH_SIMP_TAC azim_0_as_closed;
  REWRITE_TAC[DE_MORGAN_THM];
  BY(REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_TAC THEN TRY REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let azim_real_continuous_on = prove_by_refinement(
  `!v2 v3 v4 t a b.
    (!x. x IN real_interval (a,b) ==> v2 continuous (atreal x)) /\
    (!x. x IN real_interval (a,b) ==> v3 continuous (atreal x)) /\
    (!x. x IN real_interval (a,b) ==> v4 continuous (atreal x)) /\
    t IN real_interval(a,b) /\
    ~collinear {(vec 0) ,(v2 t) ,(v3 t)}  /\ ~collinear {(vec 0), (v2 t), (v4 t)} /\
    ~(azim (vec 0) (v2 t) (v3 t) (v4 t)  = &0) ==>
    (?e. &0 < e /\ (\q. azim (vec 0) (v2 q) (v3 q) (v4 q)) real_continuous_on (real_interval (t - e, t+ e)))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (GEN_ALL NONCOLLINEAR_OPEN) [`t`;`(vec 0):real^3`;`v2`;`v3`];
  ANTS_TAC;
    BY(ASM_REWRITE_TAC[] THEN CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (GEN_ALL NONCOLLINEAR_OPEN) [`t`;`(vec 0):real^3`;`v2`;`v4`];
  ANTS_TAC;
    BY(ASM_REWRITE_TAC[] THEN CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC azim_pos_open [`v2`;`v3`;`v4`;`t`;`a`;`b`];
  ANTS_TAC;
    BY(ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `?e'''.  &0 < e''' /\ (!x. t - e''' < x /\ x < t + e''' ==> x IN real_interval (a,b))` (C SUBGOAL_THEN MP_TAC);
    TYPIFY `if (b-t <= t -a) then b -  t else t - a` EXISTS_TAC;
    FIRST_X_ASSUM_ST `IN` MP_TAC;
    REWRITE_TAC[IN_REAL_INTERVAL];
    BY(REAL_ARITH_TAC);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `?e''''. e'''' <= e /\ e'''' <= e' /\ e'''' <= e'' /\ e'''' <= e''' /\ &0 < e''''` (C SUBGOAL_THEN MP_TAC);
    INTRO_TAC Packing3.REAL_FINITE_MIN_EXISTS [`{e,e',e'',e'''}`];
    ANTS_TAC;
      CONJ_TAC;
        BY(MESON_TAC[FINITE_RULES]);
      BY(SET_TAC[]);
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `m` EXISTS_TAC;
    RULE_ASSUM_TAC(REWRITE_RULE[IN_INSERT;NOT_IN_EMPTY]);
    REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN (REPEAT (FIRST_X_ASSUM_ST `&0 < e` MP_TAC));
    BY(MESON_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `e''''` EXISTS_TAC;
  ASM_REWRITE_TAC[];
  GMATCH_SIMP_TAC REAL_CONTINUOUS_ON_EQ_REAL_CONTINUOUS_AT;
  REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL;IN_REAL_INTERVAL];
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC Xbjrphc.REAL_CONTINUOUS_ATREAL_AZIM_COMPOSE;
  ASM_REWRITE_TAC[CONTINUOUS_CONST];
  GMATCH_SIMP_TAC (GSYM Local_lemmas.AZIM_EQ_0_GE_ALT2);
  TYPIFY `x IN real_interval (a,b)` (C SUBGOAL_THEN ASSUME_TAC);
    FIRST_X_ASSUM MATCH_MP_TAC;
    BY(REPLICATE_TAC 5 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
  BY(REPEAT CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[] THEN (REPLICATE_TAC 10 (FIRST_X_ASSUM MP_TAC)) THEN TRY REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let azim_pos_iff_nz = prove_by_refinement(
  `!v1 v2 v3 v4.
    &0 < azim v1 v2 v3 v4 <=> ~(azim v1 v2 v3 v4 = &0)`,
  (* {{{ proof *)
  [
  BY(MESON_TAC[Counting_spheres.AZIM_NN;arith `&0 < x <=> (&0 <= x /\ ~(x = &0))`])
  ]);;
  (* }}} *)



(* was NHCXLRV_PREP *)

let NHCXLRV = prove_by_refinement(
  `!v w0 w1 w2 f a b.    
    deformation f {w0,w1,w2,v} (a,b) /\
    ~collinear {vec 0, f w1 (&0), f w2 (&0)} /\
    ~collinear {vec 0, f w1 (&0), f w0 (&0)} /\
    ~collinear {vec 0, f w1 (&0), f v (&0)} /\
    v IN wedge (vec 0) w1 w2 w0 ==>
    (?e. &0 < e /\ 
       (!t. abs t < e ==> (f v t) IN wedge (vec 0) (f w1 t) (f w2 t) (f w0 t)))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Reuhady.WEDGE_SIMPLE;IN_ELIM_THM;IN_INSERT;NOT_IN_EMPTY;Localization.deformation];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `?c. azim (vec 0) w1 w2 v < c /\ c < azim (vec 0) w1 w2 w0` (C SUBGOAL_THEN MP_TAC);
    TYPIFY `(azim (vec 0) w1 w2 v + azim (vec 0) w1 w2 w0)/ &2` EXISTS_TAC;
    BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `(?e1. &0 < e1 /\ (!t. abs t < e1 ==> &0 < azim (vec 0) (f w1 t) (f w2 t) (f v t))) /\(?e2. &0 < e2 /\ (!t. abs t < e2 ==> azim (vec 0) (f w1 t) (f w2 t) (f v t) < c)) /\ (?e3. &0 < e3 /\ (!t. abs t < e3 ==> c < azim (vec 0) (f w1 t) (f w2 t) (f w0 t)))` ENOUGH_TO_SHOW_TAC;
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `if (e1 <= e2 /\ e1 <= e3) then e1 else if (e2 <= e3 /\ e2 <= e1) then e2 else e3` EXISTS_TAC;
    CONJ_TAC;
      BY(ASM_TAC THEN REAL_ARITH_TAC);
    REPEAT WEAKER_STRIP_TAC;
    CONJ_TAC;
      FIRST_X_ASSUM MATCH_MP_TAC;
      BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
    MATCH_MP_TAC REAL_LT_TRANS;
    TYPIFY `c` EXISTS_TAC;
    BY(CONJ_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
  INTRO_TAC azim_real_continuous_on [`f w1`;`f w2`;`f w0`;`&0`;`a`;`b`];
  ANTS_TAC;
    ASM_REWRITE_TAC[GSYM azim_pos_iff_nz];
    FIRST_X_ASSUM_ST `\/` (REPEAT o GMATCH_SIMP_TAC);
    TYPIFY_GOAL_THEN `&0 < azim (vec 0) w1 w2 w0` (unlist REWRITE_TAC);
      BY(ASM_MESON_TAC[Counting_spheres.AZIM_NN;arith `&0 <= x /\ x < y ==> &0 < y`]);
    BY(REPEAT CONJ_TAC THEN REPEAT WEAKER_STRIP_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC azim_real_continuous_on [`f w1`;`f w2`;`f v`;`&0`;`a`;`b`];
  ANTS_TAC;
    ASM_REWRITE_TAC[GSYM azim_pos_iff_nz];
    FIRST_X_ASSUM_ST `\/` (REPEAT o GMATCH_SIMP_TAC);
    ASM_REWRITE_TAC[];
    BY(REPEAT CONJ_TAC THEN REPEAT WEAKER_STRIP_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  RULE_ASSUM_TAC (REWRITE_RULE[arith `&0 - e = -- e /\ &0 + e  = e`]);
  INTRO_TAC Pent_hex.continuous_preimage_open [`(\q. azim (vec 0) (f w1 q) (f w2 q) (f v q))`;`real_interval (-- e',e')`;`{x | &0 < x}`];
  ASM_REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL;REAL_OPEN_HALFSPACE_GT;arith ` &0 < x <=> x > &0`];
  INTRO_TAC Pent_hex.continuous_preimage_open [`(\q. azim (vec 0) (f w1 q) (f w2 q) (f v q))`;`real_interval (-- e',e')`;`{x | x < c }`];
  ASM_REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL;REAL_OPEN_HALFSPACE_LT];
  INTRO_TAC Pent_hex.continuous_preimage_open [`(\q. azim (vec 0) (f w1 q) (f w2 q) (f w0 q))`;`real_interval (-- e,e)`;`{x | c < x}`];
  ASM_REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL;REAL_OPEN_HALFSPACE_GT;arith ` c < x <=> x > c`];
  REWRITE_TAC[IN_REAL_INTERVAL;IN_ELIM_THM;real_open];
  REWRITE_TAC[arith `x > c <=> c < x`];
  REPEAT (DISCH_THEN (C INTRO_TAC [`&0`]) THEN (FIRST_ASSUM_ST `\/` (REPEAT o GMATCH_SIMP_TAC)) THEN ASM_SIMP_TAC[arith `&0 < e ==> -- e < &0`] THEN DISCH_TAC);
  RULE_ASSUM_TAC (REWRITE_RULE[arith `x - &0 = x`]);
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let WNWSHJT = prove_by_refinement(
  `!w0 w1 w2 f a b.    
    deformation f {w0,w1,w2} (a,b) /\
    ~collinear {vec 0, f w1 (&0), f w2 (&0)} /\
    ~collinear {vec 0, f w1 (&0), f w0 (&0)} /\
    &0 < azim (vec 0) w1 w2 w0   /\
    azim (vec 0) w1 w2 w0 < pi ==> 
    (?e. &0 < e /\ 
       (!t. abs t < e ==> azim (vec 0) (f w1 t) (f w2 t) (f w0 t) < pi))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[IN_ELIM_THM;IN_INSERT;NOT_IN_EMPTY;Localization.deformation];
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC azim_real_continuous_on [`f w1`;`f w2`;`f w0`;`&0`;`a`;`b`];
  ANTS_TAC;
    ASM_REWRITE_TAC[GSYM azim_pos_iff_nz];
    FIRST_X_ASSUM_ST `\/` (REPEAT o GMATCH_SIMP_TAC);
    ASM_REWRITE_TAC[];
    BY(REPEAT CONJ_TAC THEN REPEAT WEAKER_STRIP_TAC THEN FIRST_X_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[]);
  REPEAT WEAKER_STRIP_TAC;
  RULE_ASSUM_TAC (REWRITE_RULE[arith `&0 - e = -- e /\ &0 + e  = e`]);
  INTRO_TAC Pent_hex.continuous_preimage_open [`(\q. azim (vec 0) (f w1 q) (f w2 q) (f w0 q))`;`real_interval (-- e,e)`;`{x | x < pi}`];
  ASM_REWRITE_TAC[Ocbicby.REAL_OPEN_REAL_INTERVAL;REAL_OPEN_HALFSPACE_LT];
  REWRITE_TAC[IN_REAL_INTERVAL;IN_ELIM_THM;real_open];
  REPEAT (DISCH_THEN (C INTRO_TAC [`&0`]) THEN (FIRST_ASSUM_ST `\/` (REPEAT o GMATCH_SIMP_TAC)) THEN ASM_SIMP_TAC[arith `&0 < e ==> -- e < &0`] THEN DISCH_TAC);
  RULE_ASSUM_TAC (REWRITE_RULE[arith `x - &0 = x`]);
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)


let LOFA_IMP_INANGLE_EQ_AZIM = prove_by_refinement
(`!V E FF v. local_fan (V,E,FF) /\ v IN V ==> interior_angle1 (vec 0) FF v = azim_in_fan (v, rho_node1 FF v) E `,
[
  REWRITE_TAC[Localization.convex_local_fan; Local_lemmas.azim_in_fan2];
  REPEAT STRIP_TAC;
  ASSUME_TAC2 Local_lemmas.EXISTS_INVERSE_OF_V;
  DOWN THEN STRIP_TAC;
  ASSUME_TAC2 Local_lemmas.LOFA_IMP_EE_TWO_ELMS;
  ASSUME_TAC2 Local_lemmas.LOFA_CARD_EE_V_1;
  ASSUME_TAC2 Lunar_deform.LOCAL_FAN_RHO_NODE_PROS2;
  DOWN THEN STRIP_TAC;
  UNDISCH_TAC` v:real^3 IN V `;
  FIRST_ASSUM NHANH;
  LET_TAC;
  SWITCH_TAC` EE v E = {rho_node1 FF v, vv} `;
  ASM_SIMP_TAC[ARITH_RULE` a = 2 ==> a > 1 `];
  STRIP_TAC;
  DOWN THEN DOWN THEN PHA;
  ASSUME_TAC2 (SPEC `vv:real^3 ` (GEN` v:real^3 ` Local_lemmas.IVS_RHO_IDD));
  EXPAND_TAC "d";
  SIMP_TAC[];
  UNDISCH_TAC` {rho_node1 FF v, vv} = EE v E `;
  DISCH_THEN (SUBST1_TAC o SYM);
  EXPAND_TAC "v";
  DOWN;
  BY(SIMP_TAC[Local_lemmas.interior_angle1; GSYM Local_lemmas.ivs_rho_node1; Local_lemmas.AZIM_CYCLE_TWO_POINT_SET])
]);;

let deformation_rho_node1_equivariant1 = prove_by_refinement(
  `!f V E FF a b v t. 
    deformation f V (a,b) /\
    local_fan (V,E,FF) /\
    local_fan
                    (IMAGE (\v. f v t) V,
                     IMAGE (\s. IMAGE (\v. f v t) s) E,
                     IMAGE (\ (u,v). f u t,f v t) FF) /\
    v IN V ==>
    f (rho_node1 FF v) t = rho_node1 (IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF) (f v t)`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  MATCH_MP_TAC EQ_SYM;
  MATCH_MP_TAC (GEN_ALL Local_lemmas.DETER_RHO_NODE);
  GEXISTL_TAC [`IMAGE (\v. f v t) V`;`       IMAGE (\s. IMAGE (\v. f v t) s) E`];
  CONJ_TAC;
    TYPIFY `IMAGE (\(u,v). f u t,f v t) FF = IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF` ENOUGH_TO_SHOW_TAC;
      DISCH_THEN (SUBST1_TAC o GSYM);
      BY(ASM_REWRITE_TAC[]);
    BY(REWRITE_TAC[EXTENSION;IN_IMAGE;EXISTS_PAIR_THM]);
  REWRITE_TAC[IN_IMAGE;EXISTS_PAIR_THM];
  GEXISTL_TAC [`v`;`rho_node1 FF v`];
  REWRITE_TAC[];
  BY(ASM_MESON_TAC[Lunar_deform.LOCAL_FAN_RHO_NODE_PROS2])
  ]);;
  (* }}} *)

let deformation_rho_node1_equivariant = prove_by_refinement(
  `!f V E FF a b v . 
    deformation f V (a,b) /\
    local_fan (V,E,FF) /\
    v IN V ==>
    (?e. &0 < e /\ 
       (!t. abs t < e ==> f (rho_node1 FF v) t = rho_node1 (IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF) (f v t)))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  INTRO_TAC (GEN_ALL Lunar_deform.XRECQNS_UPDATE) [`a`;`b`;`V`;`E`;`f`;`FF`];
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  TYPIFY `e` EXISTS_TAC;
  ASM_REWRITE_TAC[];
  REPEAT WEAKER_STRIP_TAC;
  FIRST_X_ASSUM (C INTRO_TAC [`t`]);
  ASM_REWRITE_TAC[];
  BY(ASM_MESON_TAC[deformation_rho_node1_equivariant1])
  ]);;
  (* }}} *)

let deformation_subset = prove_by_refinement(
  `!f U V a b. U SUBSET V /\ deformation f V (a,b) ==> deformation f U (a,b)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Localization.deformation;SUBSET];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let zlz_reduction = prove_by_refinement(
  `!a b V E FF f.
     convex_local_fan (V,E,FF) /\
     generic V E /\
     deformation f V (a,b) /\
     (!v t. v IN V /\ t IN real_interval (a,b) /\ interior_angle1 (vec 0) FF v = pi ==>
	 interior_angle1 (vec 0) ( IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF) (f v t) <= pi) /\
    many_more ==> (?e. &0 < e /\
              (!t. --e < t /\ t < e
                   ==> convex_local_fan
                       (IMAGE (\v. f v t) V,
                        IMAGE (IMAGE (\v. f v t)) E,
                        IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF) /\
                       generic (IMAGE (\v. f v t) V)
                       (IMAGE (IMAGE (\v. f v t)) E)))`,
  (* {{{ proof *)
  [
  REPEAT WEAKER_STRIP_TAC;
  REWRITE_TAC[Localization.convex_local_fan];
  REWRITE_TAC[Localization.generic];
  COMMENT "preliminaries";
  TYPIFY `!t. IMAGE (\s. IMAGE (\v. f v t) s) E = IMAGE (IMAGE (\v. f v t)) E /\ IMAGE (\(u,v). f u t,f v t) FF = IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF` (C SUBGOAL_THEN ASSUME_TAC);
    BY(REWRITE_TAC[EXTENSION;IN_IMAGE;EXISTS_PAIR_THM]);
  INTRO_TAC (GEN_ALL Local_lemmas.CVX_LO_IMP_LO) [`V`;`E`;`FF`];
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  TYPIFY `FINITE FF` (C SUBGOAL_THEN ASSUME_TAC);
    MATCH_MP_TAC Wrgcvdr_cizmrrh.LOCAL_FAN_FINITE_FF;
    BY(ASM_REWRITE_TAC[]);
  TYPIFY `~(FF = {})` (C SUBGOAL_THEN ASSUME_TAC);
    MATCH_MP_TAC Polar_fan.LOCAL_FAN_NOT_EMPTY_FF;
    BY(ASM_MESON_TAC[]);
  TYPIFY `(?e1. &0 < e1 /\ (!t. --e1 < t /\ t < e1 ==>       (local_fan               (IMAGE (\v. f v t) V,                IMAGE (IMAGE (\v. f v t)) E,                IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF)))) /\     (?e2. &0 < e2 /\ (!t. --e2 < t /\ t < e2 ==> 			 ((!x. x IN IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF                    ==> azim_in_fan x (IMAGE (IMAGE (\v. f v t)) E) <= pi)))) /\     (?e3. &0 < e3 /\ (!t. --e3 < t /\ t < e3 ==> 			 (!x. x IN IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF                    ==>                         IMAGE (\v. f v t) V SUBSET                        wedge_in_fan_ge x (IMAGE (IMAGE (\v. f v t)) E)))) /\    (?e4. &0 < e4 /\ (!t. --e4 < t /\ t < e4 ==> 			(!v w u.                   {v, w} IN IMAGE (IMAGE (\v. f v t)) E /\                   u IN IMAGE (\v. f v t) V                   ==> aff_ge {vec 0} {v, w} INTER aff_lt {vec 0} {u} = {})))` ENOUGH_TO_SHOW_TAC;
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `?e. e <= e1 /\ e <= e2 /\ e <= e3 /\ e <= e4 /\ &0 < e` (C SUBGOAL_THEN MP_TAC);
      INTRO_TAC Packing3.REAL_FINITE_MIN_EXISTS [`{e1,e2,e3,e4}`];
      ANTS_TAC;
        CONJ_TAC;
          BY(MESON_TAC[FINITE_RULES]);
        BY(SET_TAC[]);
      REPEAT WEAKER_STRIP_TAC;
      TYPIFY `m` EXISTS_TAC;
      RULE_ASSUM_TAC(REWRITE_RULE[IN_INSERT;NOT_IN_EMPTY]);
      REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN (REPEAT (FIRST_X_ASSUM_ST `&0 < e` MP_TAC));
      BY(MESON_TAC[]);
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `e` EXISTS_TAC;
    BY(ASM_MESON_TAC[arith `-- e < t /\ t < e /\ e <= e' ==> (-- e' < t /\ t < e')`]);
  COMMENT "local_fan";
  SUBCONJ_TAC;
    INTRO_TAC (GEN_ALL Lunar_deform.XRECQNS_UPDATE) [`a`;`b`;`V`;`E`;`f`;`FF`];
    ANTS_TAC;
      BY(ASM_REWRITE_TAC[]);
    REWRITE_TAC[arith `-- e < t /\ t < e <=> abs t < e`];
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `e` EXISTS_TAC;
    ASM_REWRITE_TAC[];
    REPEAT WEAKER_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`t`]);
    BY(ASM_REWRITE_TAC[]);
  DISCH_TAC;
  COMMENT "angle <= pi";
  CONJ_TAC;
    TYPIFY `!x. ?e2. x IN FF ==> ( &0 < e2 /\   (!t.  --e2 < t /\ t < e2 ==> azim_in_fan ( (\uv. f (FST uv) t,f (SND uv) t) x) (IMAGE (IMAGE (\v. f v t)) E) <= pi))` ENOUGH_TO_SHOW_TAC;
      REWRITE_TAC[SKOLEM_THM];
      REPEAT WEAKER_STRIP_TAC;
      TYPIFY `?e. &0 < e /\ (!x. x IN FF ==> e <= e2 x)` (C SUBGOAL_THEN MP_TAC);
        INTRO_TAC Packing3.REAL_FINITE_MIN_EXISTS [`IMAGE e2 FF`];
        ANTS_TAC;
          CONJ_TAC;
            (MATCH_MP_TAC FINITE_IMAGE);
            BY(ASM_REWRITE_TAC[]);
          (MATCH_MP_TAC Fatugpd.NOT_EMPTY_IMAGE);
          BY(ASM_REWRITE_TAC[]);
        REPEAT WEAKER_STRIP_TAC;
        TYPIFY `m` EXISTS_TAC;
        REPLICATE_TAC 4 (FIRST_X_ASSUM MP_TAC);
        REWRITE_TAC[EXTENSION;NOT_IN_EMPTY];
        REWRITE_TAC[IN_IMAGE];
        BY(MESON_TAC[]);
      REPEAT WEAKER_STRIP_TAC;
      TYPIFY `e` EXISTS_TAC;
      ASM_REWRITE_TAC[];
      REPEAT WEAKER_STRIP_TAC;
      FIRST_X_ASSUM MP_TAC;
      REWRITE_TAC[IN_IMAGE;EXISTS_PAIR_THM];
      REPEAT WEAKER_STRIP_TAC;
      REPEAT (FIRST_X_ASSUM (C INTRO_TAC [`p1,p2`]));
      DISCH_TAC;
      ASM_REWRITE_TAC[];
      DISCH_TAC;
      FIRST_X_ASSUM_ST `IMAGE` MP_TAC;
      ASM_REWRITE_TAC[];
      REPEAT WEAKER_STRIP_TAC;
      FIRST_X_ASSUM (C INTRO_TAC [`t`]);
      ANTS_TAC;
        BY(ASM_TAC THEN REAL_ARITH_TAC);
      BY(REWRITE_TAC[]);
    GEN_TAC;
    COMMENT "individual angle <= pi";
    REWRITE_TAC[GSYM RIGHT_IMP_EXISTS_THM];
    DISCH_TAC;
    TYPIFY `?p1 p2. (x = p1,p2)` (C SUBGOAL_THEN MP_TAC);
      BY(REWRITE_TAC[PAIR_SURJECTIVE]);
    REPEAT WEAKER_STRIP_TAC;
    TYPIFY `p1 IN V` (C SUBGOAL_THEN ASSUME_TAC);
      BY(ASM_MESON_TAC[Local_lemmas.LOCAL_FAN_IMP_IN_V]);
    TYPIFY `p2 = rho_node1 FF p1` (C SUBGOAL_THEN ASSUME_TAC);
      MATCH_MP_TAC EQ_SYM;
      MATCH_MP_TAC Local_lemmas.DETER_RHO_NODE;
      ASM_REWRITE_TAC[];
      BY(ASM_MESON_TAC[]);
    TYPIFY `interior_angle1 (vec 0) FF p1 = azim_in_fan x E` (C SUBGOAL_THEN ASSUME_TAC);
      INTRO_TAC LOFA_IMP_INANGLE_EQ_AZIM [`V`;`E`;`FF`;`p1`];
      BY(ASM_MESON_TAC[]);
    TYPIFY `interior_angle1 (vec 0) FF p1 = pi` ASM_CASES_TAC;
      FIRST_X_ASSUM_ST `?` MP_TAC;
      REPEAT WEAKER_STRIP_TAC;
      TYPIFY `?e. &0 < e /\ e <= e1 /\ (!t. abs t < e ==> t IN real_interval (a,b))` (C SUBGOAL_THEN MP_TAC);
        TYPIFY `if (b <= -- a) /\ b <= e1 then b else (if e1 <= b /\ e1 <= --a then e1 else -- a)` EXISTS_TAC;
        REWRITE_TAC[IN_REAL_INTERVAL];
        RULE_ASSUM_TAC(REWRITE_RULE[Localization.deformation;IN_REAL_INTERVAL]);
        ASM_TAC THEN REPEAT WEAKER_STRIP_TAC;
        CONJ_TAC;
          BY(ASM_TAC THEN REAL_ARITH_TAC);
        CONJ_TAC;
          BY(ASM_TAC THEN REAL_ARITH_TAC);
        GEN_TAC;
        BY(REAL_ARITH_TAC);
      REPEAT WEAKER_STRIP_TAC;
      TYPIFY `e` EXISTS_TAC;
      ASM_REWRITE_TAC[];
      REPEAT WEAKER_STRIP_TAC;
      GMATCH_SIMP_TAC deformation_rho_node1_equivariant1;
      CONJ_TAC;
        GEXISTL_TAC [`a`;`b`;`E`;`V`];
        ASM_REWRITE_TAC[];
        FIRST_X_ASSUM MATCH_MP_TAC;
        BY(ASM_TAC THEN REAL_ARITH_TAC);
      GMATCH_SIMP_TAC (GSYM LOFA_IMP_INANGLE_EQ_AZIM);
      CONJ_TAC;
        TYPIFY `IMAGE (\v. f v t) V` EXISTS_TAC;
        CONJ_TAC;
          FIRST_X_ASSUM MATCH_MP_TAC;
          BY(REPLICATE_TAC 10 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
        REWRITE_TAC[IN_IMAGE];
        TYPIFY `p1` EXISTS_TAC;
        BY(ASM_REWRITE_TAC[]);
      FIRST_X_ASSUM MATCH_MP_TAC;
      ASM_REWRITE_TAC[];
      CONJ_TAC;
        FIRST_X_ASSUM MATCH_MP_TAC;
        BY(REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
      BY(ASM_MESON_TAC[]);
    COMMENT "case azim < pi";
    TYPIFY `interior_angle1 (vec 0) FF p1 < pi` (C SUBGOAL_THEN ASSUME_TAC);
      RULE_ASSUM_TAC (REWRITE_RULE[Localization.convex_local_fan]);
      FIRST_X_ASSUM_ST `wedge_in_fan_ge` MP_TAC THEN REPEAT WEAKER_STRIP_TAC;
      TYPIFY `interior_angle1 (vec 0) FF p1 <= pi` ENOUGH_TO_SHOW_TAC;
        BY(REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
      ASM_REWRITE_TAC[];
      BY(ASM_MESON_TAC[]);
    INTRO_TAC WNWSHJT [`ivs_rho_node1 FF p1`;`p1`;`p2`;`f`;`a`;`b`];
    ASM_REWRITE_TAC[];
    REPEAT (GMATCH_SIMP_TAC (GSYM Local_lemmas1.AZIM_IN_FAN_RHOND_IVS_RHOND));
    TYPIFY `E` EXISTS_TAC;
    CONJ_TAC;
      BY(ASM_MESON_TAC[]);
    ANTS_TAC;
      CONJ_TAC;
        MATCH_MP_TAC deformation_subset;
        TYPIFY `V` EXISTS_TAC;
        ASM_REWRITE_TAC[];
        REWRITE_TAC[SUBSET;IN_INSERT;NOT_IN_EMPTY];
        BY(ASM_MESON_TAC[Local_lemmas1.LOCAL_FAN_IVS_IN_V;Local_lemmas.LOFA_IN_V_SO_DO_RHO_NODE_V])

conj
xxd to here.

mmp Local_lemmas.LOCAL_FAN_CHARACTER_OF_RHO_NODE2

xxd



(* need to fix e so that works with local_fan *)
Nkezbfc_local.CONVEX_LOFA_IMP_INANGLE_EQ_AZIM
  ]);;
  (* }}} *)



let ZLZTHIC_concl = 
`!a b V E FF f.
     convex_local_fan (V,E,FF) /\
     generic V E /\
     deformation f V (a,b) /\
     (!v t. v IN V /\ t IN real_interval (a,b) /\ interior_angle1 (vec 0) FF v = pi ==>
	 interior_angle1 (vec 0) ( IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF) (f v t) <= pi)
     ==> (?e. &0 < e /\
              (!t. --e < t /\ t < e
                   ==> convex_local_fan
                       (IMAGE (\v. f v t) V,
                        IMAGE (IMAGE (\v. f v t)) E,
                        IMAGE (\uv. f (FST uv) t,f (SND uv) t) FF) /\
                       generic (IMAGE (\v. f v t) V)
                       (IMAGE (IMAGE (\v. f v t)) E)))`;;


Pent_hex.continuous_preimage_open;;

