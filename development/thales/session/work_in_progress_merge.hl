flyspeck_needs "nonlinear/merge_ineq.hl";;


open Hales_tactic;;
open Searching;;
open Merge_ineq;;

let CALC_ID_TAC = Calc_derivative.CALC_ID_TAC;;



let cell3_from_ineq = `!y4 y5 y6.
   &2 <= y4 /\ &2 <= y5 /\ &2 <= y6 /\
    y4 <= &2 * sqrt(&2) /\ y5 <= &2 * sqrt(&2) /\ y6 <= &2 * sqrt(&2) /\
    eta_y (y4) (y5) (y6) < sqrt(&2) ==>
    &0 <= gamma3f y4 y5 y6 sqrt2 lmfun `;;

(* some conclusions *)

let leaf = `leaf V ul = hl ul < sqrt2 /\ ul IN barV V 2`;;

let stem = `stem ul = set_of_list (truncate_simplex 1 ul)`;;

let REUHADY_concl = `!V u0 u1 vl1 vl2 v1 v2 e.
  saturated V /\ packing V /\
  dist(u0,u1) < sqrt8 /\
  e = {u0,u1} /\
  ~(vl1 = vl2) /\
  hl vl1 < sqrt2 /\ hl vl2 < sqrt2 /\
  vl1 IN barV V 2 /\ vl2 IN barV V 2 /\
  set_of_list (truncate_simplex 1 vl1)= e  /\
  set_of_list (truncate_simplex 1 vl2) =e /\
  v1 = EL 2 vl1 /\
  v2 = EL 2 vl2 /\
  (!X. X IN mcell_set V /\ e IN edgeX V X ==>
     (X SUBSET wedge_ge u0 u1 v1 v2 \/
     X SUBSET wedge_ge u0 u1 v2 v1)) ==> 
  (sum {X | mcell_set V X /\ e IN edgeX V X /\ X SUBSET wedge_ge u0 u1 v1 v2 } 
     (\t. dihX V t (u0,u1)) = azim u0 u1 v1 v2)`;;



(* ========================================================================== *)
(* COMPLETED LEMMAS  *)
(* ========================================================================== *)

(* ========================================================================== *)
(* WORK IN PROGRESS *)
(* ========================================================================== *)


