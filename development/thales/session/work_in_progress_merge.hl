flyspeck_needs "nonlinear/merge_ineq.hl";;


open Hales_tactic;;
open Searching;;
open Merge_ineq;;

let CALC_ID_TAC = Calc_derivative.CALC_ID_TAC;;



let cell3_from_ineq = `!y4 y5 y6.
   &2 <= y4 /\ &2 <= y5 /\ &2 <= y6 /\
    y4 <= &2 * sqrt(&2) /\ y5 <= &2 * sqrt(&2) /\ y6 <= &2 * sqrt(&2) /\
    eta_y (y4) (y5) (y6) < sqrt(&2) ==>
    &0 <= gamma3f y4 y5 y6 sqrt2 lmfun `;;

(* some conclusions *)

let leaf = `leaf V ul = hl ul < sqrt2 /\ ul IN barV V 2`;;

let stem = `stem ul = set_of_list (truncate_simplex 1 ul)`;;




(* ========================================================================== *)
(* COMPLETED LEMMAS  *)
(* ========================================================================== *)
open Merge_ineq;;


(* ========================================================================== *)
(* WORK IN PROGRESS *)
(* ========================================================================== *)



let ineq_critical_edge2 = prove_by_refinement(
  `!u v y f.
    ( y < &2 * hminus ==>
    ineq (APPEND u (CONS (&2,y,&2 * hminus) v)) f) /\
    ineq (APPEND u (CONS (&2 * hminus,y,sqrt8) v)) f ==>
    ineq (APPEND u (CONS (&2,y,sqrt8) v)) f`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ineq_APPEND;Pack_defs.critical_edge_y];
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `(y <= &2 * hminus ==> y <= sqrt8) /\ (&2 * hminus <= y ==> &2 <= y)` ASSUME_TAC;
    BY(ASM_SIMP_TAC[y_bounds]);
  DISJ_CASES_TAC (arith `y < &2 * hminus \/ &2 * hminus <= y`);
    FIRST_X_ASSUM_ST `ineq` kill;
    FIRST_X_ASSUM_ST `ineq` MP_TAC;
    ASM_REWRITE_TAC[];
    MATCH_MP_TAC ineq_monotone;
    BY(ASM_MESON_TAC[arith `y < x ==> y <= x`]);
  FIRST_X_ASSUM_ST `ineq` MP_TAC;
  MATCH_MP_TAC ineq_monotone;
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let CRIT2_TAC n  = 
  CHOP_LIST_TAC n THEN
    MATCH_MP_TAC ( ineq_critical_edge2)
    THEN ASM_REWRITE_TAC[APPEND];;


let ineq_critical_edge3 = prove_by_refinement(
  `!u v y f.
    ( y < &2 * hminus ==>
    ineq (APPEND u (CONS (&2,y,&2 * hminus) v)) f) /\
    (  &2 * hplus < y ==>
    ineq (APPEND u (CONS (&2 * hplus,y,sqrt8) v)) f) /\
    ineq (APPEND u (CONS (&2 * hminus,y,&2 * hplus) v)) f ==>
    ineq (APPEND u (CONS (&2,y,sqrt8) v)) f`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ineq_APPEND;Pack_defs.critical_edge_y];
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `(y <= &2 * hminus ==> y <= sqrt8) /\ (&2 * hminus <= y ==> &2 <= y)` ASSUME_TAC;
    BY(ASM_SIMP_TAC[y_bounds]);
  SUBGOAL_THEN `(y <= &2 * hplus ==> y <= sqrt8) /\ (&2 * hplus < y ==> &2 <= y)` ASSUME_TAC;
    MP_TAC Merge_ineq.hminus_lt_hplus;
    (MP_TAC y_bounds);
    REWRITE_TAC[Sphere.sqrt2;Nonlinear_lemma.sqrt8_sqrt2];
    DISCH_THEN (C INTRO_TAC [`y`]);
    REPEAT WEAK_STRIP_TAC;
    CONJ_TAC;
      BY(ASM_REWRITE_TAC[]);
    DISCH_TAC;
    FIRST_X_ASSUM MATCH_MP_TAC;
    REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC);
    BY(REAL_ARITH_TAC);
  DISJ_CASES_TAC (arith `y < &2 * hminus \/ (&2 * hminus <= y /\ y <= &2 * hplus) \/ (&2 * hplus < y)`);
    FIRST_X_ASSUM (fun t -> (FIRST_X_ASSUM (fun s -> MP_TAC (MATCH_MP t s) THEN ASSUME_TAC s)));
    MATCH_MP_TAC ineq_monotone;
    BY(ASM_MESON_TAC[arith `y < x ==> y <= x`]);
  FIRST_X_ASSUM DISJ_CASES_TAC;
    FIRST_X_ASSUM_ST `ineq` MP_TAC;
    MATCH_MP_TAC ineq_monotone;
    BY(ASM_MESON_TAC[]);
  FIRST_X_ASSUM (fun t -> (FIRST_X_ASSUM (fun s -> MP_TAC (MATCH_MP t s) THEN ASSUME_TAC s)));
  MATCH_MP_TAC ineq_monotone;
  REPEAT WEAK_STRIP_TAC;
  FIRST_X_ASSUM MATCH_MP_TAC;
  BY(ASM_MESON_TAC[arith `y < x ==> y <= x`])
  ]);;
  (* }}} *)

let CRIT3_TAC n  = 
  CHOP_LIST_TAC n THEN
    MATCH_MP_TAC ( ineq_critical_edge3)
    THEN ASM_REWRITE_TAC[APPEND];;


let ineq_critical_edge4 = prove_by_refinement(
  `!u v y f.
    (  &2 * hplus < y ==>
    ineq (APPEND u (CONS (&2 * hplus,y,sqrt8) v)) f) /\
    ineq (APPEND u (CONS (&2 * hminus,y,&2 * hplus) v)) f ==>
    ineq (APPEND u (CONS (&2 * hminus,y,sqrt8) v)) f`,
  (* {{{ proof *)
  [
  REWRITE_TAC[ineq_APPEND;Pack_defs.critical_edge_y];
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `(y <= &2 * hminus ==> y <= sqrt8) /\ (&2 * hminus <= y ==> &2 <= y)` ASSUME_TAC;
    BY(ASM_SIMP_TAC[y_bounds]);
  SUBGOAL_THEN `(y <= &2 * hplus ==> y <= sqrt8) /\ (&2 * hplus < y ==> &2 *hminus <= y)` ASSUME_TAC;
    MP_TAC Merge_ineq.hminus_lt_hplus;
    (MP_TAC y_bounds);
    REWRITE_TAC[Sphere.sqrt2;Nonlinear_lemma.sqrt8_sqrt2];
    DISCH_THEN (C INTRO_TAC [`y`]);
    REPEAT WEAK_STRIP_TAC;
    CONJ_TAC;
      BY(ASM_REWRITE_TAC[]);
    FIRST_X_ASSUM MP_TAC;
    BY(REAL_ARITH_TAC);
  DISJ_CASES_TAC (arith `(&2 * hplus < y) \/ (y <= &2 * hplus)`);
    FIRST_X_ASSUM (fun t -> (FIRST_X_ASSUM (fun s -> MP_TAC (MATCH_MP t s) THEN ASSUME_TAC s)));
    MATCH_MP_TAC ineq_monotone;
    BY(ASM_MESON_TAC[arith `y < x ==> y <= x`]);
  FIRST_X_ASSUM_ST `ineq` MP_TAC;
  MATCH_MP_TAC ineq_monotone;
  BY(ASM_MESON_TAC[])
  ]);;
  (* }}} *)

let CRIT4_TAC n  = 
  CHOP_LIST_TAC n THEN
    MATCH_MP_TAC ( ineq_critical_edge4)
    THEN ASM_REWRITE_TAC[APPEND];;




(* QITNPEA4 series 3803737830.
    We assume type QX, so exclude QU (quarters).
    We use TSKAJXY to assume &0 <= gamma4fgcy.  *)

let QITNPEA4_3803737830_concl = `!y1 y2 y3 y4 y5 y6. 
  ineq [(&2 * hminus, y1, &2 * hplus);
	(&2 ,y2, sqrt8);
	(&2,y3,sqrt8);
	(&2,y4,sqrt8);
	(&2,y5,sqrt8);
	(&2,y6,sqrt8)]
  (rad2_y y1 y2 y3 y4 y5 y6 < &2 /\
   (~(y2 < &2 * hminus /\ y3 < &2 * hminus /\ 
	y4 < &2 * hminus /\ y5 < &2 * hminus /\ y6 < &2 * hminus)) /\
   (&0 <= gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun )
   ==> 
     (gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun / &(wtcount6_y y1 y2 y3 y4 y5 y6) + 
	beta_bumpA_y y1 y2 y3 y4 y5 y6 
      - #0.0105256 +  #0.00522841*dih_y y1 y2 y3 y4 y5 y6 > #0.0))`;;

let QITNPEA4_3803737830_full = add_hyp 
  [
"QITNPEA4 0 0 0 1 3803737830";
"QITNPEA4 0 0 1 0 3803737830";
"QITNPEA4 0 1 0 0 3803737830";
"QITNPEA4 1 0 0 0 3803737830";
"QITNPEA4 0 0 1 1 3803737830";
"QITNPEA4 0 1 0 1 3803737830";
"QITNPEA4 1 0 0 1 3803737830";
"QITNPEA4 0 1 1 0 3803737830";
"QITNPEA4 1 0 1 0 3803737830";
"QITNPEA4 1 1 0 0 3803737830";
"QITNPEA4 0 1 1 1 3803737830";
"QITNPEA4 1 0 1 1 3803737830";
"QITNPEA4 1 1 0 1 3803737830";
"QITNPEA4 1 1 1 0 3803737830";
"QITNPEA4 1 1 1 1 3803737830";
"QITNPEA4 3803737830 supercritical";
"CIHTIUM";
"FWGKMBZ";
] QITNPEA4_3803737830_concl;;

g QITNPEA4_3803737830_full;;

let QITNPEA4_3803737830 = prove_by_refinement(
  QITNPEA4_3803737830_full,
  (* {{{ proof *)
  [
  REPEAT DISCH_TAC;
  COMMENT "WLOG. y2 <= y6";
  SUBGOAL_THEN `!(p:real->real->real->real->real->real->bool). ((!y1 y2 y3 y4 y5 y6. (p y1 y2 y3 y4 y5 y6 ==> p y1 y6 y5 y4 y3 y2)) /\ (!y1 y2 y3 y4 y5 y6. (y2 <= y6) ==> p y1 y2 y3 y4 y5 y6)) ==> (!y1 y2 y3 y4 y5 y6. p y1 y2 y3 y4 y5 y6)` MATCH_MP_TAC;
    BY(MESON_TAC[arith `y <= x \/ x <= y`]);
  CONJ_TAC;
    REPEAT GEN_TAC;
    REWRITE_TAC[Sphere.ineq];
    REPEAT WEAK_STRIP_TAC;
    REPLICATE_TAC 2 (FIRST_X_ASSUM_ST `gamma4fgcy` MP_TAC);
    ASM_REWRITE_TAC[];
    SUBGOAL_THEN `gamma4fgcy y1 y6 y5 y4 y3 y2 lmfun = gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun` SUBST1_TAC;
      BY(MESON_TAC[gamma4fgcy_sym23;gamma4fgcy_sym12;gamma4fgcy_sym03]);
    SUBGOAL_THEN `wtcount6_y y1 y6 y5 y4 y3 y2 = wtcount6_y y1 y2 y3 y4 y5 y6` SUBST1_TAC;
      BY(REWRITE_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y] THEN ARITH_TAC);
    SUBGOAL_THEN `beta_bumpA_y y1 y6 y5 y4 y3 y2 = beta_bumpA_y y1 y2 y3 y4 y5 y6` SUBST1_TAC;
      REWRITE_TAC[ beta_bumpA_y];
      BY(REAL_ARITH_TAC);
    SUBGOAL_THEN `dih_y y1 y6 y5 y4 y3 y2 = dih_y y1 y2 y3 y4 y5 y6` SUBST1_TAC;
      BY(MESON_TAC[Nonlinear_lemma.dih_y_sym;Nonlinear_lemma.dih_y_sym2]);
    SUBGOAL_THEN `rad2_y y1 y2 y3 y4 y5 y6 = rad2_y y1 y6 y5 y4 y3 y2` SUBST1_TAC;
      BY(MESON_TAC[Merge_ineq.rad2_y_sym]);
    REPLICATE_TAC 2 (FIRST_X_ASSUM MP_TAC);
    BY(MESON_TAC[]);
  COMMENT "WLOG y2 < &2 * hminus";
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  FIRST_X_ASSUM_ST `delta_x` MP_TAC;
  REPEAT WEAK_STRIP_TAC;
  FIRST_X_ASSUM_ST `delta_x` (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
  REWRITE_TAC[Sphere.ineq;arith `x > &0 <=> &0 < x`;Sphere.y_of_x];
  ASM_SIMP_TAC[y_bounds];
  DISCH_TAC;
  FIRST_X_ASSUM_ST `eta_y` (C INTRO_TAC [`&1`;`&1`;`&1`;`y1`;`y2`;`y6`]);
  REWRITE_TAC[Sphere.ineq;arith `&1 <= &1`];
  ASM_SIMP_TAC[y_bounds];
  SUBGOAL_THEN `y1 <= sqrt8` ASSUME_TAC;
    REWRITE_TAC[Nonlinear_lemma.sqrt8_sqrt2];
    BY(ASM_SIMP_TAC[y_bounds;Sphere.sqrt2]);
  ASM_REWRITE_TAC[];
  DISCH_TAC;
  INTRO_TAC rad2_eta2 [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`];
  ASM_SIMP_TAC[y_bounds;Sphere.delta_y];
  DISCH_TAC;
  ASM_CASES_TAC `&2 * hminus <= y2`;
    FIRST_X_ASSUM_ST `>` MP_TAC;
    ASM_REWRITE_TAC[];
    ANTS_TAC;
      BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC);
    FIRST_X_ASSUM_ST `eta_y` MP_TAC;
    BY(REAL_ARITH_TAC);
  COMMENT "remove rad2";
  FIRST_X_ASSUM_ST `rad2_y` MP_TAC;
  REWRITE_TAC[Sphere.rad2_y];
  DISCH_THEN (fun t -> ASSUME_TAC (MATCH_MP (arith `x < &2 ==> ~(x > &2)`) t));
  REPEAT (FIRST_X_ASSUM_ST `ineq` (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]));
  ASM_REWRITE_TAC[];
  (COMMENT "0 < weight");
  SUBGOAL_THEN `critical_edge_y y1` ASSUME_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(ASM_REWRITE_TAC[]);
  SUBGOAL_THEN `&0 < &(wtcount6_y y1 y2 y3 y4 y5 y6)` ASSUME_TAC;
    REWRITE_TAC[ REAL_OF_NUM_LT];
    REWRITE_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y];
    ASM_REWRITE_TAC[];
    BY(ARITH_TAC);
  REPEAT WEAK_STRIP_TAC;
  ASM_CASES_TAC `y2 < &2 * hminus /\ y3 < &2 * hminus /\ y5 < &2 * hminus /\ y6 < &2 * hminus`;
    SUBGOAL_THEN `&2 * hminus <=  y4` ASSUME_TAC;
      FIRST_X_ASSUM MP_TAC;
      REPEAT (FIRST_X_ASSUM_ST `~x` MP_TAC);
      REWRITE_TAC[arith `&2 * hminus <= y4 <=> ~(y4 < &2 * hminus)`];
      BY(REAL_ARITH_TAC);
    SUBGOAL_THEN `~critical_edge_y y2 /\ ~critical_edge_y y3 /\ ~critical_edge_y y5 /\ ~critical_edge_y y6` ASSUME_TAC;
      BY(ASM_SIMP_TAC[Sphere.critical_edge_y;arith `!x. x < &2 * hminus ==> ~(&2 * hminus <= x)`]);
    SUBGOAL_THEN `wtcount6_y y1 y2 y3 y4 y5 y6 = if critical_edge_y y4 then (2) else (1)` SUBST1_TAC;
      ASM_REWRITE_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y];
      BY(COND_CASES_TAC THEN ARITH_TAC);
    SUBGOAL_THEN `beta_bumpA_y y1 y2 y3 y4 y5 y6 = if critical_edge_y y4 then &1 * beta_bump_force_y y1 y2 y3 y4 y5 y6 else (&0)` SUBST1_TAC;
      ASM_REWRITE_TAC[ beta_bumpA_y;Sphere.beta_bump_force_y];
      BY(COND_CASES_TAC THEN REAL_ARITH_TAC);
    ASM_CASES_TAC `critical_edge_y y4`;
      ASM_REWRITE_TAC[];
      FIRST_X_ASSUM_ST `&1 * x` MP_TAC;
      REWRITE_TAC[Sphere.ineq];
      BY(ASM_SIMP_TAC[y_bounds;arith `!x. x < &2 * hminus ==> x <= &2 * hminus`]);
    ASM_REWRITE_TAC[];
    FIRST_X_ASSUM_ST `ineq` MP_TAC;
    REWRITE_TAC[Sphere.ineq];
    ASM_SIMP_TAC[y_bounds;arith `!x. x < &2 * hminus ==> x <= &2 * hminus`];
    ANTS_TAC;
      FIRST_X_ASSUM MP_TAC;
      FIRST_X_ASSUM_ST `hminus` MP_TAC;
      BY(MESON_TAC[Sphere.critical_edge_y;arith `~(y <= &2 * hplus) ==> &2 * hplus <= y`]);
    BY(REAL_ARITH_TAC);
  COMMENT "remove beta_bumpA_y";
  SUBGOAL_THEN `beta_bumpA_y y1 y2 y3 y4 y5 y6 = &0` SUBST1_TAC;
    ASM_REWRITE_TAC[ beta_bumpA_y];
    FIRST_X_ASSUM MP_TAC;
    REWRITE_TAC[DE_MORGAN_THM];
    BY(COND_CASES_TAC THEN (TRY REAL_ARITH_TAC));
  FIRST_X_ASSUM_ST `ineq` kill;
  REPEAT (FIRST_X_ASSUM_ST `ineq` MP_TAC);
  REWRITE_TAC[arith `&0 * x = &0`];
  REPEAT DISCH_TAC;
  COMMENT "fix weights";
  SUBGOAL_THEN `!a w' f g. ineq a (f / &w' + g > #0.0) ==> ineq a (&0 <= f /\ wtcount6_y y1 y2 y3 y4 y5 y6 <= w') ==> ineq a (f / &(wtcount6_y y1 y2 y3 y4 y5 y6) + g > #0.0)` MP_TAC;
    REPEAT GEN_TAC;
    DISCH_TAC;
    MATCH_MP_TAC Merge_ineq.ineq_MP;
    FIRST_X_ASSUM MP_TAC;
    MATCH_MP_TAC Merge_ineq.ineq_monotone;
    REPEAT WEAK_STRIP_TAC;
    ENOUGH_TO_SHOW_TAC `f/ &w' <= f/ &(wtcount6_y y1 y2 y3 y4 y5 y6)`;
      REPLICATE_TAC 3 (FIRST_X_ASSUM MP_TAC);
      BY(REAL_ARITH_TAC);
    REWRITE_TAC[real_div];
    GMATCH_SIMP_TAC Real_ext.REAL_LE_LMUL_IMP;
    ASM_REWRITE_TAC[];
    GMATCH_SIMP_TAC REAL_LE_INV2;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[ REAL_OF_NUM_LE];
    BY(ASM_REWRITE_TAC[]);
  FIRST_X_ASSUM_ST `&1 * x` kill;
  DISCH_THEN (fun t -> REPEAT (FIRST_X_ASSUM_ST `ineq` (fun s -> MP_TAC(MATCH_MP t s))));
  ASM_REWRITE_TAC[ineq_T];
  REPEAT WEAK_STRIP_TAC;
  ABBREV_TAC `ccc = (gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun /            &(wtcount6_y y1 y2 y3 y4 y5 y6) +            &0 -  #0.0105256 +            #0.00522841 * dih_y y1 y2 y3 y4 y5 y6 >             #0.0)`;
  FIRST_X_ASSUM kill;
  COMMENT "make strict ineqs";
  ENOUGH_TO_SHOW_TAC `ineq [(&2 * hminus, y1, &2 * hplus);	(&2 ,y2, &2 * hminus);	(&2,y3,sqrt8);	(&2,y4,sqrt8);	(&2,y5,sqrt8);	(&2,y6,sqrt8)] ccc`;
    REWRITE_TAC[Sphere.ineq];
    BY(ASM_SIMP_TAC[arith `~(x <= y2) ==> (y2 <= x)`]);
  SUBGOAL_THEN `(( y2 < &2 * hminus /\  y3 < &2 * hminus /\  y5 < &2 * hminus /\  y6 < &2 * hminus) ==> ineq   [&2 * hminus,y1,&2 * hplus; &2,y2,&2 * hminus; &2 ,y3,&2 * hminus;&2,y4,&2 * hminus; &2 ,y5,&2 * hminus; &2 ,y6,&2 * hminus] ccc) /\ (( y2  < &2 * hminus /\  y3 < &2 * hminus /\  y5 < &2 * hminus /\  y6 < &2 * hminus) ==> ineq [&2 * hminus,y1,&2 * hplus; &2,y2,&2 * hminus; &2 ,y3,&2 * hminus;&2 * hminus,y4,sqrt8; &2 ,y5,&2 * hminus; &2 ,y6,&2 * hminus]  ccc)` MP_TAC;
    REWRITE_TAC[Sphere.ineq;Sphere.critical_edge_y];
    FIRST_X_ASSUM_ST `~x` MP_TAC;
    MP_TAC Merge_ineq.hminus_lt_hplus;
    BY(REAL_ARITH_TAC);
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `~critical_edge_y y2 /\ y2 < &2 * hminus` MP_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(ASM_SIMP_TAC[ arith `~(x <= y2) ==> (y2 < x)`]);
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `!y. y < &2 * hminus ==> ~critical_edge_y y` ASSUME_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(REAL_ARITH_TAC);
  COMMENT "split cases";
  CRIT2_TAC 2 THEN CONJ_TAC THEN REPEAT WEAK_STRIP_TAC THEN CRIT2_TAC 3 THEN CONJ_TAC THEN REPEAT WEAK_STRIP_TAC THEN CRIT2_TAC 4 THEN CONJ_TAC THEN REPEAT WEAK_STRIP_TAC THEN CRIT2_TAC 5 THEN CONJ_TAC THEN REPEAT WEAK_STRIP_TAC THEN (TRY (FIRST_X_ASSUM MATCH_MP_TAC)) THEN (REPEAT (FIRST_X_ASSUM_ST `ineq` kill)) THEN ASM_REWRITE_TAC[Sphere.ineq;Sphere.wtcount6_y;Sphere.wtcount3_y] THEN REPEAT WEAK_STRIP_TAC THEN ASM_SIMP_TAC[] THEN TRY(ARITH_TAC);
    REPLICATE_TAC 10 (FIRST_X_ASSUM MP_TAC);
    BY(MESON_TAC[]);
  REPLICATE_TAC 10 (FIRST_X_ASSUM MP_TAC);
  BY(MESON_TAC[])
  ]);;
  (* }}} *)


let QITNPEA1_9063653052_concl = `!y1 y2 y3 y4 y5 y6. 
  ineq [(&2 * hminus, y1, &2 * hplus);
	(&2 ,y2, &2 * hminus);
	(&2* hminus,y3,sqrt8);
	(&2,y4,sqrt8);
	(&2,y5,&2 * hminus);
	(&2,y6,&2 * hminus)]
  (rad2_y y1 y2 y3 y4 y5 y6 < &2 /\
   (&0 <= gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun ) /\
  (y2 < &2 * hminus /\ y5 < &2 * hminus /\ y6 < &2 * hminus) 
   ==> 
     (gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun / &(wtcount6_y y1 y2 y3 y4 y5 y6) 
	  > #0.0057))`;;

let QITNPEA1_9063653052_full = add_hyp 
  [
"QITNPEA1 1 0 9063653052 A";
"QITNPEA1 1 1 9063653052 A";
"QITNPEA1 1 2 9063653052 A";
"QITNPEA1 2 0 9063653052 A";
"QITNPEA1 2 1 9063653052 A";
"QITNPEA1 2 2 9063653052 A";
] QITNPEA1_9063653052_concl;;

g QITNPEA1_9063653052_full;;


let QITNPEA_9063653052_weak = prove_by_refinement(
  QITNPEA1_9063653052_full,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  COMMENT "remove rad2";
  FIRST_X_ASSUM_ST `rad2_y` MP_TAC;
  REWRITE_TAC[Sphere.rad2_y];
  DISCH_THEN (fun t -> ASSUME_TAC (MATCH_MP (arith `x < &2 ==> ~(x > &2)`) t));
  REPEAT (FIRST_X_ASSUM_ST `ineq` (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]));
  ASM_REWRITE_TAC[];
  (COMMENT "0 < weight");
  SUBGOAL_THEN `critical_edge_y y1` ASSUME_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(ASM_REWRITE_TAC[]);
  SUBGOAL_THEN `&0 < &(wtcount6_y y1 y2 y3 y4 y5 y6)` ASSUME_TAC;
    REWRITE_TAC[ REAL_OF_NUM_LT];
    REWRITE_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y];
    ASM_REWRITE_TAC[];
    BY(ARITH_TAC);
  REPEAT WEAK_STRIP_TAC;
  COMMENT "fix weights";
  SUBGOAL_THEN `!a w' f . ineq a (f / &w'  > #0.0057) ==> ineq a (&0 <= f /\ wtcount6_y y1 y2 y3 y4 y5 y6 <= w') ==> ineq a (f / &(wtcount6_y y1 y2 y3 y4 y5 y6)  > #0.0057)` MP_TAC;
    REPEAT GEN_TAC;
    DISCH_TAC;
    MATCH_MP_TAC Merge_ineq.ineq_MP;
    FIRST_X_ASSUM MP_TAC;
    MATCH_MP_TAC Merge_ineq.ineq_monotone;
    REPEAT WEAK_STRIP_TAC;
    ENOUGH_TO_SHOW_TAC `f/ &w' <= f/ &(wtcount6_y y1 y2 y3 y4 y5 y6)`;
      REPLICATE_TAC 3 (FIRST_X_ASSUM MP_TAC);
      BY(REAL_ARITH_TAC);
    REWRITE_TAC[real_div];
    GMATCH_SIMP_TAC Real_ext.REAL_LE_LMUL_IMP;
    ASM_REWRITE_TAC[];
    GMATCH_SIMP_TAC REAL_LE_INV2;
    ASM_REWRITE_TAC[];
    REWRITE_TAC[ REAL_OF_NUM_LE];
    BY(ASM_REWRITE_TAC[]);
  DISCH_THEN (fun t -> REPEAT (FIRST_X_ASSUM_ST `ineq` (fun s -> MP_TAC(MATCH_MP t s))));
  ASM_REWRITE_TAC[ineq_T];
  REPEAT WEAK_STRIP_TAC;
  ABBREV_TAC `ccc = (gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun /   &(wtcount6_y y1 y2 y3 y4 y5 y6) >             #0.0057)`;
  FIRST_X_ASSUM kill;
  COMMENT "make strict ineqs";
  ENOUGH_TO_SHOW_TAC `ineq [(&2 * hminus, y1, &2 * hplus);	(&2 ,y2, &2 * hminus);	(&2* hminus,y3,sqrt8);	(&2,y4,sqrt8);	(&2,y5,&2 * hminus);	(&2,y6,&2 * hminus)]  ccc`;
    REWRITE_TAC[Sphere.ineq];
    BY(ASM_REWRITE_TAC[]);
  SUBGOAL_THEN `!y. y < &2 * hminus ==> ~critical_edge_y y` ASSUME_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(REAL_ARITH_TAC);
  SUBGOAL_THEN `!y.  &2 * hplus < y ==> ~critical_edge_y y` ASSUME_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(REAL_ARITH_TAC);
  SUBGOAL_THEN `~critical_edge_y y2 /\ ~critical_edge_y y5 /\ ~critical_edge_y y6` MP_TAC;
    FIRST_X_ASSUM kill;
    BY(ASM_MESON_TAC[]);
  REPEAT STRIP_TAC;
  BY(CRIT3_TAC 3 THEN REPEAT CONJ_TAC THEN REPEAT WEAK_STRIP_TAC THEN TRY(CRIT4_TAC 2 THEN CONJ_TAC THEN REPEAT WEAK_STRIP_TAC) THEN TRY(FIRST_X_ASSUM MATCH_MP_TAC) THEN (REPEAT (FIRST_X_ASSUM_ST `ineq` kill)) THEN ASM_REWRITE_TAC[Sphere.ineq;Sphere.wtcount6_y;Sphere.wtcount3_y] THEN REPEAT WEAK_STRIP_TAC THEN ASM_SIMP_TAC[] THEN TRY(ARITH_TAC))
  ]);;
  (* }}} *)

let g_qxd_concl = 
  `!y1 y2 y3 y4 y5 y6.
    ineq [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (#2.3 < dih_y y1 y2 y3 y4 y5 y6 ==>
       #0.0057 < gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun / &(wtcount6_y y1 y2 y3 y4 y5 y6) + beta_bumpA_y y1 y2 y3 y4 y5 y6)`;;

let g_qxd_full = add_hyp [
  "BIXPCGW 7080972881 a2";
  "BIXPCGW 1738910218 a2";
  "BIXPCGW 7274157868 a";
] g_qxd_concl;;

g g_qxd_full;;

let g_qxd = prove_by_refinement(
  g_qxd_full,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  CRIT2_TAC 1;
  CONJ2_TAC;
    REPLICATE_TAC 2 (FIRST_X_ASSUM kill);
    REWRITE_TAC[Sphere.ineq];
    REPEAT WEAK_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
    REWRITE_TAC[Sphere.ineq];
    ASM_SIMP_TAC[];
    BY(FIRST_X_ASSUM MP_TAC THEN REAL_ARITH_TAC);
  DISCH_TAC;
  CRIT2_TAC 2;
  CONJ2_TAC;
    REPLICATE_TAC 2 (FIRST_X_ASSUM_ST `ineq` kill);
    REWRITE_TAC[Sphere.ineq];
    REPEAT WEAK_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`y1`;`y3`;`y2`;`y4`;`y6`;`y5`]);
    REWRITE_TAC[Sphere.ineq];
    ASM_SIMP_TAC[y_bounds];
    FIRST_X_ASSUM (MP_TAC o (MATCH_MP (arith `x < y ==> ~(y < x)`)));
    BY(MESON_TAC[Nonlinear_lemma.dih_y_sym;Nonlinear_lemma.dih_y_sym2]);
  DISCH_TAC;
  CRIT2_TAC 4;
  CONJ2_TAC;
    REPLICATE_TAC 2 (FIRST_X_ASSUM_ST `ineq` kill);
    REWRITE_TAC[Sphere.ineq];
    REPEAT WEAK_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`y1`;`y5`;`y6`;`y4`;`y2`;`y3`]);
    REWRITE_TAC[Sphere.ineq];
    ASM_SIMP_TAC[y_bounds];
    FIRST_X_ASSUM (MP_TAC o (MATCH_MP (arith `x < y ==> ~(y < x)`)));
    BY(MESON_TAC[Nonlinear_lemma.dih_y_sym;Nonlinear_lemma.dih_y_sym2]);
  DISCH_TAC;
  CRIT2_TAC 5;
  CONJ2_TAC;
    REPLICATE_TAC 2 (FIRST_X_ASSUM_ST `ineq` kill);
    REWRITE_TAC[Sphere.ineq];
    REPEAT WEAK_STRIP_TAC;
    FIRST_X_ASSUM (C INTRO_TAC [`y1`;`y6`;`y5`;`y4`;`y3`;`y2`]);
    REWRITE_TAC[Sphere.ineq];
    ASM_SIMP_TAC[y_bounds];
    FIRST_X_ASSUM (MP_TAC o (MATCH_MP (arith `x < y ==> ~(y < x)`)));
    BY(MESON_TAC[Nonlinear_lemma.dih_y_sym;Nonlinear_lemma.dih_y_sym2]);
  DISCH_TAC;
  ASM_CASES_TAC `y4 <= &2 * hplus`;
    FIRST_X_ASSUM_ST `ineq` kill;
    REWRITE_TAC[Sphere.ineq];
    REPEAT WEAK_STRIP_TAC;
    FIRST_X_ASSUM_ST `ineq` (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
    REWRITE_TAC[Sphere.ineq];
    ASM_SIMP_TAC[y_bounds];
    FIRST_X_ASSUM (MP_TAC o (MATCH_MP (arith `x < y ==> ~(y < x)`)));
    BY(MESON_TAC[]);
  SUBGOAL_THEN `!y. y < &2 * hminus ==> ~critical_edge_y y` ASSUME_TAC;
    BY(REWRITE_TAC[Sphere.critical_edge_y] THEN REAL_ARITH_TAC);
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `critical_edge_y y1` ASSUME_TAC;
    BY(REWRITE_TAC[Sphere.critical_edge_y] THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN REAL_ARITH_TAC);
  SUBGOAL_THEN `~critical_edge_y y4` ASSUME_TAC;
    BY(REWRITE_TAC[Sphere.critical_edge_y] THEN (REPEAT (FIRST_X_ASSUM MP_TAC)) THEN REAL_ARITH_TAC);
  SUBGOAL_THEN `wtcount6_y y1 y2 y3 y4 y5 y6 = 1` SUBST1_TAC;
    ASM_SIMP_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y];
    BY(ARITH_TAC);
  SUBGOAL_THEN `beta_bumpA_y y1 y2 y3 y4 y5 y6 = &0` SUBST1_TAC;
    ASM_SIMP_TAC[Sphere.beta_bumpA_y];
    BY(REAL_ARITH_TAC);
  REWRITE_TAC[arith `x / &1 = x /\ x + &0 = x`];
  REWRITE_TAC[arith `x < y <=> y > x`];
  FIRST_X_ASSUM_ST `ineq` (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]);
  REWRITE_TAC[Sphere.ineq];
  ASM_SIMP_TAC[y_bounds];
  BY(REPEAT (FIRST_X_ASSUM MP_TAC) THEN REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let gamma_qx_concl = `!y1 y2 y3 y4 y5 y6. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2,sqrt8);
    (&2,y3,sqrt8);
    (&2,y4,sqrt8);
    (&2,y5,sqrt8);
    (&2,y6,sqrt8)
   ]
   ((rad2_y y1 y2 y3 y4 y5 y6 < &2) /\
      ~(y2 < &2 * hminus /\ y3 < &2 * hminus /\ y4 < &2 * hminus /\ y5 < &2 * hminus /\ y6 < &2 * hminus)
 ==> (&0 < gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun / &(wtcount6_y y1 y2 y3 y4 y5 y6) + beta_bumpA_y y1 y2 y3 y4 y5 y6))`;;

let gamma_qx_full  = add_hyp 
[
"GLFVCVK4 2477216213";
"GLFVCVK4a 8328676778";
]
gamma_qx_concl;;

g gamma_qx_full;;

let gamma_qx = prove_by_refinement(
  gamma_qx_full,
  (* {{{ proof *)
  [
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[Sphere.ineq];
  REPEAT WEAK_STRIP_TAC;
  REPEAT (FIRST_X_ASSUM (C INTRO_TAC [`y1`;`y2`;`y3`;`y4`;`y5`;`y6`]));
  REPEAT WEAK_STRIP_TAC;
  SUBGOAL_THEN `critical_edge_y y1` ASSUME_TAC;
    REWRITE_TAC[Sphere.critical_edge_y];
    BY(ASM_SIMP_TAC[]);
  SUBGOAL_THEN `&0 < &(wtcount6_y y1 y2 y3 y4 y5 y6)` ASSUME_TAC;
    REWRITE_TAC[ REAL_OF_NUM_LT];
    REWRITE_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y];
    ASM_REWRITE_TAC[];
    BY(ARITH_TAC);
  COMMENT "case wt2-beta";
  ASM_CASES_TAC `y2 < &2 * hminus /\ y3 < &2 * hminus /\ critical_edge_y y4 /\ y5 < &2 * hminus /\ y6 < &2 * hminus`;
    SUBGOAL_THEN `!y. y < &2 * hminus ==> ~critical_edge_y y` ASSUME_TAC;
      BY(REWRITE_TAC[Sphere.critical_edge_y] THEN REAL_ARITH_TAC);
    SUBGOAL_THEN `wtcount6_y y1 y2 y3 y4 y5 y6 = 2` SUBST1_TAC;
      ASM_SIMP_TAC[Sphere.wtcount6_y;Sphere.wtcount3_y];
      BY(ARITH_TAC);
    SUBGOAL_THEN `beta_bumpA_y y1 y2 y3 y4 y5 y6 = beta_bump_force_y y1 y2 y3 y4 y5 y6` SUBST1_TAC;
      ASM_SIMP_TAC[Sphere.beta_bumpA_y;Sphere.beta_bump_force_y];
      BY(REAL_ARITH_TAC);
    FIRST_X_ASSUM_ST `ineq` MP_TAC;
    ASM_SIMP_TAC[Sphere.ineq;arith `x < y ==> x <= y`];
    ASM_SIMP_TAC[GSYM Sphere.rad2_y;arith `x < y ==> ~( x > y)`];
    REWRITE_TAC[arith `x > y <=> y < x`];
    DISCH_THEN MATCH_MP_TAC;
    BY(ASM_MESON_TAC[Sphere.critical_edge_y]);
  COMMENT "beta_bumpA_y =0";
  SUBGOAL_THEN `beta_bumpA_y y1 y2 y3 y4 y5 y6 = &0` SUBST1_TAC;
    REWRITE_TAC[Sphere.beta_bumpA_y];
    REPEAT COND_CASES_TAC THEN TRY(REAL_ARITH_TAC);
    BY(ASM_MESON_TAC[]);
  REWRITE_TAC[arith `x + &0 = x`];
  GMATCH_SIMP_TAC REAL_LT_DIV;
  ASM_REWRITE_TAC[];
  FIRST_X_ASSUM_ST `ineq` kill;
  FIRST_X_ASSUM_ST `ineq` MP_TAC;
  ASM_SIMP_TAC[Sphere.ineq;y_bounds];
  ASM_REWRITE_TAC[GSYM Sphere.rad2_y];
  SUBGOAL_THEN `~(norm2hh y1 y2 y3 y4 y5 y6 < (hplus - hminus) pow 2)` (unlist REWRITE_TAC);
    DISCH_TAC;
    FIRST_X_ASSUM (MP_TAC o (MATCH_MP Merge_ineq.quarter_norm2hh));
    BY(ASM_MESON_TAC[]);
  FIRST_X_ASSUM_ST `rad2_y` MP_TAC;
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)
