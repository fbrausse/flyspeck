(*  tests of nonlinear inequalities from main.hl *)
(* removed from glpk model OXLZLEZ *)

let do_betas x = all_forall (snd(dest_eq(concl(BETAS_CONV x))));;
let all_forall  =Sphere.all_forall;;



(*
let mk_tm23 i3 i5 i6 = 
  let x i = List.nth [`&2`; `&2 * hminus`; `&2 * hplus` ; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let m = mk_small_numeral in
  let w1 = 1 +  mid i6 in
  let w2 = 1 + mid i3 + mid i5 in
    list_mk_comb (template23, [x i3;X i3; x i5;X i5; x i6 ;X i6; m w1; m w2]);; 

let mk_ineq23 i3 i5 i6 = all_forall (snd(dest_eq(concl(BETAS_CONV (mk_tm23 i3 i5 i6)))));;

let add23 i3 i5 i6 = 
  add {
    id = Printf.sprintf "ZTGIJCF23 %d %d %d 7907792228" i3 i5 i6;
    ineq = mk_ineq23 i3 i5 i6;
    doc = "This is the 2&3-cell inequality for five or more leaves.";
    tags = [Cfsqp;Flypaper];
  };;

 for i3=0 to 2 do 
 for i5 = 0 to 2 do
 for i6 = 0 to 2 do
   add23 i3 i5 i6 done done done;;
*)


let _ = 
{
  id = "QITNPEA 9507854632";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, #2.1);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun - #0.00242
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;
  doc =   "
     Note the upper bound on $y_4$ is $2.1$.
     This is an inequality for 23-cells used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

let _ = 
{
  id = "QITNPEA 9507854632";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, #2.1);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun - #0.00242
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;
  doc =   "
     Note the upper bound on $y_4$ is $2.1$.  The same inequality holds when
    $y_4\\ge 2.1$.  In fact, \\ineq{4003532128} is even stronger.
     This is an inequality for $23$-cells used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

test_ineq {
  id = "2";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
  ( (gamma4f y1 y2 y3 y4 y5 y6 lmfun > #0.0) \/
    (dih_y y1 y2 y3 y4 y5 y6 < #1.575) )`;
  doc =   "test";
  tags = [];
};;

let _ =  
{
  id = "QITNPEA 4 blades, 3 quarters, 1 23-cell";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, sqrt8);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus);
    (&2,y7, &2 * hminus);
    (&2,y8, &2 * hminus);
    (&2,y9, &2 * hminus);
    (&2,y10, &2 * hminus);
    (&2,y11, &2 * hminus);
    (&2,y12, &2 * hminus);
    (&2,y13, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun 
    + gamma4f y1 y3 y7 y9 y12 y5 lmfun 
    + gamma4f y1 y7 y8 y10 y13 y12  lmfun 
    + gamma4f y1 y8 y2 y11 y6 y13  lmfun > #0.0) \/
     (
    dih_y y1 y2 y3 y4 y5 y6 
    + dih_y y1 y3 y7 y9 y12 y5  
    + dih_y y1 y7 y8 y10 y13 y12   
    + dih_y y1 y8 y2 y11 y6 y13   < &2 * pi
      ) \/
     (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2))`;
  doc =   "
     This is a numerical test of the 4-blade inequality in the case of three quarters
     and one 23-cell.  It is too large to be directly checked by rigorous nonlinear
     optimization. Instead it is broken into smaller pieces.";
  tags = [Cfsqp;Clusterlp;Derived];
};;

let _ =  
{
  id = "OCTAHEDRON OXLZLEZ TEST 4 blades, 3 quarters, 1 4-cell wt 1/2";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2 * hminus ,y4,  &2 *hplus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus);
    (&2,y7, &2 * hminus);
    (&2,y8, &2 * hminus);
    (&2,y9, &2 * hminus);
    (&2,y10, &2 * hminus);
    (&2,y11, &2 * hminus);
    (&2,y12, &2 * hminus);
    (&2,y13, &2 * hminus)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 + beta_bump_force_y y1 y2 y3 y4 y5 y6 
    + gamma4f y1 y3 y7 y9 y12 y5 lmfun 
    + gamma4f y1 y7 y8 y10 y13 y12  lmfun 
    + gamma4f y1 y8 y2 y11 y6 y13  lmfun > #0.0) \/
     (
    dih_y y1 y2 y3 y4 y5 y6 
    + dih_y y1 y3 y7 y9 y12 y5  
    + dih_y y1 y7 y8 y10 y13 y12   
    + dih_y y1 y8 y2 y11 y6 y13   > &2 * pi
      ) \/
    (
    dih_y y1 y2 y3 y4 y5 y6 
    + dih_y y1 y3 y7 y9 y12 y5  
    + dih_y y1 y7 y8 y10 y13 y12   
    + dih_y y1 y8 y2 y11 y6 y13   < &2 * pi - #0.002
      ) )`;
  doc =   "
     This is a numerical test of the 4-blade inequality in the case of three quarters
     and one 4-cell of wt 1/2.  
     This is the most important case of the inequality.
     It is too large to be directly checked by rigorous nonlinear
     optimization. Instead it is broken into smaller pieces.";
  tags = [Cfsqp;Clusterlp;Derived];
};;


let _ = 
{
id = "3611774025";
ineq = all_forall `ineq
[
(&2, x12, &2 * h0);
(&2, x13, &2 * h0);
(&2, x14, &2 * h0);
(&2, x15, &2 * h0);
(&2, x23, &2 * h0);
(&2, x24, &2 * h0);
(&2, x25, &2 * h0);
(&2, x34, &2 * h0);
(&2, x35, &2 * h0);
(&2, x45, &2 * h0)
]
  (cayleyR x12 x13 x14 x15  x23 x24 x25  x34 x35 x45 < &0)`;
tags = [];
doc = "A Cayley Menger determinant is positive. This was part of Local Fan, but
  is no longer needed.";
};;

Parse_ineq.execute_cfsqp {
id = "YCYNZUX";
doc = "
  Assume $r+s\\ge 4$.
 An edge of $E\\setminus S$ that is not at a flat node
  has length $2$.
  (We use \\case{flat~exists} to show that the edge is adjacent to one $b$ of
  length at least $2h_0$.  Then let $c$ be the diagonal.
 % $a$ is the edge being deformed, $c$ is the diagonal.
 % $b$ is an adjacent of length at least $2h_0$.
 % added June 13, 2010. to help reduce the number of cases for pentagons and hexagons.
 % originally designed for hexagons, but it should help with pentagons too.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &2 * h0);
  (&2 , b, &4);
  (&2, c, &4)
  ]
   (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

Parse_ineq.execute_cfsqp {
id = "hex 2";
doc = "
 In a hex(3,2,1) shorten the $2$-link segment.
 % (2) $a$ is the edge being deformed, 
 % (1) $b$ single link
 % (3) $c$ triple link.  arc(2,2,3.75) < 2.435 < arc(2h0,2h0,2)3
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.9, a, #3.93);
  (&2/h0 , b, &2);
  (#3.7, c, &4)
  ]
   (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

(* Case hex A: v1...v6 with v2 v5 flat, diag = y14. *)
let template_hexA = `\y12 y2max y45 y5max diagmax. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,&2 *h0);
(&2,y5,y5max);
(&2,y6,&2 *h0);
(&2 *h0,diag,diagmax)
  ]
  (
    let y23 = y12 in
    let y56 = y45 in
    let y16 = &2 in
    let y34 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y46 = edge_flat y5 y4 y6       y56 y45 in 
       (taum y1 y3 y4 y34 diag y13 + flat_term y2 + 
         taum y4 y6 y1 y16 diag y46 + flat_term y5 > tame_table_d 6 0) \/
   (dih_y y1 y3 y4 y34 diag y13 + dih_y y1 y6 y4 y46 diag y16 <
          dih_y y1 y2 y6 (&2 * h0) y16 y12) \/
  ( dih_y y1 y3 y4 y34 diag y13 + dih_y y1 y6 y4 y46 diag y16 > pi) \/  
   (dih_y y6 y1 y4 diag y46 y16 < dih_y y6 y1 y5 (&2 * h0) y56 y16) \/    
   (dih_y y3 y1 y4 diag y34 y13 < dih_y y3 y2 y4 (&2 * h0) y34 y23) \/    
     (delta_y y1 y3 y4 y34 diag y13 < &0) \/
     (delta_y y4 y6 y1 y16 diag y13 < &0)  ))`;;

let make_hexA i  = 
  let r = match  i with
   0 ->  [`&2`;`&2 * h0`;`&2`;`&2 * h0`;`#3.9985`]
    |1 ->[`&2`;`&2 * h0`;`&2 * h0`;`&2`;`#3.7`]
    |2 ->[`&2 * h0`;`&2`;`&2 * h0`;`&2`;`#3.7`] 
    | _ ->  failwith "make_hexA" in
{
id = Printf.sprintf "hexA %d" i;
doc = "This inequality is the main hexagon inequality
  with two flat nodes, at opposite vertices of the hexagon.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item $y_{34}=y_{16}=2$.
  \\item if the diag $y_{14}$ is greater than $3.7$, 
      then $y_{12}=y_{23}=y_{45}=y_{56}=2$.   
  \\item $y_{14}\\le 3.9985$.
  \\item By symmetry, we can assume that $y_{12}\\le y_{56}$.
  \\end{enumerate}
  The reductions are justified by the preceding calculations.
  There are three cases, depending on whether the edges at $\\v_2$ and $\\v_5$
  are as short or as long as possible.
  ";
tags = [Flypaper;Tex;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexA r;
};;

map (fun i -> Parse_ineq.execute_cfsqp(make_hexA i)) (0--2);;

(* case hex B with v2 v6 flat, diag=y35 *)

let template_hexB = `\y12 y2max y56 y6max. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,&2 *h0);
(&2,y5,&2 *h0);
(&2,y6,y6max);
(&2 *h0,diag,&2 * sqrt(&3))
  ]
  (
    let y23 = y12 in
    let y16 = y56 in
    let y34 = &2 in
    let y45 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y15 = edge_flat y6 y1 y5       y56 y16 in 
       (taum y1 y3 y5 diag y15 y13 + flat_term y2 + 
         taum y4 y3 y5 diag y45 y34 + flat_term y6 > tame_table_d 6 0)  \/
     (delta_y y4 y3 y5 diag y45 y34 < &0) \/
    (dih_y y1 y3 y5 diag y15 y13 < dih_y y1 y2 y6 (&2 *h0) y16 y12 )))`;;

let make_hexB i  = 
  let r = match  i with
   0 ->  [`&2`;`&2 * h0`;`&2`;`&2 * h0`]
    |1 ->[`&2`;`&2 * h0`;`&2 * h0`;`&2`]
    |2 ->[`&2 * h0`;`&2`;`&2 * h0`;`&2`] 
    | _ ->  failwith "make_hexB" in
{
id = Printf.sprintf "hexB %d" i;
doc = "This inequality is the main hexagon inequality
  with two flat nodes, at nodes $\\v_2$ and $\\v_6$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item $y_{34}=y_{45}=2$.
  \\item The diagonal $y_{35}\\le 2\sqrt3$ comes from 
       $\\arc(2,2,y_{34})+\\arc(2,2,y_{45})\\le 2\\pi/3$.
  \\end{enumerate}
  The reductions are justified by the preceding calculations.
  There are three cases, depending on whether the edges at $\\v_2$ and $\\v_6$
  are as short or as long as possible.
  ";
tags = [Flypaper;Tex;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexB r;
};;

map (fun i -> Parse_ineq.execute_cfsqp(make_hexB i)) (0--2);;


let template_hexC = `\y12 y2max y34 y4max y56 y6max. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,y4max);
(&2,y5,&2 *h0);
(&2,y6,y6max)
  ]
  (
    let y23 = y12 in
    let y45 = y34 in
    let y16 = y56 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y35 = edge_flat y4 y3 y5       y45 y34 in
    let y15 = edge_flat y6 y1 y5       y56 y16 in
       (taum y1 y3 y5 y35 y15 y13 + flat_term y2 + 
         flat_term y4 + flat_term y6 > tame_table_d 6 0) ))`;;

let make_hexC i  = 
  let short = [`&2`;`&2*h0`] in
  let long = [`&2*h0`;`&2`] in 
  let r = match  i with
   0 ->  short @ short @ short
    |1 ->short @ short @ long
    |2 ->short @ long @ long
    | _ ->  failwith "make_hexC" in
{
id = Printf.sprintf "hexC %d" i;
doc = "This inequality is the main hexagon inequality
  with three flat nodes, at nodes $\\v_2$, $\\v_4$, and $\\v_6$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item Symmetry is used to make $y_{12}\\le y_{34}\\le y_{56}$.
  \\item Not all edges are long, because $\\arc(2,2h0,2h0)6 > 2\\pi$, which
   is contrary to the perimeter estimate.
  \\end{enumerate}
  There are three cases, depending on whether the edges at the flat nodes 
  are as short or as long as possible.
  This case may have numerical instabilities when the perimeter is  $2\\pi$.
  ";
tags = [Flypaper;Tex;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexC r;
};;

map (fun i -> Parse_ineq.execute_cfsqp(make_hexC i)) (0--2);;

(* next hex D, adjacent flats *)

let template_hexD = `\y2min y2max y3min y3max. (ineq
  [
(&2,y1,&2 *h0);
(y2min,y2,y2max);
(y3min,y3,y3max);
(&2,y4,&2 *h0);
(&2,y5,&2 *h0);
(&2,y6,&2 *h0)
  ]
  (
    let y12 = &2 in
    let y23 = &2 in
    let y34 = &2 in
    let y45 = &2 in
    let y56 = &2 in
    let y16 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y14 = edge_flat y3 y1 y4       y34 y13 in
    let y46 = edge_flat y5 y4 y6       y56 y45 in
       (taum y1 y4 y6 y46 y16 y14 + flat_term y2 + 
         flat_term y3 + flat_term y5 > tame_table_d 6 0) \/
      (y14 > #3.9985 ) \/
     (dih_y y1 y4 y6 y46 y16 y14 < dih_y y1 y2 y6 (&2 * h0) y16 y12) ))`;;

let make_hexD i  = 
  let full = [`&2`;`&2*h0`] in
  let short = [`&2`;`&2`] in
  let long = [`&2*h0`;`&2 *h0`] in 
  let r = match  i with
   0 ->  full @ short
    |1 ->full @ long
    |2 ->short @ full
    |3 -> long @ full
    | _ ->  failwith "make_hexD" in
{
id = Printf.sprintf "hexD %d" i;
doc = "This inequality is the main hexagon inequality
  with three flat nodes, at nodes $\\v_2$, $\\v_3$, and $\\v_5$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item Contractions of edges make $y_{12}=\\cdots=y_{56}=y_{16}=2$.
  \\item The case $y_{14}\\ge 3.9985$ has been done by direct argument, with
    an estimate $\\tau \\ge \\sol - 4\\sol_0> d(6,0)$.
  \\end{enumerate}
  There are four cases, depending on which edge $y_2$ or $y_3$ is extremal.
  ";
tags = [Flypaper;Tex;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexD r;
};;

map (fun i -> Parse_ineq.execute_cfsqp(make_hexC i)) (0--3);;





