(*  tests of nonlinear inequalities from main.hl *)
(* removed from glpk model OXLZLEZ *)

let do_betas x = all_forall (snd(dest_eq(concl(BETAS_CONV x))));;
let all_forall  =Sphere.all_forall;;



(*
let mk_tm23 i3 i5 i6 = 
  let x i = List.nth [`&2`; `&2 * hminus`; `&2 * hplus` ; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let m = mk_small_numeral in
  let w1 = 1 +  mid i6 in
  let w2 = 1 + mid i3 + mid i5 in
    list_mk_comb (template23, [x i3;X i3; x i5;X i5; x i6 ;X i6; m w1; m w2]);; 

let mk_ineq23 i3 i5 i6 = all_forall (snd(dest_eq(concl(BETAS_CONV (mk_tm23 i3 i5 i6)))));;

let add23 i3 i5 i6 = 
  add {
    id = Printf.sprintf "ZTGIJCF23 %d %d %d 7907792228" i3 i5 i6;
    ineq = mk_ineq23 i3 i5 i6;
    doc = "This is the 2&3-cell inequality for five or more leaves.";
    tags = [Cfsqp;Flypaper];
  };;

 for i3=0 to 2 do 
 for i5 = 0 to 2 do
 for i6 = 0 to 2 do
   add23 i3 i5 i6 done done done;;
*)


let _ = 
{
  id = "QITNPEA 9507854632";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, #2.1);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun - #0.00242
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;
  doc =   "
     Note the upper bound on $y_4$ is $2.1$.
     This is an inequality for 23-cells used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

let _ = 
{
  id = "QITNPEA 9507854632";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, #2.1);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun - #0.00242
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;
  doc =   "
     Note the upper bound on $y_4$ is $2.1$.  The same inequality holds when
    $y_4\\ge 2.1$.  In fact, \\ineq{4003532128} is even stronger.
     This is an inequality for $23$-cells used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

test_ineq {
  id = "2";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
  ( (gamma4f y1 y2 y3 y4 y5 y6 lmfun > #0.0) \/
    (dih_y y1 y2 y3 y4 y5 y6 < #1.575) )`;
  doc =   "test";
  tags = [];
};;

let _ =  
{
  id = "QITNPEA 4 blades, 3 quarters, 1 23-cell";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, sqrt8);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus);
    (&2,y7, &2 * hminus);
    (&2,y8, &2 * hminus);
    (&2,y9, &2 * hminus);
    (&2,y10, &2 * hminus);
    (&2,y11, &2 * hminus);
    (&2,y12, &2 * hminus);
    (&2,y13, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun 
    + gamma4f y1 y3 y7 y9 y12 y5 lmfun 
    + gamma4f y1 y7 y8 y10 y13 y12  lmfun 
    + gamma4f y1 y8 y2 y11 y6 y13  lmfun > #0.0) \/
     (
    dih_y y1 y2 y3 y4 y5 y6 
    + dih_y y1 y3 y7 y9 y12 y5  
    + dih_y y1 y7 y8 y10 y13 y12   
    + dih_y y1 y8 y2 y11 y6 y13   < &2 * pi
      ) \/
     (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2))`;
  doc =   "
     This is a numerical test of the 4-blade inequality in the case of three quarters
     and one 23-cell.  It is too large to be directly checked by rigorous nonlinear
     optimization. Instead it is broken into smaller pieces.";
  tags = [Cfsqp;Clusterlp;Derived];
};;

let _ =  
{
  id = "OCTAHEDRON OXLZLEZ TEST 4 blades, 3 quarters, 1 4-cell wt 1/2";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2 * hminus ,y4,  &2 *hplus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus);
    (&2,y7, &2 * hminus);
    (&2,y8, &2 * hminus);
    (&2,y9, &2 * hminus);
    (&2,y10, &2 * hminus);
    (&2,y11, &2 * hminus);
    (&2,y12, &2 * hminus);
    (&2,y13, &2 * hminus)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 + beta_bump_force_y y1 y2 y3 y4 y5 y6 
    + gamma4f y1 y3 y7 y9 y12 y5 lmfun 
    + gamma4f y1 y7 y8 y10 y13 y12  lmfun 
    + gamma4f y1 y8 y2 y11 y6 y13  lmfun > #0.0) \/
     (
    dih_y y1 y2 y3 y4 y5 y6 
    + dih_y y1 y3 y7 y9 y12 y5  
    + dih_y y1 y7 y8 y10 y13 y12   
    + dih_y y1 y8 y2 y11 y6 y13   > &2 * pi
      ) \/
    (
    dih_y y1 y2 y3 y4 y5 y6 
    + dih_y y1 y3 y7 y9 y12 y5  
    + dih_y y1 y7 y8 y10 y13 y12   
    + dih_y y1 y8 y2 y11 y6 y13   < &2 * pi - #0.002
      ) )`;
  doc =   "
     This is a numerical test of the 4-blade inequality in the case of three quarters
     and one 4-cell of wt 1/2.  
     This is the most important case of the inequality.
     It is too large to be directly checked by rigorous nonlinear
     optimization. Instead it is broken into smaller pieces.";
  tags = [Cfsqp;Clusterlp;Derived];
};;


let _ = 
{
id = "3611774025";
ineq = all_forall `ineq
[
(&2, x12, &2 * h0);
(&2, x13, &2 * h0);
(&2, x14, &2 * h0);
(&2, x15, &2 * h0);
(&2, x23, &2 * h0);
(&2, x24, &2 * h0);
(&2, x25, &2 * h0);
(&2, x34, &2 * h0);
(&2, x35, &2 * h0);
(&2, x45, &2 * h0)
]
  (cayleyR x12 x13 x14 x15  x23 x24 x25  x34 x35 x45 < &0)`;
tags = [];
doc = "A Cayley Menger determinant is positive. This was part of Local Fan, but
  is no longer needed.";
};;



addtex(Comment,"PQFYWHW",
 "
 We start the analysis of pentagons with the case of two adjacent flats. 
 By the established properties, the three edges next to a flat all have the same length,
 $2$ or $2h_0$.  The length $2h_0$ is impossible:
 \\[
  \\arc(2h_0,2,2h_0)2 + \\arc(2,2,2h_0) > \\pi,
 \\]
  contrary to genericity.
 Hence the three edges next to a flat have length $2$.
 ");;

Parse_ineq.execute_cfsqp   
{
id = "PQFYWHW 1";
doc = "In a pentagon with adjacent flats, there is at most one long edge.
 Recall that $s\le 1$.
 % The two edges next to the non-flat.
 % deriv1 still have (16-a^2)a in the denominator. num1 is the polynomial numerator.
 % $a$ is the edge being deformed, $c$ is the diagonal.
 % $b$ is the adjacent edge, assumed also to have length $2h_0$, but not in $S$.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &2 * h0);
  (&2 , b, &2 * h0);
  (&2, c, &4)
  ]
   (
   let deriv1 = (((&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3))))))))/((-- &16) + (a pow 2)))/a) in
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

Parse_ineq.execute_cfsqp   
{
id = "PQFYWHW 2";
doc = "A pentagon with two adjacent flats does not exist.  By the preceding
  calculations, we have reduced to the case where the edges next to the flats have
  length $2$ and at most one edge has length $2h_0$.  This calculation shows
  that the triangle inequality is violated, so that the pentagon does not exist.
   ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&2, y1, &2 * h0);
    (&2, y2, &2 * h0)
  ]
   (arclength y1 (&2 * h0) (&2) + arclength (&2 * h0) (&2 * h0) (&2) + arclength (&2 * h0) y2 (&2) > arclength y1 (&2) (&2) + arclength (&2) y2 (&2 *h0)  )`;
};;


Parse_ineq.execute_cfsqp   
{
id = "PQFYWHW 3";
doc = "Now we start the analysis of a pentagon with nonadjacent flats.
 We show that there is at most one long edge.
 The combined edge length at the two flats is between $2.9$ and $3.93$.
  \\[
  \\arc(2,2,2h_0) 2 < 2.73 < \\arc(2,2,3.93).
 \\]
 \\[
   \\arc(2,2,2.9) < 1.625 < \\arc(2h_0,2h_0,2) 2.
  \\]
  % num1 is the polynomial numerator.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &2 * h0);
  (#2.9 , b, #3.93);
  (#2.9, c, #3.93)
  ]
   (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

Parse_ineq.execute_cfsqp   
{
id = "PQFYWHW 4";
doc = "In a pentagon with two nonadjacent flats. there is at most one long edge.
This calculation shows that we can shorten an edge that is at a flat node.
We shorten the two edges at $a$ (assuming $a>c$), until their lengths are
$(2,2)$ or $(2,2h_0)$ (if one of them belongs to $S$).
If both are $(2,2)$ then the all four edges at the flat have length $2$, because
otherwise 
\\[
 \\arc(2h_0,2h_0,2h_0) + \\arc(2h_0,2h_0,2) \\le \\arc_c \\le \\arc_a \\le
 \\arc(2,2,2)2 < 2.095.
\\]
 % deriv1 still has (16-a^2)a in the denominator. num1 is the polynomial numerator.
% This is linear in e1, e2, e3.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.9, a, #3.93);
  (&2/h0 , b, &2 * h0);
  (#2.9, c, #3.93)
  ]
  ( (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0) \/ (a > c + #0.25))`;
};;



let template = `\y15 y45 y34. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,&2 *h0);
(&2,y3,&2 *h0);
(&2,y4,&2 *h0);
(&2,y5,&2 *h0)
  ]
  (
    let y12 = &2 in
    let y23 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y14 = edge_flat y5 y1 y4       y45 y15 in 
      (dih_y y1 y2 y5 (&2 * h0) y15 y12 >= dih_y y1 y3 y4 y34 y14 y13)))`;;

let mk_tplate template r = 
 do_betas(list_mk_comb (template, r));;


let make0 i = 
  let r = match  i with
   0 -> [`&2`;`&2`;`&2`]
    |1 -> [`&2 * h0`;`&2`;`&2`]
    |2 -> [`&2`;`&2 * h0`;`&2`]
    |3 -> [`&2`;`&2`;`&2 * h0`]
    | _ ->  failwith "make0" in
{
id = Printf.sprintf "test B %d" i;
doc = "Pentagons with two flats do not exist.  When $y_{15}=y_{45}=2$ and
  y_{34} = 2h_0, then the lines $\\{\\v_2,\\v_3\\}$ and $\\{\\v_4,\\v_5\\}$
are parallel and the inequality is sharp.
  % The sharp case is i=3.
    ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = mk_tplate template r;
};;

Parse_ineq.execute_cfsqp (make0 3);;
