  #print_length 500;;
  #print_length 50;;
prioritize_real();;
let NAN = 0;;
let st = searcht;;

searcht;;
let ss n t = filter (fun (_,(_,t)) -> term_length (concl t) < 180) (searcht n t);;
let si n t = st n (t @ [omit `ineq`]);;
let si n t = st n (t @ [omit `newvertex_prepped`]);;
let tyo = type_of;;
let st5 = searcht 5;;

let sd s = 
  let vv = searcht 100 [def s] in
  let vv1 = find (fun (_,(_,th)) -> fst (dest_const (lhs (concl th))) = s) vv in
  let tm = concl (snd (snd vv1)) in
  let r = snd (strip_abs (rhs tm)) in
    searcht 10 [r;lhs tm];;;

strip_abs;;
    
update_database();;
	let st = searcht 5 ;;
	let stu t = searcht 5 [t];;

let searchd' pat =
  searchl (map (fun t -> ("",t)) (definitions())) pat;;

let searchd pat = searchd' (pat @ 
  [omit `pack_nonlinear_non_ox3q1h`;omit `main_nonlinear_terminal_v11`;omit `ox3q1h`;omit `pack_ineq_def_a`]);;

let ineq_as_thm = 
  map (fun t -> t.idv,ASSUME t.ineq) (!Ineq.ineqs);;

let prep_as_thm = 
  map (fun t -> t.idv,ASSUME t.ineq) (!Prep.prep_ineqs);;

let searchi pat =
      searchl (ineq_as_thm) pat;;

let searchp pat =
      searchl (prep_as_thm) pat;;

(* sample searches *)

find_def "edge2_135_x";;
find_defs "edge2";;
help_flag 'd' "edge2";;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types List_hypermap_computations.list_pairs_empty;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 6;;
back_to "ANTS";;
(* March 12, 2014 *)
is_restricted;;
st 5 [`marked_list`;`split_condition_list`];;
st 5 [`marked_list`;`next_el`];;
is_restricted;;
st 5 [`all`;`simple_hypermap`];;
st 5 [`is_marked`;`marked_list`];;
st 5 [`final_loops`;`final_list`];;
st 5 [`loop_of_list x = loop_of_list y`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5 [`face_map`;`f_list`];;
st 5 [`list_of_darts`;`flatten`];;
st 5 [`in_dart_of_loop`;`MEM`];;
st 50 [`hyp'z`;`hyp'y`];;
st 5 [`split_condition_list`;`is_split_condition`];;
st 5 [`atoms_of_loop`];;
st 5 [`sizel`;`CARD`];;
st 5 [`uniq`;`parts`];;
st 5 [`atom`;`parts`];;
st 5 [`atom H r u = atom H r v`;`LAST`];;
st 15 [`node`;`FST`];;
st 5 [`l'y`;`list_of_darts`];;
st 5 [`hyp'z`;`dart`];;
st 50 [`hyp'z`;`face`];;
st 5 [`face`;`hypermap_of_list`];;
st 15 [`find_face`;`list_of_darts`];;
st 50 [`hyp'm`];;
st 50 [`iso_list`;`uniq`];;
st 50 [`iso_list`];;
st 50 [`isop_list`];;
st 5 [`is_restricted`;`iso`];;
st 5 [`iso_list`;`iso`];;
st 5 [`iso_list`;`CONS`];;
st 5 [`(a::b) = (c::d)`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`elements_of_list`;`darts_of_list`];;
st 5 [`list_of_elements`;`list_of_darts`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 20 [`inj_on`;`f_list`];;
st 10 [`MAP`;`parts`];;
st 5 [`e_list (f x)`];;
st 5 [`next_el (MAP f u) (g v)`];;
st 5 [`contour_list`;`CONS`];;
st 50 [`inj_on`;`FST`];;
st 5 [`e_list`;`list_of_darts`];;
st 5 [`MEM (f_list L u) (list_of_darts L)`];;
st 5 [`inj_on`;`list_of_darts`];;
st 50 [`inj_on`];;
st 20 [`inj_on`];;
st 5 [`inj_on`;`find_face`];;
st 5 [`list_of_darts`;`MAP`];;
st 5 [`list_of_elements`;`list_of_darts`];;
st 5 [`y = l'm L r d`];;
st 5 [`next_el`;`MAP`];;
f_list_map;;
st 5 [`is_restricted`;`iso`];;
st 5 [def "kepl"];;
st 50 [`kepler_conjecture`];;
st 50 [def "lp_main_estimate"];;
st 5 [`lp_main_estimate`];;
st 5 [`contravening`;];;
st 5 [`CARD X <= CARD Y`;`SUBSET`];;
st 5 [`FINITE`;`packing`];;
st 50 [`tame_archive_lists`];;
st 5 [`import_tame_classification`];;
st 50 [`iso_fgraph`];;
st 5 [`good_list`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`is_restricted`;`restricted_list`];;
st 5 [`iso`;name "tran"];;
st 5 [`iso_list`;`iso`];;
st 5 [`archive`];;
st 5 [`lp_main_estimate`];;
st 15 [`kepler_conjecture`];;
st 15 [`lmfun_ineq_center`];;
st 599 [`contravening`];;
st 500 [`is_restricted`];;
st 50 [name "JGT"];;
is_restricted;;
tame_hypermap;;
st 5 [`contravening`;`tame_hypermap`];;
st 5 [`is_restricted`;`contravening`];;
st 5 [`tame_hypermap`;`is_restricted`];;
st 5 [def "contravening"];;
st 15 [`contravening`;`surrounded_node`];;
st 15 [`contravening`;`kepler_conjecture`];;
st 15 [`contravening`;`scriptL`];;
st 5 [`pack_ineq_def_a`];;
st 5 [`scriptL W`;`lmfun_ineq_center`];;
st 5 [`good_graph`;`tame`];;
st 50 [`iso_fgraph`];;
st 5 [`contravening`;`plain`];;
st 59 [`contravening`;name "JGT"];;
st 5 [`contravening`;`total_weight`];;
st 5 [`contravening`;`node_type_exceptional_face`];;
st 5 [`contravening`;`number_of_nodes`];;
st 50 [`number_of_nodes`;`13`];;
st 50 [`tame_10`];;
st 50 [`node_type_exceptional_face`];;
st 500 [`contravening`;`6`];;
st 5 [def "is_no_double_joins"];;
st 5 [def "is_no_double_joints"];;
st 5 [`is_no_double_joins`;`is_no_double_joints`];;
st 5 [`is_node_nondegenerate`;`contravening`];;
st 50 [`CARD (face H x)`;`3`];;
st 50 [`is_node_nondegenerate`];;
st 5 [`number_of_faces`];;
st 5 [`CARD {}`];;
st 5 [`face_collection`];;
st 5 [`tame`;`tame_hypermap`];;
st 5 [`ALL`];;
st 5 [`opposite_hypermap`;`contravening`];;
st 5 [`iso`;`opposite_hypermap`];;
st 5 [`contravening (IMAGE (--) V)`];;
st 5 [name "iso_list_restricted"];;
st 5 [`iso_list`;`is_restricted`];;
st 5 [`kcblrqc_ineq_def`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`iso_list`;`isop_list`];;
st 5 [`normal_list`;`iso_list`];;
st 5 [`iso`;`is_restricted`];;
dih2k_list;;
st 50 [`match_core_list`];;
st 5 [`core_list`;`quotient_list`];;
st 5 [`dih2k_list`];;
st 25 [`Seed`];;
st 50 [`good_graph`];;
good_graph;;
st 15 [`FINITE`;`CARD`;`BIJ`];;
st 5 [`CARD`;`uniq`;`sizel`];;
st 5 [`{}`;`SUBSET`];;
st 5 [`INJ {}`];;
st 0 [`map`;`permutes`;`uniq`];;
st 100 [`uniq`;`permutation`];;
st 5 [`inj_on`;`uniq`];;
st 15 [`EL i s = EL i t`];;
st 5 [`sizel`;`map`];;
st 5 [`EL`;`MAP`];;
st 5 [`indexl (EL j u)`];;
st 5 [`uniq`;`EL i u = EL j v`];;
st 5 [`indexl x u = indexl y u`];;
st 5 [`indexl`;`sizel`];;
st 5 [`list_of_elements`;`CONS`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`set_of_list`;`flatten`];;
st 5 [`flatten`;`CONS`];;
st 5[`set_of_list`;`APPEND`];;
st 5 [`set_of_list []`];;
st 5 [`APPEND x []`];;
st 5 [`set_of_list (rev u)`];;
st 5 [`MEM`;`rev`];;
st 5 [`X UNION X`];;
st 5 [`MAP`;`REVERSE`];;
st 5 [`uniq`;`MAP`];;
st 5 [`good_list_nodes`;`Seed`];;
st 5 [`uniq`;`rev`];;
st 5 [`uniq`;`upt`];;
st 5 [`uniq`;`iota`];;
st 5[`fgraph`;`Seed`];;
st 5 [`uniq [x]`];;
st 5 [`uniq`;`rev`];;
st 5 [`uniq (a :: b)`];;
st 5 [`rev [x;y]`];;
st 5 [`rev (x::y)`];;
st 5 [`rcons`;`cat`];;
st 5 [`rcons`;`CONS`];;
st 5 [`cat`;`CONS`];;
st 5 [`sizel []`];;
st 5 [`iota k 0`];;
st 5 [`list_pairs []`];;
st 5 [`dih2k_list`;`Seed`];;
st 5 [`dih2k_list`;`iso_list`;`sizel`];;
st 5 [`iso_list`;`good_list`];;
good_graph;;
st 5 [`Seed`;`vertices_set2`];;
st 15 [`x ==> good_list_nodes L`];;
st 50 [`Seed`];;
st 5 [`darts_of_list`;`SUC`];;
st 50 [`Seed`];;
list_pairs_rev_iota;;
st 5 [`list_pairs`;`iota`];;
st 5 [`list_of_darts`;`CONS`];;
st 5[`list_of_darts []`];;
st 5 [`node_map`;`list_of_darts`];;
list_pairs_iota;;
st 5[`list_pairs`;`FST`];;
st 5 [`x IN node H y`];;
st 5 [`inverse`;`node_map`;`node`];;
st 5 [`FST`;`good_list`;`node`];;
st  5[`inverse`;`node_map`;`f_list`];;
st 5 [`MEM`;`f_list`;`list_pairs`];;
List_hypermap.mem_f_list;;
st 5 [`find_face L u = y`;`CONS`];;
st 5 [`find_face []`];;
st 5 [`list_of_darts []`];;
st 5 [name "AUQ"];;
st 5 [`dart`;`hypermap_of_list`];;
st 15 [`list_of_darts`;`list_of_faces`];;
st 15 [`find_face`;`list_of_faces`];;
st 5 [`MEM`;`find_list`];;
st 5 [`list_of_faces`;`[]`];;
st 5 [`list_pairs x = []`];;
st 5 [def "dih2k"];;
st 50 [`dih2k`];;
Lvducxu.DIH2K_FACE_SIMPLIZED;;
st 30 [`path_of_loop`];;
st 5 [def "pre_card_dart_of_loop"];;
st 5 [`loop_of_face`;`path_of_loop`];;
st 5 [`normal_list`;`is_normal`];;
st 5 [`loop_of_list`;`loop_family_of_list`];;
st 30 [`is_normal`];;
st 5 [`loop_family_of_list`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5[`loop_of_list`;`[]`];;
st 15 [`card_dart_of_loop`];;
st 30 [`is_normal`];;
st 39 [`dart_of_loop`];;
st 5 [`dart_of_loop`;`loop`];;
st 5 [`dart_of_loop`;`{}`];;
st 5 [`tuple_loop`;`loop`];;
st 5 [`one_step_list`;`one_step_contour`];;
st 5 [`loop_map`;`next_el`];;
st 5 [`face_map`;`f_list`];;
st 5 [`node_map`;`f_list`];;
st 7 [`path_of_loop`];;
st 15 [`EL`;`r < LENGTH s`];;
st 5 [`path_of_loop`];;
st 5 [`loop_map`;`loop_of_list`];;
st 5 [`EL`;`MAP`];;
st 5 [`nth`;`iota`];;
st 5 [`EL`;`nth`];;
st 15 [`next_el`;`POWER`];;
st 5 [`indexl`;`HD`];;
st 5 [`x:(A)loop = y:(A)loop`];;
st 5 [`path_of_loop`;name "inj"];;
st 5 [`~uniq r`];;
st 50 [`is_inj_list`];;
st 30 [`uniq`;`nth`];;
st 5 [`card_dart_of_loop`];;
st 5 [`nth`;`iota`];;
st 5 [`sizel`;`iota`];;
st 15 [`(next_el r POWER k) d = (next_el r' POWER k) d`];;
st 5 [`next_el`;`POWER`;`x:A list = b`];;
st 5 [`dart_of_loop`;`path_of_loop`];;
st 5 [`support_of_sequence`;`path_of_loop`];;
st 15 [`support_of_sequence`];;
st 40 [`loop_map`;];;
st 5 [`EL`;`iota`];;
st 15 [`loop_map`;`POWER`];;
st 50 [`path_of_loop`;`a + b:num`];;
st 5 [`f POWER (a*b)`];;
DIVISION;;
st 5 [`?`;`a * k + b:num`];;
st 5 [`f POWER (a + b)`];;
st 5 [`loop_map L POWER n`];;
st 5 [`I`;`POWER`];;
st 15 [`in_dart_of_loop`;`loop_map`;`POWER`];;
st 5 [`permutes`;`loop_map`];;
st 15 [`permutes`;`f x = x`];;
st 5 [`CARD x = 0`];;
st 5 [`dart_of_loop`];;
st 5 [`HD`;`iota`];;
st 5 [`x = []`;`sizel`];;
st 5 [`EL`;`iota`];;
st 5 [`uniq`;`path_of_loop`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5 [`CARD`;`set_of_list`;`sizel`];;
st 5 [`headl`;`rot`];;
st 5 [`loop_of_list`;`rot`];;
st 5 [`sizel`;`rot`];;
st 5 [`nth`;`rot`];;
st 5 [`LAST`;`EL`];;
st 5 [`loop_of_list`;`rot`];;
st 5 [`set_of_list`;`rot`];;
st 5 [`next_el`;`rot`];;
st 5 [`quotient`;`node_map`];;
st 50 [`quotient`];;
st 50 [`dih2k`;omit `local_fan`;omit `FAN`];;
st 5 [`dart`;`FINITE`];;
st 15 [`list_pairs`;`rot`];;
st 15 [`set_of_list`;`list_pairs u`];;
st 5 [`next_el`;`rot`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`rot k []`];;
st 5 [`list_pairs`;`[]`];;
st 5 [`zip []`];;
st  5 [`set_of_list`;`{}`];;
st 5 [`set_of_list`;`list_pairs`];;
st 5 [`set_of_list`;`zip`];;
st 5 [`MEM`;`zip`];;
st 5 [`next_el`;`rot`];;
st 5 [`MEM r (list_pairs u)`];;
st 5 [`A SUBSET B /\ B SUBSET A`];;
st 5 [`CARD`;`uniq`;`sizel`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`undup`;`sizel`];;
st 5 [`uniq`;`undup`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`MEM (next_el u d) u`];;
st 5 [`list_pairs`;`REVERSE`];;
st 5 [`e_list o e_list`];;
st 15 [`CARD`;`SUBSET`];;
st 5 [`CARD`;`set_of_list`];;
st 10 [`list_pairs`;`uniq`];;
st 5 [`rev (rev f)`];;
st 5 [`rev`;`LAST`];;
st 5 [`rot`;`[]`];;
st  5 [`rot`;`uniq`];;
st 15 [`indexl`;`rot`];;
st 5 [`rot`;`sizel`];;
st 5 [`indexl (HD f) f`];;
st 5 [`rot 0`];;
st 5 [`face`;`hypermap_of_list`];;
st 10 [`find_face L d = u`;`MEM`];;
st 15 [`uniq`;`list_of_darts`;`good_list`];;
good_list;;
st 15 [`atom_choice H NF x = {y}`;`{x}`];;
st 15 [`atom H L x = {y}`];;
tyo `atom`;;
Hypermap.lemma_face_contour_on_loop;; (* atoms single {x} *)
st 50 [`loop_of_face`;`hypermap_of_list`];;
st 50 [`list_of_darts`;`MEM`];;
st 15 [`list_of_darts`;`list_of_faces`];;
st 5 [`faces_of_list`;`darts_of_list`];;
List_hypermap.list_of_faces;;
st 5 [`list_of_darts`;`flatten`];;
st 15 [`final_list`;`hypermap_of_loop`];;
st 5 [`loop_of_face`;`final_list`];;
st  5 [`uniq`;`list_of_faces`];;
st 15 [`loop_of_list`;`final_list`];;
st 5 [def "dart";def "loop"];;
tyo `dart_of_loop`;;
st 15 [`card_dart_of_loop`];;
tyo `atom`;;
st 5 [`dart`;`quotient`];;
atoms_of_family;;
st 5 [`dart_of_loop`;`set_of_list`];;
st 5[`head_of_atom`];;
st 5 [`node`;`quotient`];;
st 5 [`support_node`];;
transform_assumption_v2;;
st 50 [`atom_choice`];;
st 50 [`quotient`;`atoms_of_family`];;
st 5 [`node H y`;`dart`];;
st 5 [`node`;`quotient`];;
st  5 [`atoms_of_loop`];;
lemma_node_subset;;
st 5 [`atom`;`atom_choice`];;
bb 4;;
st 15 [`darts_of_family`];;
normal_list;;
tyo `head_of_atom`;;
st 50 [`head_of_atom H L x = x`];;
st 15 [`head_of_atom H L d`;`atom`];;
change_to_margin;;
st 5 [`atom`;`dart_of_loop`];;
st 5 [`x IN atom H L x`];;
st 5[`flatten`;`[]`];;
st 5 [`uniq`;`cat`];;
st 5[`dart_of_loop`;`loop_of_list`];;
st 15 [`dih2k`];;
st 15 [`quotient`;`face_set`];;
st 5  [`x:(A)loop`;`CARD`];;
st 15 [`card_dart_of_loop`];;
st 5 [`atom`;`atoms_of_loop`];;
st  5 [`x IN atom H L x`];;
st 5 [`atom`;`dart_of_loop`];;
st 5 [`quotient`;`dih2k`];;
st 5 [`is_normal`;`FINITE`];;
st 50 [name "Auq"];;
st 50 [`complement0`];;
st 50 [`node_contour`];;
st 5 [`CARD`;`dart`];;
st 5 [`x = {}`;`CARD`];;
st 5 [`FINITE`;`dart`];;
st 5 [`node_map H x IN dart H`];;
st 5 [`x IN face H x`];;
st 5 [`face`;`face_set`];;
lemma_head_of_atom_via_restricted;;
st 5 [`loop_map`;`loop_of_list`];;
st 5 [`face_map`;`f_list`];;
st 5 [`f_last`];;
bb 3;;
st 50 [`head_of_atom`];;
st 50 [`final_list`;`parts`];;
st 15 [`list_of_faces`;`list_pairs`];;
st 5 [`list_pairs`;`zip`];;
st 5 [`FST`;`zip`];;
st 15 [`zip`];;
st 5 [`unzip1`];;
st 5 [`simple_hypermap`;`hypermap_of_list`];;
st 20 [`parts`;omit `normal_list`;omit `marked_list`];;
st 5 [`partition_into_atom0r`];;
st 5 [`final_list`;`quotient_list`];;
st 5 [`parts`;`[h]`];;
st 5 [`uniq [h]`];;
st 5 [`LAST [h]`];;
st 5 [`parts`;`[x]`];;
st 5 [name "xor"];;
st 5 [`next_el (cat u v)`];;
st 5 [`list_of_faces`;`list_of_darts`];;
st 50 [`loop_of_list`];;
st 50 [`loop_of_list`;`normal_list`;omit `final_list`];;
st 5 [`all uniq (L:((A)list)list)`];;
st 5 [`face`;`quotient`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 50 [`dih2k`;omit `local_fan`;omit `FAN`;`IMAGE`];;
st 5 [`FINITE`;`dart`];;
st 5 [`dih2k`;`simple_hypermap`];;
st 5 [`dih2k`;`node_map`];;
st 5 [`face H u = face H v`];;
st 5 [`face`;`dart`];;
st 5 [`dart`;`quotient`];;
st 5 [`atom`;`atoms_of_family`];;
st 5 [`HD`;`MAP`];;
st 5 [`LAST`;`MAP`];;
st 5 [`parts`;`HD`];;
st 5 [`parts`;`LAST`];;
st 5 [`LAST`;`cat`];;
st 5 [`butlast`;`cat`];;
st 5 [`BUTLAST`];;
st 5 [`butlast`;`flatten`];;
st  5[`flatten`;`parts`];;
st 5 [`flatten`;`cat`];;
st 5 [`flatten`;`CONS`];;
st 5 [`flatten []`];;
st  5[`parts`;`~(s = [])`];;
st 5 [`head_of_atom`;`atom`];;
st 5 [`atom`;`node`];;
st  5[`head_of_atom`;`node_map`];;
st 5 [`node H x = node H y`];;
st 5 [`FST`;`node`;`good_list`];;
st 5 [`quotient_list`;`parts`;`face`];;
st 5 [`face`;`hypermap_of_list`];;
st 50 [`transform_count`];;
st 50 [`normal_family`;`quotient_list`];;
st 5 [`quotient_list`;`list_of_darts`];;
st 5 [`final_list`;`parts`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`map`;`cat`];
st 5 [`edge_map`;`face`;`simple_hypermap`];;
st 15 [`is_node_nondegenerate`];;
st 5 [`dart(hypermap_of_list L)`];;
st 5 [`face (hypermap_of_list L)`];;
st 15 [`dart`;`face_map`];;
st 5 [`MEM`;`find_face`];;
st 15 [`find_face L d = f`];;
st 5 [`uniq (list_of_darts L)`];;
st 5 [`final_list`;`list_of_faces`];;
st  5[`edge_map`;`hypermap_of_list`];;
st  5 [`e_list_ext`;`e_list`];;
st 5 [`good_list`;`iso_list`];;
st 25 [`iso_list`;name "sym"];;
st  5 [`iso_list`;`CONS`];;
st 5 [name "iso_list_mem"];;
st 5 [`iso_list`;`quotient_list`];;
st 100  [`parts L r`;omit `atom`;omit `POWER`;omit `l'm`];;
st 100  [`parts L r`;omit `atom`;omit `POWER`;omit `l'm`;`next_el`];;
st 5 [`parts L r = [r]`];;
st 5 [`(x = LAST r \/ next_el r x = f_list L (e_list x))`];;
st 5 [`[]`;`\/`;`CONS`];;
st 5 [`flatten (a::b)`];;
st 5 [`LAST`;`flatten`];;
st 5 [`flatten`;`cat`];;
st 5 [`LAST`;`cat`];;
st 5 [`uniq`;`cat`];;
st 5 [`cat u v = []`];;
st 5 [`parts`;`cat`];;
st 15 [`LAST`;`cat`];;
st 5 [`sizel`;`cat`];;
st 5 [`all`;`cat`];;
st 15 [`u = parts L r`];;
st 5 [`cat u v = cat a b`];;
st 5 [`indexl`;`cat`];;
st 5 [`indexl`;`LAST`];
st 5 [`flatten x = []`];;
st 5 [`MEM`;`s = []`];;
st 5 [`LAST`;`cat`];;
st 15 [`LAST`;`flatten`];;
st 5 [`LAST (LAST u)`];;
st 5 [`all`;`CONS`];;
st 5 [`next_el u d = next_el r d`];;
st 15 [`uniq`;`map`];;
st 5[`inj_on`;`FST`];;
st 5 [`flatten`;`MAP`];;
st 15[`parts`;`x = []`];;
st 5 [`next_el`;`MAP`];;
st 5 [`inj_on`;`f_list`];;
st 5 [`e_list`;`list_of_darts`];;
st 5 [`LAST`;`MAP`];;
st 15 [`parts`;`[]`];;
st 5 [`next_el`;`MEM`];;
st 5 [`MEM`;`f_list`];;
st 15 [`parts`;`next_el`;`LAST`];;
st 15 [`normal_list`;`uniq`;`[]`];;
st 5 [`list_of_darts`;`normal_list`];;
st 15 [`HD`;`MAP`];;
st 5 [`iso_list`;`sizel`];;
st 5 [`flatten`;`MAP`];;
st 5 [`filter`;`map`];;
st 5 [`sizel`;`map`];;
st 15 [`filter`;`sizel`];;
st 15 [`LENGTH`;`FILTER`];;
st  5 [`filter p []`];;
st 5 [`sizel`;`CONS`];;
st 5 [`all uniq L`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`quotient_list`;`sizel`];;
st 50 [`iso_list`;`final_list`];;
final_list;;
st 5 [`next_el`;`inj_on`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [`inj_on`;omit `MAP`;`SND`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`flatten`;`cat`];;
st 5 [`map`;`cat`];;
st 5 [`set_of_list`;`APPEND`];;
st 5 [`CONS`;`cat`];;
st 5  [`flatten`;`CONS`];;
st 5 [`iso_list`;`normal_list`];;
st 5 [`find_list`;`inj_on`];;
st 5 [`find_list`;`MAP`];;
st 5 [`x = find_list r d`];;
st 5 [`flatten`;`MAP`];;
st 15 [`uniq`;`map`];;
st 5 [`MEM d (find_list r d)`];;
st 5 [`MEM (find_list r d)`];;
st 5 [`list_of_elements`];;
st 5 [`parts`;`flatten`];;
st 5 [`parts`;`FST (HD l)`];;
st 5 [`quotient_list L []`];;
st 5[`list_of_elements`;`CONS`];;
List_hypermap.list_of_elements;;
st  5 [`set_of_list`;`undup`];;
st 5 [`flatten`;`CONS`];;
st 5[`set_of_list`;`cat`];;
st 5 [`MEM`;`undup`];;
st 15 [`LAST`;`e_list`;`parts`];;
st 5 [`list_of_darts`;`normal_list`];;
st 5 [`MEM`;`find_list`];;
st 50 [`e_list`;`LAST`;name "unlast"];;
st 50 [`parts`;`LAST`];;
st 5 [name "xor"];;
st 5 [`next_el u x = next_el p x`;`LAST`];;
st 15 [`LAST`;`parts`;`next_el`];;
st 5 [`quotient_list`;`good_list`];;
st 5 [`find_list`;`iso_list`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 6;;
back_to "COMMENT";;
(* March 27, 2014 *)
st 5 [`final_list`;`iso_list`];;
st 5 [`MAP`;`flatten`];;
st 5 [`filter`;`map`];;
st 5 [`filter f u = filter g u`];;
st 5 [`MAP f X = []`];;
st 5 [`HD`;`MAP`];;
st 20 [`parts`;`MAP`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`LAST (MAP f u)`];;
st 5 [`next_el`;`MAP`];;
st 5 [`inj_on`;`FST`];;
st 5 [`f_list`;`MAP`];;
st 5 [`next_el r POWER i`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`f_list`;`list_of_darts`];;
st 5 [`(?x. P x) \/ (?y. Q y)`];;
bb 5;;
help "install_user_printer";;
st 15 [`uniq (flatten N)`;`normal_list`];;
st 5 [`sizel`;`flatten`];;
st 50 [`sumn`];;
st 5 [`sumn []`];;
st 5 [`all f (u::v)`];;
st 5 [`sumn x <= sumn y`];;
st 5 [`uniq`;`sizel a <= sizel b`];;
st 5 [`flatten`;`normal_list`;`list_of_darts`];;
st 15 [`hypermap_of_list`;`quotient_list`];;
st 5 [`normal_list`;`is_normal`];;
st 5 [`final_quotient_faces`;`hypermap_of_list`];;
st 5 [`quotient`;`quotient_list`];;
face_set;;
st 5 [`face_set`;`hyp_iso`];;
st 50 [`connected_hypermap`];;
st 50 [`number_of_components`];;
st 50 [`set_of_components`];;
st 50 [`set_part_components`];;
st 50 [`comb_component`];;
st 5 [`is_in_component`];;
st 5 [`is_path`];;
st 5 [`go_one_step`];;
flag_list;;
is_contour;;
st 5 [`is_contour`;`is_path`];;
st 0 [`is_path`;`connected_hypermap`];;
st 0 [`is_path`;`comb_component`];;
st 50 [`is_contour`];;
st 50 [`is_path`];;
st 10 [`CARD s = 1`];;
st 5 [`set_of_components`;`FINITE`];;
st 50 [`is_contour`];;
st 5 [`dart`;`hypermap_of_list`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`x = []`;`?`];;
st 5 [`face_map`;`f_list`];;
st 15 [`normal_list`;`node_map`];;
st 5 [`node`;`node_map`;`inverse`];;
st 5 [`x IN node H x`];;
st 5 [`next_el`;`MEM`];;
st 50 [`core_list`];;
st 50 [`final_list`;`parts`];;
st 50 [`quotient_list`];;
st 50 [`final_list`;`rot`];;
st 50 [`rot`;`hypermap_of_list`];;
st 5 [`perm_eq`;`hypermap_of_list`];;
st 5[`next_el`;`rot`];;
st 5[`MEM`;`rot`];;
st 15 [`ALL2`];;
st 5 [`flatten (h::t)`];;
st 15[`perm_eq`;`cat`];;
st 5 [`perm_eq []`];;
st 5[`perm_eq a b = perm_eq b a`];;
st 5 [`perm_eq`;`rot`];;
st 5 [`perm_eq`;`uniq`];;
st 5[`rot n r = []`];;
st 5 [`set_of_list`;`perm_eq`];;
st 5 [`MEM`;`perm_eq`];;
st 5 [`f_last`;`final_list`];;
st 5 [`loop_list`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5[`next_el`;`rot`];;
st 5 [`final_list`;`rot`];;
st 5 [`rot`;`map`];;
st 5 [`rot`;`final_list`];;
st 5[`?r. P ==> Q r`];;
st 5 [`ALL2`;`map`];;
st 5 [`all`;`final_list`;`rot`];;
st 5 [`rot`;`hypermap_of_list`];;
st 15 [`list_of_darts`;`uniq`;`good_list`];;
st 5 [`ALL2`;`quotient_list`];;
st 5 [`MEM (find_face L r) (list_of_faces L)`];;
st 15 [`perm_eq`;`s ==> perm_eq u v`];;
st 5 [`uniq`;`flatten`];;
st 5 [`uniq`;`list_of_faces`];;
st 5 [`list_of_faces`;`list_of_darts`];;
st 5 [`list_pairs`;`[]`];;
st 50 [`list_of_faces`];;
st 15 [`uniq`;`MEM`;`x = y`;`flatten`];;
st 5 [`uniq`;`find_face L x = s`];;
st 5 [`quotient_list L []`];;
st 5 [`hypermap_of_list []`];;
st 5 [`perm_eq`;`hypermap_of_list`];;
st 5 [`quotient_list`;`all`;`final_list`];;
st 5 [`list_of_faces`;`perm_eq`];;
st 5 [`perm_eq`;`map`];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`list_of_faces`;`FST`];;
st 5 [`list_of_faces`;`MAP`];;
st 5 [`list_pairs`;`zip`];;
st 15 [`zip`;`FST`];;
st 15 [`zip`;`MAP`];;
st 50 [`planegraph_relaxed`];;
st 50 [`planegraph`];;
st 50 [`PlaneGraphs`];;
st 50 [def "max";`x:num`];;
st 15 [`x:(num -> bool) -> num`];;
st 15 [`x:(num)list -> num`];;
tyo `maxn`;;
st 15 [`maxn`];;
st 50 [`maxn`];;
st 5 [`(?f. A ==> B f) <=> U`];;
help "new_specification";;
st 15 [`vertices_set2`;omit `Seed`];;
st 5 [`vertices_graph`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5 [`MEM`;`find_face`];;
st 5 [`uniq`;`find_face`];;
st 50 [name "Kbw"];;
st 5 [`marked_list`;`list_of_darts`];;
st 5 [`FST`;`hypermap_of_list`;`node`];;
st 5 [`MEM`;`find_face`;`list_of_darts`];;
st 5 [`x IN node H y`];;
st 50 [`INJ`;`?`];;
st 5 [`inj_on`;`IN`];;
st 5 [`elements_of_list`;`normal_list`];;
st 5 [`list_of_darts`;`marked_list`];;
st 15 [`list_of_darts`;`list_of_elements`];;
st 5 [`MEM`;`find_face`;`list_of_darts`];;
st 15 [`BIJ`;`CARD`];;
st 5 [`INJ f {}`];;
st 5 [`CARD`;name "NUM"];;
st 5 [`CARD`;`iota`];;
st 5 [`CARD`;`set_of_list`];;
st 5  [`INJ`;`inj_on`];;
st 5 [`set_of_list`;`iota`];;
st 5[`MEM`;`iota`];;
st 5[`vertices_set2`;`match_quotient_list`];;
st 5 [`vertices_graph`];;
st 5 [`list_of_darts`;`quotient_list`];;
elements_of_list_quotient_list;;
quotient_list_elements;;
st 15 [`?f:A->B. P`;`x:(A)list`];;
st 5 [`set_of_list`;`MAP`];;
st 5 [`BIJ`;`IMAGE`];;
st 5 [`sizel`;`CARD`];;
st 15 [`MAP`;`uniq`];;
st 15 [`newvertex_v2`];;
st 5 [`uniq`;`filter`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5[`uniq`;`rot`];;
st 5 [`MEM`;`find_face`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`simple_hypermap`;`FST`];;
st 50 [`simple_hypermap`;`hypermap_of_list`];;
st 5 [`find_face`;`list_of_faces`];;
st 5 [`uniq`;`list_of_darts`];;
st 500 [`uniq`;`nth`];;
st 50 [`all uniq L`;`FST`];;
st 5 [`list_of_darts`;`find_face`];;
st 15 [`list_of_darts`;`find_face`];;
st 15 [`find_pair_list`;`find_face`];;
st 15 [`list_pairs`;`FST`];;
st 5 [`find_pair_list L u = find_pair_list L v`];;
st 5 [`find_face L x = find_face L y`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`uniq`;`undup`];;
st 5 [`set_of_list`;`undup`];;
st  5 [`MAP`;`find_face`];;
st 5 [`rotate_to`;`rot`];;
st 10 [`uniq`;`map`];;
st 5  [`indexl`;`MAP`];;
st 5 [`rot`;`map`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`MEM x (find_face L x)`];;
st 5[`inj_on`;`FST`];;
st 5 [`inj_on`;`SUBSET`];;
st 10 [`find_face`;`list_of_darts`];;
st 5 [`filter`;`map`];;
st 5 [`filter f r = filter g r`];;
st 5 [`rot`;`rotate_to`];;
st 15 [`MAP`;`FST`];;
st 5 [`FST`;`list_of_darts`];;
Lp_gen_theory.list_of_dart_pairs_subset;;
st 15 [`SND`;`normal_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`flatten`;`MAP`];;
st 5 [`set_of_list`;`IMAGE`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [`final_list`;`map`];;
final_list;;
st 5 [`inj_on`;`final_list`];;
st 5 [`iso_list`;`final_list`];;
st 5 [`filter`;`map`];;
st 15 [`quotient_list`;`MAP`];;
st 15 [`quotient_list`;`iso_list`];;
st 5 [`quotient_list`;`flatten`];;
st 5 [`list_of_elements`;`flatten`];;
st 5 [`SND`;`f_list`];;
st 5 [`MEM`;`next_el`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "COMMENT";;
(* April 6, 2014 *)
st 50 [`Seed`;`faces`];;
st 50 [`Seed`];;
st 5 [`filter`;`CONS`];;
st 5 [`set_of_list [x]`];;
st 5 [`{x} SUBSET t`];;
st 50 [`iso_list`;`dih2k_list`];;
st 59 [`dih2k_list`;`quotient_list`];;
inj_on_BIJ;;
st 5 [`FINITE`;`elements_of_list`];;
st 5 [`set_of_list`;`iota`];;
st 5 [`sizel`;`elements_of_list`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`uniq`;`list_of_elements`];;
st 5 [`CARD x <= CARD y`;`SUBSET`];;
st 5 [`CARD`;`sizel`];;
st 5 [`list_of_faces`;`?`];;
st 5 [`good_list_nodes`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`list_of_faces`;`map`];;
st 15 [`find_face`;`list_of_faces`];;
st 5 [`list_of_darts`;`MAP (MAP phi)`];;
st 5 [`list_of_darts`;`flatten`];;
st 5 [`list_pairs`;`(f=[])`];;
st 5 [`find_face (MAP (MAP phi) L)`];;
st 15 [`find_face L x = f`];;
st 5 [`normal_list`;`iso_list`];;
st 5 [`is_restricted`;`CARD`];;
st 5 [`face`;`hypermap_of_list`];;
st 5 [`find_face`;`?`];;
st 5 [`dart`;`hypermap_of_list`];;
st 5 [`list_pairs`;`MAP`];;
st 5 [`final_list`;`iso_list`];;
st 5 [`final_list`];;
st 5 [`quotient_list`;`iso_list`];;
st 5 [`dih2k_list`;`iso_list`];;
st 15 [`dih2k_list`];;
st 5 [`core`;`MAP`];;
st 5 [`core`;`final_list`];;
st 15 [`uniq`;`map`];;
st 5 [`inj_on`;`FST`;`SND`];;
st 15 [`flatten`;`list_of_darts`];;
st 5 [`uniq`;`list_of_faces`];;
FST_o_FST;;
planegraph;;
st 5 [`subdivFaceFinal`];;
st 5 [`subdivFace0_alt`];;
st 5 [`subdivFace0`];;
st 5 [`vos = []`;` \/ `];;
st 15 [`(!a. Q ==> P a) <=> U`];;
st 5 [`indexToVertexList`];;
st 5 [`MAP f x = []`];;
st 5 [`cat [x] y`];;
st 5 [`MEM`;`FILTER`];;
st 15 [`splitFace`];;
st 5 [`faces`;`Graph`];;
st 5 [`splitFace`;`finals`];;
st 5 [`filter`;`CONS`];;
st 5 [`filter`;`replace`];;
st 50 [`replace`];;
st 5 [`filter`;`[]`];;
st 5 [`filter P xs = []`];;
st 8 [`splitFace`];;
st 5 [`split_face`];;
st 5 [`split_face`;`splitFace`];;
st 5 [`minimalFace`];;
st 5 [`faces`;`Graph`];;
st 9 [`replace`];;
st 5 [`sizel (h::t)`];;
st 5 [`subdivFace0_alt`];;
st 15 [`finalGraph`];;
st 15 [`nonFinals`];;
st 15 [`filter P xs = xs`];;
st 15 [`hypermap_of_list`;`quotient_list`];;
st 5 [`list_of_faces`;`quotient_list`];;
st 50 [`final_list`];;
st 15 [`flatten`;`sizel`];;
st 50 [`sumn`];;
st 5 [`sumn`;`CONS`];;
st 5 [`all`;`CONS`];;
st 5 [`sumn []`];;
st 5 [`CONS`;`flatten`];;
st 5 [`map`;`cat`];;
st 5 [`CONS`;`cat`];;
st 5 [`sizel x = 1`;`[x]`];;
st 5 [`uniq`;`normal_list`;`flatten`];;
st 5 [`uniq (flatten N)`;`MEM d r`];;
st 15 [`core`];;
st 15 [`quotient_list`;`list_of_darts`];;
st 15 [`parts L x = []`];;
st 5 [`flatten`;`parts`];;
st 5 [`is_edge_nondegenerate`;`is_restricted`];;
st 5 [`quotient_list L []`];;
st 5 [`all uniq`;`simple_hypermap`];;
st 5 [`list_of_darts`;`iso_list`];;
st 5 [`list_of_darts`;`inj_on`];;
List_hypermap.list_of_darts;;
st 5 [`list_of_darts`;`flatten`];;
List_hypermap.list_of_darts_alt;;
st 5 [`MAP`;`flatten`];;
st 5 [`list_of_faces`;`iso_list`];;
st 5[`list_of_faces`];;
st 5 [`list_pairs`;`iso_list`];;
st 5 [`list_of_darts`;`iso_list`];;
st 5 [`normal_list`;`iso_list`];;
st 15 [`sizel`;`CARD`;`set_of_list`];;
st 5 [`sizel (undup p)`];;
st 5 [`sizel (filter P r)`];;
st 5 [`count`;`sizel`];;
st 5 [`CARD a <= CARD b`;`SUBSET`];;
st 5 [`set_of_list (undup x)`];;
st 5 [`SND`;`finals`];;
st 5 [`map`;`filter`];;
st 15 [`uniq (map f x)`];;
st 5 [`uniq`;`filter`];;
st 5 [`fgraph`;`FST`];;
st 5 [`uniq`;`good_list`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`good_list`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`good_list_nodes`;`iso_list`];;
st 5 [`list_pairs x = list_pairs y`];;
st 15 [def "max"];;
tyo `MAX`;;
tyo `maxn`;;
st 5 [`MAX`;`maxn`];;
st 5 [`maxn`];;
st 50 [`m:(num -> bool) -> num`;`a:num < b:num`;omit `CARD`;omit `min_num`];;
st 5 [`@n. P = @t. Q`];;
st 5 [`y IN S ==> y <= (m:num)`];;
st 15 [`S y ==> y <= (m:num)`;`?`];;
st 50 [`match_quotient_list`];;
st 5 [`?u. P u /\ u = y`];;
st 5 [`((?x. r) ==> s) <=> f`];;
st 15 [`foldr`];;
st 5 [`good_list`];;
good_list;;
is_restricted;;
st 5 [`is_restricted`;`L = []`];;
st 5 [`Seed`;`match_quotient_list`];;
st 5 [`list_of_faces`;`list_pairs`];;
st 5 [`nonFinals`;`Seed`];;
st 5 [`faces`;`graphl`];;
st 5 [`Seed`;`vertices_set2`];;
st 5 [`planegraphP`;`Seed`];;
st 5 [`x,x`;`RTranCl`];;
st 5 [`sizel`;`list_pairs`];;
st 5 [name "restricted_hypermaps"];;
st 5 [`planegraphP`;`planegraph`];;
st 5 [`planegraphP`];;
planegraph;;
st 5 [`is_restricted`;`all uniq`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`fgraph`;`Seed`];;
st 5 [`finalGraph`;`hypermap_of_list`];;
st 5 [`iso`;`iso_list`];;
st 5 [`newvertex_prepped`];;
st 5 [`marked_list`;`loop_choice`];;
st 4 [`minimalFace`];;
finalGraph;;
st 5 [`minimalVertex`];;
st 15 [`minimal_el`];;
st  5 [`nextVertex`;`next_el`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`list_of_darts`;`next_el`];;
st 5 [`u,next_el f u`];;
st 5 [`MEM u (zip a b)`];;
st 5 [`MEM`;`indexl`];;
st 5 [`minn a a `];;
st 5 [`indexl`;`sizel`];;
st 5 [`indexl x s = u`;`uniq`];;
st 5 [`uniq`;`list_pairs`];;
st 5 [`nth`;`zip`];;
st 5 [`EL`;`nth`];;
st 5 [`nth`;`next_el`];;
st 5 [`MEM`;`iota`];;
st 5 [name "INDUCT";name "LIST"];;
st 5 [`sizel`;`rcons`];;
st 5 [`POWER`;`SUC`];;
st 5 [`rcons []`];;
st 5 [`headl`;`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`EL`;`rcons`];;
st 5 [`rcons`;`cat`];;
st 5 [`cat`;`HD`];;
st 5 [`cat (h::t) b`];;
st 5 [`cat`;`EL`];;
st 5 [`cat`;`nth`];;
st 5 [`sizel`;`CONS`];;
st 5 [`nth`;`0`];;
st 5 [`headl`;`HD`];;
st 5 [`EL`;`LAST`];;
st 5 [`cat`;`rcons`];;
st 5[`rcons`;`cat`];;
st 5 [`LAST`;`rcons`];;
st 5 [`LAST`;`cat`];;
st 5 [`BUTLAST`;`TL`];;
st 5 [`BUTLAST`;`APPEND`];;
st 5 [`LAST`;`TL`];;
st 5 [`APPEND`;`TL`];;
st 5 [`APPEND`;`CONS`];;
st 5 [`HD`;`TL`];;
st 5 [`LENGTH`;`TL`];;
st 5 [`LENGTH`;`3`;`EL`];;
st 5 [`BUTLAST x = []`];;
st 15 [def "butlast"];;
st 5 [`butlast`;`BUTLAST`];;
st 5 [`butlast`;`sizel`];;
st 15 [def "TL"];;
st 5 [`sizel`;`TL`];;
st 5 [`butlast`;`rcons`];;
st 5 [`rcons []`];;
st 5 [`sizel`;`TL`];;
st 5 [`EL`;`BUTLAST`];;
st 5 [`(a /\ (!x. P x)) <=> R`];;
st 5 [`LAST`;`TL`];;
st 5 [`LAST`;`EL`];;
st 5 [`EL`;`TL`];;
st 5 [`(f:num->num) i <= f (k:num)`];;
st 5 [`EL`;`iota`];;
st 5 [`EL`;`LAST`];;
st 15 [`enumerator`];;
st 15 [`indexToVertexList`];;
st 5 [`x:(A)option -> bool`];;
st 5 [`containsUnacceptableEdge`];;
st 15 [`enum_of_VertexList`];;
st 50 [`nextVertices`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`(x,next_el f x)`];;
st 5 [`list_of_darts`;`list_pairs`];;
st 5 [`list_of_darts`;`list_of_elements`];;
st 5 [`MEM`;`list_pairs`];;
st 20 [`next_el`;`list_pairs`];;
st 20 [`duplicateEdge`];;
st 20 [`directedLength`];;
st 5 [`betwn f a b = []`];;
st 5 [`betwn`;`indexf`];;
st 5 [`next_el`;`indexf`];;
st 5 [`indexf`;`0`];;
st 15 [`sizel`;`CARD`;`m = n:num`];;
st 5 [`sizel (undup s)`];;
st 15 [`CARD`;`~(a=b)`];;
st 5 [`list_of_elements`;`flatten`];;
st 50 [`duplicateEdge`];;
st 50 [`containsUnacceptableEdge`];;
st 5 [`containsUnacceptableEdgeSnd`];;
st 5 [`containsDuplicateEdge`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "COMMENT";;
(* April 11, 2014 *)
st 5 [`containsUnacceptableEdge`];;
st 10 [`indexToVertexList`];;
st 10 [`enumerator`];;
st 5 [`enum_of_VertexList`];;
st 5 [`SOME`;`NONE`];;
st 5 [`the`;`SOME`];;
st 5 [`indexf v v`];;
st 5 [`isSome NONE`];;
st 5 [`isSome (SOME v)`];;
st 5[`~(t=[])`;`?`];;
st 5 [`NONE`;`isSome`];;
st 5 [`(a ==> (!x. P x)) <=> Q`];;
st 5 [`EL`;`MAP`];;
st 5 [`sizel`;`showDups0`];;
st 50 [`enum_of_VertexList`;`indexf`];;
generatePolygon;;
st 5 [`EL`;`showDups0`];;
st 5 [`?j. i = SUC j`];;
st 5 [`if p then a else a`];;
st 5 [`LAST`;`EL`];;
st 15 [`enum_of_VertexList`];;
st 0 [`LAST`;`FILTER`];;
st 5 [`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`filter`;`rcons`];;
st 5 [`~(x = [])`;`MEM`];;
st 50 [`showDups0`];;
List.length (search [`x:A`]);;
st 5 [`import_tame_classification`];;
st 5 [`isSome`;`NONE`];;
st 5 [`EL`;`MAP`];;
st 5 [`sizel`;`showDups0`];;
st 5 [`LAST`;`filter`];;
st 5 [`(P ==> (!x. Q x)) <=> R`];;
st 5 [`nth`;`filter`];;
st 5 [`MEM`;`EL`];;
st 5 [`LAST`;`EL`];;
Seq.size_map;;
st 5 [`indexToVertexList`;`enum_of_VertexList`];;
st 50 [`containsDuplicateEdge`];;
st 50 [`duplicateEdge`];;
st 5 [`containsUnacceptableEdge`];;
st 5 [`next_el`;`nextVertices`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "COMMENT";;
(* April 24, 2014 *)
st 5 [`EL`;`enum_of_VertexList`];;
st 5 [`sizel`;`enum_of_VertexList`];;
st 5 [`nextVertex`;`next_el`];;
st 15 [`nextVertices`];;
st 5 [`uniq (h::t)`];;
st 5 [`isSome`;`NONE`];;
st 5 [`SOME (the h)`];;
st 5 [`sizel`;`showDups0`];;
st 5 [`enumerator`;`enum_of_VertexList`];;
st 5 [`all`;`MEM`;`filter`];;
st 5 [`LENGTH`;`indexToVertexList`];;
st 50 [`hideDupsRec`];;
st 5 [`sizel`;`enum_of_VertexList`];;
st 5 [`EL`;`enum_of_VertexList`];;
st 5 [`EL`;`indexToVertexList`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`indexf`;`LAST`];;
st 5 [`EL`;`LAST`];;
st 5 [`indexf`;`EL`];;
st 5 [`indexf`;`next_el`];;
st 5 [`next_el`;`prev_el`];;
st 5 [`MEM`;`prev_el`];;
st 15 [`unadj`];;
st 5 [`sizel [h]`];;
st 5 [`the x = the y`];;
st  5 [`1 < sizel x`];;
st 5 [`MEM`;`EL`];;
st 5 [`filter`;`FILTER`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types iso_list_trans;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "COMMENT";;
(* April 25, 2014 *)
st 15  [def "rotate"];;
st 5 [`map`;`filter`];;
st 5 [`filter f x = x`];;
st 5 [`LENGTH`;`rotate_to`];;
st 5 [`rotate_to`;`rot`];;
st 15 [`rotate_to`];;
st 5 [`headl`;`rot`];;
st 5 [`prev_el`;`rot`];;
st 5 [`prev_el`;`HD`];;
st 5 [`LAST`;`last`];;
st 5 [`indexf`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5 [`MEM (EL i x) x`];;
st 5 [`indexl`;`sizel`];;
st 5 [`indexf`;`HD`];;
st 5 [`indexl`;`EL`];;
st 5 [`list_pairs`;`rot`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`next_el`;`nth`];;
st 5 [`indexl`;`EL`];;
st 5 [`nth`;`EL`];;
st 5 [`subdivFaceFinal`];;
st 5 [`MEM`;`rotate_to`];;
st 5 [`MAP f x = []`];;
st 5 [`(x = [])`;`MEM`];;
st 15 [`dropl`];;
st 5 [`TL`;`tail`];;
st 5 [`dropl`;`SUC`];;
st 5 [`dropl i (dropl j n)`];;
st 5 [`dropl i x = []`];;
st 5 [`map`;`dropl`];;
st 5 [`headl`;`dropl`];;
mem_rotate_to;;
GSYM mem_rotate_to2;;
size_rotate_to;;
st 5 [`isSome`;`NONE`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`EL`;`dropl`];;
st 5 [`next_el`;`rot`];;
st 5 [`subdivFace0_alt`];;
st 5 [`subdivFaceFinal`;`subdivFace`];;
st 5 [`subdivFace`;`generatePolygon`];;
st 5 [`flag_list`;`s_flag_list`];;
st 15 [`nonFinals`];;
st 5 [`find_list N d = r`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`list_pairs`;`list_of_darts`];;
st 5 [`flatten`;`parts`];;
st 5 [`next_el`;`f_list`;`LAST`];;
st 15 [`planegraphP`];;
st 10 [`planegraphP`;`generatePolygon`];;
st 10 [`RTranCl`];;
st 50 [`RTC`];;
st 10 [`nonFinals`];;
st 5 [`makeFaceFinal`;`generatePolygon`];;
st 5 [`MEM`;`iota`];;
st 15 [`makeFaceFinal`];;
st 15 [`faceListAt`];;
st 5 [`faces`;`Graph`];;
st 15 [`faceListAt`];;
st 15 [`vertices_set2`];;
vertices_graph;;
countVertices;;
st 50 [`replace`];;
st 5 [`filter`;`[]`];;
st 5 [`FST`;`setFinal`];;
st 50 [`planegraph`];;
st 50 [`faceListAt`;`countVertices`];;
st 5 [`planegraphP`];;
st 5 [`countVertices`;`Graph`];;
st 15 [`REPLICATE`];;
st 50  [`generatePolygon`];;
st 50 [`subdivFace`];;
st 50 [`replacefacesAt`];;
st 50 [`list_update`];;
st 5 [`vertices_set2`;`countVertices`];;
st 10 [`minimalFace`];;
st 5 [`FST`;`fgraph`];;
st 15 [`MEM`;`minimalVertex`];;
normal_list;;
marked_list;;
is_restricted;;
loop_list;;
st 5 [`quotient_list`;`3`];;
loop_choice;;
st 50 [`final_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`all uniq`;`simple_list`];;
st 5 [`find_face`;`list_of_faces`];;
st 5 [`MEM`;`is_restricted`;`sizel`];;
st 5 [`list_of_faces`];;
st 5 [`list_pairs`;`sizel`];;
st 50 [`maxn`];;
st 5 [`minimalFace`;`loop_choice`];;
st 5 [`planegraph_relaxed`];;
st 5 [`planegraph`;`planegraphP`];;
loop_choice;;  
st 50 [`quotient_list`;`rot`];;
st 50 [`quotient_list`;`final_list`];;
st 50 [`final_list`;omit `~final_list L r`;omit `all (final_list L)`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`core`;`quotient_list`];;
st 50 [`core`];;
st 50 [`good_list`;`quotient_list`];;
good_list;;
st 5 [`rot`;`map`];;
st 5 [`FST`;`find_face`];;
st 5 [`FST`;`list_of_faces`];;
st 5 [`find_face`;`list_of_faces`];;
normal_list;;
st 15 [`uniq (flatten N)`;`MEM x r`;`r = r'`];;
st 50 [`core`];;
st 50 [`FST`;`parts`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`list_pairs`;`list_of_faces`];;
st 5 [`sizel`;`list_pairs`];;
st 5 [`foldr`;`maxn`];;
st 5 [`vertices_set2`;`makeFaceFinal`];;
st 5 [`finals`;`makeFaceFinal`];;
st 5 [`faces`;`fgraph`];;
st 5 [`minimalFace`];;
st 5 [`makeFaceFinal`;`faces`];;
st 15 [`replace`;`setFinal`];;
st 5 [`SND`;`setFinal`];;
st 5 [`filter f [x]`];;
st 5 [`FST`;`setFinal`];;
st 5 [`list_pairs`;`list_of_faces`];;
st 5 [`list_pairs`;`FST`];;
st 5 [`rot`;name "sym"];;
st  5 [`list_pairs`;`rot`];;
st 10 [`iso_list`;`sizel`];;
st 5 [`iso_list a b <=> c`];;
iso_list_trans;;
iso_list_sym_nil;;
iso_list_snd;;
st 5 [`iso_list L L`];;
st 15 [`fgraph`;`Seed`];;
st 5 [`MEM`;`rev`];;
st 5 [`flag_list`;`Seed`];;
st 5 [`faces`;`Seed`];;
st 5 [`final_list`;`flag_list`];;
st 15 [`final_list`;`final_dart_list`];;
st 15 [`all (final_list L)`];;
st 5 [`filter f x = x`];;
st 5 [`connected_hypermap`;`contour_list`];;
connected_hypermap;;
st 50 [`connected_hypermap`;`hypermap_of_list`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types iso_list_trans;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 5;;
back_to "COMMENT";;
(* May 2, 2014 *)
st 50 [`contour_list`];;
st 5 [`cat a b = []`];;
st 5 [`HD`;`cat`];;
st 5 [`TL`;`cat`];;
st 5 [`cat`;`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`TL s' = []`];;
st 5 [`HD`;`TL`;`CONS`];;
st 5 [`LAST [v]`];;
st 5 [`LAST`;`TL`];;
st 5 [`MEM`;`TL`];;
st 5 [`EL`;`APPEND`];;
st 5 [`EL`;`LAST`];;
st 5 [`sizel`;`TL`];;
st 5 [`final_dart_list`;`final_list`];;
st 5 [`f_list`;`next_el`;`POWER`];;
st 5 [`indexf`;`next_el`;`POWER`];;
st 5 [`indexf a b c = 0`];;
st 5 [`indexf`;`next_el`];;
st 5 [`final_list`;`f_list`];;
st 5 [`MEM`;`next_el`];;
st 15 [`MEM`;`next_el`;`POWER`];;
st 50 [name "INDUCT";`i:num`];;
st 5 [`(P ==> (!i. Q i)) <=> R`];;
st 5 [name "size";name "induc"];;
st 5 [`POWER`;`f ((f POWER k) i)`];;
st 5 [`next_el`;`indexf`];;
st 5 [`indexf`;`sizel`];;
st 15 [`final_list`;`quotient_list`;omit `all (final_list L)`];;
st 5 [`final_list`;`core`];;
st 50 [`e_list`;`parts`];;
st 5 [`e_list_ext`;`edge_map`];;
st 50 [`SND`;`Seed`];;
st 5 [`find_face`;`list_pairs`];;
st 5 [`find_pair_list`];;
st 15 [`list_of_darts`;`quotient_list`];;
st 15 [`parts`;`final_list`];;
st 5 [`sizel xs = 2`;`CONS`];;
st 5 [`sizel`;`TL`];;
st 100 [`Seed`];;
dih2k_list;;
st 15 [`final_list`;omit `all (final_list L)`];;
st 5 [`list_pairs`;`iota`];;
st 5 [`find_list L x = y`];;
st 16 [`uniq`;`MEM x r /\ U`;`f ==> (a = b)`;`flatten`];;
st 15 [`core`];;
st 15 [`parts`;`MEM`;`LAST`];;
st 15 [`quotient_list`;`LAST`];;
st 5 [`flatten`;`parts`];;
st 5 [`MEM`;`MAP LAST`];;
st 5 [`~(t = [])`;`MEM`];;
st 5 [`list_pairs`;`rev`];;
st 5 [`list_pairs`;`core`];;
st 5 [`all (final_list L)`;`quotient_list`];;
st 5 [`all (final_list L)`;`final_dart_list`];;
st 5 [`list_of_darts`;`contour_list`];;
st 5 [`dart`;`darts_of_list`];;
contour_list_connected_refl;;
st 5 [`face_map`;`hypermap_of_list`];;
st 5 [`node_map`;`hypermap_of_list`];;
st 5 [`list_of_darts`;`f_list`];;
st 5 [`list_of_darts`;`e_list`];;
st 5 [`iso_list`;`is_restricted`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`iso_list`;`good_list`];;
st 5 [`all uniq`;`simple_hypermap`];;
st 5 [`marked_list`;`iso_list`];;
st 5 [`final_list`;`iso_list`];;
st 5 [`iso_list`;`CONS`];;
st 5 [`iso_list`;`loop_choice`];;
st 50 [`minimalFace`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`minimalVertex`;`minimalFace`];;
st 5 [`MEM `;`minimal_el`];;
st 5 [`is_restricted`;`all uniq`];;
st 50 [`marked_list`;`quotient_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`marked_list`;];;
st 15 [`next_el`;`f_list`;`parts`];;
st 5 [`next_el p x = next_el r x`;`parts`];;
st 5 [`f_list L x = f_list L (e_list x)`];;
st 5 [`list_of_darts`;`marked_list`];;
st 5 [`quotient_list`;`isop_list`];;
st 5 [`isop_list`;`iso_list`];;
st 5 [`MAP`;`inj_on`;`FST`;`SND`];;
st 5 [`MAP f x = x`];;
st 5 [`map f x = map g x`];;
st 5 [`MAP f x = MAP g x`];;
st 5 [`finals`;`generatePolygon`];;
st 5 [`planegraphP`;`next_plane`];;
st  5 [`next_plane`;`generatePolygon`];;
st 5 [name "AQIU"];;
st 5 [`final_list`;`rtrans`];;
st 15 [`subdivFace`];;
st 15 [def "subdivFace"];;
st 5 [`subdivFaceFinal`];;
st 5 [`subdivFaceFinal2`];;
st 15 [`triple_data`];;
st 15 [`subdivFace0_alt`];;
st 5 [`all`;`~`];;
st 5 [`isSome`;`NONE`];;
st 50 [`splitFace`];;
st 50 [`split_face`];;
st 50 [`split_normal_list`];;
st 50 [`transform_list`];;
st 50 [`ntrans`];;
st 5 [`core L f`;`MAP FST`];;
st 5 [`is_edge_nondegenerate`;`is_restricted`];;
st 5 [`MEM`;`l'y`];;
st 5 [`list_of_darts`;`marked_list`];;
st 15 [`list_of_darts`;`find_face`];;
st 5 [`uniq`;`list_of_faces`];;
st 5 [`final_list`;`list_of_faces`];;
st 5 [`list_of_darts`;`flatten`];;
st 6 [`final_list`;`rtrans`];;
st 50 [`transform_list`];;
st 50 [`betwn`;`rtrans`];;
st 50 [`iota`;`cat`];;
st 50 [`cat a b = cat c d`;`sizel`];;
st 14 [`cat`;`sizel`];;
st 15 [`flatten`;`ntrans`];;
st 15 [`rtrans`;`flatten`];;
st 5 [def "facesAt"];;
st 5 [def "faceListAt"];;
st 50 [`facesAt`];;
st 50 [`facesAt`;omit `FILTER (\f. MEM v (FST f))`];;
st 50 [`good_graph`];;
st 50 [def "permutes"];;
st 50 [def "perm_eq"];;
st 5 [`perm_eq`;`sizel`];;
st 5 [`perm_eq`;`filter`];;
st 5 [`perm_eq a b <=> perm_eq b a`];;
st 5 [`perm_eq`;`sumn`];;
st 5 [`perm_eq`;`map`];;
st 50 [`perm_eq`];;
st 50 [`perm_eq`;`rot`];;
st 50 [`rot`;`sumn`];;
st 50 [`cat`;`sumn`];;
st 50 [`rot`;`cat`];;
st 15 [`cat`;`take`;`dropl`];;
st 5 [`perm_eq []`];;
st 5 [`perm_eq`;`MEM`];;
st 5 [`MEM`;`rot`];;
st  5[`rot`;name "sym"];;
st 5 [`sumn (a::b)`];;
st 5 [`perm_eq`;`rot`];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`perm_eq (h::t)`];;
st 5 [`perm_eq`;`map`];;
good_facesAt_seed;;
st 5 [`a = b:(B)list`;`perm_eq a b`];;
st 5 [`perm_eq s s`];;
faceListAt_makeFaceFinal;;
faces_makeFaceFinal;;
mem_fst_setFinal;;
replace;;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* May 15, 2014 *)
st 5 [`cat (h::t)`];;
st 5 [`replace`;`cat`];;
st 5 [`replace`;`rot`];;
st 5 [`MEM`;`indexl`];;
st 5 [`indexl`;`cat`];;
st 15 [`replace`;`MEM`];;
st 50 [`MEM`;`HD`];;
st 5 [`cat`;`take`;`dropl`];;
st 5 [`sizel`;`MEM`];;
st 5 [`sizel`;`dropl`];;
st 5 [`sizel`;`take`];;
st 15 [`indexl a b = 0`];;
st 5 [`perm_eq`;`cat`];;
st 5 [`HD`;`cat`];;
st 5 [`replace`;`cat`];;
st 5 [`cat a b = []`];;
st 5 [`APPEND`;`TL`];;
st 5 [`cat(cat a b) c`];;
st 0 [`perm_eq a b /\ perm_eq b c`];;
st 5 [`perm_eq`;name "tra"];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`perm_eq []`];;
st 5 [`perm_eq`;`cat`];;
st 5 [`perm_eq (h::t)`];;
st 5 [`HD`;`TL`;`CONS`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`ntrans`;`normal_list`];;
st 5 [`ntrans`;`FST`];;
st 5 [`transform_list L x (N, r) = (N,r)`];;
st 5 [`CARD`;`a..n`];;
st 50 [`betwn`;`APPEND`];;
st 50 [`betwn`;omit `parts`];;
st 50 [`transform_list`];;
st 50 [`split_normal_list`];;
st 100 [`rtrans`];;
st 5 [`cat (cat a b)`];;
st 5 [`next_el r (prev_el r z)`];;
st 5 [`MEM`;`l'z`];;
st 5 [`find_face`;`l'y`];;
st 15 [`find_face L x = y`];;
st 15 [`uniq (list_of_darts L)`;`good_list`];;
st 5 [`MEM (ztrans L N r x i) u`];;
st 5 [`MEM (l'z L N r x) u`];;
st  5[`l'y`;`ytrans`];;
st 50 [`MEM`;`betwn`];;
st 5 [`filter P xs = []`];;
st 5 [`filter P xs = xs`];;
st 50 [`~final_list L r`;`betwn`];;
st 5 [`sizel`;`take`];;
st 5 [`take`;`dropl`;`cat`];;
st 15 [`cat a b = cat c d `];;
st 5 [`betwn`;`rotate_to`];;
st 5 [`betwn`;`rot1`];;
st 15 [`~MEM x z`;`betwn`];;
st 5 [`betwn`;`take`;`dropl`];;
st 5 [`rot 1`];;
st 10 [`rotate1`];;
st 5 [`cat`;`rcons`];;
st 5 [`MEM`;`~(s = [])`];;
st 15 [`indexl`;`rot`];;
st 5 [`indexl`;`rcons`];;
st 5 [`betwn s x x `];;
st 5 [`indexf`;`betwn`];;
st 15 [`uniq`;`MEM`;`indexl`;`u ==> (a = b:(B)list)`];;
st 50 [`perm_eq`;`nth`];;
st 50 [`(set_of_list u = set_of_list v)`;`uniq`];;
st 50 [`nth`;`u ==> (a = b:(B)list)`];;
st 5 [`sizel`;`betwn`];;
st 5 [`indexf`;`rot`];;
st 5 [`indexl`;`nth`];;
st 5 [`uniq (betwn s x y)`];;
st 15 [`MEM`;`betwn`;`indexf`];;
st 5 [`indexf`;`rot`];;
st 5 [`MEM`;`indexl`];;
st 5 [`indexl`;`nth`];;
st 5 [`MEM z (betwn s a b)`];;
st 5 [`indexl`;`betwn`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`l'y`;`find_face`];;
st 5 [`MEM x (find_face L x)`];;
st 5 [`list_of_darts`;`marked_list`];;
st 5 [`indexl`;`sizel`];;
st  5 [`~final_list L r`;`l'y`;`l'z`];;
st 5 [`indexf`;`ytrans`;`ztrans`];;
st 5 [`indexf x w fx = 1`];;
st 5 [`MEM x (find_face L x)`];;
st 5 [`MEM`;`next_el`];;
st 5 [`MEM (find_face L x)`];;
st 5 [`uniq (find_face L x)`];;
st 50 [`is_restricted`;`3`];;
st 5 [`indexf a b c + indexf b d c`];;
st 5 [`MEM (l'z L N r x)`;`find_face`];;
st 5 [`indexf x y f = 0`];;
st 5 [`rot`;name "sym"];;
st 5 [`rotate_to`;`rot`];;
st 5 [`rot`;`indexf`];;
st 15 [`rot`;`sizel`];;
st 5 [`indexf`;`indexl`];;
st 5 [`HD`;`rotate_to`];;
st 5 [`l'z`;`~(x = y)`];;
st 5 [`rotate_to f x = y`];;
st 15 [`indexl`;`next_el`];;
st 5 [`rot a (rot b c)`];;
st 5[`indexl`;`sizel`];;
st 5 [`rot (sizel f)`];;
st 5 [`rot 0`];;
st 5 [`rotate1`;`rcons`];;
st 5 [`rotate_to f x = []`];;
st 5 [`rot n f = []`];;
st 5[`CONS`;`HD`;`TL`];;
st 5 [`marked_list`;`find_face`];;
st 5 [`betwn`;`indexl`];;
st 15 [`take`;`dropl`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`take a (take b c)`];;
st 5 [`filter P x = []`];;
st 15 [`MEM x (take a b)`];;
st 5 [`MEM`;`indexl`];;
st 50 [`ytrans`;`MEM`;omit `MEM d (rtrans L N r x i)`];;
st 50 [`l'y`;`l'm`];;
st 50 [`l'm`;name "rep"];;
st 5 [`next_el`;`marked_list`];;
st 5 [`l'm`;`l'y`];;
st 10 [`next_el`;`f_list L`];;
st 5 [`indexl`;`next_el`;`POWER`];;
st 5 [`next_el`;`rot`];;
st 5 [`next_el`;`rotate_to`];;
st 5 [`indexl`;`rotate_to`];;
st 15 [`indexl x w = 0`];;
st 5 [`HD`;`rotate_to`];;
st 5 [`rot n f = []`];;
st 15 [`marked_list`;`find_face`];;
st 5 [`MEM x (find_face L x)`];;
st 5 [`list_of_darts`;`find_face`];;
st 50 [`l'm`;`sizel`];;
st 50 [`l'm`;`LENGTH`];;
st 50 [`hyp'm`;`CARD`];;
st 50 [`is_split_condition`;`marked_list`];;
st 50 [`face (hypermap_of_list L) x`];;
st 5 [`indexl`;`nth`];;
st 5 [`indexl a f = indexl b f`];;
st 5 [`MEM`;`f_list`;`POWER`];;
st 5 [`MEM`;`next_el`;`POWER`];;
st 5 [`marked_list`;`MEM`];;
st 5 [`MEM`;`indexl`];;
st 5 [`filter P x = []`];;
st 5 [`MEM`;`take`;`indexl`];;
st 5 [`cat`;`rtrans`];;
st 18 [`MEM d (rtrans L N r x i)`];;
st 5 [`ytrans L N r x 0`];;
st 5 [`indexf`;`rotate_to`];;
st 5 [`indexf`;`rot`];;
st 5 [`rot n s = s`];;
st 5 [`indexl`;`indexf`];;
st 5 [`HD`;`rotate_to`];;
st 5 [`next_el`;`POWER`;`indexf`];;
st 5 [`MEM`;`indexl`];;
st 5 [`filter P x = filter Q x`];;
st 15 [`MEM`;`dropl`;`indexl`];;
st 5 [`MEM`;`dropl`];;

st 18 [`MEM d (rtrans L N r x i)`];;
st 50 [`MEM d r`;`marked_list`;`indexf a b c = indexf a b d`];;
st 50 [`MEM d r`;`marked_list`;`indexl`];;
st 50 [`marked_list`;`indexf a1 a2 c <= indexf a1 b2 e`];;
st 5 [`rtrans`;`cat`];;
st 5 [`rtrans`;`FST`];;
st 5 [`sizel`;`undup`;`CARD`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`sizel`;`CARD`];;
st 5 [`CARD`;`a..b`];;
st 15 [`MEM`;`marked_list`];;
st 5 [`take`;`cat`];;
st 5 [`take`;`iota`];;
st 5 [`cat`;`iota`];;
st 5 [`set_of_list`;`iota`];;
st 5 [`set_of_list []`];;
st 5 [`MEM x (rtrans L N r x i)`];;
st 5 [`CARD A + CARD B`;`UNION`];;
st 5 [`sizel []`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`normal_list`;`ntrans`];;
st 5 [`set_of_list (iota a b)`];;
st 5 [`CARD x = 0`];;
st 5 [`set_of_list x = {}`];;
st 5 [`normal_list`;`flatten N = []`];;
st 5 [`flatten N = []`];;
st  5 [`MEM x r`;`x =[]`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* May 17, 2014 *)
st 5 [`elements_of_list`;`quotient_list`];;
st 15 [`vertices_set2`;`countVertices`];;
st 5[`undup x = []`];;
st 5 [`countVertices`;`splitFace`];;
st 5 [`countVertices`;`Graph`];;
st 5 [`perm_eq`;`sizel`;`uniq`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`undup (undup s)`];;
st 5 [`undup s = s`];;
st 5 [`uniq`;`undup`];;
st 15 [`marked_list`;`ntrans`];;
splitFace_countVertices;;
st 5 [`betwn`;`filter`];;
st 50 [`split_face`];;
st 50 [`splitFace`];;
st 50 [`split_face`];;
st 5 [`fgraph`;`Graph`];;
st 5 [`replace`;`ntrans`];;
st 5 [`map`;`CONS`];;
st 5 [`FST`;`Face`];;
st 5 [`faces`;`fgraph`];;
st 5 [`MAP`;`APPEND`];;
st 30 [`quotient_list`;`uniq`];;
st 30 [`good_list`;`uniq`];;
good_list;;
st 5 [`good_list`;`quotient_list`];;
st 5 [`all uniq L`;`is_restricted`];;
st 15 [`uniq`;` x ==> (u = v)`;`MEM`;`MAP`];;
splitFace;;
st 5 [`uniq`;`filter`];;
st 5 [`map`;`uniq`];;
st 15 [`uniq (quotient_list L N)`];;
st 15 [`good_list`;`uniq`];;
st 5 [`perm_eq`;`uniq`;name "uniq";name "perm_eq"];;
st 5 [`faceListAt`];;
st 5 [`Graph`];;
st 5 [`MEM (EL v r) r`];;
facesAtList;;
facesAt;;
faceListAt;;
st 5 [`sizel`;`faceListAt`];;
st 5 [`vertices_set2`;`countVertices`];;

(* HLT Haong Le Truong on r_rtrans_eq *)
Hojodcm.indexf_in_rtrans_suc_not_rtrans_new1_v0;;
Aq1.betwn_not_in_rtrans;;


print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* May 20, 2014 *)
st 5 [name "filter_nil"];;
st 5 [name "hd_rotate_to"];;
st 5 [name "size_rotate_to"];;
st 5 [name "vertices_set2_countV"];;
st 5 [`flag_list`;`s_flag_list`];;
st 5 [`main_nonlinear_terminal_v11 = u`];;
st 5 [`!L N r x.
    transform_assumption_v2 L /\
    good_list L /\
    good_list_nodes L /\
    marked_list L N r x /\
    find_face L x = f /\
    transform_count L N r x = t
    ==> sizel (rtrans L N r x t) = sizel f`];;
st 5 [`final_list L r`;`all`;`f_list`;`POWER`;`next_el`];;
       ==> all (\d. (f_list L POWER i) d = (next_el r POWER i) d)`];;
st 5 [def "enclosed"];;
st 5 [def "abc_of_quadratic"];;
st 5 [def "muR"];;
st 5 [def "cayleyR"];;
st 1 [`taum`;`taud`];;
st 3 [`taud_x`;`mu6_x`];;
st 5 [`mu6_x`];;
st 5 [`mu_y`];;
Nonlin_def.mu_y;;
st 5 [def "taud"];;
st 5 [`taud`;`mu_y`];;
st 15 [`enclosed`;omit `ineq`;omit `FAN`];;
st 5 [def "muR"];;
st 5 [`cayleyR`;`delta_x`];;
st 5 [`cayleyR`;`delta`];;
st 5 [`cayleyR`;`ups_x`];;
st 15 [`quad_cross_diag2_x`;omit `ineq`;omit `FAN`];;
st 5 [def "quad_cross_diag2_x"];;
st 5 [`quad_cross_diag2_x`;`enclosed`];;
st 5 [`sqrt x * sqrt x = x`];;
st 50 [`quadratic_root_plus`;omit `ineq`];;
st 5 [`taud`;`taum`];;
st 5 [def "tauq"];;
st 5 [`tauq`;`taum`;omit `ineq`];;
st 5 [`const`;`sol0`;`pi`];;
st 0 [`ineqm s t (a ==> b)`];;
st 5 [`ineqm`;`ineq`];;
st 15 [def "ldih"];;
st 5 [`ldih6_x`];;
st 5 [`rho0`;`lfun`];;
st 5 [def "lfun"];;
st 5 [`lfun`];;
st 15 [`ly`];;
st 5 [`ineq`;`a ==> b ==> c ==> d ==> e`];;
st 5 [`(c * hminus) * (c * hminus) <= d`];;
st 5 [`hminus < c`];;
st 5 [def "h0"];;
1.26 *. 1.26 *. 4.;;
st 15 [`P ==> x * y <= u * v`];;
1.2 *. 1.2 *. 4.;;
st 10 [def "eta2"];;
st 5 [def "pow2"];;
st 15 [`eta2_135`;omit `ineq`];;
st 15 [`eta_x a b c = eta_x a' b' c'`];;
st 15 [`flat_term2_126_x`;omit `ineq`];;
st 15 [`flat_term_x`;omit `ineq`];;
st 15 [`edge2_126_x`;omit `ineq`];;
st 15 [`edge2_flatD_x1`;omit `ineq`];;
st 5 [`delta_126_x`];;
st 15 [`mud_126_x_v1`;omit `ineq`];;
st 15 [`gamma23_full8_x`;omit `ineq`];;
st 15 [`gamma23_keep135_x`;omit `ineq`];;
st 15 [`gamma3_x`;omit `ineq`];;
st 15 [`vol3f_456`;omit `ineq`];;
Sphere.sol_x;;
st 15 [`delta4_squared_x`];;
st 5 [`x1_delta_x`];;
st 5 [`taud_D2_num_x`;omit `ineq`];;
st 5 [`lfun_y1`;omit `ineq`];;
Sphere.delta_x;;
st 5 [`norm2hh_x`;`norm2hh`];;
st 5 [`halfbump_x`;`halfbump_x1`];;
st 15 [`mu6_x`;omit `ineq`];;
st 5 [`pow2`];;
st 5 [`taud_x`;omit `ineq`];;
si 5 [`dnum1`];;
si 5 [`asn797k`];;
si 5 [`asnFnhk`];;
si 5 [`taud_D1_num_x`];;
si 5 [`arclength_x_123'`];;
si 5 [`arclength_x1`];;
si 5 [`sol_euler345_x_div_sqrtdelta`];;
si 15 [`sol_euler_x_div_sqrtdelta`];;
si 15 [`acs_sqrt_x1_d4`];;
Nonlin_def.sol_euler156_x_div_sqrtdelta;;
Nonlin_def.sol_euler_x_div_sqrtdelta;;
si 15 [`tau_residual_x`];;
Nonlin_def.tau_residual_x;; (* trig *)
si 15 [`rhazim_x_div_sqrtdelta_posbranch`];;
Nonlin_def.rhazim_x_div_sqrtdelta_posbranch;; (* trig *)
si 15 [`dih_x_div_sqrtdelta_posbranch`];;
Nonlin_def.dih_x_div_sqrtdelta_posbranch;;
Nonlin_def.dih4_x_div_sqrtdelta_posbranch;;
si 15 [`rho`];;
si 15 [`ldih2_x_div_sqrtdelta_posbranch`];;
si 15 [`ldih_x_div_sqrtdelta_posbranch`];;
si 15 [`gamma2_x1_div_a_v2`];;
Functional_equation.nonf_gamma2_x1_div_a_v2;;
si 15 [`gamma2_x_div_azim_v2`];;
Nonlin_def.gamma2_x_div_azim_v2;;
si 15 [`taud_x`];;
si 15 [`delta_126_x`];;
si 15 [`vol3_x_sqrt`];;
si 15 [`mud_126_x_v1`];;
si 15 [`mu6_x`];;
si 15 [`mu_y`];;
si 15 [`vol3f_x_lfun`];;
st 5 [`sizel`;`subat`];;
st 50 [`subat`];;
si 50 [`gamma3f_x_div_sqrtdelta`];;
Nonlin_def.sol_euler_x_div_sqrtdelta;;
Functional_equation.nonf_gamma3f_x_div_sqrt_delta;;
st 5 [`matan`];;
si 50 [`matan`];;
si 50 [`taud_x`;`taud_x'`];;
st 5 [`a < x ==> a <= x`];;
st 5 [`eta_x`;`ups_x`];;
st 5 [`vol3_x_sqrt`;`vol_x`];;
st 5 [`arclength_x1`;`arclength_x1'`];;
si 15 [`mud_126_x_v1`];;
Functional_equation.functional_mud_126_x;;
si 15 [`mu6_x`];;
si 15 [`mudLs_135_x`];;
si 15 [`vol3f_x_sqrt2_lmplus`];;
st 5 [`delta_x`;`eta_x`];;
si 15 [`&0 < ups_x x1 x2 x6`];;
st 5 [`sqrt2`;`&2`];;
st 5 [`&0 <= sqrt2`];;
st 5 [`eta_x`;`ups_x`];;
si 15 [`vol3f_x_lfun`];;
si 15 [`rad2_x`;`delta_x`];;
si 15 [`taud_x'`];;
si 15 [`arclength_x_123`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* Jun 26, 2014 *)
si 15 [`gamma23_full8_x`];;
Functional_equation.nonf_gamma23_full8_x;;
si 15 [`gamma3_x`];;
Functional_equation.nonf_gamma3_x;;
si 15 [`sol_x`;`dih_x`];;
Sphere.sol_x;;
si 15 [`eta_x`;`eta2_126`];;
si 15 [`gamma23_keep135_x`];;
st 15 [`dih_x a b c d e f = dih_x a' b' c' d' e' f'`];;
st 5 [`dihatn_x`;`dih_x`];;
st 3 [`dih4_x`;`dih_x`];;
si 25 [`x <= hminus`];;
si 25 [`marchal_quartic`];;
(1.23 *. 1.23 *. 4.0);;
16.0 *. 1.3 *. 1.3;;
6.3504 *. 4.0;;
si 15 [`eta2_126`];;
si 50 [name "quadratic"];;
si 50 [`a * x pow 2 + b * x + c`];;
Collect_geom.LEMMA51;; (* discr *)
Collect_geom.LEMMA50;; (* coeff *)
st 5 [`quadratic_root_plus`];;
st 5 [name "works";name "quadratic"];;
st 5 [`abc_of_quadratic`;`cayleyR`];;
st 50 [`abc_of_quadratic`];;
st 5 [`delta`;`delta_x`];;
st 5 [`c pow 2 <= x4 ==> u`];;
si 5 [`taum_x`;`tauq_x`];;
st 5 [`taum_x a b c d e f = taum_x a' b' c' d' e' f'`];;
st 5 [`taum a b c d e f = taum a' b' c' d' e' f'`];;
st 5 [`rhazim_x a b c d e f = rhazim_x a' b' c' d' e' f'`];;
st 5 [`dih_y a b c d e f = dih_y a' b' c' d' e' f'`];;
st 5 [`taum`;`taum_x`];;
si 5 [`taud_x`;`taum_x`];;
si 50 [`taud_x`];;
si 50 [`taud`];;
st 5 [`taud`;`taud_x`];;
st 5 [`taum`;`taum_x`];;
st 5 [`delta_y`;`delta_x`];;
st 15 [`sqrt x <= u`];;
st 5 [`sqrt (&4)`];;
st 15 [`#0.206`];;
st 15 [`d_tame`];;
st 15 [`d_tame 4`];;
st 15 [def "lp_main_estimate"];;
Jejtvgb.nonlinear_imp_lp_main_estimate;;
st 15 [def "main_nonlinear_terminal_v11"];;
0.206 +. 0.7573 *. 1.621 -. 1.433;;
st 15 [`delta_y y1 y2 y3 y4 y5 y6 <= delta_y a b c d e f`];;
0.206 -. 0.453 *. 2.15 +. 0.777;;
si 30 [`num1`];;
st 5 [`&0 <= delta_y y1 y2 y3 y4 y5 y6`;`norm`];;
si 5 [`x1_delta_y`;`dih_y`];;
st 5 [`x / (--y)`];;
st 5 [`x / y < u`];;
st 5 [`x pow 2 < y pow 2`];;
st 15 [`delta_y y1 y2 y3 y4 y5 y6 = &0`];;
st 15 [`dih_y`;`delta_y`];;
st 5 [`delta_y`;`delta_x`];;
st 5 [`delta_x4`;`delta4_y`];;
st 5 [`atn2 (&0, t)`];;
st 5 [`taum a b c d e f = taum a' b' c' d' e' f'`];;
st 5 [`dih_y a b c d e f = dih_y a' b' c' d' e' f'`];;
si 15 [`&0 < ups_x x2 x3 x4`];;
st 5 [`x pow 2 = x * x`];;
st 5 [name "eta2_delta_cases"];;
st 5 [name "arclength_x1x1'"];;
st 5 [`taum_x`;`rhazim_x`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* Jul 1, 2014 *)
st 50 [`rtrans`;`cat`];;
st 50 [`perm_eq`;`uniq`];;
st 50 [name "HOJO"];;
st 5 [`sizel`;`find_face`];;
st 5 [`sizel`;`hypermap_of_list`];;
st 5 [`MEM (find_face L x)`];;
st 5 [`marked_list`;`MEM x (list_of_darts L)`];;
st 5 [`find_face`;`list_pairs`];;
st 5 [`sizel`;`find_face`];;
st 5 [`list_of_faces`;`sizel`];;
st 5 [`foldr`;`maxn`];;
st 5 [`planegraphP`;`planegraph`];;
st 5 [`subdivFaceFinal2`];;
st 5 [`faces`;`SND`;`finals`];;
st 15 [`finals`;`mkFaceFinal`;name "Reduction1"];;
st 5 [`finals (makeFaceFinal f g)`];;
st 5 [`finals`;`Graph`];;
st 5 [`makeFaceFinalFaceList`];;
st 5 [`Graph`;`faces`];;
st 5 [`MEM x u`;`set_of_list`];;
st 8 [`MEM`;`replace`];;
st 5 [def "replace"];;
st 5 [`uniq`;`faces`];;
st 5 [`FST`;`setFinal`];;
st 5 [def "faces"];;
st 5 [`setFinal`;`finals`];;
st 5 [`set_of_list`;`MAP`];;
st 5 [`IMAGE f X SUBSET IMAGE f Y`];;
st 5 [`minimalFace`;`MEM`];;
st 5 [`nonFinals`;`finalGraph`];;
st 5 [`MEM`;`nonFinals`];;
st 5 [`set_of_list`;`CONS`];;
st 5 [`FST`;`setFinal`];;
st 5 [`final_list`;`ntrans`];;
st 15 [`MEM`;`rtrans`;`ntrans`];;
marked_list;;
st 5 [name "NPP3"];;
st 5 [def "excessAt"];;
st 5 [`quotient_list`;`finals`];;
st 15 [`final_list`;`ntrans`];;
st 15 [`ntrans L N r x k = u`];;
ntrans1;;
st 15 [`MEM u (ntrans L N r x k)`];;
Aq9.element_in_ntrans_suc;;
st 5 [`~(MEM (rtrans L N r x k) N)`];;
ntrans1;;
st 5 [`MEM`;`split_normal_list`];;
Dangeyj.SPLIT_NORMAL_LIST_CASES;;
st 5 [`set_of_list (ntrans L N r x k)`];;
st 5 [`rtrans L (ntrans L N r x k)`];;
st 5 [`f POWER (a + b)`];;
st 5 [`transform_count L (ntrans L N r x k)`];;
st 5 [`min_num (X UNION Y)`];;
st 15 [`min_num`];;
st 50 [`minimal`];;
st 5 [`transform_count`;`final_list`];;
st 5 [`final_list L (rtrans L N r x k)`];;
st 5 [`rtrans L N r x k = rtrans L N r x l`];;
st 5 [`marked_list L (ntrans L N r x k)`;`ntrans`];;
st 5 [`rtrans`;`split_normal_list`];;
transform_list;;
st 5 [`f POWER 1`];;
st 5 [`MEM`;`replace`];;
st 5 [`marked_list L (ntrans L N r x k)`];;
st 5 [`final_list L (rtrans L N r x k)`];;
st 50 [`generatePolygon`;name "criteria"];;
st 50 [`generatePolygon`];;
st 5 [`subdivFace`;`subdivFaceFinal`];;
st 50 [`core_triple`];;
st 5 [`minimalFace`;`fgraph`];;
st 5 [`all uniq L`;`good_list`];;
st 5 [`all uniq L`;`quotient_list`];;
st 50 [`dest_triple`];;
st 50 [`dest_triple0`];;
st 50 [`loop_choice`];;
st 5 [`a_tame`];;
st 5 [`nextVertex`;`next_el`];;
next_el_list_pairs_eq;;
prev_el_list_pairs_eq;;
st 5 [`prev_el`;`MEM`];;
st 5 [`next_el s (prev_el s u)`];;
st 5 [`betwn f x x`];;
st 5 [`next_el`;`betwn`];;
st 5 [`rcons`];;
st 5 [`zip a b = []`];;
st 5 [`MAP f s = []`];;
st 5 [`filter P f = []`];;
st 50 [name "KBW"];;
st 5 [`triple_data2`];;
st 5 [`MEM (ytrans L N r x k)`];;
st 5 [`MEM y (rotate_to r w)`];;
st 5 [`MEM (next_el r x)`];;
st 5 [`MEM (f_list L x) (find_face L x)`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`marked_list`;`list_of_darts`];;
st 5 [`next_el`;`f_list`];;
st 5 [`transform_count L N r x`;`final_list`];;
st 10 [`find_list`;`MEM x r`;`uniq`];;
st 5 [`normal_list`;`uniq (flatten N)`];;
st 5 [`next_el`;`rotate_to`];;
st 5 [`MEM (f_list L x)`];;
st 5 [`find_face L x = find_face L y`];;
st 5 [`uniq(find_face L x)`];;
st 5 [`MEM (ztrans L N r x k)`];;
st 5 [`ztrans`;`prev_el`];;
st 5 [`f_list L (prev_el f z)`];;
st 5 [`MEM`;`list_of_darts`;`find_face`];;
st 5 [`next_el`;`rotate_to`];;
st 5 [`next_el s u = next_el s v`];;
st 5 [`next_el`;`POWER`;`prev_el`];;
st 5 [`sizel`;`iota`];;
st 5 [`prev_el`;`rot`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`x = []`;`sizel`];;
st 5 [`flatten`;`APPEND`];;
st 5 [`HD`;`APPEND`];;
st 5 [`APPEND a b = []`];;
st 5 [`EL i (MAP f s)`];;
st 5 [`EL `;`iota`];;
st 5 [`EL`;`HD`];;
st 5 [`HD`;`TL`];;
st 5 [name "last_cat"];;
st 5 [`APPEND x []`];;
st 5 [`LAST`;`rcons`];;
st 5 [`LAST`;`EL`];;
st 5 [`BUTLAST`;`LAST`];;
APPEND_ASSOC;;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "add_right";;
(* Jul 3, 2014 *)
dest_triple0_nonnil;;
type_of `dest_triple0`;;
st 5 [`rcons a b = []`];;
st 5 [`flatten`;`CONS`;`APPEND`];;
st 5 [`SOME (the x)`];;
st 5 [`MEM x (nseq u v)`];;
st 5 [`isSome`;`NONE`];;
st 5 [`the (SOME x)`];;
st 5 [`betwn`;`next_el`];;
st 5 [`APPEND`;`rcons`];;
st 5 [`MEM x (betwn f u v)`];;
st 5 [`MEM`;`EL`];;
st 50 [`minimalFace`];;
match_quotient_list;;
st 15 [def "core"];;
st 5 [`quotient_list`;`core`];;
st 5 [`loop_choice2`;`quotient_list`];;
st 5 [`minimalFace`;`fgraph`];;
st 5 [`uniq`;`flatten`;`quotient_list`];;
st 5 [`MEM x (core L r)`];;
st 15 [`uniq`;`list_of_darts`];;
st 5 [`quotient_list`;`good_list`];;
st 50 [`is_edge_nondegenerate`];;
st 5[`x ==> is_edge_nondegenerate (H)`];;
st 5 [`is_restricted`];;
st 5 [`good_list`;`all uniq L`];;
st 50 [`find_face L x = u`];;
st 50 [`dart_of`];;
st 15 [`list_pairs`;`find_face`];;
st 5 [`list_pairs x = list_pairs y`];;
st 50 [`find_pair_list`;`list_pairs`];;
Tame_list.is_restricted_all_uniq;;
st 5 [`quotient_list`;`all uniq`];;
st 15 [`list_pairs`;`prev_el`];;
st 5 [`minimalVertex`;`MEM`];;
minimalVertex;;
st 5 [`minimalFace`;`FST f = []`];;
st 50 [`list_pairs`;`core`];;
st 5 [`MEM (find_list r x)`];;
st 5 [`flatten (parts L r)`];;
st 5 [`MEM`;`core`];;
st 15 [`(!v. a ==> b v)`;name "THM";name "FORALL"];;
st 5 [`MEM (ztrans L N r x i)`];;
st 5 [`final_list`;`transform_count`];;
st 5 [`MEM`;`prev_el`];;
st 5 [`MEM`;`rcons`];;
st 5 [`indexf u u`];;
st 5 [`sizel []`];;
st 5 [`betwn`;`sizel`];;
st 5 [`indexf v u f = 0`];;
st 5 [`sizel`;`rcons`];;
st 5 [`LAST`;`cat`];;
st 5 [`cat a b = []`];;
st 5 [`sizel`;`APPEND`];;
st 5 [`sizel`;`cat`];;
st 5 [`sizel`;`nseq`];;
st 5 [`sizel`;`CONS`];;
st 5 [`next_el`;`indexf`];;
st 5 [`indexf w u f = 0`];;
st 50 [`indexf w u f = indexf w u g`];;
quotient_list;;
transform_list;;
subdivFace0_alt2;;
split_face;;
st 5 [`list_pairs`;`zip`];;
st 5 [def "makeFaceFinal"];;
st 30 [`subdivFaceFinal`];;
st 5 [`SOME u = NONE`];;
st 5 [`isSome`;`?`];;
st 5 [`the`;`SOME`];;
st 5 [`SOME (the x)`];;
st 5[`cat (h::t) v`];;
st 50 [`x:(A->B->A) ->A -> (B)list->A`];;
st  15 [`foldl`;`cat`];;
Seq.foldl_cat;;
type_of `foldl`;;
st 15 [`foldl`;`flatten`];;
st 5 [`flatten []`];;
st 5 [`flatten`;`cat`];;
st 5 [`f (if a then b else c) = if a then f b else f c`];;
st 5 [`flatten s = []`];;
st 5 [`rcons a (flatten b)`];;
st 5 [`rcons  []`];;
st 5 [`LAST (flatten s)`];;
st 5 [`rcons`;`cat`];;
st 5 [`cat`;`APPEND`];;
st 5 [`LAST`;`APPEND`];;
COND_RAND;;
st 5 [`betwn`;`cat`];;
st 5 [`next_el`;`betwn`];;
st 5 [`betwn r x y = []`];;
st 5 [name "induct";`sizel`];;
st 5 [`next_el f u = u`];;
st  5 [`MEM`;`next_el`];;
st  5 [`MEM`;`prev_el`];;
st 15 [`foldl`;`subdivFace0i`];;
st 5 [`foldl`;`CONS`];;
st 5 [`SOME`;`NONE`];;
st 5 [`next_el`;`nextVertex`];;
st 5 [`prev_el f (next_el f u)`];;
st 5 [`next_el f (prev_el f u)`];;
st 5 [`nseq 0`];;
st 5 [`ncons 0`];;
st 5 [`ncons`];;
st 5 [`iter 0`];;
st 5[`nseq (SUC n)`];;
st  5 [`foldl`;`betwn`];;
st 5 [`betwn`;`next_el`];;
st 30 [`dest_triple_full`];;
st 5 [`rcons`;`cat`];;
st 5 [name "prev_el_list_pairs_eq"];;
st 15 [`subdiv_triple_step`];;
st 15 [`subdivFace0_alt2`;`subdivFaceFinal`];;
st 50 [`ordered_list`];;
st 5 [name "THM";`(?g. f ) /\ k`;name "EXISTS"];;
st 5 [`MEM (FST u) (core L r)`];;
st 5 [def "good_faces_v3"];;
st 5 [`indexf a b s + indexf b c s`];;
st 500 [`ytrans`];;
st 50 [`minimalVertex`;omit `planegraphP`;omit `planegraph`];;
st 5 [`EL`;`core_triple_v3`];;
st 5 [`HD`;`EL`];;
st 5 [`sizel []`];;
st 5 [`LAST`;`core_triple_v4`];;
st 5 [`MEM`;`prev_el`];;
st 5 [`sizel`;`dest_triple0`];;
st 5 [`take k x = x`];;
st 5 [`size`;`core_triple_v4`];;
st 5 [`indexf x (prev_el f x)`];;
st 15 [`indexf`;`next_el`];;
st 5 [`take 1`];;
el_core_triple;;
st 5 [`sizel (betwn x y f)`];;
st 5 [`indexf x s f = 0`];;
st 5[`dest_triple0`;`cat`];;
st 5 [`dest_triple0`;`foldl`];;
st 5 [`foldl`;`cat`];;
st 50 [`dest_triple0_step`];;
st 5 [`rcons`;`cat`];;
st 5 [`foldl`;`cat`];;
st 5 [`LAST`;`dest_triple0`];;
dest_triple0;;
st 5 [`rcons (h:: t)`];;
st 5 [`rcons [] x`];;
st 5 [`dest_triple0`;`cat`];;
st 5 [`flatten`;`CONS`];;
st 5 [`cat []`];;
st 5 [`cat (cat a b)`];;
st 5 [`butlast`;`rcons`];;
st 50 [`butlast`];;
st 5 [`rcons []`];;
st 5 [`x :: (rcons t u)`];;
Seq2.butlast;;
st 5 [`BUTLAST`;`butlast`];;
st 5 [`dest_triple0`;`cat`];;
dest_triple0_step;;
st 5 [`rcons a b = []`];;
st 5 [`LAST (rcons a b)`];;
st 5 [`LAST`;`dest_triple0`];;
st 5 [`take`;`rcons`];;
st 5 [`EL`;`nth`];;
st 5 [`sizel`;`core_triple_v4`];;
st 5 [`LAST`;`rcons`];;
st 5 [`dest_triple0 f s r = []`];;
st 5 [`take i r = []`];;
st 5 [`sizel`;`s  = []`];;
st 15 [`sizel`;`take`];;
st 5 [`sizel (rcons a b)`];;
st 5 [`sizel`;`dest_triple0`];;
st 5 [`EL`;`core_triple_v4`];;
st  5 [`LAST`;`dest_triple0`];;
st 5 [`LAST (cat a b)`];;
st 5 [`dest_triple0 f s u = []`];;
st 5 [`sizel (betwn a b c)`];;
st 5 [`indexf a b f = 0`];;
st 5 [name "loop";name "props"];;
st 5 [`core L r = FST f`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`fgraph`;`makeFaceFinal`];;
good_faces;;
st 5 [`good_faces_v3`;`makeFaceFinal`];;
st 5 [`vertices_set2`;`makeFaceFinal`];;
st 5 [`subdivFace`;`subdivFaceFinal`];;
st 5[`facesAt_v2`;`makeFaceFinal`];;
st 5[`faceListAt`;`makeFaceFinal`];;
facesAt;;
faceListAt;;
facesAt_v2;;
st 50 [`good_faces_v3`];;
st 5 [def "perm_eq"];;
st 5 [`same_count1`];;
st 5 [`count`];;
st 5 [`perm_eq`;`map`];;
makeFaceFinal;;
makeFaceFinalFaceList;;
replace;;
st 50 [`replace`;`map`];;
st 5[`uniq (a::b)`];;
st 5 [`APPEND [y] t`];;
st 5 [`MAP f x = x`];;
st 5 [`facesAt_v2`];;
st 5[`makeFaceFinal`;`facesAt_v2`];;
st 5 [`faces`;`Graph`];;
st 5 [`FILTER P (f x) = f (FILTER P x)`];;
st 15 [`filter P (f x) = f (filter P x)`];;
makeFaceFinalFaceList;;
st 5 [`facesAt`;`makeFaceFinal`];;
st 5[`faceListAt`;`Graph`];;
st 5 [`EL`;`MAP`];;
st 5 [`sizel (faceListAt g)`];;
st 15 [`vertices_set2`;`countVertices`];;
good_faces;;
st 5 [`uniq`;`facesAt_v2`];;
st 5 [`uniq`;`perm_eq`];;
st 5 [`dest_triple_full a b c = []`];;
st 15 [`transform_assumption_v2`;`marked_list`];;
st 15 [`isSome (HD vs)`];;
st 5 [`HD vs = SOME v`];;
st 5 [name "size_3"];;
st 5 [`dest_triple0 a b c = []`];;
st 5 [`core_triple_v4 a b c d = []`];;
st 5 [`splitFace`;`countVertices`];;
st 5 [name "newvertex";name "transform"];;
st 5 [name "splitFace";name "vertices_set2"];;
st 5 [name "fgraph_quotient_list_t"];;
st 50 [`good_faces_v3`];;
st 5 [`split_normal_list`;`split_face`];;
st 50 [`r_rtrans_eq`];;
st 5 [def "rtrans"];;
st 50 [`r_rtrans_eq`];;
st 5 [def "transform_assumption"];;
st 5 [`transform_assumption_v2`;`rtrans`;`marked_list`;`good_list`];;
st 50 [name "AQ";name "Aq"];;
st 5 [`ntrans L N r x 1 = N`];;
st 5 [`newvertex_prepped`];;
st 5 [`elements_of_list`;`PRE`];;
st 5 [`ntrans L (ntrans L N r x j)`];;
st 5 [`marked_list L (ntrans L N r x j)`];;
st 15 [`(final_list L (rtrans L N r x j))`;`transform_count`];;
good_faces;;
split_normal_list_split_list;;
split_face;;
marked_list;;
st 5 [`MAP FST (flatten N)`];;
Seq2.uniq_perm_eq_alt;;
st 5 [`uniq`;`facesAt_v2`];;
st 5 [`transform_assumption_v2`];;
st 10 [`transform_assumption_v2`;`marked_list`;`ntrans`];;
st 15 [`list_update`];;
st 5 [`uniq (h::t)`];;
st 5 [`size`;`list_update`];;
st 50 [`mapAt`];;
st 50 [`replace`];;
st 50 [`replacefacesAt`];;
st 50 [`uniq`;`replace`];;
st 50 [`uniq []`];;
st 5 [`cat (h:: t) ys`];;
st 5 [`uniq`;`cat`];;
st 5 [`MEM h (replace x y z)`];;
st 5 [`faceListAt`;`Graph`];;
st 5[`all f (cat a b)`];;
st 5[`REPLICATE`;`nseq`];;
st 30 [`nseq`];;
st 50 [`REPLICATE`];;
st 5 [`all`;`nseq`];;
st 5 [`all`;`EL`];;
st 5 [`uniq`;`betwn`];;
betwn;;
st 5[`~(MEM x (betwn u v f))`];;
st 5 [`uniq`;`replace`];;
st 50 [`betwn a b c`;name "Tame_list"];;
st 50 [`MEM u (betwn a b c)`;omit `good_list`;`indexf`];;
st 50 [`indexf a b f + indexf b a f = c`];;
st 50 [`betwn`;`indexf a b f + indexf b c f`];;
st 5 [`MEM w (betwn u v f)`];;
st 5 [`MEM`;`sizel`];;
st 5 [`uniq`;`perm_eq`];;
st 5 [`facesAt`;`Graph`];;
st 5 [`EL i (APPEND a b)`];;
st 5 [`EL`;`nseq`];;
st 5 [`perm_eq`;`CONS`];;
st 5 [`perm_eq []`];;
st 5 [`MEM`;`perm_eq`];;
st 5 [`EL`;`perm_eq`];;
st 5 [`perm_eq l []`];;
st 5 [`perm_eq`;`CONS`];;
st 5 [`sizel`;name "induct"];;
st 15 [`delete1`;`CONS`];;
st 15 [`nth`;`delete1`];;
st 5 [`perm_eq`;`a::b::c`];;
st 100 [`perm_eq`];;
st 5 [`nth`;`delete1`];;
st 5 [`indexl h (a::b)`];;
st 5 [`nth v (h::x) 0`];;
st 5[`cat`;`CONS`];;
st 5 [`perm_eq`;`cat`];;
st 5[`perm_eq`;`uniq`];;
st 5 [`perm_eq`;`sizel`];;
st 5 [`facesAt_v2`;`Graph`];;
st 5[`facesAt_v2`];;
st 5 [`faces`;`Graph`];;
st 5 [`vertices_set2`;`faceListAt`];;
element_pre;;
st 5 [def "vertices_set2"];;
st 5 [def "vertices_graph"];;
st 5 [`v IN vertices_set2 g`;`countVertices`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "first";;
(* Jul 8, 2014 *)
st 5 [`betwn`;`\/`];;
st 10 [name "THM";name "FORALL";`!x. P ==> Q x`];;
st 5 [`MEM`;`betwn`];;
st 5 [`MEM`;`perm_eq`];;
st 5 [`filter`;`replace`];;
mem_replace;;
st 15 [`MEM`;`replace`;`uniq`];;
split_face;;
st 50 [`split_face`];;
st 50 [`splitFace`];;
st 5 [`MEM`;`EL`];;
st 5 [`EL`;`faceListAt`];;
st  5 [`perm_eq`;`MEM`];;
st 5 [`MEM u (list_of_elements L)`];;
st 5 [def "list_of_elements"];;
st 5 [`MEM`;`undup`];;
st 5 [`MEM`;`faces`];;
betwn_disjoint;;
st 5 [`MEM x (betwn f x z)`];;
st 5 [`rev []`];;
st 5 [`HD`;`TL`];;
st 5 [`butlast`;`rcons`];;
st 5 [`rev`;`rcons`];;
st 5 [`cat (a:: b) c`];;
core_split_normal_list;;
split_normal_list_split_list;;
st 50 [`split_normal_list`];;
st 50 [`elements_of_list`;`PRE`];;
element_pre;;
split_normal_list;;
st 5 [`splitFace`;`faces`];;
st 5 [`split_face`;`splitFace`];;
st 5 [`countVertices g`];;
st 5 [`fgraph`;`faces`];;
st 15 [`uniq`;`faceListAt`];;
st 5 [`minimalFace`;`faces`];;
st 5 [`uniq`;`map`];;
st 5 [`uniq (quotient_list L N)`];;
st 5 [`good_graph L ==> uniq L`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`facesAt`;`faceListAt`];;
st 5 [`MEM`;`EL`];;
st 5 [`perm_eq`;`uniq`];;
st 5 [`uniq`;`filter`];;
st 5 [`v IN vertices_set2 g`;`countVertices`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "GOOD";;
back_to "QUOT";;
(* Jul 8, 2014 *)
st 50 [`newvertex_prepped`];;
st 50 [`newvertex`];;
element_pre;;
st 5 [`(a ==> b) /\ (b ==> a)`];;
st 50 [`prev_el r (ztrans L N r x i)`];;
assumption_setK;;
element_pre;;
st 5 [`elements_of_list`;`flatten`];;
match_quotient_list;;
oldvertex2;;
split_normal_list_split_list;;
st 5 [`l'y`;`ytrans`];;
st 5 [`find_face`;`l'y`];;
st 5 [`FST (prev_el r u) = FST u`];;
st 5 [`faces`;`fgraph`;`MEM`];;
take1;;
st 5[`core_triple_v4`;`x = []`];;
st 5 [`HD`;`core_triple_v4`];;
st 50 [`triple_data_v4`];;
st 5 [`transform_count L N r x = 0`];;
st 5 [`take (a + b)`];;
st 5 [`take (SUC i)`];;
st 5 [`subdivFace0_alt2`;`foldl`];;
st 5 [`foldl`;`rcons`];;
st 5 [`foldl`;`cat`];;
st 5 [`core L r = FST f`];;
st 5 [`subdivFace0_beta`;`foldl`];;
st 5 [`dest_triple0`;`foldl`];;
st 5 [`take`;`foldl`];;
st 5 [`core L r = MAP FST r`];;
st 5 [`list_pairs`;`MAP FST`];;
st 5 [`final_list`;`rot`;`MEM`];;
st 5 [`map f (rot n r)`];;
st 5 [`list_pairs (rot n r)`];;
st 5 [`rot n x = rot n y`];;
st 5 [`MEM (find_face L x) (list_of_faces L)`];;
st 5 [`transform_count`;`final_list`];;
st 5 [`MEM x (rtrans L N r x k)`];;
st 5 [`transform_assumption_v2`;`marked_list L (ntrans L N r x k)`];;
st 5 [`marked_list`;`all uniq`];;
normal_list;;
st 5 [`normal_list`;`uniq`];;
st 5 [`list_of_darts`;`normal_list`];;
st 15 [`rtrans L N r x i = z`];;
st 5 [`uniq`;`marked_list`];;
marked_list;;
normal_list;;
st 5 [`indexl`;`cat`];;
st 5 [`indexl a (u::t)`];;
st 5 [`MEM`;`replace`];;
st 5 [`~(MEM (rtrans L N r x k) N)`];;
st 15 [`MEM`;`split_normal_list`];;
st 5 [`rtrans L N r x k = r`];;
st 5 [`MEM (SND (split_normal_list L r f y z1))`];;
normal_list;;
st 10 [`uniq (flatten N)`;`x = y`];;
st 5 [`MEM x (rtrans L N r x i)`];;
st 50 [`indexl`;`rtrans`];;
st 5 [`quotient_list`;`core`];;
st 5 [`indexl (f x) (MAP f xs)`];;
st 5 [`uniq (MAP f xs)`];;
st 5 [`uniq (map f xs)`];;
st 5 [`fgraph`;`splitFace`];;
st 5 [`split_face`;`splitFace`];;
st 5 [`fgraph`;`MAP FST`];;
st 5 [`uniq [z]`];;
st 5 [`MEM x (replace t xs u)`];;
st 5 [`uniq  (map f xs)`];;
st 5 [`marked_list L (ntrans L N r x i)`];;
st 5 [`faces`;`fgraph`;`MEM`];;
st 5 [`MEM (f2) (faces g)`;`splitFace`];;
st 5 [`indexl x f = indexl y f`];;
Reduction2.fgraph_quotient_list_transform;;
st 5 [`sizel`;`map`];;
st 5 [`find_face`;`l'y`];;
st 5 [`subdivFace0_alt2`;`cat`];;
element_pre;;
st 5 [`iota`;`upt`];;
st 5 [`take k xs = xs`];;
st 5 [`sizel`;`core_triple_v4`];;
st 5 [`subdivFace0_alt2`;`foldl`];;
st 5 [`take (i+j)`];;
st 5 [`cat`;`take`;`dropl`];;
st 5 [`take i (take j s)`];;
st 5 [`foldl`;`cat`];;
st 5 [`foldl`;`[]`];;
st 5 [`foldl`];;
st 5 [`subdiv_triple_step`;`subdivFace0_alt2`];;
st 5 [`dropl`;`map`];;
st 5 [`ytrans L (ntrans L N r x i)`];;
st 5 [`ntrans L (ntrans L N r x i)`];;
trans_add;;
st 5 [`dropl`;`map`];;
st 5 [`dropl`;`iota`];;
st 5 [`take`;`iota`];;
st 5 [`dropl`;`cat`];;
st 5 [`transform_count L (ntrans L N r x i)`];;
st 5 [`map`;`iota`];;
st 5 [`map f (map g xs)`];;
st 5 [`MAP f xs = MAP g xs`];;
subdivFace0_beta;;
st 5 [`subdivFace0_beta`;`foldl`];;
type_of `dest_triple0_step`;;
st 5  [`take`;`foldl`];;
st 5 [`dest_triple0_step`;`foldl`];;
dest_triple_full;;
st 5 [`take k x = x`];;
st 5 [`flatten (a::b)`;`cat`];;
st 5 [`foldl`;`cat`];;
st 5 [`core L r = FST f`];;
st 5 [`uniq (core L r)`];;
st 5 [`MEM`;`minimalVertex`];;
st 5 [`core L r = []`];;
st 5 [`MEM (ytrans L N r x 0) r`];;
st 5 [`MEM`;`x = []`];;
st 5 [`if a then (b,c) else (b',c)`];;
st 5 [name "split_normal_list_split_list"];;
st 5 [name "oldvertex2"];;
st 5 [`loop_choice2`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`core L r = FST f`];;
st 5 [`transform_count L N r x = 0`];;
nfgtrans0;;
st 5 [`planegraphP`;`quotient_list`];;
st 5 [`planegraph`;`countVertices`];;
st 5 [`planegraphP`;`planegraph`];;
st 50 [`element_pre`];;
Reduction2.elements_of_list_ntrans;;
st 50 [`elements_of_list`;`PRE`];;
element_pre;;
st 5 [`final_list`;`transform_count`];;
st 5 [`MEM`;`faces`;`fgraph`];;
r_rtrans_eq;;
subdiv_triple_step;;
st 5 [`MEM`;`splitFace`;`faces`];;
st 5 [`minimalFace`;`MEM`];;
subdiv_triple_step;;
element_pre;;
st 50 [`elements_of_list`;`newvertex_prepped`];;
nfgtrans;;
subdiv_triple_step;;
st 100 [`marked_list`;`betwn`];;  (* good *)
st 0 [`betwn`;`FST`;`filter`];;
st 15 [name "newvertex"];;
st 5 [`upt`;`iota`];;
st 5 [`core L r = FST f`];;
st 5 [`uniq(quotient_list L N)`];;
st 5 [`good_list  L ==> uniq L`];;
st 5 [`good_list`;`quotient_list`];;
good_faces_transform_lemma;;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "GOOD";;
back_to "CASE0";;
(* Jul 11, 2014 *)
st 5 [`take (SUC i)`];;
st 5 [`foldl`;`rcons`];;
st 50 [`batch0`];;
st 5 [`rcons [] t`];;
st 5 [`flatten`;`rcons`];;
st 5 [`flatten (cat a b)`];;
st 5 [`flatten [z]`];;
st 5 [`prebatch`];;
st 5 [`flatten`;`CONS`;`cat`];;
st 5 [`cat a b = []`];;
st 5 [`LAST`;`rcons`];;
st 5 [`betwn f x y = []`];;
st 5[`LAST [z]`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`upt`;`iota`];;
st 5 [`MEM`;`prev_el`];;
st 5 [`next_el`;`prev_el`];;
st 50 [`b_nfgtrans0`];;
st 5 [name "newvertex_prepped_transform_lemma"];;
st 5 [`rcons x t = []`];;
st 5 [`MEM`;`find_face`];;
st 5 [`MEM`;`list_of_darts`;`marked_list`];;
st 5 [`MEM`;`next_el`];;
st 5 [`next_el s x = next_el r x`;`marked_list`];;
st 5 [`l'm`];;
st 50 [`next_el`;`f_list`;`marked_list`];;
st 5 [`next_el`;`rotate_to`];;
st 5[`marked_list`;`uniq r`];;
normal_list;;
st 5 [`all uniq`;`marked_list`];;
marked_list;;
st 5 [`all uniq`;`uniq (flatten s)`];;
st 15 [`all uniq`;`normal_list`];;
st 5 [`all f []`];;
normal_list_uniq_nonnil;;
st 5 [`next_el`;`f_list`];;
st 5 [`MEM (ytrans L N r x i) r`];;
st 5 [`transform_count`;`final_list`;`rtrans`];;
st 5 [`MEM (ztrans L N r x i)`;`find_face`];;
st 5 [`uniq`;`find_face`];;
st 5 [name "AQI";`marked_list`];;
st 5[`marked_list`;`good_list`;`quotient_list`];;
st 5 [`transform_count L N r x = 0`];;
st 5 [`dest_triple0`;`foldl`];;
st 10 [`MEM (ytrans L N r x i) (rtrans L N r x j)`];;
st 5[`ytrans L N r x i`;`indexf`;`ztrans L N r x j`];;
st 5 [`final_list`;`rtrans`;`transform_count`];;
st 5 [`sizel`;`find_face`];;
st 5 [`sizel(core L r)`];;
quotient_list;;
good_list_nodes;;
normal_list;;
st 5 [`sizel (FST f)`];;
st 50 [`3 <= sizel (FST f)`];;
st 5 [`sizel`;`CARD`];;
st 5 [`CARD`;`?a b. P`;`~(a = b)`];;
st 15 [`CARD`;`2`];;
st 25 [`CARD`;`1`];;
st 5 [`CARD`;`SUBSET`];;
st 5 [`MEM (ytrans L N r x i) r`];;
st 5 [`MEM (FST p) (core L r)`];;
core;;
st 15 [`MEM x (parts L r)`];;
st 5 [name "flatten";name "parts"];;
trans_add;;
st 5 [`MEM (ztrans L N r x i) (rtrans L N r x j)`];;
st 5 [`final_list L (rtrans L N r x k)`];;
st 5 [`transform_count L (ntrans L N r x i)`];;
st 5 [`prev_el`;`l'z`];;
st 5 [`is_restricted`;`all uniq`];;
st 5 [`list_of_darts`;`MEM`;`flatten`];;
st 5 [`FST x = FST y`;`uniq`];;
st 5 [`transform_count L N r x  = 0`];;
st 5 [`list_pairs`;`find_face`];;
st 5 [`MEM`;`ztrans`;`find_face`];;
st 5 [`MEM (find_pair_list L x) L`];;
st 5 [`list_of_darts`;`marked_list`];;
st 5 [`MEM (ytrans L N r x i) (rtrans L N r x j)`];;
st 5 [`MEM (ztrans L N r x i) (rtrans L N r x j)`];;
Pbflhet.properties_of_ytrans0;;
st 15 [`indexf a b w`;`MEM u (rtrans L N r x j)`;name "PWS"];;
st 5 [`rtrans L N r x j = r`];;
st 15 [`transform_count`;`final_list`];;
st 5 [`transform_count`;`ntrans`];;
marked_list;;
st 5 [`(FST u,FST v)`];;
st 100 [`normal_list`;`parts`];;
element_pre;;
newvertex_prepped;;
st 5 [name "diff_r"];;
newvertex_alt;;
newvertex_prepped;;
lnrx_induction;;
rtrans_diff;;
rtrans_eq_assumption_lemma;;
st 5 [name "eq_assumption"];;
Seq.size_cat;;
st 5 [`take i (cat a b)`];;
element_pre;;
Reduction2.elements_of_list_ntrans;;
Reduction2.elements_of_list_vertices_set2_converse;;
newvertex_alt;;
st 5 [`map f (take n s)`];;
st 5 [`take n (iota i j)`];;
dest_triple_full;;
dest_triple0;;
st 5 [`sizel x = 0`];;
st 5 [`transform_count L N r x = 0`];;

(* GOOD SEARCH *)
st 50 [`split_normal_list`];;
(* F1 and F2: f1 and f2 not r and not other members of N *)
Aq9.r_not_eq_snd_split_norm_v0;;
Aq9.r_not_eq_fst_split_norm_v0;;
Aq9.fst_not_eq_rtrans_split;;
Aq9.snd_not_eq_rtrans_split;;
(* no vertex of N \ r in f2 or f1 *)
Aq1.has_snd_norm_list_fliter;;
Aq1.FST_FLITER_MEM_SPLIT_NORMAL_F;;
(* disjoint f1 f2 *)
Aq1.FST_SND_MEM_SPLIT_NORMAL_F;;

st 5 [`MEM`;`x = []`];;
st 5 [`MAP f xs = []`];;
st 5 [`MEM x (core L r)`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`MEM`;`undup`];;
st 5 [`core L r = core L r'`];;
st 00 [`next_el (core L r)`];;
st 5 [`core L r = []`];;
core;;
st 5 [`parts L r = []`];;
st 5 [`list_pairs (core L r)`];;
marked_list;;
st 50 [`split_normal_list`;omit `newvertex_prepped`;omit `contour_list`;`FST`];;
st 50 [`split_normal_list`;`rtrans`;omit `newvertex_prepped`];;
st 50 [`split_normal_list`;omit `newvertex_prepped`;`FST`;`ntrans`];;
st 50 [`next_el`;`parts`];;
Hypermap.is_restricted;;
st 50 [`hypermap_of_list`;`is_no_double_joins`];;
st 50 [`is_no_double_joins`];;
split_normal_list;;
st 5 [`find_face`;`l'y`];;
st  5[`LAST`;`MAP`];;
st 5 [`~(ntrans L N r x i = [])`];;
st 5 [`LAST (rcons a b)`];;
st 5 [`LAST`;`EL`];;
st 5 [`sizel`;`quotient_list`;`ntrans`];;
st  5 [`sizel`;`replace`];;
st 5 [`LENGTH`;`replace`];;
st 5 [`marked_list`;`qood_list`;`quotient_list`];;
st 5 [`indexl`;`MEM`];;
st 5 [`uniq`;`EL`;`indexl`];;
st 5 [`MEM r' (ntrans L N r x 1)`];;
st 5 [`indexl x s = indexl y s`];;
st 5 [`uniq (ntrans L N r x i)`];;
normal_list;;
st 5 [`all uniq`;`uniq (flatten N)`];;
st 5 [`uniq (flatten N)`];;
st 5 [`MEM`;`replace`];;
st 25 [`next_el`;`uniq`];;
st 5 [`next_el`;`cat`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 5;;
back_to "new material";;
back_to "F2 CASE";;
(* Jul 13, 2014 *)
st 5 [`next_el`;`prev_el`];;
st 5 [`rev []`];;
st 5 [`transform_count`;`final_list`];;
st 5 [name "newvertex_alt"];;
update_database();;
st 15 [name "More_lemma_b"];;
More_lemma_b.v_final_lemmas;;
st 5 [`next_el (core L r)`];;
st 5 [`FST (f_list L d)`];;
normal_list;;
st 5 [`loop_list`;`f_list`];;
st 50 [`normal_list`;`f_list`];;
st 59 [`loop_list`];;
st 50 [`f_list L (e_list u)`];;
st 5 [`FST`;`node`];;
st 5 [`list_of_darts`;`normal_list`];;
st 5 [`inverse`;`node_map`;`node`];;
st 5 [`u IN node H u`];;
normal_list;;
st 50 [`dest_triple_full`;`MEM`;omit `newvertex_prepped`];;
Reduction3.dest_triple_full_all_filter;;
st 50 [`next_el`;`indexf`];;
dest_triple_full;;
dest_triple0;;
st 10 [`prebatch`;name "Reduction3"];;
st 15 [`FILTER`;`flatten`];;
st 5 [`nseq`;`filter`];;
st 30 [`nseq`];;
More_lemma_d.indexf1_final_lemmas;;
st 5 [`split_normal_list`;`rtrans`];;
st 15 [`MEM`;`split_normal_list`;`l'y`];;
st 15 [`uniq`;`core`];;
st 5 [`next_el`;`LAST`;`HD`];;
st 5 [`LAST (rcons a b)`];;
si 5 [`FST`;`(prev_el r z)`];;
si 15 [`FST`;`next_el`];;
Hojodcm.FST_EQ_NEXT_YTRANS;;
Jejtvgb.nonlinear_imp_lp_main_estimate;;
st 5 [`EL`;`cat`];;
st 5 [`nth`;`EL`];;
st 5 [`EL`;`LAST`];;
st 5 [`all P (h::t)`];;
st 5 [`EL (SUC i) (h::t)`];;
si 5 [`EL`;`FLATTEN`];;
lower_case;;
st  5 [`HD`;`cat`];;
st 5 [`iota m 0`];;
st 5 [`rcons []`];;
st 5 [`iota`;`rcons`];;
st 5 [`iota`;`cat`];;
st 5 [`iota x (SUC i)`];;
st 5 [`a:: (cat u v)`];;
st 5 [`flatten [x]`];;
st 5 [`parts`;`next_el`;`f_list`;`LAST`];;
st 5 [name "xor"];;
st 50 [def "f_list"];;
st 5 [`next_el`;`f_list`;`find_face`];;
st 5 [`FST (HD p),FST (HD p')`];;
si 50 [`f_list`;`FST`];;
st 5 [`next_el r x = next_el p x`;`parts`];;
si 5 [`list_pairs (core L r)`];;
st 5 [`MEM x (core L r)`];;
st 5 [`flatten(parts L r)`];;
st 5 [`next_el`;`parts`;`f_list`;`LAST`];;
st  5 [`FST`;`parts`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [name "More_lemma_e"];;
si 5 [`transform_count L N r x = 0`];;
st 5 [`dest_triple0`;`foldl`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types  assumption_setK8;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 5;;
back_to "CASEPOS";;
prebatch;;
let dest_triple_full = Tame_defs2.dest_triple_full;;
dest_triple_full;;
dest_triple0_step;;
dest_triple0_rcons;;
st 5 [`prebatch`;`dest_triple0_rcons`];;
prebatch_suc_explicit;;
prebatch;;
st 5 [`flatten [z]`];;
prebatch1;;
Seq.cat_cons;;
Seq.cat1s;;
st 5 [`uniq (core L r)`];;
st 5 [`MEM (FST u) (core L r)`];;
si 5 [`MEM (ytrans L N r x i) r`];;
si 5 [`~final_list L (rtrans L N r x i)`];;
Seq.iota_add;;
st 5 [`MAP`;`cat`];;
st 5 [`map f []`];;
st 5 [`cat (a:: b)`];;
st 5 [`cat a b = cat a' b`];;
scroll_flatten_map;;
st 5 [`MAP f x = MAP g x`];;
st 5 [`take k xs = xs`];;
si 5 [`EL`;`core_triple_v4`];;
si 15 [name "More_lemma_e";`prev_el (core L r)`];;
si 15 [`LAST`;`core_triple_v4`];;
st 5 [`f (if b then a else c) = if b then f a else f c `];;
st 5 [`filter`;`flatten`];;
st 5 [`isSome`;`filter`;`MAP`];;
st 5 [`MAP f (MAP g x)`];;
st 5 [`filter f xs = xs`];;
st 5 [`MAP`;`cat`];;
st 5 [`MAP`;`flatten`];;
st 5 [`cat a b  = cat a' b'`];;
st 5 [`MAP f x = x`];;
st 5 [`ALL`;`all`];;
st 5 [`filter`;`nseq`];;
st 15 [`indexf`;`betwn`];;
st 5 [`indexf a b f + indexf b c f`];;
st 5 [`indexf a b f = 1`];;
st 5 [`MEM_EL`];;
st 5 [`next_el`;`nth`];;
si 5 [`next_el`;`EL`];;
st 5 [`next_el s x = next_el t x`];;
st 5 [`LAST`;`EL`];;
st 5 [`MEM (EL i t) t`];;
st 5 [`LAST`;`cat`];;
st 25 [`nth`;`uniq`];;
st 5 [`nth`;`EL`];;
st 5 [`indexf a b c = 0`];;
st 5 [`MEM`;`map`;`iota`];;
st 5 [`MEM`;`iota`];;
st 15 [`indexf`;`betwn`];;
st 15 [`nth u0 s i = nth u0 t i`];;
st 15 [`EL i s = EL i t`];;
st 5 [`sizel`;`dropl`];;
ss 15 [`sizel`;`take`];;
ss 50 [`betwn`];;
sd "betwn";;
ss 50 [`betwn`;`cat`];;
sd "betwn";;
ss 50 [`betwn`;`rot`];;
ss 59 [`betwn`];;
ss 59 [`split_at`];;
ss 5 [`s = []`;`MEM`];;
ss 5 [`indexl`;`HD`];
st 5 [`dropl`;`TL`];;
st 5 [`uniq`;`TL`];;
ss 5 [`HD`;`TL`];;
ss 5 [`cat`;`take`;`dropl`];;
st 5 [`take (a+b)`];;
st 5 [`take`;`EL`];;
ss 5 [`MEM`;`sizel`;`indexl`];;
ss 5 [`EL`;`indexl`];;
ss 5 [`indexf`;`rot`];;
ss 5 [`uniq`;`rot`];;
ss 5 [`MEM`;`rot`];;
ss 5 [`?n. rot n s = s'`;`<=>`];;
ss 5 [`~MEM x s`;`betwn`];;
ss 20 [name "More_lemma_e";`prev_el`];;
ss 5 [`MEM`;`next_el`;`find_face`;`marked_list`];;
ss 5 [`MEM`;`ytrans`];;
ss 5 [`~final_list L (rtrans L N r x i)`];;
ss 5 [`MEM (FST (ytrans L N r x i))`];;
ss 5 [`cat a b = cat a' b'`];;
ss 5 [`ALL`;`all`];;
ss 5 [`rotate_to`;`rot`];;
ss 15 [`rotate_to`];;
st 5 [`rot n x = []`];;
st 5 [`MEM r x`;`x = []`];;
st 5 [`betwn`;`rot`];;
st 5 [`indexl x s <= sizel s`];;
el_cat_suc;;
indexf_ifbetwn;;
st 5 [`MEM (SND x) (core L r)`];;
ss 5 [`uniq (core L r)`];;
ss 5 [`EL`;`iota`];;
st  5 [`EL`;`MAP`];;
ss 5 [`rcons x y = []`];;
ss 5 [`rcons`;`LAST`];;
ss 5 [`LAST (flatten s)`];;
ss 5 [`LAST`;`EL`];;
Seq.map_MAP;;
st 5 [`EL`;`MAP`];;
ss 5 [`EL`;`iota`];;
ss 15 [`indexf`;`ytrans`;`core L r`];;
ss 15 [`good_list`;`all uniq`];;
ss 5 [`next_el`;`indexf`];;
ss 5 [`MAP`;`rcons`];;
ss 5 [`next_el`;`cat`];;
ss 5 [`next_el`;`EL`];;
ss 5 [`MEM (EL i t) t`];;
ss 5 [`EL i t = EL j t`];;
ss 5 [`next_el (rot n s)`];;
ss 5 [`MEM`;`EL`;`sizel`];;
ss 5 [`MEM`;`ifbetwn`];;
ss 5 [`MEM`;`betwn`];;
ss 5 [`cat a b = []`];;
update_database();;
ss 15 [name "More_lemmas";name "indexf"];;
el_cat_suc;;
ss 5 [`EL`;`nseq`];;
ss 5 [`MAP`;`EL`];;
ss 5 [`sizel (MAP f xs)`];;
ss 5 [`LAST`;`ifbetwn`];;
ss 5 [`LAST (cat a b)`];;
ss 5 [`nseq n x = []`];;
ss 5 [`LAST`;`nseq`];;
ss 5 [`LAST`;`flatten`];;
ss 5 [`LAST`;`EL`];;
ss 5 [`LAST`;`MAP`];;
ss 5 [`final_list`;`rtrans`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 5;;
back_to "new material";;
back_to "F2 CASE";;
(* Jul 19, 2014 *)
ss 10 [`elements_of_list`;`ntrans`];;
sd "newvertex_prepped";;
ss 50 [`elements_of_list`;`quotient_list`;omit `vertices_set2`];;
st 2 [`betwn`;`iota`];;
ss 5 [`ntrans`;`betwn`;omit `vertices_set2`];;
ss 15 [`marked_list`;`betwn`;`ytrans`;`FST`];;
ss 15 [`marked_list`;`betwn`;`l'y`;`FST`];;
ss 5 [`A SUBSET B /\ B SUBSET A`];;
ss 5 [`betwn`;`rtrans`];;
ss 5 [name "CASES_CORE"];;
ss 5 [`flatten`;`core`];;
quotient_list_elements;;
List_hypermap.list_of_elements;;
ss 5 [`MEM`;`undup`];;
ss 5 [`list_pairs`;`next_el`];;
ss 15 [`LAST`;`ntrans`;`MEM`];;
ss 15 [name "DANGEY"];;
ss 15 [`list_of_darts`;`quotient_list`];;
ss 15 [`list_pairs`;`core`];;
ss 0 [`list_pairs`;`ntrans`];;
ss 0 [`list_of_darts`;`ntrans`];;
ss 5 [`list_of_darts`;`rtrans`];;
ss 5 [`core`;`rtrans`];;
ss 00 [`LAST`;`split_normal_list`;omit `contour_list`];;
ss 15 [`split_normal_list`;`core`];;
st 5 [`split_normal_list`;`parts`];;
Aq13.cat_snd_split_normal_parts;;
Aq12.cat_fst_split_normal_parts;;
st 00 [`parts`;`rtrans`];;
ss 50 [`next_el`;`rtrans`];;
ss 50 [`MEM`;`rtrans`];;
ss 50 [`list_of_darts`;`MAP LAST`];;
ss 10 [`MEM r' (ntrans L N r x 1)`];;
split_normal_list;;
st 5 [`parts`;`cat`];;
ss 10 [`LAST`;`rtrans`];;
ss 10 [`parts`;`betwn`];;
ss 10 [`indexf`;`parts`];;
ss 10 [`next_el`;`betwn`];;
ss 10 [`core`;`rtrans`;];;
core_split_normal_list;;
st 5 [`rtrans`;`split_normal_list`;`SND`];;
ss 10 [`list_of_darts`;`quotient_list`];;
parts_flatten;;
st 5 [`final_list`;`rtrans`];;
is_restricted_all_uniq;;
list_of_darts_quotient;;
st 5 [`indexf`;`rtrans`];;
st 5 [`transform_count L (ntrans L N r x i)`;`rtrans`];;
ss 15 [name "More_lemma_e";omit `POWER`;omit `indexf`];;
ss 15 [`flatten`;`list_of_darts`;`quotient_list`];;
ss 15 [`list_of_darts`;`quotient_list`];;
split_normal_list;;
ss 50 [`MEM`;`find_face`;`split_normal_list`];;
ss 50 [`MEM d (SND (split_normal_list L r f y z1))`];;
s_list;;
l_m;;
st 5 [`next_el`;name "explicit"];;
ss 5 [`next_el`;`list_pairs`];;
ss 50 [`next_el`;`core`;`rtrans`];;
ss 15 [`list_pairs`;`core`];;
ss 00 [`MAP LAST`;`parts`];;
ss 5 [`uniq (core L r)`];;
ss 10 [`MEM (FST u) (core L r)`];;
ss 50 [`MEM (l'y L r x) (rtrans L N r x j)`];;
ss 60 [`MEM`;`l'y`;`split_normal_list`];;
ss 10 [`core_split_normal_list`];;
ss 5 [`find_face`;`l'y`];;
ss 5 [`betwn (core L r)`];;
ss 5 [name "Reduction";`next_el`;`core`];;
ss 5 [`next_el (core L r) (FST d) = FST (next_el r d)`;name "Reduction"];;
ss 5 [`FST`;`ytrans`];;
ss 5 [`uniq (flatten N)`];;
st 5 [`next_el r (prev_el r u)`];;
st 5 [`next_el p (LAST p)`];;
st 5 [`LAST`;`rcons`];;
st 5 [`betwn`;name "disjoint"];;
st 5 [`MEM x (betwn f x y)`];;
st 5 [`cat`;`betwn`];;
st 5 [`betwn`;`rot`];;
ss 50 [`betwn (core L r)`];;
ss 50 [`rot`;`cat`];;
ss 5 [`parts`;`cat`];;
ss 5 [`map`;`rot`];;
ss 5 [`parts L []`];;
ss 5 [`cat`;`take`;`dropl`];;
ss 5 [`take k r = []`];;
ss 5 [`next_el`;`rot`];;
ss 15 [`betwn`;`indexf`];;
ss 5 [`ifbetwn`;`cat`];;
st 15 [`ifbetwn`];;
ss 50 [`rot`;`betwn`];;
ss 50 [`rotate_to`;`betwn`];;
ss 50 [`MEM x r`;`parts`];;
ss 50 [`rotate_to`;`HD`];;
ss 50 [`cat`;`take`;`rot`];;
ss 50 [name "xor"];;
ss 50 [`parts`;`f_list`;`LAST`];;
ss 50 [`rot k n = []`];;
ss 50 [`next_el s (LAST s)`];;
ss 50 [`next_el`;`parts`;`HD`];;
ss 5 [`prev_el`;`MEM`];;
ss 5 [`next_el`;`prev_el`];;
ss 5 [`uniq (parts L r)`];;
ss 5 [`next_el r x = next_el r y`];;
ss 5 [`next_el (rot k r)`];;
ss 5 [`next_el`;`LAST`;`parts`];;
ss 5 [`betwn`;`rot`];;
ss 5 [`rot n s = s`];;
ss 5 [`betwn`;`rot`];;
ss 5 [`LAST (a::b)`];;
ss 5 [`next_el (rot k n)`];;
ss 15 [`betwn`;`indexf`;`<=>`];;
ss 5 [`indexf z z s`];;
ss 5 [`indexf x y s = 0`];;
ss 5 [`indexf x y s = indexf x z s`];;
ss 15 [`(x + b) MOD n = (y + a) MOD n`];;
ss 15 [`a < n:num`;`a MOD n = b MOD n`];;
ss 15 [`(a MOD n) = a`];;
ss 15 [`indexl y s = indexl z s`];;
ss 15 [`indexl a b < sizel b`];;
ss 5 [`MEM`;`x = []`];;
ss 5 [`parts`;`FST x = FST y`];;
ss 5 [`indexf a b r + indexf b c r`];;
ss 50 [`indexf x y z <= indexf x u z`];;
ss 50 [`rot`;`HD`];;
ss 5 [`HD`;`rotate_to`];;
ss 5 [`cat`;`parts`];;
ss 5 [`rot`;`flatten`];;
ss 15 [def "rotate1"];;
ss 15 [`rotate1`;`flatten`];;
ss 15 [`MEM`;`take`;`dropl`];;
ss 15 [`flatten`;`indexf`];;
ss 5 [`rot k (a :: b)`];;
ss 5 [`rot`;`cat`];;
ss 5 [`flatten`;`rcons`];;
ss 5 [`flatten [z]`];;
ss 5 [`rot (a + b)`];;
ss 5 [`rot a (rot b r)`];;
ss 5 [`rot i r = r`];;
ss 5 [`parts L r = []`];;
ss 5 [`take`;`cat`];;
ss 5 [`indexf`;`rot`];;
ss 15 [`indexf x y s = indexf x y t`;`cat`];;
ss 15 [`indexl`;`cat`];;
ss 15 [`HD`;`take`];;
ss 15 [`indexl`;`indexf`];;
ss 15 [`cat`;`dropl`;`take`];;
ss 15 [`indexl x p < n`];;
parts_fst;;
ss 15 [`indexf a b r + indexf b c r`];;
ss 15 [`indexl`;`LAST`];;
ss 5 [`ALL f []`];;
Seq.cat_take_drop;;
ss 5 [`take a (take b s)`];;
ss 5 [`cat`;`rot`];;
ss 5 [`rot k' (rot k r)`];;
ss 5 [`HD`;`cat`];;
ss 5 [`HD`;`indexl`;`dropl`];;
ss 5 [`HD`;`indexl`];;
ss 5 [`indexl`;`dropl`];;
ss 15 [`MEM`;`indexl`;`dropl`];;
ss 15 [`MEM`;`x = []`];;
ss 5 [`MAP`;`betwn`];;
ss 5 [`indexl`;`flatten`];;
st 5 [`~MEM (FST (ytrans L N r x i),FST (ztrans L N r x i)) r`;name "Reduction4"];;

ss 15 [`list_pairs`;`core`];;
ss 15 [name "explicit";`next_el`];;
ss 15 [`next_el (core L r) (FST d)`];;
ss 15 [`next_el`;`list_pairs`];;
ss 15 [`next_el`;`parts`;`LAST`;`f_list`];;
ss 50 [`betwn`;`ztrans`];;
ss 15 [`MEM u (rtrans L N r x i)`;`indexf`];;
ss 15 [`MEM (ztrans L N r x i) (rtrans L N r x i)`];;
ss 5 [`final_list`;`rtrans`];;
ss 15 [`indexf`;`find_face`;`ztrans`];;
ss 15 [`((next_el f) POWER i) u`;`indexf`];;
ss 5 [`next_el`;`MEM`];;
ss 5 [`MEM`;`find_face`];;
ss 5 [`MEM`;`list_of_darts`;`marked_list`];;
ss 5 [`MEM`;`ztrans`;`find_face`];;
ss 5 [`uniq`;`find_face`];;
ss 5 [`uniq`;`list_of_darts`;`good_list`];;
List_hypermap.good_list;;
ss 15 [`indexf`;`flatten`];;
ss 5 [`indexl x (a::b)`];;
ss 15 [`uniq (flatten s)`];;
ss 5 [`indexl x px < sizel px`];;
ss 5 [`?`;`MEM p (parts L r)`];;
ss 5 [`~(p = [])`;`all`;`parts`];;
ss 5 [`parts`;`FST`;`good_list`];;
ss 5 [`indexl`;`MAP`];;
ss 5 [`uniq`;`core`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 5;;
back_to "new material";;
back_to "F2 CASE";;
(* Jul 19, 2014 *)
ss 5 [`core`;`rot`];;
ss 5 [`HD (core L r)`];;
ss 5 [`HD`;`MAP`];;
ss 5 [`HD(HD f)`;`flatten`];;
ss 5 [`rot`;`rotate_to`];;
ss 5 [`uniq(flatten R) ==> uniq R`];;
ss 5 [`indexf`;`indexl`];;
ss 5 [`indexf`;`rot`];;
ss 5 [`flatten (rot k r)`];;
ss 5 [`HD(flatten r)`];;
ss 5 [`x = []`;`MEM`];;
Reduction2.indexf_rotn_alt;;
ss 5 [`all`;`rot`];;
ss 5 [`rotate_to`;`rot`];;
ss 5 [`rot`;`map`];;
ss 15 [`uniq`;`map`];;
ss 15 [`uniq`;`map`];;
ss 80 [`uniq`;`MEM x s`;`P ==> (x = y)`];;
ss 15 [`indexl`;`rot`];;
ss 15 [`indexl d xs < sizel xs`];;
ss 15 [`ifbetwn`;`indexf`];;
ss 15 [`uniq(core L r)`];;
ss 5 [`MEM (FST u) (core L r)`];;
st 5 [`indexf x y z = 0`];;
ss 15 [`flatten`;`uniq`;`MEM`;`x=y`];;
ss 5 [`indexf a b f = indexf a b' f`];;
ss 5 [`marked_list`;`FST (next_el x y)`;`SND x`];;
ss 15 [`marked_list`;`FST x = FST y`];;
