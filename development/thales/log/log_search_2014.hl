let NAN = 0;;
let st = searcht;;
let tyo = type_of;;
let st5 = searcht 5;;
update_database();;
	let st = searcht 5 ;;
	let stu t = searcht 5 [t];;

let searchd' pat =
  searchl (map (fun t -> ("",t)) (definitions())) pat;;

let searchd pat = searchd' (pat @ 
  [omit `pack_nonlinear_non_ox3q1h`;omit `main_nonlinear_terminal_v11`;omit `ox3q1h`;omit `pack_ineq_def_a`]);;

let ineq_as_thm = 
  map (fun t -> t.idv,ASSUME t.ineq) (!Ineq.ineqs);;

let prep_as_thm = 
  map (fun t -> t.idv,ASSUME t.ineq) (!Prep.prep_ineqs);;

let searchi pat =
      searchl (ineq_as_thm) pat;;

let searchp pat =
      searchl (prep_as_thm) pat;;



print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types List_hypermap_computations.list_pairs_empty;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 6;;
back_to "ANTS";;
(* March 12, 2014 *)
is_restricted;;
st 5 [`marked_list`;`split_condition_list`];;
st 5 [`marked_list`;`next_el`];;
is_restricted;;
st 5 [`all`;`simple_hypermap`];;
st 5 [`is_marked`;`marked_list`];;
st 5 [`final_loops`;`final_list`];;
st 5 [`loop_of_list x = loop_of_list y`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5 [`face_map`;`f_list`];;
st 5 [`list_of_darts`;`flatten`];;
st 5 [`in_dart_of_loop`;`MEM`];;
st 50 [`hyp'z`;`hyp'y`];;
st 5 [`split_condition_list`;`is_split_condition`];;
st 5 [`atoms_of_loop`];;
st 5 [`sizel`;`CARD`];;
st 5 [`uniq`;`parts`];;
st 5 [`atom`;`parts`];;
st 5 [`atom H r u = atom H r v`;`LAST`];;
st 15 [`node`;`FST`];;
st 5 [`l'y`;`list_of_darts`];;
st 5 [`hyp'z`;`dart`];;
st 50 [`hyp'z`;`face`];;
st 5 [`face`;`hypermap_of_list`];;
st 15 [`find_face`;`list_of_darts`];;
st 50 [`hyp'm`];;
st 50 [`iso_list`;`uniq`];;
st 50 [`iso_list`];;
st 50 [`isop_list`];;
st 5 [`is_restricted`;`iso`];;
st 5 [`iso_list`;`iso`];;
st 5 [`iso_list`;`CONS`];;
st 5 [`(a::b) = (c::d)`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`elements_of_list`;`darts_of_list`];;
st 5 [`list_of_elements`;`list_of_darts`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 20 [`inj_on`;`f_list`];;
st 10 [`MAP`;`parts`];;
st 5 [`e_list (f x)`];;
st 5 [`next_el (MAP f u) (g v)`];;
st 5 [`contour_list`;`CONS`];;
st 50 [`inj_on`;`FST`];;
st 5 [`e_list`;`list_of_darts`];;
st 5 [`MEM (f_list L u) (list_of_darts L)`];;
st 5 [`inj_on`;`list_of_darts`];;
st 50 [`inj_on`];;
st 20 [`inj_on`];;
st 5 [`inj_on`;`find_face`];;
st 5 [`list_of_darts`;`MAP`];;
st 5 [`list_of_elements`;`list_of_darts`];;
st 5 [`y = l'm L r d`];;
st 5 [`next_el`;`MAP`];;
f_list_map;;
st 5 [`is_restricted`;`iso`];;
st 5 [def "kepl"];;
st 50 [`kepler_conjecture`];;
st 50 [def "lp_main_estimate"];;
st 5 [`lp_main_estimate`];;
st 5 [`contravening`;];;
st 5 [`CARD X <= CARD Y`;`SUBSET`];;
st 5 [`FINITE`;`packing`];;
st 50 [`tame_archive_lists`];;
st 5 [`import_tame_classification`];;
st 50 [`iso_fgraph`];;
st 5 [`good_list`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`is_restricted`;`restricted_list`];;
st 5 [`iso`;name "tran"];;
st 5 [`iso_list`;`iso`];;
st 5 [`archive`];;
st 5 [`lp_main_estimate`];;
st 15 [`kepler_conjecture`];;
st 15 [`lmfun_ineq_center`];;
st 599 [`contravening`];;
st 500 [`is_restricted`];;
st 50 [name "JGT"];;
is_restricted;;
tame_hypermap;;
st 5 [`contravening`;`tame_hypermap`];;
st 5 [`is_restricted`;`contravening`];;
st 5 [`tame_hypermap`;`is_restricted`];;
st 5 [def "contravening"];;
st 15 [`contravening`;`surrounded_node`];;
st 15 [`contravening`;`kepler_conjecture`];;
st 15 [`contravening`;`scriptL`];;
st 5 [`pack_ineq_def_a`];;
st 5 [`scriptL W`;`lmfun_ineq_center`];;
st 5 [`good_graph`;`tame`];;
st 50 [`iso_fgraph`];;
st 5 [`contravening`;`plain`];;
st 59 [`contravening`;name "JGT"];;
st 5 [`contravening`;`total_weight`];;
st 5 [`contravening`;`node_type_exceptional_face`];;
st 5 [`contravening`;`number_of_nodes`];;
st 50 [`number_of_nodes`;`13`];;
st 50 [`tame_10`];;
st 50 [`node_type_exceptional_face`];;
st 500 [`contravening`;`6`];;
st 5 [def "is_no_double_joins"];;
st 5 [def "is_no_double_joints"];;
st 5 [`is_no_double_joins`;`is_no_double_joints`];;
st 5 [`is_node_nondegenerate`;`contravening`];;
st 50 [`CARD (face H x)`;`3`];;
st 50 [`is_node_nondegenerate`];;
st 5 [`number_of_faces`];;
st 5 [`CARD {}`];;
st 5 [`face_collection`];;
st 5 [`tame`;`tame_hypermap`];;
st 5 [`ALL`];;
st 5 [`opposite_hypermap`;`contravening`];;
st 5 [`iso`;`opposite_hypermap`];;
st 5 [`contravening (IMAGE (--) V)`];;
st 5 [name "iso_list_restricted"];;
st 5 [`iso_list`;`is_restricted`];;
st 5 [`kcblrqc_ineq_def`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`iso_list`;`isop_list`];;
st 5 [`normal_list`;`iso_list`];;
st 5 [`iso`;`is_restricted`];;
dih2k_list;;
st 50 [`match_core_list`];;
st 5 [`core_list`;`quotient_list`];;
st 5 [`dih2k_list`];;
st 25 [`Seed`];;
st 50 [`good_graph`];;
good_graph;;
st 15 [`FINITE`;`CARD`;`BIJ`];;
st 5 [`CARD`;`uniq`;`sizel`];;
st 5 [`{}`;`SUBSET`];;
st 5 [`INJ {}`];;
st 0 [`map`;`permutes`;`uniq`];;
st 100 [`uniq`;`permutation`];;
st 5 [`inj_on`;`uniq`];;
st 15 [`EL i s = EL i t`];;
st 5 [`sizel`;`map`];;
st 5 [`EL`;`MAP`];;
st 5 [`indexl (EL j u)`];;
st 5 [`uniq`;`EL i u = EL j v`];;
st 5 [`indexl x u = indexl y u`];;
st 5 [`indexl`;`sizel`];;
st 5 [`list_of_elements`;`CONS`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`set_of_list`;`flatten`];;
st 5 [`flatten`;`CONS`];;
st 5[`set_of_list`;`APPEND`];;
st 5 [`set_of_list []`];;
st 5 [`APPEND x []`];;
st 5 [`set_of_list (rev u)`];;
st 5 [`MEM`;`rev`];;
st 5 [`X UNION X`];;
st 5 [`MAP`;`REVERSE`];;
st 5 [`uniq`;`MAP`];;
st 5 [`good_list_nodes`;`Seed`];;
st 5 [`uniq`;`rev`];;
st 5 [`uniq`;`upt`];;
st 5 [`uniq`;`iota`];;
st 5[`fgraph`;`Seed`];;
st 5 [`uniq [x]`];;
st 5 [`uniq`;`rev`];;
st 5 [`uniq (a :: b)`];;
st 5 [`rev [x;y]`];;
st 5 [`rev (x::y)`];;
st 5 [`rcons`;`cat`];;
st 5 [`rcons`;`CONS`];;
st 5 [`cat`;`CONS`];;
st 5 [`sizel []`];;
st 5 [`iota k 0`];;
st 5 [`list_pairs []`];;
st 5 [`dih2k_list`;`Seed`];;
st 5 [`dih2k_list`;`iso_list`;`sizel`];;
st 5 [`iso_list`;`good_list`];;
good_graph;;
st 5 [`Seed`;`vertices_set2`];;
st 15 [`x ==> good_list_nodes L`];;
st 50 [`Seed`];;
st 5 [`darts_of_list`;`SUC`];;
st 50 [`Seed`];;
list_pairs_rev_iota;;
st 5 [`list_pairs`;`iota`];;
st 5 [`list_of_darts`;`CONS`];;
st 5[`list_of_darts []`];;
st 5 [`node_map`;`list_of_darts`];;
list_pairs_iota;;
st 5[`list_pairs`;`FST`];;
st 5 [`x IN node H y`];;
st 5 [`inverse`;`node_map`;`node`];;
st 5 [`FST`;`good_list`;`node`];;
st  5[`inverse`;`node_map`;`f_list`];;
st 5 [`MEM`;`f_list`;`list_pairs`];;
List_hypermap.mem_f_list;;
st 5 [`find_face L u = y`;`CONS`];;
st 5 [`find_face []`];;
st 5 [`list_of_darts []`];;
st 5 [name "AUQ"];;
st 5 [`dart`;`hypermap_of_list`];;
st 15 [`list_of_darts`;`list_of_faces`];;
st 15 [`find_face`;`list_of_faces`];;
st 5 [`MEM`;`find_list`];;
st 5 [`list_of_faces`;`[]`];;
st 5 [`list_pairs x = []`];;
st 5 [def "dih2k"];;
st 50 [`dih2k`];;
Lvducxu.DIH2K_FACE_SIMPLIZED;;
st 30 [`path_of_loop`];;
st 5 [def "pre_card_dart_of_loop"];;
st 5 [`loop_of_face`;`path_of_loop`];;
st 5 [`normal_list`;`is_normal`];;
st 5 [`loop_of_list`;`loop_family_of_list`];;
st 30 [`is_normal`];;
st 5 [`loop_family_of_list`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5[`loop_of_list`;`[]`];;
st 15 [`card_dart_of_loop`];;
st 30 [`is_normal`];;
st 39 [`dart_of_loop`];;
st 5 [`dart_of_loop`;`loop`];;
st 5 [`dart_of_loop`;`{}`];;
st 5 [`tuple_loop`;`loop`];;
st 5 [`one_step_list`;`one_step_contour`];;
st 5 [`loop_map`;`next_el`];;
st 5 [`face_map`;`f_list`];;
st 5 [`node_map`;`f_list`];;
st 7 [`path_of_loop`];;
st 15 [`EL`;`r < LENGTH s`];;
st 5 [`path_of_loop`];;
st 5 [`loop_map`;`loop_of_list`];;
st 5 [`EL`;`MAP`];;
st 5 [`nth`;`iota`];;
st 5 [`EL`;`nth`];;
st 15 [`next_el`;`POWER`];;
st 5 [`indexl`;`HD`];;
st 5 [`x:(A)loop = y:(A)loop`];;
st 5 [`path_of_loop`;name "inj"];;
st 5 [`~uniq r`];;
st 50 [`is_inj_list`];;
st 30 [`uniq`;`nth`];;
st 5 [`card_dart_of_loop`];;
st 5 [`nth`;`iota`];;
st 5 [`sizel`;`iota`];;
st 15 [`(next_el r POWER k) d = (next_el r' POWER k) d`];;
st 5 [`next_el`;`POWER`;`x:A list = b`];;
st 5 [`dart_of_loop`;`path_of_loop`];;
st 5 [`support_of_sequence`;`path_of_loop`];;
st 15 [`support_of_sequence`];;
st 40 [`loop_map`;];;
st 5 [`EL`;`iota`];;
st 15 [`loop_map`;`POWER`];;
st 50 [`path_of_loop`;`a + b:num`];;
st 5 [`f POWER (a*b)`];;
DIVISION;;
st 5 [`?`;`a * k + b:num`];;
st 5 [`f POWER (a + b)`];;
st 5 [`loop_map L POWER n`];;
st 5 [`I`;`POWER`];;
st 15 [`in_dart_of_loop`;`loop_map`;`POWER`];;
st 5 [`permutes`;`loop_map`];;
st 15 [`permutes`;`f x = x`];;
st 5 [`CARD x = 0`];;
st 5 [`dart_of_loop`];;
st 5 [`HD`;`iota`];;
st 5 [`x = []`;`sizel`];;
st 5 [`EL`;`iota`];;
st 5 [`uniq`;`path_of_loop`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5 [`CARD`;`set_of_list`;`sizel`];;
st 5 [`headl`;`rot`];;
st 5 [`loop_of_list`;`rot`];;
st 5 [`sizel`;`rot`];;
st 5 [`nth`;`rot`];;
st 5 [`LAST`;`EL`];;
st 5 [`loop_of_list`;`rot`];;
st 5 [`set_of_list`;`rot`];;
st 5 [`next_el`;`rot`];;
st 5 [`quotient`;`node_map`];;
st 50 [`quotient`];;
st 50 [`dih2k`;omit `local_fan`;omit `FAN`];;
st 5 [`dart`;`FINITE`];;
st 15 [`list_pairs`;`rot`];;
st 15 [`set_of_list`;`list_pairs u`];;
st 5 [`next_el`;`rot`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`rot k []`];;
st 5 [`list_pairs`;`[]`];;
st 5 [`zip []`];;
st  5 [`set_of_list`;`{}`];;
st 5 [`set_of_list`;`list_pairs`];;
st 5 [`set_of_list`;`zip`];;
st 5 [`MEM`;`zip`];;
st 5 [`next_el`;`rot`];;
st 5 [`MEM r (list_pairs u)`];;
st 5 [`A SUBSET B /\ B SUBSET A`];;
st 5 [`CARD`;`uniq`;`sizel`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`undup`;`sizel`];;
st 5 [`uniq`;`undup`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`MEM (next_el u d) u`];;
st 5 [`list_pairs`;`REVERSE`];;
st 5 [`e_list o e_list`];;
st 15 [`CARD`;`SUBSET`];;
st 5 [`CARD`;`set_of_list`];;
st 10 [`list_pairs`;`uniq`];;
st 5 [`rev (rev f)`];;
st 5 [`rev`;`LAST`];;
st 5 [`rot`;`[]`];;
st  5 [`rot`;`uniq`];;
st 15 [`indexl`;`rot`];;
st 5 [`rot`;`sizel`];;
st 5 [`indexl (HD f) f`];;
st 5 [`rot 0`];;
st 5 [`face`;`hypermap_of_list`];;
st 10 [`find_face L d = u`;`MEM`];;
st 15 [`uniq`;`list_of_darts`;`good_list`];;
good_list;;
st 15 [`atom_choice H NF x = {y}`;`{x}`];;
st 15 [`atom H L x = {y}`];;
tyo `atom`;;
Hypermap.lemma_face_contour_on_loop;; (* atoms single {x} *)
st 50 [`loop_of_face`;`hypermap_of_list`];;
st 50 [`list_of_darts`;`MEM`];;
st 15 [`list_of_darts`;`list_of_faces`];;
st 5 [`faces_of_list`;`darts_of_list`];;
List_hypermap.list_of_faces;;
st 5 [`list_of_darts`;`flatten`];;
st 15 [`final_list`;`hypermap_of_loop`];;
st 5 [`loop_of_face`;`final_list`];;
st  5 [`uniq`;`list_of_faces`];;
st 15 [`loop_of_list`;`final_list`];;
st 5 [def "dart";def "loop"];;
tyo `dart_of_loop`;;
st 15 [`card_dart_of_loop`];;
tyo `atom`;;
st 5 [`dart`;`quotient`];;
atoms_of_family;;
st 5 [`dart_of_loop`;`set_of_list`];;
st 5[`head_of_atom`];;
st 5 [`node`;`quotient`];;
st 5 [`support_node`];;
transform_assumption_v2;;
st 50 [`atom_choice`];;
st 50 [`quotient`;`atoms_of_family`];;
st 5 [`node H y`;`dart`];;
st 5 [`node`;`quotient`];;
st  5 [`atoms_of_loop`];;
lemma_node_subset;;
st 5 [`atom`;`atom_choice`];;
bb 4;;
st 15 [`darts_of_family`];;
normal_list;;
tyo `head_of_atom`;;
st 50 [`head_of_atom H L x = x`];;
st 15 [`head_of_atom H L d`;`atom`];;
change_to_margin;;
st 5 [`atom`;`dart_of_loop`];;
st 5 [`x IN atom H L x`];;
st 5[`flatten`;`[]`];;
st 5 [`uniq`;`cat`];;
st 5[`dart_of_loop`;`loop_of_list`];;
st 15 [`dih2k`];;
st 15 [`quotient`;`face_set`];;
st 5  [`x:(A)loop`;`CARD`];;
st 15 [`card_dart_of_loop`];;
st 5 [`atom`;`atoms_of_loop`];;
st  5 [`x IN atom H L x`];;
st 5 [`atom`;`dart_of_loop`];;
st 5 [`quotient`;`dih2k`];;
st 5 [`is_normal`;`FINITE`];;
st 50 [name "Auq"];;
st 50 [`complement0`];;
st 50 [`node_contour`];;
st 5 [`CARD`;`dart`];;
st 5 [`x = {}`;`CARD`];;
st 5 [`FINITE`;`dart`];;
st 5 [`node_map H x IN dart H`];;
st 5 [`x IN face H x`];;
st 5 [`face`;`face_set`];;
lemma_head_of_atom_via_restricted;;
st 5 [`loop_map`;`loop_of_list`];;
st 5 [`face_map`;`f_list`];;
st 5 [`f_last`];;
bb 3;;
st 50 [`head_of_atom`];;
st 50 [`final_list`;`parts`];;
st 15 [`list_of_faces`;`list_pairs`];;
st 5 [`list_pairs`;`zip`];;
st 5 [`FST`;`zip`];;
st 15 [`zip`];;
st 5 [`unzip1`];;
st 5 [`simple_hypermap`;`hypermap_of_list`];;
st 20 [`parts`;omit `normal_list`;omit `marked_list`];;
st 5 [`partition_into_atom0r`];;
st 5 [`final_list`;`quotient_list`];;
st 5 [`parts`;`[h]`];;
st 5 [`uniq [h]`];;
st 5 [`LAST [h]`];;
st 5 [`parts`;`[x]`];;
st 5 [name "xor"];;
st 5 [`next_el (cat u v)`];;
st 5 [`list_of_faces`;`list_of_darts`];;
st 50 [`loop_of_list`];;
st 50 [`loop_of_list`;`normal_list`;omit `final_list`];;
st 5 [`all uniq (L:((A)list)list)`];;
st 5 [`face`;`quotient`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 50 [`dih2k`;omit `local_fan`;omit `FAN`;`IMAGE`];;
st 5 [`FINITE`;`dart`];;
st 5 [`dih2k`;`simple_hypermap`];;
st 5 [`dih2k`;`node_map`];;
st 5 [`face H u = face H v`];;
st 5 [`face`;`dart`];;
st 5 [`dart`;`quotient`];;
st 5 [`atom`;`atoms_of_family`];;
st 5 [`HD`;`MAP`];;
st 5 [`LAST`;`MAP`];;
st 5 [`parts`;`HD`];;
st 5 [`parts`;`LAST`];;
st 5 [`LAST`;`cat`];;
st 5 [`butlast`;`cat`];;
st 5 [`BUTLAST`];;
st 5 [`butlast`;`flatten`];;
st  5[`flatten`;`parts`];;
st 5 [`flatten`;`cat`];;
st 5 [`flatten`;`CONS`];;
st 5 [`flatten []`];;
st  5[`parts`;`~(s = [])`];;
st 5 [`head_of_atom`;`atom`];;
st 5 [`atom`;`node`];;
st  5[`head_of_atom`;`node_map`];;
st 5 [`node H x = node H y`];;
st 5 [`FST`;`node`;`good_list`];;
st 5 [`quotient_list`;`parts`;`face`];;
st 5 [`face`;`hypermap_of_list`];;
st 50 [`transform_count`];;
st 50 [`normal_family`;`quotient_list`];;
st 5 [`quotient_list`;`list_of_darts`];;
st 5 [`final_list`;`parts`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`map`;`cat`];
st 5 [`edge_map`;`face`;`simple_hypermap`];;
st 15 [`is_node_nondegenerate`];;
st 5 [`dart(hypermap_of_list L)`];;
st 5 [`face (hypermap_of_list L)`];;
st 15 [`dart`;`face_map`];;
st 5 [`MEM`;`find_face`];;
st 15 [`find_face L d = f`];;
st 5 [`uniq (list_of_darts L)`];;
st 5 [`final_list`;`list_of_faces`];;
st  5[`edge_map`;`hypermap_of_list`];;
st  5 [`e_list_ext`;`e_list`];;
st 5 [`good_list`;`iso_list`];;
st 25 [`iso_list`;name "sym"];;
st  5 [`iso_list`;`CONS`];;
st 5 [name "iso_list_mem"];;
st 5 [`iso_list`;`quotient_list`];;
st 100  [`parts L r`;omit `atom`;omit `POWER`;omit `l'm`];;
st 100  [`parts L r`;omit `atom`;omit `POWER`;omit `l'm`;`next_el`];;
st 5 [`parts L r = [r]`];;
st 5 [`(x = LAST r \/ next_el r x = f_list L (e_list x))`];;
st 5 [`[]`;`\/`;`CONS`];;
st 5 [`flatten (a::b)`];;
st 5 [`LAST`;`flatten`];;
st 5 [`flatten`;`cat`];;
st 5 [`LAST`;`cat`];;
st 5 [`uniq`;`cat`];;
st 5 [`cat u v = []`];;
st 5 [`parts`;`cat`];;
st 15 [`LAST`;`cat`];;
st 5 [`sizel`;`cat`];;
st 5 [`all`;`cat`];;
st 15 [`u = parts L r`];;
st 5 [`cat u v = cat a b`];;
st 5 [`indexl`;`cat`];;
st 5 [`indexl`;`LAST`];
st 5 [`flatten x = []`];;
st 5 [`MEM`;`s = []`];;
st 5 [`LAST`;`cat`];;
st 15 [`LAST`;`flatten`];;
st 5 [`LAST (LAST u)`];;
st 5 [`all`;`CONS`];;
st 5 [`next_el u d = next_el r d`];;
st 15 [`uniq`;`map`];;
st 5[`inj_on`;`FST`];;
st 5 [`flatten`;`MAP`];;
st 15[`parts`;`x = []`];;
st 5 [`next_el`;`MAP`];;
st 5 [`inj_on`;`f_list`];;
st 5 [`e_list`;`list_of_darts`];;
st 5 [`LAST`;`MAP`];;
st 15 [`parts`;`[]`];;
st 5 [`next_el`;`MEM`];;
st 5 [`MEM`;`f_list`];;
st 15 [`parts`;`next_el`;`LAST`];;
st 15 [`normal_list`;`uniq`;`[]`];;
st 5 [`list_of_darts`;`normal_list`];;
st 15 [`HD`;`MAP`];;
st 5 [`iso_list`;`sizel`];;
st 5 [`flatten`;`MAP`];;
st 5 [`filter`;`map`];;
st 5 [`sizel`;`map`];;
st 15 [`filter`;`sizel`];;
st 15 [`LENGTH`;`FILTER`];;
st  5 [`filter p []`];;
st 5 [`sizel`;`CONS`];;
st 5 [`all uniq L`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`quotient_list`;`sizel`];;
st 50 [`iso_list`;`final_list`];;
final_list;;
st 5 [`next_el`;`inj_on`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [`inj_on`;omit `MAP`;`SND`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`flatten`;`cat`];;
st 5 [`map`;`cat`];;
st 5 [`set_of_list`;`APPEND`];;
st 5 [`CONS`;`cat`];;
st 5  [`flatten`;`CONS`];;
st 5 [`iso_list`;`normal_list`];;
st 5 [`find_list`;`inj_on`];;
st 5 [`find_list`;`MAP`];;
st 5 [`x = find_list r d`];;
st 5 [`flatten`;`MAP`];;
st 15 [`uniq`;`map`];;
st 5 [`MEM d (find_list r d)`];;
st 5 [`MEM (find_list r d)`];;
st 5 [`list_of_elements`];;
st 5 [`parts`;`flatten`];;
st 5 [`parts`;`FST (HD l)`];;
st 5 [`quotient_list L []`];;
st 5[`list_of_elements`;`CONS`];;
List_hypermap.list_of_elements;;
st  5 [`set_of_list`;`undup`];;
st 5 [`flatten`;`CONS`];;
st 5[`set_of_list`;`cat`];;
st 5 [`MEM`;`undup`];;
st 15 [`LAST`;`e_list`;`parts`];;
st 5 [`list_of_darts`;`normal_list`];;
st 5 [`MEM`;`find_list`];;
st 50 [`e_list`;`LAST`;name "unlast"];;
st 50 [`parts`;`LAST`];;
st 5 [name "xor"];;
st 5 [`next_el u x = next_el p x`;`LAST`];;
st 15 [`LAST`;`parts`;`next_el`];;
st 5 [`quotient_list`;`good_list`];;
st 5 [`find_list`;`iso_list`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 6;;
back_to "COMMENT";;
(* March 27, 2014 *)
st 5 [`final_list`;`iso_list`];;
st 5 [`MAP`;`flatten`];;
st 5 [`filter`;`map`];;
st 5 [`filter f u = filter g u`];;
st 5 [`MAP f X = []`];;
st 5 [`HD`;`MAP`];;
st 20 [`parts`;`MAP`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`LAST (MAP f u)`];;
st 5 [`next_el`;`MAP`];;
st 5 [`inj_on`;`FST`];;
st 5 [`f_list`;`MAP`];;
st 5 [`next_el r POWER i`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`f_list`;`list_of_darts`];;
st 5 [`(?x. P x) \/ (?y. Q y)`];;
bb 5;;
help "install_user_printer";;
st 15 [`uniq (flatten N)`;`normal_list`];;
st 5 [`sizel`;`flatten`];;
st 50 [`sumn`];;
st 5 [`sumn []`];;
st 5 [`all f (u::v)`];;
st 5 [`sumn x <= sumn y`];;
st 5 [`uniq`;`sizel a <= sizel b`];;
st 5 [`flatten`;`normal_list`;`list_of_darts`];;
st 15 [`hypermap_of_list`;`quotient_list`];;
st 5 [`normal_list`;`is_normal`];;
st 5 [`final_quotient_faces`;`hypermap_of_list`];;
st 5 [`quotient`;`quotient_list`];;
face_set;;
st 5 [`face_set`;`hyp_iso`];;
st 50 [`connected_hypermap`];;
st 50 [`number_of_components`];;
st 50 [`set_of_components`];;
st 50 [`set_part_components`];;
st 50 [`comb_component`];;
st 5 [`is_in_component`];;
st 5 [`is_path`];;
st 5 [`go_one_step`];;
flag_list;;
is_contour;;
st 5 [`is_contour`;`is_path`];;
st 5 [`is_path`;`connected_hypermap`];;
st 5 [`is_path`;`comb_component`];;
st 50 [`is_contour`];;
st 50 [`is_path`];;
st 10 [`CARD s = 1`];;
st 5 [`set_of_components`;`FINITE`];;
st 50 [`is_contour`];;
st 5 [`dart`;`hypermap_of_list`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`x = []`;`?`];;
st 5 [`face_map`;`f_list`];;
st 15 [`normal_list`;`node_map`];;
st 5 [`node`;`node_map`;`inverse`];;
st 5 [`x IN node H x`];;
st 5 [`next_el`;`MEM`];;
st 50 [`core_list`];;
st 50 [`final_list`;`parts`];;
st 50 [`quotient_list`];;
st 50 [`final_list`;`rot`];;
st 50 [`rot`;`hypermap_of_list`];;
st 5 [`perm_eq`;`hypermap_of_list`];;
st 5[`next_el`;`rot`];;
st 5[`MEM`;`rot`];;
st 15 [`ALL2`];;
st 5 [`flatten (h::t)`];;
st 15[`perm_eq`;`cat`];;
st 5 [`perm_eq []`];;
st 5[`perm_eq a b = perm_eq b a`];;
st 5 [`perm_eq`;`rot`];;
st 5 [`perm_eq`;`uniq`];;
st 5[`rot n r = []`];;
st 5 [`set_of_list`;`perm_eq`];;
st 5 [`MEM`;`perm_eq`];;
st 5 [`f_last`;`final_list`];;
st 5 [`loop_list`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5[`next_el`;`rot`];;
st 5 [`final_list`;`rot`];;
st 5 [`rot`;`map`];;
st 5 [`rot`;`final_list`];;
st 5[`?r. P ==> Q r`];;
st 5 [`ALL2`;`map`];;
st 5 [`all`;`final_list`;`rot`];;
st 5 [`rot`;`hypermap_of_list`];;
st 15 [`list_of_darts`;`uniq`;`good_list`];;
st 5 [`ALL2`;`quotient_list`];;
st 5 [`MEM (find_face L r) (list_of_faces L)`];;
st 15 [`perm_eq`;`s ==> perm_eq u v`];;
st 5 [`uniq`;`flatten`];;
st 5 [`uniq`;`list_of_faces`];;
st 5 [`list_of_faces`;`list_of_darts`];;
st 5 [`list_pairs`;`[]`];;
st 50 [`list_of_faces`];;
st 15 [`uniq`;`MEM`;`x = y`;`flatten`];;
st 5 [`uniq`;`find_face L x = s`];;
st 5 [`quotient_list L []`];;
st 5 [`hypermap_of_list []`];;
st 5 [`perm_eq`;`hypermap_of_list`];;
st 5 [`quotient_list`;`all`;`final_list`];;
st 5 [`list_of_faces`;`perm_eq`];;
st 5 [`perm_eq`;`map`];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`list_of_faces`;`FST`];;
st 5 [`list_of_faces`;`MAP`];;
st 5 [`list_pairs`;`zip`];;
st 15 [`zip`;`FST`];;
st 15 [`zip`;`MAP`];;
st 50 [`planegraph_relaxed`];;
st 50 [`planegraph`];;
st 50 [`PlaneGraphs`];;
st 50 [def "max";`x:num`];;
st 15 [`x:(num -> bool) -> num`];;
st 15 [`x:(num)list -> num`];;
tyo `maxn`;;
st 15 [`maxn`];;
st 50 [`maxn`];;
st 5 [`(?f. A ==> B f) <=> U`];;
help "new_specification";;
st 15 [`vertices_set2`;omit `Seed`];;
st 5 [`vertices_graph`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5 [`MEM`;`find_face`];;
st 5 [`uniq`;`find_face`];;
st 50 [name "Kbw"];;
st 5 [`marked_list`;`list_of_darts`];;
st 5 [`FST`;`hypermap_of_list`;`node`];;
st 5 [`MEM`;`find_face`;`list_of_darts`];;
st 5 [`x IN node H y`];;
st 50 [`INJ`;`?`];;
st 5 [`inj_on`;`IN`];;
st 5 [`elements_of_list`;`normal_list`];;
st 5 [`list_of_darts`;`marked_list`];;
st 15 [`list_of_darts`;`list_of_elements`];;
st 5 [`MEM`;`find_face`;`list_of_darts`];;
st 15 [`BIJ`;`CARD`];;
st 5 [`INJ f {}`];;
st 5 [`CARD`;name "NUM"];;
st 5 [`CARD`;`iota`];;
st 5 [`CARD`;`set_of_list`];;
st 5  [`INJ`;`inj_on`];;
st 5 [`set_of_list`;`iota`];;
st 5[`MEM`;`iota`];;
st 5[`vertices_set2`;`match_quotient_list`];;
st 5 [`vertices_graph`];;
st 5 [`list_of_darts`;`quotient_list`];;
elements_of_list_quotient_list;;
quotient_list_elements;;
st 15 [`?f:A->B. P`;`x:(A)list`];;
st 5 [`set_of_list`;`MAP`];;
st 5 [`BIJ`;`IMAGE`];;
st 5 [`sizel`;`CARD`];;
st 15 [`MAP`;`uniq`];;
st 15 [`newvertex_v2`];;
st 5 [`uniq`;`filter`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5[`uniq`;`rot`];;
st 5 [`MEM`;`find_face`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`simple_hypermap`;`FST`];;
st 50 [`simple_hypermap`;`hypermap_of_list`];;
st 5 [`find_face`;`list_of_faces`];;
st 5 [`uniq`;`list_of_darts`];;
st 500 [`uniq`;`nth`];;
st 50 [`all uniq L`;`FST`];;
st 5 [`list_of_darts`;`find_face`];;
st 15 [`list_of_darts`;`find_face`];;
st 15 [`find_pair_list`;`find_face`];;
st 15 [`list_pairs`;`FST`];;
st 5 [`find_pair_list L u = find_pair_list L v`];;
st 5 [`find_face L x = find_face L y`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`uniq`;`undup`];;
st 5 [`set_of_list`;`undup`];;
st  5 [`MAP`;`find_face`];;
st 5 [`rotate_to`;`rot`];;
st 10 [`uniq`;`map`];;
st 5  [`indexl`;`MAP`];;
st 5 [`rot`;`map`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`MEM x (find_face L x)`];;
st 5[`inj_on`;`FST`];;
st 5 [`inj_on`;`SUBSET`];;
st 10 [`find_face`;`list_of_darts`];;
st 5 [`filter`;`map`];;
st 5 [`filter f r = filter g r`];;
st 5 [`rot`;`rotate_to`];;
st 15 [`MAP`;`FST`];;
st 5 [`FST`;`list_of_darts`];;
Lp_gen_theory.list_of_dart_pairs_subset;;
st 15 [`SND`;`normal_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`flatten`;`MAP`];;
st 5 [`set_of_list`;`IMAGE`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [`final_list`;`map`];;
final_list;;
st 5 [`inj_on`;`final_list`];;
st 5 [`iso_list`;`final_list`];;
st 5 [`filter`;`map`];;
st 15 [`quotient_list`;`MAP`];;
st 15 [`quotient_list`;`iso_list`];;
st 5 [`quotient_list`;`flatten`];;
st 5 [`list_of_elements`;`flatten`];;
st 5 [`SND`;`f_list`];;
st 5 [`MEM`;`next_el`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "COMMENT";;
(* April 6, 2014 *)
st 50 [`Seed`;`faces`];;
st 50 [`Seed`];;
st 5 [`filter`;`CONS`];;
st 5 [`set_of_list [x]`];;
st 5 [`{x} SUBSET t`];;
st 50 [`iso_list`;`dih2k_list`];;
st 59 [`dih2k_list`;`quotient_list`];;
inj_on_BIJ;;
st 5 [`FINITE`;`elements_of_list`];;
st 5 [`set_of_list`;`iota`];;
st 5 [`sizel`;`elements_of_list`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`uniq`;`list_of_elements`];;
st 5 [`CARD x <= CARD y`;`SUBSET`];;
st 5 [`CARD`;`sizel`];;
st 5 [`list_of_faces`;`?`];;
st 5 [`good_list_nodes`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`list_of_faces`;`map`];;
st 15 [`find_face`;`list_of_faces`];;
st 5 [`list_of_darts`;`MAP (MAP phi)`];;
st 5 [`list_of_darts`;`flatten`];;
st 5 [`list_pairs`;`(f=[])`];;
st 5 [`find_face (MAP (MAP phi) L)`];;
st 15 [`find_face L x = f`];;
st 5 [`normal_list`;`iso_list`];;
st 5 [`is_restricted`;`CARD`];;
st 5 [`face`;`hypermap_of_list`];;
st 5 [`find_face`;`?`];;
st 5 [`dart`;`hypermap_of_list`];;
st 5 [`list_pairs`;`MAP`];;
st 5 [`final_list`;`iso_list`];;
st 5 [`final_list`];;
st 5 [`quotient_list`;`iso_list`];;
st 5 [`dih2k_list`;`iso_list`];;
st 15 [`dih2k_list`];;
st 5 [`core`;`MAP`];;
st 5 [`core`;`final_list`];;
st 15 [`uniq`;`map`];;
st 5 [`inj_on`;`FST`;`SND`];;
st 15 [`flatten`;`list_of_darts`];;
st 5 [`uniq`;`list_of_faces`];;
FST_o_FST;;
planegraph;;
st 5 [`subdivFaceFinal`];;
st 5 [`subdivFace0_alt`];;
st 5 [`subdivFace0`];;
st 5 [`vos = []`;` \/ `];;
st 15 [`(!a. Q ==> P a) <=> U`];;
st 5 [`indexToVertexList`];;
st 5 [`MAP f x = []`];;
st 5 [`cat [x] y`];;
st 5 [`MEM`;`FILTER`];;
st 15 [`splitFace`];;
st 5 [`faces`;`Graph`];;
st 5 [`splitFace`;`finals`];;
st 5 [`filter`;`CONS`];;
st 5 [`filter`;`replace`];;
st 50 [`replace`];;
st 5 [`filter`;`[]`];;
st 5 [`filter P xs = []`];;
st 8 [`splitFace`];;
st 5 [`split_face`];;
st 5 [`split_face`;`splitFace`];;
st 5 [`minimalFace`];;
st 5 [`faces`;`Graph`];;
st 9 [`replace`];;
st 5 [`sizel (h::t)`];;
st 5 [`subdivFace0_alt`];;
st 15 [`finalGraph`];;
st 15 [`nonFinals`];;
st 15 [`filter P xs = xs`];;
st 15 [`hypermap_of_list`;`quotient_list`];;
st 5 [`list_of_faces`;`quotient_list`];;
st 50 [`final_list`];;
st 15 [`flatten`;`sizel`];;
st 50 [`sumn`];;
st 5 [`sumn`;`CONS`];;
st 5 [`all`;`CONS`];;
st 5 [`sumn []`];;
st 5 [`CONS`;`flatten`];;
st 5 [`map`;`cat`];;
st 5 [`CONS`;`cat`];;
st 5 [`sizel x = 1`;`[x]`];;
st 5 [`uniq`;`normal_list`;`flatten`];;
st 5 [`uniq (flatten N)`;`MEM d r`];;
st 15 [`core`];;
st 15 [`quotient_list`;`list_of_darts`];;
st 15 [`parts L x = []`];;
st 5 [`flatten`;`parts`];;
st 5 [`is_edge_nondegenerate`;`is_restricted`];;
st 5 [`quotient_list L []`];;
st 5 [`all uniq`;`simple_hypermap`];;
st 5 [`list_of_darts`;`iso_list`];;
st 5 [`list_of_darts`;`inj_on`];;
List_hypermap.list_of_darts;;
st 5 [`list_of_darts`;`flatten`];;
List_hypermap.list_of_darts_alt;;
st 5 [`MAP`;`flatten`];;
st 5 [`list_of_faces`;`iso_list`];;
st 5[`list_of_faces`];;
st 5 [`list_pairs`;`iso_list`];;
st 5 [`list_of_darts`;`iso_list`];;
st 5 [`normal_list`;`iso_list`];;
st 15 [`sizel`;`CARD`;`set_of_list`];;
st 5 [`sizel (undup p)`];;
st 5 [`sizel (filter P r)`];;
st 5 [`count`;`sizel`];;
st 5 [`CARD a <= CARD b`;`SUBSET`];;
st 5 [`set_of_list (undup x)`];;
st 5 [`SND`;`finals`];;
st 5 [`map`;`filter`];;
st 15 [`uniq (map f x)`];;
st 5 [`uniq`;`filter`];;
st 5 [`fgraph`;`FST`];;
st 5 [`uniq`;`good_list`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`good_list`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`good_list_nodes`;`iso_list`];;
st 5 [`list_pairs x = list_pairs y`];;
st 15 [def "max"];;
tyo `MAX`;;
tyo `maxn`;;
st 5 [`MAX`;`maxn`];;
st 5 [`maxn`];;
st 50 [`m:(num -> bool) -> num`;`a:num < b:num`;omit `CARD`;omit `min_num`];;
st 5 [`@n. P = @t. Q`];;
st 5 [`y IN S ==> y <= (m:num)`];;
st 15 [`S y ==> y <= (m:num)`;`?`];;
st 50 [`match_quotient_list`];;
st 5 [`?u. P u /\ u = y`];;
st 5 [`((?x. r) ==> s) <=> f`];;
st 15 [`foldr`];;
st 5 [`good_list`];;
good_list;;
is_restricted;;
st 5 [`is_restricted`;`L = []`];;
st 5 [`Seed`;`match_quotient_list`];;
st 5 [`list_of_faces`;`list_pairs`];;
st 5 [`nonFinals`;`Seed`];;
st 5 [`faces`;`graphl`];;
st 5 [`Seed`;`vertices_set2`];;
st 5 [`planegraphP`;`Seed`];;
st 5 [`x,x`;`RTranCl`];;
st 5 [`sizel`;`list_pairs`];;
st 5 [name "restricted_hypermaps"];;
st 5 [`planegraphP`;`planegraph`];;
st 5 [`planegraphP`];;
planegraph;;
st 5 [`is_restricted`;`all uniq`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`fgraph`;`Seed`];;
st 5 [`finalGraph`;`hypermap_of_list`];;
st 5 [`iso`;`iso_list`];;
st 5 [`newvertex_prepped`];;
st 5 [`marked_list`;`loop_choice`];;
st 4 [`minimalFace`];;
finalGraph;;
st 5 [`minimalVertex`];;
st 15 [`minimal_el`];;
st  5 [`nextVertex`;`next_el`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`list_of_darts`;`next_el`];;
st 5 [`u,next_el f u`];;
st 5 [`MEM u (zip a b)`];;
st 5 [`MEM`;`indexl`];;
st 5 [`minn a a `];;
st 5 [`indexl`;`sizel`];;
st 5 [`indexl x s = u`;`uniq`];;
st 5 [`uniq`;`list_pairs`];;
st 5 [`nth`;`zip`];;
st 5 [`EL`;`nth`];;
st 5 [`nth`;`next_el`];;
st 5 [`MEM`;`iota`];;
st 5 [name "INDUCT";name "LIST"];;
st 5 [`sizel`;`rcons`];;
st 5 [`POWER`;`SUC`];;
st 5 [`rcons []`];;
st 5 [`headl`;`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`EL`;`rcons`];;
st 5 [`rcons`;`cat`];;
st 5 [`cat`;`HD`];;
st 5 [`cat (h::t) b`];;
st 5 [`cat`;`EL`];;
st 5 [`cat`;`nth`];;
st 5 [`sizel`;`CONS`];;
st 5 [`nth`;`0`];;
st 5 [`headl`;`HD`];;
st 5 [`EL`;`LAST`];;
st 5 [`cat`;`rcons`];;
st 5[`rcons`;`cat`];;
st 5 [`LAST`;`rcons`];;
st 5 [`LAST`;`cat`];;
st 5 [`BUTLAST`;`TL`];;
st 5 [`BUTLAST`;`APPEND`];;
st 5 [`LAST`;`TL`];;
st 5 [`APPEND`;`TL`];;
st 5 [`APPEND`;`CONS`];;
st 5 [`HD`;`TL`];;
st 5 [`LENGTH`;`TL`];;
st 5 [`LENGTH`;`3`;`EL`];;
st 5 [`BUTLAST x = []`];;
st 15 [def "butlast"];;
st 5 [`butlast`;`BUTLAST`];;
st 5 [`butlast`;`sizel`];;
st 15 [def "TL"];;
st 5 [`sizel`;`TL`];;
st 5 [`butlast`;`rcons`];;
st 5 [`rcons []`];;
st 5 [`sizel`;`TL`];;
st 5 [`EL`;`BUTLAST`];;
st 5 [`(a /\ (!x. P x)) <=> R`];;
st 5 [`LAST`;`TL`];;
st 5 [`LAST`;`EL`];;
st 5 [`EL`;`TL`];;
st 5 [`(f:num->num) i <= f (k:num)`];;
st 5 [`EL`;`iota`];;
st 5 [`EL`;`LAST`];;
