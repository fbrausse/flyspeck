let NAN = 0;;
let st = searcht;;
let tyo = type_of;;
let st5 = searcht 5;;
update_database();;
	let st = searcht 5 ;;
	let stu t = searcht 5 [t];;

let searchd' pat =
  searchl (map (fun t -> ("",t)) (definitions())) pat;;

let searchd pat = searchd' (pat @ 
  [omit `pack_nonlinear_non_ox3q1h`;omit `main_nonlinear_terminal_v11`;omit `ox3q1h`;omit `pack_ineq_def_a`]);;

let ineq_as_thm = 
  map (fun t -> t.idv,ASSUME t.ineq) (!Ineq.ineqs);;

let prep_as_thm = 
  map (fun t -> t.idv,ASSUME t.ineq) (!Prep.prep_ineqs);;

let searchi pat =
      searchl (ineq_as_thm) pat;;

let searchp pat =
      searchl (prep_as_thm) pat;;

(* sample searches *)

find_def "edge2_135_x";;
find_defs "edge2";;
help_flag 'd' "edge2";;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types List_hypermap_computations.list_pairs_empty;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 6;;
back_to "ANTS";;
(* March 12, 2014 *)
is_restricted;;
st 5 [`marked_list`;`split_condition_list`];;
st 5 [`marked_list`;`next_el`];;
is_restricted;;
st 5 [`all`;`simple_hypermap`];;
st 5 [`is_marked`;`marked_list`];;
st 5 [`final_loops`;`final_list`];;
st 5 [`loop_of_list x = loop_of_list y`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5 [`face_map`;`f_list`];;
st 5 [`list_of_darts`;`flatten`];;
st 5 [`in_dart_of_loop`;`MEM`];;
st 50 [`hyp'z`;`hyp'y`];;
st 5 [`split_condition_list`;`is_split_condition`];;
st 5 [`atoms_of_loop`];;
st 5 [`sizel`;`CARD`];;
st 5 [`uniq`;`parts`];;
st 5 [`atom`;`parts`];;
st 5 [`atom H r u = atom H r v`;`LAST`];;
st 15 [`node`;`FST`];;
st 5 [`l'y`;`list_of_darts`];;
st 5 [`hyp'z`;`dart`];;
st 50 [`hyp'z`;`face`];;
st 5 [`face`;`hypermap_of_list`];;
st 15 [`find_face`;`list_of_darts`];;
st 50 [`hyp'm`];;
st 50 [`iso_list`;`uniq`];;
st 50 [`iso_list`];;
st 50 [`isop_list`];;
st 5 [`is_restricted`;`iso`];;
st 5 [`iso_list`;`iso`];;
st 5 [`iso_list`;`CONS`];;
st 5 [`(a::b) = (c::d)`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`elements_of_list`;`darts_of_list`];;
st 5 [`list_of_elements`;`list_of_darts`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 20 [`inj_on`;`f_list`];;
st 10 [`MAP`;`parts`];;
st 5 [`e_list (f x)`];;
st 5 [`next_el (MAP f u) (g v)`];;
st 5 [`contour_list`;`CONS`];;
st 50 [`inj_on`;`FST`];;
st 5 [`e_list`;`list_of_darts`];;
st 5 [`MEM (f_list L u) (list_of_darts L)`];;
st 5 [`inj_on`;`list_of_darts`];;
st 50 [`inj_on`];;
st 20 [`inj_on`];;
st 5 [`inj_on`;`find_face`];;
st 5 [`list_of_darts`;`MAP`];;
st 5 [`list_of_elements`;`list_of_darts`];;
st 5 [`y = l'm L r d`];;
st 5 [`next_el`;`MAP`];;
f_list_map;;
st 5 [`is_restricted`;`iso`];;
st 5 [def "kepl"];;
st 50 [`kepler_conjecture`];;
st 50 [def "lp_main_estimate"];;
st 5 [`lp_main_estimate`];;
st 5 [`contravening`;];;
st 5 [`CARD X <= CARD Y`;`SUBSET`];;
st 5 [`FINITE`;`packing`];;
st 50 [`tame_archive_lists`];;
st 5 [`import_tame_classification`];;
st 50 [`iso_fgraph`];;
st 5 [`good_list`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`is_restricted`;`restricted_list`];;
st 5 [`iso`;name "tran"];;
st 5 [`iso_list`;`iso`];;
st 5 [`archive`];;
st 5 [`lp_main_estimate`];;
st 15 [`kepler_conjecture`];;
st 15 [`lmfun_ineq_center`];;
st 599 [`contravening`];;
st 500 [`is_restricted`];;
st 50 [name "JGT"];;
is_restricted;;
tame_hypermap;;
st 5 [`contravening`;`tame_hypermap`];;
st 5 [`is_restricted`;`contravening`];;
st 5 [`tame_hypermap`;`is_restricted`];;
st 5 [def "contravening"];;
st 15 [`contravening`;`surrounded_node`];;
st 15 [`contravening`;`kepler_conjecture`];;
st 15 [`contravening`;`scriptL`];;
st 5 [`pack_ineq_def_a`];;
st 5 [`scriptL W`;`lmfun_ineq_center`];;
st 5 [`good_graph`;`tame`];;
st 50 [`iso_fgraph`];;
st 5 [`contravening`;`plain`];;
st 59 [`contravening`;name "JGT"];;
st 5 [`contravening`;`total_weight`];;
st 5 [`contravening`;`node_type_exceptional_face`];;
st 5 [`contravening`;`number_of_nodes`];;
st 50 [`number_of_nodes`;`13`];;
st 50 [`tame_10`];;
st 50 [`node_type_exceptional_face`];;
st 500 [`contravening`;`6`];;
st 5 [def "is_no_double_joins"];;
st 5 [def "is_no_double_joints"];;
st 5 [`is_no_double_joins`;`is_no_double_joints`];;
st 5 [`is_node_nondegenerate`;`contravening`];;
st 50 [`CARD (face H x)`;`3`];;
st 50 [`is_node_nondegenerate`];;
st 5 [`number_of_faces`];;
st 5 [`CARD {}`];;
st 5 [`face_collection`];;
st 5 [`tame`;`tame_hypermap`];;
st 5 [`ALL`];;
st 5 [`opposite_hypermap`;`contravening`];;
st 5 [`iso`;`opposite_hypermap`];;
st 5 [`contravening (IMAGE (--) V)`];;
st 5 [name "iso_list_restricted"];;
st 5 [`iso_list`;`is_restricted`];;
st 5 [`kcblrqc_ineq_def`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`iso_list`;`isop_list`];;
st 5 [`normal_list`;`iso_list`];;
st 5 [`iso`;`is_restricted`];;
dih2k_list;;
st 50 [`match_core_list`];;
st 5 [`core_list`;`quotient_list`];;
st 5 [`dih2k_list`];;
st 25 [`Seed`];;
st 50 [`good_graph`];;
good_graph;;
st 15 [`FINITE`;`CARD`;`BIJ`];;
st 5 [`CARD`;`uniq`;`sizel`];;
st 5 [`{}`;`SUBSET`];;
st 5 [`INJ {}`];;
st 0 [`map`;`permutes`;`uniq`];;
st 100 [`uniq`;`permutation`];;
st 5 [`inj_on`;`uniq`];;
st 15 [`EL i s = EL i t`];;
st 5 [`sizel`;`map`];;
st 5 [`EL`;`MAP`];;
st 5 [`indexl (EL j u)`];;
st 5 [`uniq`;`EL i u = EL j v`];;
st 5 [`indexl x u = indexl y u`];;
st 5 [`indexl`;`sizel`];;
st 5 [`list_of_elements`;`CONS`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`set_of_list`;`flatten`];;
st 5 [`flatten`;`CONS`];;
st 5[`set_of_list`;`APPEND`];;
st 5 [`set_of_list []`];;
st 5 [`APPEND x []`];;
st 5 [`set_of_list (rev u)`];;
st 5 [`MEM`;`rev`];;
st 5 [`X UNION X`];;
st 5 [`MAP`;`REVERSE`];;
st 5 [`uniq`;`MAP`];;
st 5 [`good_list_nodes`;`Seed`];;
st 5 [`uniq`;`rev`];;
st 5 [`uniq`;`upt`];;
st 5 [`uniq`;`iota`];;
st 5[`fgraph`;`Seed`];;
st 5 [`uniq [x]`];;
st 5 [`uniq`;`rev`];;
st 5 [`uniq (a :: b)`];;
st 5 [`rev [x;y]`];;
st 5 [`rev (x::y)`];;
st 5 [`rcons`;`cat`];;
st 5 [`rcons`;`CONS`];;
st 5 [`cat`;`CONS`];;
st 5 [`sizel []`];;
st 5 [`iota k 0`];;
st 5 [`list_pairs []`];;
st 5 [`dih2k_list`;`Seed`];;
st 5 [`dih2k_list`;`iso_list`;`sizel`];;
st 5 [`iso_list`;`good_list`];;
good_graph;;
st 5 [`Seed`;`vertices_set2`];;
st 15 [`x ==> good_list_nodes L`];;
st 50 [`Seed`];;
st 5 [`darts_of_list`;`SUC`];;
st 50 [`Seed`];;
list_pairs_rev_iota;;
st 5 [`list_pairs`;`iota`];;
st 5 [`list_of_darts`;`CONS`];;
st 5[`list_of_darts []`];;
st 5 [`node_map`;`list_of_darts`];;
list_pairs_iota;;
st 5[`list_pairs`;`FST`];;
st 5 [`x IN node H y`];;
st 5 [`inverse`;`node_map`;`node`];;
st 5 [`FST`;`good_list`;`node`];;
st  5[`inverse`;`node_map`;`f_list`];;
st 5 [`MEM`;`f_list`;`list_pairs`];;
List_hypermap.mem_f_list;;
st 5 [`find_face L u = y`;`CONS`];;
st 5 [`find_face []`];;
st 5 [`list_of_darts []`];;
st 5 [name "AUQ"];;
st 5 [`dart`;`hypermap_of_list`];;
st 15 [`list_of_darts`;`list_of_faces`];;
st 15 [`find_face`;`list_of_faces`];;
st 5 [`MEM`;`find_list`];;
st 5 [`list_of_faces`;`[]`];;
st 5 [`list_pairs x = []`];;
st 5 [def "dih2k"];;
st 50 [`dih2k`];;
Lvducxu.DIH2K_FACE_SIMPLIZED;;
st 30 [`path_of_loop`];;
st 5 [def "pre_card_dart_of_loop"];;
st 5 [`loop_of_face`;`path_of_loop`];;
st 5 [`normal_list`;`is_normal`];;
st 5 [`loop_of_list`;`loop_family_of_list`];;
st 30 [`is_normal`];;
st 5 [`loop_family_of_list`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5[`loop_of_list`;`[]`];;
st 15 [`card_dart_of_loop`];;
st 30 [`is_normal`];;
st 39 [`dart_of_loop`];;
st 5 [`dart_of_loop`;`loop`];;
st 5 [`dart_of_loop`;`{}`];;
st 5 [`tuple_loop`;`loop`];;
st 5 [`one_step_list`;`one_step_contour`];;
st 5 [`loop_map`;`next_el`];;
st 5 [`face_map`;`f_list`];;
st 5 [`node_map`;`f_list`];;
st 7 [`path_of_loop`];;
st 15 [`EL`;`r < LENGTH s`];;
st 5 [`path_of_loop`];;
st 5 [`loop_map`;`loop_of_list`];;
st 5 [`EL`;`MAP`];;
st 5 [`nth`;`iota`];;
st 5 [`EL`;`nth`];;
st 15 [`next_el`;`POWER`];;
st 5 [`indexl`;`HD`];;
st 5 [`x:(A)loop = y:(A)loop`];;
st 5 [`path_of_loop`;name "inj"];;
st 5 [`~uniq r`];;
st 50 [`is_inj_list`];;
st 30 [`uniq`;`nth`];;
st 5 [`card_dart_of_loop`];;
st 5 [`nth`;`iota`];;
st 5 [`sizel`;`iota`];;
st 15 [`(next_el r POWER k) d = (next_el r' POWER k) d`];;
st 5 [`next_el`;`POWER`;`x:A list = b`];;
st 5 [`dart_of_loop`;`path_of_loop`];;
st 5 [`support_of_sequence`;`path_of_loop`];;
st 15 [`support_of_sequence`];;
st 40 [`loop_map`;];;
st 5 [`EL`;`iota`];;
st 15 [`loop_map`;`POWER`];;
st 50 [`path_of_loop`;`a + b:num`];;
st 5 [`f POWER (a*b)`];;
DIVISION;;
st 5 [`?`;`a * k + b:num`];;
st 5 [`f POWER (a + b)`];;
st 5 [`loop_map L POWER n`];;
st 5 [`I`;`POWER`];;
st 15 [`in_dart_of_loop`;`loop_map`;`POWER`];;
st 5 [`permutes`;`loop_map`];;
st 15 [`permutes`;`f x = x`];;
st 5 [`CARD x = 0`];;
st 5 [`dart_of_loop`];;
st 5 [`HD`;`iota`];;
st 5 [`x = []`;`sizel`];;
st 5 [`EL`;`iota`];;
st 5 [`uniq`;`path_of_loop`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 5 [`CARD`;`set_of_list`;`sizel`];;
st 5 [`headl`;`rot`];;
st 5 [`loop_of_list`;`rot`];;
st 5 [`sizel`;`rot`];;
st 5 [`nth`;`rot`];;
st 5 [`LAST`;`EL`];;
st 5 [`loop_of_list`;`rot`];;
st 5 [`set_of_list`;`rot`];;
st 5 [`next_el`;`rot`];;
st 5 [`quotient`;`node_map`];;
st 50 [`quotient`];;
st 50 [`dih2k`;omit `local_fan`;omit `FAN`];;
st 5 [`dart`;`FINITE`];;
st 15 [`list_pairs`;`rot`];;
st 15 [`set_of_list`;`list_pairs u`];;
st 5 [`next_el`;`rot`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`rot k []`];;
st 5 [`list_pairs`;`[]`];;
st 5 [`zip []`];;
st  5 [`set_of_list`;`{}`];;
st 5 [`set_of_list`;`list_pairs`];;
st 5 [`set_of_list`;`zip`];;
st 5 [`MEM`;`zip`];;
st 5 [`next_el`;`rot`];;
st 5 [`MEM r (list_pairs u)`];;
st 5 [`A SUBSET B /\ B SUBSET A`];;
st 5 [`CARD`;`uniq`;`sizel`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`undup`;`sizel`];;
st 5 [`uniq`;`undup`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`MEM (next_el u d) u`];;
st 5 [`list_pairs`;`REVERSE`];;
st 5 [`e_list o e_list`];;
st 15 [`CARD`;`SUBSET`];;
st 5 [`CARD`;`set_of_list`];;
st 10 [`list_pairs`;`uniq`];;
st 5 [`rev (rev f)`];;
st 5 [`rev`;`LAST`];;
st 5 [`rot`;`[]`];;
st  5 [`rot`;`uniq`];;
st 15 [`indexl`;`rot`];;
st 5 [`rot`;`sizel`];;
st 5 [`indexl (HD f) f`];;
st 5 [`rot 0`];;
st 5 [`face`;`hypermap_of_list`];;
st 10 [`find_face L d = u`;`MEM`];;
st 15 [`uniq`;`list_of_darts`;`good_list`];;
good_list;;
st 15 [`atom_choice H NF x = {y}`;`{x}`];;
st 15 [`atom H L x = {y}`];;
tyo `atom`;;
Hypermap.lemma_face_contour_on_loop;; (* atoms single {x} *)
st 50 [`loop_of_face`;`hypermap_of_list`];;
st 50 [`list_of_darts`;`MEM`];;
st 15 [`list_of_darts`;`list_of_faces`];;
st 5 [`faces_of_list`;`darts_of_list`];;
List_hypermap.list_of_faces;;
st 5 [`list_of_darts`;`flatten`];;
st 15 [`final_list`;`hypermap_of_loop`];;
st 5 [`loop_of_face`;`final_list`];;
st  5 [`uniq`;`list_of_faces`];;
st 15 [`loop_of_list`;`final_list`];;
st 5 [def "dart";def "loop"];;
tyo `dart_of_loop`;;
st 15 [`card_dart_of_loop`];;
tyo `atom`;;
st 5 [`dart`;`quotient`];;
atoms_of_family;;
st 5 [`dart_of_loop`;`set_of_list`];;
st 5[`head_of_atom`];;
st 5 [`node`;`quotient`];;
st 5 [`support_node`];;
transform_assumption_v2;;
st 50 [`atom_choice`];;
st 50 [`quotient`;`atoms_of_family`];;
st 5 [`node H y`;`dart`];;
st 5 [`node`;`quotient`];;
st  5 [`atoms_of_loop`];;
lemma_node_subset;;
st 5 [`atom`;`atom_choice`];;
bb 4;;
st 15 [`darts_of_family`];;
normal_list;;
tyo `head_of_atom`;;
st 50 [`head_of_atom H L x = x`];;
st 15 [`head_of_atom H L d`;`atom`];;
change_to_margin;;
st 5 [`atom`;`dart_of_loop`];;
st 5 [`x IN atom H L x`];;
st 5[`flatten`;`[]`];;
st 5 [`uniq`;`cat`];;
st 5[`dart_of_loop`;`loop_of_list`];;
st 15 [`dih2k`];;
st 15 [`quotient`;`face_set`];;
st 5  [`x:(A)loop`;`CARD`];;
st 15 [`card_dart_of_loop`];;
st 5 [`atom`;`atoms_of_loop`];;
st  5 [`x IN atom H L x`];;
st 5 [`atom`;`dart_of_loop`];;
st 5 [`quotient`;`dih2k`];;
st 5 [`is_normal`;`FINITE`];;
st 50 [name "Auq"];;
st 50 [`complement0`];;
st 50 [`node_contour`];;
st 5 [`CARD`;`dart`];;
st 5 [`x = {}`;`CARD`];;
st 5 [`FINITE`;`dart`];;
st 5 [`node_map H x IN dart H`];;
st 5 [`x IN face H x`];;
st 5 [`face`;`face_set`];;
lemma_head_of_atom_via_restricted;;
st 5 [`loop_map`;`loop_of_list`];;
st 5 [`face_map`;`f_list`];;
st 5 [`f_last`];;
bb 3;;
st 50 [`head_of_atom`];;
st 50 [`final_list`;`parts`];;
st 15 [`list_of_faces`;`list_pairs`];;
st 5 [`list_pairs`;`zip`];;
st 5 [`FST`;`zip`];;
st 15 [`zip`];;
st 5 [`unzip1`];;
st 5 [`simple_hypermap`;`hypermap_of_list`];;
st 20 [`parts`;omit `normal_list`;omit `marked_list`];;
st 5 [`partition_into_atom0r`];;
st 5 [`final_list`;`quotient_list`];;
st 5 [`parts`;`[h]`];;
st 5 [`uniq [h]`];;
st 5 [`LAST [h]`];;
st 5 [`parts`;`[x]`];;
st 5 [name "xor"];;
st 5 [`next_el (cat u v)`];;
st 5 [`list_of_faces`;`list_of_darts`];;
st 50 [`loop_of_list`];;
st 50 [`loop_of_list`;`normal_list`;omit `final_list`];;
st 5 [`all uniq (L:((A)list)list)`];;
st 5 [`face`;`quotient`];;
st 5 [`dart_of_loop`;`loop_of_list`];;
st 50 [`dih2k`;omit `local_fan`;omit `FAN`;`IMAGE`];;
st 5 [`FINITE`;`dart`];;
st 5 [`dih2k`;`simple_hypermap`];;
st 5 [`dih2k`;`node_map`];;
st 5 [`face H u = face H v`];;
st 5 [`face`;`dart`];;
st 5 [`dart`;`quotient`];;
st 5 [`atom`;`atoms_of_family`];;
st 5 [`HD`;`MAP`];;
st 5 [`LAST`;`MAP`];;
st 5 [`parts`;`HD`];;
st 5 [`parts`;`LAST`];;
st 5 [`LAST`;`cat`];;
st 5 [`butlast`;`cat`];;
st 5 [`BUTLAST`];;
st 5 [`butlast`;`flatten`];;
st  5[`flatten`;`parts`];;
st 5 [`flatten`;`cat`];;
st 5 [`flatten`;`CONS`];;
st 5 [`flatten []`];;
st  5[`parts`;`~(s = [])`];;
st 5 [`head_of_atom`;`atom`];;
st 5 [`atom`;`node`];;
st  5[`head_of_atom`;`node_map`];;
st 5 [`node H x = node H y`];;
st 5 [`FST`;`node`;`good_list`];;
st 5 [`quotient_list`;`parts`;`face`];;
st 5 [`face`;`hypermap_of_list`];;
st 50 [`transform_count`];;
st 50 [`normal_family`;`quotient_list`];;
st 5 [`quotient_list`;`list_of_darts`];;
st 5 [`final_list`;`parts`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`map`;`cat`];
st 5 [`edge_map`;`face`;`simple_hypermap`];;
st 15 [`is_node_nondegenerate`];;
st 5 [`dart(hypermap_of_list L)`];;
st 5 [`face (hypermap_of_list L)`];;
st 15 [`dart`;`face_map`];;
st 5 [`MEM`;`find_face`];;
st 15 [`find_face L d = f`];;
st 5 [`uniq (list_of_darts L)`];;
st 5 [`final_list`;`list_of_faces`];;
st  5[`edge_map`;`hypermap_of_list`];;
st  5 [`e_list_ext`;`e_list`];;
st 5 [`good_list`;`iso_list`];;
st 25 [`iso_list`;name "sym"];;
st  5 [`iso_list`;`CONS`];;
st 5 [name "iso_list_mem"];;
st 5 [`iso_list`;`quotient_list`];;
st 100  [`parts L r`;omit `atom`;omit `POWER`;omit `l'm`];;
st 100  [`parts L r`;omit `atom`;omit `POWER`;omit `l'm`;`next_el`];;
st 5 [`parts L r = [r]`];;
st 5 [`(x = LAST r \/ next_el r x = f_list L (e_list x))`];;
st 5 [`[]`;`\/`;`CONS`];;
st 5 [`flatten (a::b)`];;
st 5 [`LAST`;`flatten`];;
st 5 [`flatten`;`cat`];;
st 5 [`LAST`;`cat`];;
st 5 [`uniq`;`cat`];;
st 5 [`cat u v = []`];;
st 5 [`parts`;`cat`];;
st 15 [`LAST`;`cat`];;
st 5 [`sizel`;`cat`];;
st 5 [`all`;`cat`];;
st 15 [`u = parts L r`];;
st 5 [`cat u v = cat a b`];;
st 5 [`indexl`;`cat`];;
st 5 [`indexl`;`LAST`];
st 5 [`flatten x = []`];;
st 5 [`MEM`;`s = []`];;
st 5 [`LAST`;`cat`];;
st 15 [`LAST`;`flatten`];;
st 5 [`LAST (LAST u)`];;
st 5 [`all`;`CONS`];;
st 5 [`next_el u d = next_el r d`];;
st 15 [`uniq`;`map`];;
st 5[`inj_on`;`FST`];;
st 5 [`flatten`;`MAP`];;
st 15[`parts`;`x = []`];;
st 5 [`next_el`;`MAP`];;
st 5 [`inj_on`;`f_list`];;
st 5 [`e_list`;`list_of_darts`];;
st 5 [`LAST`;`MAP`];;
st 15 [`parts`;`[]`];;
st 5 [`next_el`;`MEM`];;
st 5 [`MEM`;`f_list`];;
st 15 [`parts`;`next_el`;`LAST`];;
st 15 [`normal_list`;`uniq`;`[]`];;
st 5 [`list_of_darts`;`normal_list`];;
st 15 [`HD`;`MAP`];;
st 5 [`iso_list`;`sizel`];;
st 5 [`flatten`;`MAP`];;
st 5 [`filter`;`map`];;
st 5 [`sizel`;`map`];;
st 15 [`filter`;`sizel`];;
st 15 [`LENGTH`;`FILTER`];;
st  5 [`filter p []`];;
st 5 [`sizel`;`CONS`];;
st 5 [`all uniq L`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`quotient_list`;`sizel`];;
st 50 [`iso_list`;`final_list`];;
final_list;;
st 5 [`next_el`;`inj_on`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [`inj_on`;omit `MAP`;`SND`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`flatten`;`cat`];;
st 5 [`map`;`cat`];;
st 5 [`set_of_list`;`APPEND`];;
st 5 [`CONS`;`cat`];;
st 5  [`flatten`;`CONS`];;
st 5 [`iso_list`;`normal_list`];;
st 5 [`find_list`;`inj_on`];;
st 5 [`find_list`;`MAP`];;
st 5 [`x = find_list r d`];;
st 5 [`flatten`;`MAP`];;
st 15 [`uniq`;`map`];;
st 5 [`MEM d (find_list r d)`];;
st 5 [`MEM (find_list r d)`];;
st 5 [`list_of_elements`];;
st 5 [`parts`;`flatten`];;
st 5 [`parts`;`FST (HD l)`];;
st 5 [`quotient_list L []`];;
st 5[`list_of_elements`;`CONS`];;
List_hypermap.list_of_elements;;
st  5 [`set_of_list`;`undup`];;
st 5 [`flatten`;`CONS`];;
st 5[`set_of_list`;`cat`];;
st 5 [`MEM`;`undup`];;
st 15 [`LAST`;`e_list`;`parts`];;
st 5 [`list_of_darts`;`normal_list`];;
st 5 [`MEM`;`find_list`];;
st 50 [`e_list`;`LAST`;name "unlast"];;
st 50 [`parts`;`LAST`];;
st 5 [name "xor"];;
st 5 [`next_el u x = next_el p x`;`LAST`];;
st 15 [`LAST`;`parts`;`next_el`];;
st 5 [`quotient_list`;`good_list`];;
st 5 [`find_list`;`iso_list`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 6;;
back_to "COMMENT";;
(* March 27, 2014 *)
st 5 [`final_list`;`iso_list`];;
st 5 [`MAP`;`flatten`];;
st 5 [`filter`;`map`];;
st 5 [`filter f u = filter g u`];;
st 5 [`MAP f X = []`];;
st 5 [`HD`;`MAP`];;
st 20 [`parts`;`MAP`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`LAST (MAP f u)`];;
st 5 [`next_el`;`MAP`];;
st 5 [`inj_on`;`FST`];;
st 5 [`f_list`;`MAP`];;
st 5 [`next_el r POWER i`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`f_list`;`list_of_darts`];;
st 5 [`(?x. P x) \/ (?y. Q y)`];;
bb 5;;
help "install_user_printer";;
st 15 [`uniq (flatten N)`;`normal_list`];;
st 5 [`sizel`;`flatten`];;
st 50 [`sumn`];;
st 5 [`sumn []`];;
st 5 [`all f (u::v)`];;
st 5 [`sumn x <= sumn y`];;
st 5 [`uniq`;`sizel a <= sizel b`];;
st 5 [`flatten`;`normal_list`;`list_of_darts`];;
st 15 [`hypermap_of_list`;`quotient_list`];;
st 5 [`normal_list`;`is_normal`];;
st 5 [`final_quotient_faces`;`hypermap_of_list`];;
st 5 [`quotient`;`quotient_list`];;
face_set;;
st 5 [`face_set`;`hyp_iso`];;
st 50 [`connected_hypermap`];;
st 50 [`number_of_components`];;
st 50 [`set_of_components`];;
st 50 [`set_part_components`];;
st 50 [`comb_component`];;
st 5 [`is_in_component`];;
st 5 [`is_path`];;
st 5 [`go_one_step`];;
flag_list;;
is_contour;;
st 5 [`is_contour`;`is_path`];;
st 0 [`is_path`;`connected_hypermap`];;
st 0 [`is_path`;`comb_component`];;
st 50 [`is_contour`];;
st 50 [`is_path`];;
st 10 [`CARD s = 1`];;
st 5 [`set_of_components`;`FINITE`];;
st 50 [`is_contour`];;
st 5 [`dart`;`hypermap_of_list`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`x = []`;`?`];;
st 5 [`face_map`;`f_list`];;
st 15 [`normal_list`;`node_map`];;
st 5 [`node`;`node_map`;`inverse`];;
st 5 [`x IN node H x`];;
st 5 [`next_el`;`MEM`];;
st 50 [`core_list`];;
st 50 [`final_list`;`parts`];;
st 50 [`quotient_list`];;
st 50 [`final_list`;`rot`];;
st 50 [`rot`;`hypermap_of_list`];;
st 5 [`perm_eq`;`hypermap_of_list`];;
st 5[`next_el`;`rot`];;
st 5[`MEM`;`rot`];;
st 15 [`ALL2`];;
st 5 [`flatten (h::t)`];;
st 15[`perm_eq`;`cat`];;
st 5 [`perm_eq []`];;
st 5[`perm_eq a b = perm_eq b a`];;
st 5 [`perm_eq`;`rot`];;
st 5 [`perm_eq`;`uniq`];;
st 5[`rot n r = []`];;
st 5 [`set_of_list`;`perm_eq`];;
st 5 [`MEM`;`perm_eq`];;
st 5 [`f_last`;`final_list`];;
st 5 [`loop_list`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5[`next_el`;`rot`];;
st 5 [`final_list`;`rot`];;
st 5 [`rot`;`map`];;
st 5 [`rot`;`final_list`];;
st 5[`?r. P ==> Q r`];;
st 5 [`ALL2`;`map`];;
st 5 [`all`;`final_list`;`rot`];;
st 5 [`rot`;`hypermap_of_list`];;
st 15 [`list_of_darts`;`uniq`;`good_list`];;
st 5 [`ALL2`;`quotient_list`];;
st 5 [`MEM (find_face L r) (list_of_faces L)`];;
st 15 [`perm_eq`;`s ==> perm_eq u v`];;
st 5 [`uniq`;`flatten`];;
st 5 [`uniq`;`list_of_faces`];;
st 5 [`list_of_faces`;`list_of_darts`];;
st 5 [`list_pairs`;`[]`];;
st 50 [`list_of_faces`];;
st 15 [`uniq`;`MEM`;`x = y`;`flatten`];;
st 5 [`uniq`;`find_face L x = s`];;
st 5 [`quotient_list L []`];;
st 5 [`hypermap_of_list []`];;
st 5 [`perm_eq`;`hypermap_of_list`];;
st 5 [`quotient_list`;`all`;`final_list`];;
st 5 [`list_of_faces`;`perm_eq`];;
st 5 [`perm_eq`;`map`];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`list_of_faces`;`FST`];;
st 5 [`list_of_faces`;`MAP`];;
st 5 [`list_pairs`;`zip`];;
st 15 [`zip`;`FST`];;
st 15 [`zip`;`MAP`];;
st 50 [`planegraph_relaxed`];;
st 50 [`planegraph`];;
st 50 [`PlaneGraphs`];;
st 50 [def "max";`x:num`];;
st 15 [`x:(num -> bool) -> num`];;
st 15 [`x:(num)list -> num`];;
tyo `maxn`;;
st 15 [`maxn`];;
st 50 [`maxn`];;
st 5 [`(?f. A ==> B f) <=> U`];;
help "new_specification";;
st 15 [`vertices_set2`;omit `Seed`];;
st 5 [`vertices_graph`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5 [`MEM`;`find_face`];;
st 5 [`uniq`;`find_face`];;
st 50 [name "Kbw"];;
st 5 [`marked_list`;`list_of_darts`];;
st 5 [`FST`;`hypermap_of_list`;`node`];;
st 5 [`MEM`;`find_face`;`list_of_darts`];;
st 5 [`x IN node H y`];;
st 50 [`INJ`;`?`];;
st 5 [`inj_on`;`IN`];;
st 5 [`elements_of_list`;`normal_list`];;
st 5 [`list_of_darts`;`marked_list`];;
st 15 [`list_of_darts`;`list_of_elements`];;
st 5 [`MEM`;`find_face`;`list_of_darts`];;
st 15 [`BIJ`;`CARD`];;
st 5 [`INJ f {}`];;
st 5 [`CARD`;name "NUM"];;
st 5 [`CARD`;`iota`];;
st 5 [`CARD`;`set_of_list`];;
st 5  [`INJ`;`inj_on`];;
st 5 [`set_of_list`;`iota`];;
st 5[`MEM`;`iota`];;
st 5[`vertices_set2`;`match_quotient_list`];;
st 5 [`vertices_graph`];;
st 5 [`list_of_darts`;`quotient_list`];;
elements_of_list_quotient_list;;
quotient_list_elements;;
st 15 [`?f:A->B. P`;`x:(A)list`];;
st 5 [`set_of_list`;`MAP`];;
st 5 [`BIJ`;`IMAGE`];;
st 5 [`sizel`;`CARD`];;
st 15 [`MAP`;`uniq`];;
st 15 [`newvertex_v2`];;
st 5 [`uniq`;`filter`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5[`uniq`;`rot`];;
st 5 [`MEM`;`find_face`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`simple_hypermap`;`FST`];;
st 50 [`simple_hypermap`;`hypermap_of_list`];;
st 5 [`find_face`;`list_of_faces`];;
st 5 [`uniq`;`list_of_darts`];;
st 500 [`uniq`;`nth`];;
st 50 [`all uniq L`;`FST`];;
st 5 [`list_of_darts`;`find_face`];;
st 15 [`list_of_darts`;`find_face`];;
st 15 [`find_pair_list`;`find_face`];;
st 15 [`list_pairs`;`FST`];;
st 5 [`find_pair_list L u = find_pair_list L v`];;
st 5 [`find_face L x = find_face L y`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`uniq`;`undup`];;
st 5 [`set_of_list`;`undup`];;
st  5 [`MAP`;`find_face`];;
st 5 [`rotate_to`;`rot`];;
st 10 [`uniq`;`map`];;
st 5  [`indexl`;`MAP`];;
st 5 [`rot`;`map`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`MEM x (find_face L x)`];;
st 5[`inj_on`;`FST`];;
st 5 [`inj_on`;`SUBSET`];;
st 10 [`find_face`;`list_of_darts`];;
st 5 [`filter`;`map`];;
st 5 [`filter f r = filter g r`];;
st 5 [`rot`;`rotate_to`];;
st 15 [`MAP`;`FST`];;
st 5 [`FST`;`list_of_darts`];;
Lp_gen_theory.list_of_dart_pairs_subset;;
st 15 [`SND`;`normal_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`flatten`;`MAP`];;
st 5 [`set_of_list`;`IMAGE`];;
st 5 [`normal_list`;`list_of_darts`];;
st 15 [`final_list`;`map`];;
final_list;;
st 5 [`inj_on`;`final_list`];;
st 5 [`iso_list`;`final_list`];;
st 5 [`filter`;`map`];;
st 15 [`quotient_list`;`MAP`];;
st 15 [`quotient_list`;`iso_list`];;
st 5 [`quotient_list`;`flatten`];;
st 5 [`list_of_elements`;`flatten`];;
st 5 [`SND`;`f_list`];;
st 5 [`MEM`;`next_el`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 4;;
back_to "COMMENT";;
(* April 6, 2014 *)
st 50 [`Seed`;`faces`];;
st 50 [`Seed`];;
st 5 [`filter`;`CONS`];;
st 5 [`set_of_list [x]`];;
st 5 [`{x} SUBSET t`];;
st 50 [`iso_list`;`dih2k_list`];;
st 59 [`dih2k_list`;`quotient_list`];;
inj_on_BIJ;;
st 5 [`FINITE`;`elements_of_list`];;
st 5 [`set_of_list`;`iota`];;
st 5 [`sizel`;`elements_of_list`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`uniq`;`list_of_elements`];;
st 5 [`CARD x <= CARD y`;`SUBSET`];;
st 5 [`CARD`;`sizel`];;
st 5 [`list_of_faces`;`?`];;
st 5 [`good_list_nodes`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`list_of_faces`;`map`];;
st 15 [`find_face`;`list_of_faces`];;
st 5 [`list_of_darts`;`MAP (MAP phi)`];;
st 5 [`list_of_darts`;`flatten`];;
st 5 [`list_pairs`;`(f=[])`];;
st 5 [`find_face (MAP (MAP phi) L)`];;
st 15 [`find_face L x = f`];;
st 5 [`normal_list`;`iso_list`];;
st 5 [`is_restricted`;`CARD`];;
st 5 [`face`;`hypermap_of_list`];;
st 5 [`find_face`;`?`];;
st 5 [`dart`;`hypermap_of_list`];;
st 5 [`list_pairs`;`MAP`];;
st 5 [`final_list`;`iso_list`];;
st 5 [`final_list`];;
st 5 [`quotient_list`;`iso_list`];;
st 5 [`dih2k_list`;`iso_list`];;
st 15 [`dih2k_list`];;
st 5 [`core`;`MAP`];;
st 5 [`core`;`final_list`];;
st 15 [`uniq`;`map`];;
st 5 [`inj_on`;`FST`;`SND`];;
st 15 [`flatten`;`list_of_darts`];;
st 5 [`uniq`;`list_of_faces`];;
FST_o_FST;;
planegraph;;
st 5 [`subdivFaceFinal`];;
st 5 [`subdivFace0_alt`];;
st 5 [`subdivFace0`];;
st 5 [`vos = []`;` \/ `];;
st 15 [`(!a. Q ==> P a) <=> U`];;
st 5 [`indexToVertexList`];;
st 5 [`MAP f x = []`];;
st 5 [`cat [x] y`];;
st 5 [`MEM`;`FILTER`];;
st 15 [`splitFace`];;
st 5 [`faces`;`Graph`];;
st 5 [`splitFace`;`finals`];;
st 5 [`filter`;`CONS`];;
st 5 [`filter`;`replace`];;
st 50 [`replace`];;
st 5 [`filter`;`[]`];;
st 5 [`filter P xs = []`];;
st 8 [`splitFace`];;
st 5 [`split_face`];;
st 5 [`split_face`;`splitFace`];;
st 5 [`minimalFace`];;
st 5 [`faces`;`Graph`];;
st 9 [`replace`];;
st 5 [`sizel (h::t)`];;
st 5 [`subdivFace0_alt`];;
st 15 [`finalGraph`];;
st 15 [`nonFinals`];;
st 15 [`filter P xs = xs`];;
st 15 [`hypermap_of_list`;`quotient_list`];;
st 5 [`list_of_faces`;`quotient_list`];;
st 50 [`final_list`];;
st 15 [`flatten`;`sizel`];;
st 50 [`sumn`];;
st 5 [`sumn`;`CONS`];;
st 5 [`all`;`CONS`];;
st 5 [`sumn []`];;
st 5 [`CONS`;`flatten`];;
st 5 [`map`;`cat`];;
st 5 [`CONS`;`cat`];;
st 5 [`sizel x = 1`;`[x]`];;
st 5 [`uniq`;`normal_list`;`flatten`];;
st 5 [`uniq (flatten N)`;`MEM d r`];;
st 15 [`core`];;
st 15 [`quotient_list`;`list_of_darts`];;
st 15 [`parts L x = []`];;
st 5 [`flatten`;`parts`];;
st 5 [`is_edge_nondegenerate`;`is_restricted`];;
st 5 [`quotient_list L []`];;
st 5 [`all uniq`;`simple_hypermap`];;
st 5 [`list_of_darts`;`iso_list`];;
st 5 [`list_of_darts`;`inj_on`];;
List_hypermap.list_of_darts;;
st 5 [`list_of_darts`;`flatten`];;
List_hypermap.list_of_darts_alt;;
st 5 [`MAP`;`flatten`];;
st 5 [`list_of_faces`;`iso_list`];;
st 5[`list_of_faces`];;
st 5 [`list_pairs`;`iso_list`];;
st 5 [`list_of_darts`;`iso_list`];;
st 5 [`normal_list`;`iso_list`];;
st 15 [`sizel`;`CARD`;`set_of_list`];;
st 5 [`sizel (undup p)`];;
st 5 [`sizel (filter P r)`];;
st 5 [`count`;`sizel`];;
st 5 [`CARD a <= CARD b`;`SUBSET`];;
st 5 [`set_of_list (undup x)`];;
st 5 [`SND`;`finals`];;
st 5 [`map`;`filter`];;
st 15 [`uniq (map f x)`];;
st 5 [`uniq`;`filter`];;
st 5 [`fgraph`;`FST`];;
st 5 [`uniq`;`good_list`];;
st 5 [`good_list`;`quotient_list`];;
st 5 [`good_list`;`iso_list`];;
st 5 [`is_restricted`;`iso_list`];;
st 5 [`good_list_nodes`;`iso_list`];;
st 5 [`list_pairs x = list_pairs y`];;
st 15 [def "max"];;
tyo `MAX`;;
tyo `maxn`;;
st 5 [`MAX`;`maxn`];;
st 5 [`maxn`];;
st 50 [`m:(num -> bool) -> num`;`a:num < b:num`;omit `CARD`;omit `min_num`];;
st 5 [`@n. P = @t. Q`];;
st 5 [`y IN S ==> y <= (m:num)`];;
st 15 [`S y ==> y <= (m:num)`;`?`];;
st 50 [`match_quotient_list`];;
st 5 [`?u. P u /\ u = y`];;
st 5 [`((?x. r) ==> s) <=> f`];;
st 15 [`foldr`];;
st 5 [`good_list`];;
good_list;;
is_restricted;;
st 5 [`is_restricted`;`L = []`];;
st 5 [`Seed`;`match_quotient_list`];;
st 5 [`list_of_faces`;`list_pairs`];;
st 5 [`nonFinals`;`Seed`];;
st 5 [`faces`;`graphl`];;
st 5 [`Seed`;`vertices_set2`];;
st 5 [`planegraphP`;`Seed`];;
st 5 [`x,x`;`RTranCl`];;
st 5 [`sizel`;`list_pairs`];;
st 5 [name "restricted_hypermaps"];;
st 5 [`planegraphP`;`planegraph`];;
st 5 [`planegraphP`];;
planegraph;;
st 5 [`is_restricted`;`all uniq`];;
st 5 [`all uniq`;`quotient_list`];;
st 5 [`fgraph`;`Seed`];;
st 5 [`finalGraph`;`hypermap_of_list`];;
st 5 [`iso`;`iso_list`];;
st 5 [`newvertex_prepped`];;
st 5 [`marked_list`;`loop_choice`];;
st 4 [`minimalFace`];;
finalGraph;;
st 5 [`minimalVertex`];;
st 15 [`minimal_el`];;
st  5 [`nextVertex`;`next_el`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`list_of_darts`;`next_el`];;
st 5 [`u,next_el f u`];;
st 5 [`MEM u (zip a b)`];;
st 5 [`MEM`;`indexl`];;
st 5 [`minn a a `];;
st 5 [`indexl`;`sizel`];;
st 5 [`indexl x s = u`;`uniq`];;
st 5 [`uniq`;`list_pairs`];;
st 5 [`nth`;`zip`];;
st 5 [`EL`;`nth`];;
st 5 [`nth`;`next_el`];;
st 5 [`MEM`;`iota`];;
st 5 [name "INDUCT";name "LIST"];;
st 5 [`sizel`;`rcons`];;
st 5 [`POWER`;`SUC`];;
st 5 [`rcons []`];;
st 5 [`headl`;`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`EL`;`rcons`];;
st 5 [`rcons`;`cat`];;
st 5 [`cat`;`HD`];;
st 5 [`cat (h::t) b`];;
st 5 [`cat`;`EL`];;
st 5 [`cat`;`nth`];;
st 5 [`sizel`;`CONS`];;
st 5 [`nth`;`0`];;
st 5 [`headl`;`HD`];;
st 5 [`EL`;`LAST`];;
st 5 [`cat`;`rcons`];;
st 5[`rcons`;`cat`];;
st 5 [`LAST`;`rcons`];;
st 5 [`LAST`;`cat`];;
st 5 [`BUTLAST`;`TL`];;
st 5 [`BUTLAST`;`APPEND`];;
st 5 [`LAST`;`TL`];;
st 5 [`APPEND`;`TL`];;
st 5 [`APPEND`;`CONS`];;
st 5 [`HD`;`TL`];;
st 5 [`LENGTH`;`TL`];;
st 5 [`LENGTH`;`3`;`EL`];;
st 5 [`BUTLAST x = []`];;
st 15 [def "butlast"];;
st 5 [`butlast`;`BUTLAST`];;
st 5 [`butlast`;`sizel`];;
st 15 [def "TL"];;
st 5 [`sizel`;`TL`];;
st 5 [`butlast`;`rcons`];;
st 5 [`rcons []`];;
st 5 [`sizel`;`TL`];;
st 5 [`EL`;`BUTLAST`];;
st 5 [`(a /\ (!x. P x)) <=> R`];;
st 5 [`LAST`;`TL`];;
st 5 [`LAST`;`EL`];;
st 5 [`EL`;`TL`];;
st 5 [`(f:num->num) i <= f (k:num)`];;
st 5 [`EL`;`iota`];;
st 5 [`EL`;`LAST`];;
st 15 [`enumerator`];;
st 15 [`indexToVertexList`];;
st 5 [`x:(A)option -> bool`];;
st 5 [`containsUnacceptableEdge`];;
st 15 [`enum_of_VertexList`];;
st 50 [`nextVertices`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`(x,next_el f x)`];;
st 5 [`list_of_darts`;`list_pairs`];;
st 5 [`list_of_darts`;`list_of_elements`];;
st 5 [`MEM`;`list_pairs`];;
st 20 [`next_el`;`list_pairs`];;
st 20 [`duplicateEdge`];;
st 20 [`directedLength`];;
st 5 [`betwn f a b = []`];;
st 5 [`betwn`;`indexf`];;
st 5 [`next_el`;`indexf`];;
st 5 [`indexf`;`0`];;
st 15 [`sizel`;`CARD`;`m = n:num`];;
st 5 [`sizel (undup s)`];;
st 15 [`CARD`;`~(a=b)`];;
st 5 [`list_of_elements`;`flatten`];;
st 50 [`duplicateEdge`];;
st 50 [`containsUnacceptableEdge`];;
st 5 [`containsUnacceptableEdgeSnd`];;
st 5 [`containsDuplicateEdge`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "COMMENT";;
(* April 11, 2014 *)
st 5 [`containsUnacceptableEdge`];;
st 10 [`indexToVertexList`];;
st 10 [`enumerator`];;
st 5 [`enum_of_VertexList`];;
st 5 [`SOME`;`NONE`];;
st 5 [`the`;`SOME`];;
st 5 [`indexf v v`];;
st 5 [`isSome NONE`];;
st 5 [`isSome (SOME v)`];;
st 5[`~(t=[])`;`?`];;
st 5 [`NONE`;`isSome`];;
st 5 [`(a ==> (!x. P x)) <=> Q`];;
st 5 [`EL`;`MAP`];;
st 5 [`sizel`;`showDups0`];;
st 50 [`enum_of_VertexList`;`indexf`];;
generatePolygon;;
st 5 [`EL`;`showDups0`];;
st 5 [`?j. i = SUC j`];;
st 5 [`if p then a else a`];;
st 5 [`LAST`;`EL`];;
st 15 [`enum_of_VertexList`];;
st 0 [`LAST`;`FILTER`];;
st 5 [`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`filter`;`rcons`];;
st 5 [`~(x = [])`;`MEM`];;
st 50 [`showDups0`];;
List.length (search [`x:A`]);;
st 5 [`import_tame_classification`];;
st 5 [`isSome`;`NONE`];;
st 5 [`EL`;`MAP`];;
st 5 [`sizel`;`showDups0`];;
st 5 [`LAST`;`filter`];;
st 5 [`(P ==> (!x. Q x)) <=> R`];;
st 5 [`nth`;`filter`];;
st 5 [`MEM`;`EL`];;
st 5 [`LAST`;`EL`];;
Seq.size_map;;
st 5 [`indexToVertexList`;`enum_of_VertexList`];;
st 50 [`containsDuplicateEdge`];;
st 50 [`duplicateEdge`];;
st 5 [`containsUnacceptableEdge`];;
st 5 [`next_el`;`nextVertices`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types Lp_gen_theory.list_of_dart_pairs_subset;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "COMMENT";;
(* April 24, 2014 *)
st 5 [`EL`;`enum_of_VertexList`];;
st 5 [`sizel`;`enum_of_VertexList`];;
st 5 [`nextVertex`;`next_el`];;
st 15 [`nextVertices`];;
st 5 [`uniq (h::t)`];;
st 5 [`isSome`;`NONE`];;
st 5 [`SOME (the h)`];;
st 5 [`sizel`;`showDups0`];;
st 5 [`enumerator`;`enum_of_VertexList`];;
st 5 [`all`;`MEM`;`filter`];;
st 5 [`LENGTH`;`indexToVertexList`];;
st 50 [`hideDupsRec`];;
st 5 [`sizel`;`enum_of_VertexList`];;
st 5 [`EL`;`enum_of_VertexList`];;
st 5 [`EL`;`indexToVertexList`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`indexf`;`LAST`];;
st 5 [`EL`;`LAST`];;
st 5 [`indexf`;`EL`];;
st 5 [`indexf`;`next_el`];;
st 5 [`next_el`;`prev_el`];;
st 5 [`MEM`;`prev_el`];;
st 15 [`unadj`];;
st 5 [`sizel [h]`];;
st 5 [`the x = the y`];;
st  5 [`1 < sizel x`];;
st 5 [`MEM`;`EL`];;
st 5 [`filter`;`FILTER`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types iso_list_trans;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "COMMENT";;
(* April 25, 2014 *)
st 15  [def "rotate"];;
st 5 [`map`;`filter`];;
st 5 [`filter f x = x`];;
st 5 [`LENGTH`;`rotate_to`];;
st 5 [`rotate_to`;`rot`];;
st 15 [`rotate_to`];;
st 5 [`headl`;`rot`];;
st 5 [`prev_el`;`rot`];;
st 5 [`prev_el`;`HD`];;
st 5 [`LAST`;`last`];;
st 5 [`indexf`;`rot`];;
st 5 [`MEM`;`rot`];;
st 5 [`MEM (EL i x) x`];;
st 5 [`indexl`;`sizel`];;
st 5 [`indexf`;`HD`];;
st 5 [`indexl`;`EL`];;
st 5 [`list_pairs`;`rot`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`next_el`;`nth`];;
st 5 [`indexl`;`EL`];;
st 5 [`nth`;`EL`];;
st 5 [`subdivFaceFinal`];;
st 5 [`MEM`;`rotate_to`];;
st 5 [`MAP f x = []`];;
st 5 [`(x = [])`;`MEM`];;
st 15 [`dropl`];;
st 5 [`TL`;`tail`];;
st 5 [`dropl`;`SUC`];;
st 5 [`dropl i (dropl j n)`];;
st 5 [`dropl i x = []`];;
st 5 [`map`;`dropl`];;
st 5 [`headl`;`dropl`];;
mem_rotate_to;;
GSYM mem_rotate_to2;;
size_rotate_to;;
st 5 [`isSome`;`NONE`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`EL`;`dropl`];;
st 5 [`next_el`;`rot`];;
st 5 [`subdivFace0_alt`];;
st 5 [`subdivFaceFinal`;`subdivFace`];;
st 5 [`subdivFace`;`generatePolygon`];;
st 5 [`flag_list`;`s_flag_list`];;
st 15 [`nonFinals`];;
st 5 [`find_list N d = r`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`list_pairs`;`list_of_darts`];;
st 5 [`flatten`;`parts`];;
st 5 [`next_el`;`f_list`;`LAST`];;
st 15 [`planegraphP`];;
st 10 [`planegraphP`;`generatePolygon`];;
st 10 [`RTranCl`];;
st 50 [`RTC`];;
st 10 [`nonFinals`];;
st 5 [`makeFaceFinal`;`generatePolygon`];;
st 5 [`MEM`;`iota`];;
st 15 [`makeFaceFinal`];;
st 15 [`faceListAt`];;
st 5 [`faces`;`Graph`];;
st 15 [`faceListAt`];;
st 15 [`vertices_set2`];;
vertices_graph;;
countVertices;;
st 50 [`replace`];;
st 5 [`filter`;`[]`];;
st 5 [`FST`;`setFinal`];;
st 50 [`planegraph`];;
st 50 [`faceListAt`;`countVertices`];;
st 5 [`planegraphP`];;
st 5 [`countVertices`;`Graph`];;
st 15 [`REPLICATE`];;
st 50  [`generatePolygon`];;
st 50 [`subdivFace`];;
st 50 [`replacefacesAt`];;
st 50 [`list_update`];;
st 5 [`vertices_set2`;`countVertices`];;
st 10 [`minimalFace`];;
st 5 [`FST`;`fgraph`];;
st 15 [`MEM`;`minimalVertex`];;
normal_list;;
marked_list;;
is_restricted;;
loop_list;;
st 5 [`quotient_list`;`3`];;
loop_choice;;
st 50 [`final_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`all uniq`;`simple_list`];;
st 5 [`find_face`;`list_of_faces`];;
st 5 [`MEM`;`is_restricted`;`sizel`];;
st 5 [`list_of_faces`];;
st 5 [`list_pairs`;`sizel`];;
st 50 [`maxn`];;
st 5 [`minimalFace`;`loop_choice`];;
st 5 [`planegraph_relaxed`];;
st 5 [`planegraph`;`planegraphP`];;
loop_choice;;  
st 50 [`quotient_list`;`rot`];;
st 50 [`quotient_list`;`final_list`];;
st 50 [`final_list`;omit `~final_list L r`;omit `all (final_list L)`];;
st 5 [`normal_list`;`list_of_darts`];;
st 5 [`core`;`quotient_list`];;
st 50 [`core`];;
st 50 [`good_list`;`quotient_list`];;
good_list;;
st 5 [`rot`;`map`];;
st 5 [`FST`;`find_face`];;
st 5 [`FST`;`list_of_faces`];;
st 5 [`find_face`;`list_of_faces`];;
normal_list;;
st 15 [`uniq (flatten N)`;`MEM x r`;`r = r'`];;
st 50 [`core`];;
st 50 [`FST`;`parts`];;
st 5 [`next_el`;`list_pairs`];;
st 5 [`list_pairs`;`list_of_faces`];;
st 5 [`sizel`;`list_pairs`];;
st 5 [`foldr`;`maxn`];;
st 5 [`vertices_set2`;`makeFaceFinal`];;
st 5 [`finals`;`makeFaceFinal`];;
st 5 [`faces`;`fgraph`];;
st 5 [`minimalFace`];;
st 5 [`makeFaceFinal`;`faces`];;
st 15 [`replace`;`setFinal`];;
st 5 [`SND`;`setFinal`];;
st 5 [`filter f [x]`];;
st 5 [`FST`;`setFinal`];;
st 5 [`list_pairs`;`list_of_faces`];;
st 5 [`list_pairs`;`FST`];;
st 5 [`rot`;name "sym"];;
st  5 [`list_pairs`;`rot`];;
st 10 [`iso_list`;`sizel`];;
st 5 [`iso_list a b <=> c`];;
iso_list_trans;;
iso_list_sym_nil;;
iso_list_snd;;
st 5 [`iso_list L L`];;
st 15 [`fgraph`;`Seed`];;
st 5 [`MEM`;`rev`];;
st 5 [`flag_list`;`Seed`];;
st 5 [`faces`;`Seed`];;
st 5 [`final_list`;`flag_list`];;
st 15 [`final_list`;`final_dart_list`];;
st 15 [`all (final_list L)`];;
st 5 [`filter f x = x`];;
st 5 [`connected_hypermap`;`contour_list`];;
connected_hypermap;;
st 50 [`connected_hypermap`;`hypermap_of_list`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types iso_list_trans;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 5;;
back_to "COMMENT";;
(* May 2, 2014 *)
st 50 [`contour_list`];;
st 5 [`cat a b = []`];;
st 5 [`HD`;`cat`];;
st 5 [`TL`;`cat`];;
st 5 [`cat`;`rcons`];;
st 5 [`LAST`;`rcons`];;
st 5 [`TL s' = []`];;
st 5 [`HD`;`TL`;`CONS`];;
st 5 [`LAST [v]`];;
st 5 [`LAST`;`TL`];;
st 5 [`MEM`;`TL`];;
st 5 [`EL`;`APPEND`];;
st 5 [`EL`;`LAST`];;
st 5 [`sizel`;`TL`];;
st 5 [`final_dart_list`;`final_list`];;
st 5 [`f_list`;`next_el`;`POWER`];;
st 5 [`indexf`;`next_el`;`POWER`];;
st 5 [`indexf a b c = 0`];;
st 5 [`indexf`;`next_el`];;
st 5 [`final_list`;`f_list`];;
st 5 [`MEM`;`next_el`];;
st 15 [`MEM`;`next_el`;`POWER`];;
st 50 [name "INDUCT";`i:num`];;
st 5 [`(P ==> (!i. Q i)) <=> R`];;
st 5 [name "size";name "induc"];;
st 5 [`POWER`;`f ((f POWER k) i)`];;
st 5 [`next_el`;`indexf`];;
st 5 [`indexf`;`sizel`];;
st 15 [`final_list`;`quotient_list`;omit `all (final_list L)`];;
st 5 [`final_list`;`core`];;
st 50 [`e_list`;`parts`];;
st 5 [`e_list_ext`;`edge_map`];;
st 50 [`SND`;`Seed`];;
st 5 [`find_face`;`list_pairs`];;
st 5 [`find_pair_list`];;
st 15 [`list_of_darts`;`quotient_list`];;
st 15 [`parts`;`final_list`];;
st 5 [`sizel xs = 2`;`CONS`];;
st 5 [`sizel`;`TL`];;
st 100 [`Seed`];;
dih2k_list;;
st 15 [`final_list`;omit `all (final_list L)`];;
st 5 [`list_pairs`;`iota`];;
st 5 [`find_list L x = y`];;
st 16 [`uniq`;`MEM x r /\ U`;`f ==> (a = b)`;`flatten`];;
st 15 [`core`];;
st 15 [`parts`;`MEM`;`LAST`];;
st 15 [`quotient_list`;`LAST`];;
st 5 [`flatten`;`parts`];;
st 5 [`MEM`;`MAP LAST`];;
st 5 [`~(t = [])`;`MEM`];;
st 5 [`list_pairs`;`rev`];;
st 5 [`list_pairs`;`core`];;
st 5 [`all (final_list L)`;`quotient_list`];;
st 5 [`all (final_list L)`;`final_dart_list`];;
st 5 [`list_of_darts`;`contour_list`];;
st 5 [`dart`;`darts_of_list`];;
contour_list_connected_refl;;
st 5 [`face_map`;`hypermap_of_list`];;
st 5 [`node_map`;`hypermap_of_list`];;
st 5 [`list_of_darts`;`f_list`];;
st 5 [`list_of_darts`;`e_list`];;
st 5 [`iso_list`;`is_restricted`];;
st 5 [`iso_list`;name "sym"];;
st 5 [`iso_list`;`good_list`];;
st 5 [`all uniq`;`simple_hypermap`];;
st 5 [`marked_list`;`iso_list`];;
st 5 [`final_list`;`iso_list`];;
st 5 [`iso_list`;`CONS`];;
st 5 [`iso_list`;`loop_choice`];;
st 50 [`minimalFace`];;
st 5 [`nextVertex`;`next_el`];;
st 5 [`minimalVertex`;`minimalFace`];;
st 5 [`MEM `;`minimal_el`];;
st 5 [`is_restricted`;`all uniq`];;
st 50 [`marked_list`;`quotient_list`];;
st 5 [`list_of_darts`;`quotient_list`];;
st 5 [`marked_list`;];;
st 15 [`next_el`;`f_list`;`parts`];;
st 5 [`next_el p x = next_el r x`;`parts`];;
st 5 [`f_list L x = f_list L (e_list x)`];;
st 5 [`list_of_darts`;`marked_list`];;
st 5 [`quotient_list`;`isop_list`];;
st 5 [`isop_list`;`iso_list`];;
st 5 [`MAP`;`inj_on`;`FST`;`SND`];;
st 5 [`MAP f x = x`];;
st 5 [`map f x = map g x`];;
st 5 [`MAP f x = MAP g x`];;
st 5 [`finals`;`generatePolygon`];;
st 5 [`planegraphP`;`next_plane`];;
st  5 [`next_plane`;`generatePolygon`];;
st 5 [name "AQIU"];;
st 5 [`final_list`;`rtrans`];;
st 15 [`subdivFace`];;
st 15 [def "subdivFace"];;
st 5 [`subdivFaceFinal`];;
st 5 [`subdivFaceFinal2`];;
st 15 [`triple_data`];;
st 15 [`subdivFace0_alt`];;
st 5 [`all`;`~`];;
st 5 [`isSome`;`NONE`];;
st 50 [`splitFace`];;
st 50 [`split_face`];;
st 50 [`split_normal_list`];;
st 50 [`transform_list`];;
st 50 [`ntrans`];;
st 5 [`core L f`;`MAP FST`];;
st 5 [`is_edge_nondegenerate`;`is_restricted`];;
st 5 [`MEM`;`l'y`];;
st 5 [`list_of_darts`;`marked_list`];;
st 15 [`list_of_darts`;`find_face`];;
st 5 [`uniq`;`list_of_faces`];;
st 5 [`final_list`;`list_of_faces`];;
st 5 [`list_of_darts`;`flatten`];;
st 6 [`final_list`;`rtrans`];;
st 50 [`transform_list`];;
st 50 [`betwn`;`rtrans`];;
st 50 [`iota`;`cat`];;
st 50 [`cat a b = cat c d`;`sizel`];;
st 14 [`cat`;`sizel`];;
st 15 [`flatten`;`ntrans`];;
st 15 [`rtrans`;`flatten`];;
st 5 [def "facesAt"];;
st 5 [def "faceListAt"];;
st 50 [`facesAt`];;
st 50 [`facesAt`;omit `FILTER (\f. MEM v (FST f))`];;
st 50 [`good_graph`];;
st 50 [def "permutes"];;
st 50 [def "perm_eq"];;
st 5 [`perm_eq`;`sizel`];;
st 5 [`perm_eq`;`filter`];;
st 5 [`perm_eq a b <=> perm_eq b a`];;
st 5 [`perm_eq`;`sumn`];;
st 5 [`perm_eq`;`map`];;
st 50 [`perm_eq`];;
st 50 [`perm_eq`;`rot`];;
st 50 [`rot`;`sumn`];;
st 50 [`cat`;`sumn`];;
st 50 [`rot`;`cat`];;
st 15 [`cat`;`take`;`dropl`];;
st 5 [`perm_eq []`];;
st 5 [`perm_eq`;`MEM`];;
st 5 [`MEM`;`rot`];;
st  5[`rot`;name "sym"];;
st 5 [`sumn (a::b)`];;
st 5 [`perm_eq`;`rot`];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`perm_eq (h::t)`];;
st 5 [`perm_eq`;`map`];;
good_facesAt_seed;;
st 5 [`a = b:(B)list`;`perm_eq a b`];;
st 5 [`perm_eq s s`];;
faceListAt_makeFaceFinal;;
faces_makeFaceFinal;;
mem_fst_setFinal;;
replace;;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* May 15, 2014 *)
st 5 [`cat (h::t)`];;
st 5 [`replace`;`cat`];;
st 5 [`replace`;`rot`];;
st 5 [`MEM`;`indexl`];;
st 5 [`indexl`;`cat`];;
st 15 [`replace`;`MEM`];;
st 50 [`MEM`;`HD`];;
st 5 [`cat`;`take`;`dropl`];;
st 5 [`sizel`;`MEM`];;
st 5 [`sizel`;`dropl`];;
st 5 [`sizel`;`take`];;
st 15 [`indexl a b = 0`];;
st 5 [`perm_eq`;`cat`];;
st 5 [`HD`;`cat`];;
st 5 [`replace`;`cat`];;
st 5 [`cat a b = []`];;
st 5 [`APPEND`;`TL`];;
st 5 [`cat(cat a b) c`];;
st 0 [`perm_eq a b /\ perm_eq b c`];;
st 5 [`perm_eq`;name "tra"];;
st 5 [`perm_eq`;name "sym"];;
st 5 [`perm_eq []`];;
st 5 [`perm_eq`;`cat`];;
st 5 [`perm_eq (h::t)`];;
st 5 [`HD`;`TL`;`CONS`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`ntrans`;`normal_list`];;
st 5 [`ntrans`;`FST`];;
st 5 [`transform_list L x (N, r) = (N,r)`];;
st 5 [`CARD`;`a..n`];;
st 50 [`betwn`;`APPEND`];;
st 50 [`betwn`;omit `parts`];;
st 50 [`transform_list`];;
st 50 [`split_normal_list`];;
st 100 [`rtrans`];;
st 5 [`cat (cat a b)`];;
st 5 [`next_el r (prev_el r z)`];;
st 5 [`MEM`;`l'z`];;
st 5 [`find_face`;`l'y`];;
st 15 [`find_face L x = y`];;
st 15 [`uniq (list_of_darts L)`;`good_list`];;
st 5 [`MEM (ztrans L N r x i) u`];;
st 5 [`MEM (l'z L N r x) u`];;
st  5[`l'y`;`ytrans`];;
st 50 [`MEM`;`betwn`];;
st 5 [`filter P xs = []`];;
st 5 [`filter P xs = xs`];;
st 50 [`~final_list L r`;`betwn`];;
st 5 [`sizel`;`take`];;
st 5 [`take`;`dropl`;`cat`];;
st 15 [`cat a b = cat c d `];;
st 5 [`betwn`;`rotate_to`];;
st 5 [`betwn`;`rot1`];;
st 15 [`~MEM x z`;`betwn`];;
st 5 [`betwn`;`take`;`dropl`];;
st 5 [`rot 1`];;
st 10 [`rotate1`];;
st 5 [`cat`;`rcons`];;
st 5 [`MEM`;`~(s = [])`];;
st 15 [`indexl`;`rot`];;
st 5 [`indexl`;`rcons`];;
st 5 [`betwn s x x `];;
st 5 [`indexf`;`betwn`];;
st 15 [`uniq`;`MEM`;`indexl`;`u ==> (a = b:(B)list)`];;
st 50 [`perm_eq`;`nth`];;
st 50 [`(set_of_list u = set_of_list v)`;`uniq`];;
st 50 [`nth`;`u ==> (a = b:(B)list)`];;
st 5 [`sizel`;`betwn`];;
st 5 [`indexf`;`rot`];;
st 5 [`indexl`;`nth`];;
st 5 [`uniq (betwn s x y)`];;
st 15 [`MEM`;`betwn`;`indexf`];;
st 5 [`indexf`;`rot`];;
st 5 [`MEM`;`indexl`];;
st 5 [`indexl`;`nth`];;
st 5 [`MEM z (betwn s a b)`];;
st 5 [`indexl`;`betwn`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`uniq (find_face L x)`];;
st 5 [`l'y`;`find_face`];;
st 5 [`MEM x (find_face L x)`];;
st 5 [`list_of_darts`;`marked_list`];;
st 5 [`indexl`;`sizel`];;
st  5 [`~final_list L r`;`l'y`;`l'z`];;
st 5 [`indexf`;`ytrans`;`ztrans`];;
st 5 [`indexf x w fx = 1`];;
st 5 [`MEM x (find_face L x)`];;
st 5 [`MEM`;`next_el`];;
st 5 [`MEM (find_face L x)`];;
st 5 [`uniq (find_face L x)`];;
st 50 [`is_restricted`;`3`];;
st 5 [`indexf a b c + indexf b d c`];;
st 5 [`MEM (l'z L N r x)`;`find_face`];;
st 5 [`indexf x y f = 0`];;
st 5 [`rot`;name "sym"];;
st 5 [`rotate_to`;`rot`];;
st 5 [`rot`;`indexf`];;
st 15 [`rot`;`sizel`];;
st 5 [`indexf`;`indexl`];;
st 5 [`HD`;`rotate_to`];;
st 5 [`l'z`;`~(x = y)`];;
st 5 [`rotate_to f x = y`];;
st 15 [`indexl`;`next_el`];;
st 5 [`rot a (rot b c)`];;
st 5[`indexl`;`sizel`];;
st 5 [`rot (sizel f)`];;
st 5 [`rot 0`];;
st 5 [`rotate1`;`rcons`];;
st 5 [`rotate_to f x = []`];;
st 5 [`rot n f = []`];;
st 5[`CONS`;`HD`;`TL`];;
st 5 [`marked_list`;`find_face`];;
st 5 [`betwn`;`indexl`];;
st 15 [`take`;`dropl`];;
st 5 [`rotate_to`;`rot`];;
st 5 [`take a (take b c)`];;
st 5 [`filter P x = []`];;
st 15 [`MEM x (take a b)`];;
st 5 [`MEM`;`indexl`];;
st 50 [`ytrans`;`MEM`;omit `MEM d (rtrans L N r x i)`];;
st 50 [`l'y`;`l'm`];;
st 50 [`l'm`;name "rep"];;
st 5 [`next_el`;`marked_list`];;
st 5 [`l'm`;`l'y`];;
st 10 [`next_el`;`f_list L`];;
st 5 [`indexl`;`next_el`;`POWER`];;
st 5 [`next_el`;`rot`];;
st 5 [`next_el`;`rotate_to`];;
st 5 [`indexl`;`rotate_to`];;
st 15 [`indexl x w = 0`];;
st 5 [`HD`;`rotate_to`];;
st 5 [`rot n f = []`];;
st 15 [`marked_list`;`find_face`];;
st 5 [`MEM x (find_face L x)`];;
st 5 [`list_of_darts`;`find_face`];;
st 50 [`l'm`;`sizel`];;
st 50 [`l'm`;`LENGTH`];;
st 50 [`hyp'm`;`CARD`];;
st 50 [`is_split_condition`;`marked_list`];;
st 50 [`face (hypermap_of_list L) x`];;
st 5 [`indexl`;`nth`];;
st 5 [`indexl a f = indexl b f`];;
st 5 [`MEM`;`f_list`;`POWER`];;
st 5 [`MEM`;`next_el`;`POWER`];;
st 5 [`marked_list`;`MEM`];;
st 5 [`MEM`;`indexl`];;
st 5 [`filter P x = []`];;
st 5 [`MEM`;`take`;`indexl`];;
st 5 [`cat`;`rtrans`];;
st 18 [`MEM d (rtrans L N r x i)`];;
st 5 [`ytrans L N r x 0`];;
st 5 [`indexf`;`rotate_to`];;
st 5 [`indexf`;`rot`];;
st 5 [`rot n s = s`];;
st 5 [`indexl`;`indexf`];;
st 5 [`HD`;`rotate_to`];;
st 5 [`next_el`;`POWER`;`indexf`];;
st 5 [`MEM`;`indexl`];;
st 5 [`filter P x = filter Q x`];;
st 15 [`MEM`;`dropl`;`indexl`];;
st 5 [`MEM`;`dropl`];;

st 18 [`MEM d (rtrans L N r x i)`];;
st 50 [`MEM d r`;`marked_list`;`indexf a b c = indexf a b d`];;
st 50 [`MEM d r`;`marked_list`;`indexl`];;
st 50 [`marked_list`;`indexf a1 a2 c <= indexf a1 b2 e`];;
st 5 [`rtrans`;`cat`];;
st 5 [`rtrans`;`FST`];;
st 5 [`sizel`;`undup`;`CARD`];;
st 5 [`set_of_list`;`undup`];;
st 5 [`sizel`;`CARD`];;
st 5 [`CARD`;`a..b`];;
st 15 [`MEM`;`marked_list`];;
st 5 [`take`;`cat`];;
st 5 [`take`;`iota`];;
st 5 [`cat`;`iota`];;
st 5 [`set_of_list`;`iota`];;
st 5 [`set_of_list []`];;
st 5 [`MEM x (rtrans L N r x i)`];;
st 5 [`CARD A + CARD B`;`UNION`];;
st 5 [`sizel []`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`normal_list`;`ntrans`];;
st 5 [`set_of_list (iota a b)`];;
st 5 [`CARD x = 0`];;
st 5 [`set_of_list x = {}`];;
st 5 [`normal_list`;`flatten N = []`];;
st 5 [`flatten N = []`];;
st  5 [`MEM x r`;`x =[]`];;

print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `iso_list`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* May 17, 2014 *)
st 5 [`elements_of_list`;`quotient_list`];;
st 15 [`vertices_set2`;`countVertices`];;
st 5[`undup x = []`];;
st 5 [`countVertices`;`splitFace`];;
st 5 [`countVertices`;`Graph`];;
st 5 [`perm_eq`;`sizel`;`uniq`];;
st 5 [`elements_of_list`;`quotient_list`];;
st 5 [`CARD`;`set_of_list`];;
st 5 [`undup (undup s)`];;
st 5 [`undup s = s`];;
st 5 [`uniq`;`undup`];;
st 15 [`marked_list`;`ntrans`];;
splitFace_countVertices;;
st 5 [`betwn`;`filter`];;
st 50 [`split_face`];;
st 50 [`splitFace`];;
st 50 [`split_face`];;
st 5 [`fgraph`;`Graph`];;
st 5 [`replace`;`ntrans`];;
st 5 [`map`;`CONS`];;
st 5 [`FST`;`Face`];;
st 5 [`faces`;`fgraph`];;
st 5 [`MAP`;`APPEND`];;
st 30 [`quotient_list`;`uniq`];;
st 30 [`good_list`;`uniq`];;
good_list;;
st 5 [`good_list`;`quotient_list`];;
st 5 [`all uniq L`;`is_restricted`];;
st 15 [`uniq`;` x ==> (u = v)`;`MEM`;`MAP`];;
splitFace;;
st 5 [`uniq`;`filter`];;
st 5 [`map`;`uniq`];;
st 15 [`uniq (quotient_list L N)`];;
st 15 [`good_list`;`uniq`];;
st 5 [`perm_eq`;`uniq`;name "uniq";name "perm_eq"];;
st 5 [`faceListAt`];;
st 5 [`Graph`];;
st 5 [`MEM (EL v r) r`];;
facesAtList;;
facesAt;;
faceListAt;;
st 5 [`sizel`;`faceListAt`];;
st 5 [`vertices_set2`;`countVertices`];;

(* HLT Haong Le Truong on r_rtrans_eq *)
Hojodcm.indexf_in_rtrans_suc_not_rtrans_new1_v0;;
Aq1.betwn_not_in_rtrans;;


print_proof();;
Print_types.print_goal_types();;
Print_types.print_thm_types   AQIUNPP1;;
Print_types.print_thm_types ;;
Print_types.print_term_types `domain6`;;
frees (concl Local_lemmas.EGHNAVX);;
bb 3;;
back_to "Pwssr";;
(* May 20, 2014 *)
st 5 [name "filter_nil"];;
st 5 [name "hd_rotate_to"];;
st 5 [name "size_rotate_to"];;
st 5 [name "vertices_set2_countV"];;
st 5 [`flag_list`;`s_flag_list`];;
st 5 [`main_nonlinear_terminal_v11 = u`];;
st 5 [`!L N r x.
    transform_assumption_v2 L /\
    good_list L /\
    good_list_nodes L /\
    marked_list L N r x /\
    find_face L x = f /\
    transform_count L N r x = t
    ==> sizel (rtrans L N r x t) = sizel f`];;
st 5 [`final_list L r`;`all`;`f_list`;`POWER`;`next_el`];;
       ==> all (\d. (f_list L POWER i) d = (next_el r POWER i) d)`];;
st 5 [def "enclosed"];;
st 5 [def "abc_of_quadratic"];;
st 5 [def "muR"];;
st 5 [def "cayleyR"];;
st 1 [`taum`;`taud`];;
st 3 [`taud_x`;`mu6_x`];;
st 5 [`mu6_x`];;
st 5 [`mu_y`];;
Nonlin_def.mu_y;;
st 5 [def "taud"];;
st 5 [`taud`;`mu_y`];;
st 15 [`enclosed`;omit `ineq`;omit `FAN`];;
st 5 [def "muR"];;
st 5 [`cayleyR`;`delta_x`];;
st 5 [`cayleyR`;`delta`];;
st 5 [`cayleyR`;`ups_x`];;

st 15 [`quad_cross_diag2_x`;omit `ineq`;omit `FAN`];;
st 5 [def "quad_cross_diag2_x"];;
st 5 [`quad_cross_diag2_x`;`enclosed`];;
st 5 [`sqrt x * sqrt x = x`];;
st 50 [`quadratic_root_plus`;omit `ineq`];;
st 5 [`taud`;`taum`];;
st 5 [def "tauq"];;
st 5 [`tauq`;`taum`;omit `ineq`];;
st 5 [`const`;`sol0`;`pi`];;
st 0 [`ineqm s t (a ==> b)`];;
st 5 [`ineqm`;`ineq`];;
