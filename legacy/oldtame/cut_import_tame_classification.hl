(* cut on Jan 21, 2014 *)

(* tame_archive is defined in ../../tame_archive/tame_archive.hl *)

let tame_archive = 
  let _ = Tame_archive.arc3() in (* XX do arc4...arc6() *)
  let _ = new_definition (mk_eq (`archive3:((num list)list)list`, !Tame_archive.tmref3)) in
  let _ = new_definition (mk_eq (`archive4:((num list)list)list`, !Tame_archive.tmref4)) in
  let _ = new_definition (mk_eq (`archive5:((num list)list)list`, !Tame_archive.tmref5)) in
  let _ = new_definition (mk_eq (`archive6:((num list)list)list`, !Tame_archive.tmref6)) in
  new_definition `tame_archive = 
   APPEND archive3 (APPEND archive4 (APPEND archive5 archive6))`;;

let archive3 = new_definition (mk_eq (`archive3:((num list)list)list`, !Tame_archive.tmref3));;

let mem3 = prove_by_refinement(
  `!x. MEM x archive3 ==> MEM x tame_archive`,
  (* {{{ proof *)
  [
  REWRITE_TAC[tame_archive;MEM_APPEND];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let mem4 = prove_by_refinement(
  `!x. MEM x archive4 ==> MEM x tame_archive`,
  (* {{{ proof *)
  [
  REWRITE_TAC[tame_archive;MEM_APPEND];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let mem5 = prove_by_refinement(
  `!x. MEM x archive5 ==> MEM x tame_archive`,
  (* {{{ proof *)
  [
  REWRITE_TAC[tame_archive;MEM_APPEND];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)

let mem6 = prove_by_refinement(
  `!x. MEM x archive6 ==> MEM x tame_archive`,
  (* {{{ proof *)
  [
  REWRITE_TAC[tame_archive;MEM_APPEND];
  BY(MESON_TAC[])
  ]);;
  (* }}} *)


let archive_ALT = prove_by_refinement(
  `archive = set_of_list (archive3 #@# archive4 #@# archive5 #@# archive6)`,
  (* {{{ proof *)
  [
    BY(REWRITE_TAC[archive;tame_archive])
  ]);;
  (* }}} *)

