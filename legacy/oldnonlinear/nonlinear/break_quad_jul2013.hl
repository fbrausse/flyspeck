(* ************************************************************************** *)
(* July 2013.
   T. Hales
   Notes on breaking up the quadrilateral inequalities in ineq.hl into pieces of at most
   6 variables.
*)
(* ************************************************************************** *)


(* ************************************************************************** *)
(* INEQ "3862621143 revised" *)
(* ************************************************************************** *)

(*
This inequality is not quite in final form. The inequalities are still too slow.
*)

(* If dih < 2.15 then Main-inequality d(4) implies the result. WLOG dih > 2.15. *)

(*
One way to break up quad 386..revised appears in the following inequalities.
Another approach:
Change num1 lower bound from 2.38 to 2.9/h0.  Then both back edges can
be deformed to 2.  Even the front edges can be deformed to 2, by obtuseness of front angle
and the sign of dih in the inequality.  So all top edges=2.  
This is contrary to the diagonal constraints in 386...revised.
*)

skip
  {
    idv="test dih";
    doc = "The denominator should be cleared, upper bound increased to &4*h0, delta_y bound made 0";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2,y4,&2 * h0);
	 (#3.9,y5,#4.2);
	 (&2,y6,&2 * h0)]
      (
       dih_y y1 y2 y3 y4 y5 y6 < #2.15 / &2 \/
       delta_y y1 y2 y3 y4 y5 y6 < #0.1)`;
  };;



(* an ineq in main_estimate_ineq.hl, gives that both sides are acute. when cross_diag > 3.01 *)



run2
  {
    idv="2609963864"; (* test side azim 3862621143 *)
    doc = "This allows us to restrict the domain on both sides to delta > 16.
     Tan[2.15 - Pi/2]^2 >= 0.4277.
     Too slow!! (992 secs).
     ";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
(let tan2lower = #0.4277 in
      (
	&4 * x1_delta_y y1 y2 y3 y4 y5 y6 < tan2lower * delta4_squared_y y1 y2 y3 y4 y5 y6) \/
     //  dih_y y1 y2 y3 y4 y5 y6 < #2.15 - pi / &2 \/
       delta_y y1 y2 y3 y4 y5 y6 < &0 \/
       delta_y y1 y2 y3 y4 y5 y6 > &16)`;
  };;

run
  {
    idv="test side' 3862621143";
    doc = "constant corrected 0.77->0.777 jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6  > #0.453  * dih_y y1 y2 y3 y4 y5 y6 - #0.777 / &2 \/
	 delta_y y1 y2 y3 y4 y5 y6 < &16  \/       dih_y y1 y2 y3 y4 y5 y6 < #2.15 - pi / &2
)`;
  };;

(* ************************************************************************** *)
(* INEQ "386" experiments 2014 . *)
(* ************************************************************************** *)

run2
  {
    idv="test0 2014";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (
	// dih_y y1 y2 y3 y4 y5 y6 < #1.41
	   &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #38.0 * delta4_squared_y y1 y2 y3 y4 y5 y6 
      )`;
  };;

run2
  {
    idv="test1";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (	 &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #0.8337 * delta4_squared_y y1 y2 y3 y4 y5 y6 \/
	   taum y1 y2 y3 y4 y5 y6  > #0.07
//	 delta_y y1 y2 y3 y4 y5 y6 < &16 \/
//	 dih_y y1 y2 y3 y4 y5 y6 < #2.15 - #1.41
)`;
  };;

run2
  {
    idv="test2";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (
	 &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #3.4184 * delta4_squared_y y1 y2 y3 y4 y5 y6 \/
	taum y1 y2 y3 y4 y5 y6  > #0.23 
//	  \/
//	 delta_y y1 y2 y3 y4 y5 y6 < &16 \/
//	 dih_y y1 y2 y3 y4 y5 y6 < #1.075

)`;
  };;

run2
  {
    idv="test3";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (
//	 delta_y y1 y2 y3 y4 y5 y6 < &16 \/
//	 dih_y y1 y2 y3 y4 y5 y6 < #1.1885
	 &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #6.1855 * delta4_squared_y y1 y2 y3 y4 y5 y6 \/
  taum y1 y2 y3 y4 y5 y6  > #0.30
)`;
  };;

run2
  {
    idv="test4";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (
	 // delta_y y1 y2 y3 y4 y5 y6 < &16 \/
	 // dih_y y1 y2 y3 y4 y5 y6 < #2.377 - #1.41
	 &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #2.1 * delta4_squared_y y1 y2 y3 y4 y5 y6 \/
   taum y1 y2 y3 y4 y5 y6  > #0.16 
)`;
  };;

run2
  {
    idv="test5";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (	 &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #22.94 * delta4_squared_y y1 y2 y3 y4 y5 y6 \/
	   taum y1 y2 y3 y4 y5 y6  > #0.41
//	 delta_y y1 y2 y3 y4 y5 y6 < &16 \/
//	 dih_y y1 y2 y3 y4 y5 y6 < #1.365
)`;
  };;

run2
  {
    idv="test6";
    doc = "jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (	 &4 * x1_delta_y y1 y2 y3 y4 y5 y6 < #15.23 * delta4_squared_y y1 y2 y3 y4 y5 y6 \/
	   taum y1 y2 y3 y4 y5 y6  > #0.38 
//	 delta_y y1 y2 y3 y4 y5 y6 < &16 \/
//	 dih_y y1 y2 y3 y4 y5 y6 < #2.73 - #1.41
)`;
  };;

(* stop here. New series 0,A,B,C,D,E. *)


(* stop here *)

run2
  {
    idv="test side' 3862621143";
    doc = "constant corrected 0.77->0.777 jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 ... * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6  > #0.453  * dih_y y1 y2 y3 y4 y5 y6 - #0.777 / &2 \/
	 delta_y y1 y2 y3 y4 y5 y6 < &16  \/       dih_y y1 y2 y3 y4 y5 y6 < #2.15 - pi / &2
)`;
  };;


run
  {
    idv="test 2014"; (* test side azim 3862621143 *)
    doc = "     ";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.2,y5,#3.9);
	 (&2,y6,&2 * h0)]
      ( 	 dih_y y1 y2 y3 y4 y5 y6 < #1.35 \/
	 delta_y y1 y2 y3 y4 y5 y6 < &3 
 )`;
  };;

run
  {
    idv="test 2014"; (* test side azim 3862621143 *)
    doc = "     ";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.2,y5,#3.9);
	 (&2,y6,&2 * h0)]
      ( 	 dih_y y1 y2 y3 y4 y5 y6 < #0.8 \/
	 delta_y y1 y2 y3 y4 y5 y6 > &35
 )`;
  };;

run2
  {
    idv="test 2014 doesn't terminate";
    doc = "constant corrected 0.77->0.777 jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.2,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6  > #0.453  * dih_y y1 y2 y3 y4 y5 y6 - #0.777 / &2 \/
	 delta_y y1 y2 y3 y4 y5 y6 < &35  \/       dih_y y1 y2 y3 y4 y5 y6 < #0.8
)`;
  };;

run
  {
    idv="test 2014";
    doc = "constant corrected 0.77->0.777 jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 ,y4, &2 * h0);
	 (#3.01,y5,#3.9);
	 (&2,y6,&2 * h0)]
      (dih_y y1 y2 y3 y4 y5 y6 < #1.41)`;
  };;



(* ************************************************************************** *)
(* INEQ "4240815464 a" *)
(* ************************************************************************** *)


skip
  {
    idv="5365514595"; (* test full 4240815464 *)
    doc = "
     The following inequalities make 4240815464 into a derived inequality.
     If dih > 1.621, then the main_estimate d(4) inequality implies this, so wlog dih < 1.621.
     We may take y4 <= 3.36, for otherwise dih > 1.621.
     When 3.01 <= y4 <= 3.36, dih < 1.621 ==> Delta(back) > 98 ==> taum(back) > 0.
     We replace the back taum with 0, and run the 6D ineq on the front simplex.
     -
     When 2.62 <= y4 <= 3.01, use taum(back) >= 1.03. to remove the back simplex. Run on the front.
     -
     When 2.52 <= y4 <= 3.01, use a custom linear lower bound on tam(back) to remove the back simplex.
     -
     passes when we zero out back term. ";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#3.01 ,y4, #3.36);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0);
	 (&2,y7,&2 * h0);
	 (&2,y8,&2 * h0);
	 (&2,y9,&2 * h0)
]
      (
	taum y1 y2 y3 y4 y5 y6  + taum y7 y2 y3 y4 y8 y9 +
	  #0.7573 * dih_y y1 y2 y3 y4 y5 y6 - #1.433 > &0 \/
	  dih_y y1 y2 y3 y4 y5 y6 > #1.621)`;
  };;



(* ************************************************************************** *)
(* DEPRECATED *)
(* ************************************************************************** *)

run
  {
    idv="4532766940"; (* test delta98 lindih 4240815464 *)
    doc = "delta monotonicity";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#3.01 ,y4, #3.36);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)
]
      (

	  delta_y y1 y2 y3 y4 y5 y6 + #0.1 > delta_y (&2 * h0) y2 y3 y4 (&2) (&2)  \/
//	y_of_x (delta_234_x ((&2 * h0) pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &98 \/
	delta_y y1 y2 y3 y4 y5 y6 > &98 \/
	  delta_y y1 y2 y3 y4 y5 y6 < &0 

)`;
  };;

add
  {
    idv="2862885615"; (* test front103 4240815464 *)
    doc = "lower bound on front simplex when y4 [2.62,3.01]";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#2.62 ,y4, #3.01);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)
]
      (
	taum y1 y2 y3 y4 y5 y6 + #0.103 +
	  #0.7573 * dih_y y1 y2 y3 y4 y5 y6 - #1.433 > &0 \/
	  dih_y y1 y2 y3 y4 y5 y6 > #1.621)`;
  };;

run
  {
    idv="1611600345";  (* test back 4240815464 *)
    doc = "lower bound on back simplex when y4 in [2.52,2.62]";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#2.52 ,y4, #2.62);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)
]
      (
	taum y1 y2 y3 y4 y5 y6 > #0.095 + #0.14 * (y2 + y3 - &4) )`;
  };;

run
  {
    idv="2608321088"; (* test front 4240815464 *)
    doc = "y2 + y3 - y4 -> y2 + y3 - &4, jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#2.52 ,y4, #2.62);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)
]
      (
	taum y1 y2 y3 y4 y5 y6 + #0.095 + #0.14 * (y2 + y3 - &4) +
	  #0.7573 * dih_y y1 y2 y3 y4 y5 y6 - #1.433 > &0 \/
	  dih_y y1 y2 y3 y4 y5 y6 > #1.621)`;
  };;

run
  {
    idv="1611600345R";  (* test back 4240815464 *)
    doc = "lower bound on back simplex when y4 in [2.523,2.62]";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#2.523 ,y4, #2.62);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)
]
      (
	taum y1 y2 y3 y4 y5 y6 > #0.10 + #0.12 * (y2 + y3 - &4) )`;
  };;

run
  {
    idv="2608321088R"; (* test front 4240815464 *)
    doc = "y2 + y3 - y4 -> y2 + y3 - &4, jun 27, 2014.";
    tags=[Xconvert];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#2.523 ,y4, #2.62);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)
]
      (
	taum y1 y2 y3 y4 y5 y6 + #0.10 + #0.12 * (y2 + y3 - &4) +
	  #0.7573 * dih_y y1 y2 y3 y4 y5 y6 - #1.433 > &0 \/
	  dih_y y1 y2 y3 y4 y5 y6 > #1.621)`;
  };;


(* ************************************************************************** *)
(* DEPRECATED INEQ 704377224150 *)
(* ************************************************************************** *)

skip
  {
    idv="test azim 70437224150";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#2.65,y4,sqrt8);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (dih_y y1 y2 y3 y4 y5 y6 > #1.215)`;
  };;

skip
  {
    idv="old test front 70437224150";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 * h0,y4,#2.77);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6 + #0.0842 + #0.16 * (y2 + y3 - &4) + -- #0.018 * (y4 - &2 * h0) + #4.72 * dih_y y1 y2 y3 y4 y5 y6 > #6.235)`;
  };;

skip
  {
    idv="old test back 70437224150";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 * h0,y4,#2.84);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6 > #0.0842 + #0.16 * (y2 + y3  - &4) - #0.018 * (y4 - &2 * h0))`;
  };;

skip
  {
    idv="test front 70437224150";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 * h0,y4,#2.65);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6 + #0.0842 + #0.17 * (y2 + y3 - &4) + -- #0.01 * (y4 - &2 * h0) + #4.72 * dih_y y1 y2 y3 y4 y5 y6 > #6.248)`;
  };;

skip
  {
    idv="test back 70437224150";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 * h0,y4,#2.65);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6 > #0.0842 + #0.17 * (y2 + y3  - &4) - #0.01 * (y4 - &2 * h0))`;
  };;

skip
  {
    idv="test";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (#3.23,y4,#3.4);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (dih_y y1 y2 y3 y4 y5 y6 > #1.544)`;
  };;

skip
  {
    idv="test front";
    doc = "";
    tags=[];
  ineq = Sphere.all_forall `ineq
      [
	 (&2,y1,&2 * h0);
	 (&2,y2,&2 * h0);
	 (&2,y3,&2 * h0);
	 (&2 * h0,y4,#2.84);
	 (&2,y5,&2 * h0);
	 (&2,y6,&2 * h0)]
      (taum y1 y2 y3 y4 y5 y6 + #0.0842 + #0.16 * (y2 + y3 - &4) + -- #0.018 * (y4 - &2 * h0) + #0.972 * dih_y y1 y2 y3 y4 y5 y6 > #1.707)`;
  };;

skip
  {
idv="test";
doc = "If  minor diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
           Added May 12, 2011.
       c2 upper bound changed from 15.53 to 16.0 on May 23.";
tags=[];
ineq = Sphere.all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, (&2 * h0) pow 2);
  ((&2/ h0) pow 2, b2, #3.01 pow 2);
  ((#2.9 / h0) pow 2, c2,#16.0)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;
