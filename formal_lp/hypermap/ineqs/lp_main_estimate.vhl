"needs \"../formal_lp/hypermap/ineqs/lp_ineqs_proofs-compiled.hl\"".
"needs \"local/RNSYJXM-compiled.hl\"".

Module Lp_main_estimate.

"open Localization".
"open Tame_defs".
"open Ssrbool".
"open Ssrnat".
"open Lp_ineqs_proofs".
"open Hypermap_and_fan".
"open Fan_defs".
"open Hypermap".
"open Add_triangle".
"open Tame_general".
"open Hypermap_iso".
"open Rnsyjxm".

(* Some definitions from local/appendix_main_estimate.hl *)

"let rho_fun = new_definition
	`rho_fun y =  &1 + (inv (&2 * h0 - &2)) * (inv pi) * sol0 * (y - &2)`".

"let tau_fun = new_definition
	`tau_fun V E f =  sum (f) (\e. rho_fun(norm(FST e)) * (azim_in_fan e E)) 
			- (pi + sol0) * &(CARD f -2)`".

"let tau3 = new_definition `tau3 (v1:real^3) v2 v3 = 
  rho (norm v1) * dihV (vec 0) v1 v2 v3 + rho(norm v2) * dihV (vec 0) v2 v3 v1 +
    rho(norm v3) * dihV (vec 0) v3 v1 v2 - (pi + sol0)`".

"let JEJTVGB_std_concl = 
  `!V E FF. 
    convex_local_fan (V,E,FF) /\
    packing V /\
    V SUBSET ball_annulus /\
    4 <= CARD V /\ CARD V <= 6 /\
    (!v w. ~(v = w) /\ v IN V /\ w IN V /\ ~({v,w} IN E) ==> &2 * h0 <= dist(v,w)) /\
    (!v w. {v,w} IN E ==> &2 <= dist(v,w) /\ dist(v,w) <= &2 * h0) ==>
    d_tame (CARD V) <= tau_fun V E FF`".

"let JEJTVGB_std3_concl = 
  `!v1 v2 v3. 
    &2 <= norm v1 /\
    &2 <= norm v2 /\
    &2 <= norm v3 /\
    norm v1 <= &2 * h0 /\
    norm v2 <= &2 * h0 /\
    norm v3 <= &2 * h0 /\
    &2 <= dist(v1,v2) /\
    &2 <= dist(v1,v3) /\
    &2 <= dist(v2,v3) /\
    dist(v1,v2) <= &2 * h0 /\
    dist(v1,v3) <= &2 * h0 /\
    dist(v2,v3) <= &2 * h0 ==>
    &0 <= tau3 v1 v2 v3`".

"let JEJTVGB_pent_diag_concl = 
  `!V E FF. 
    convex_local_fan (V,E,FF) /\
    packing V /\
    V SUBSET ball_annulus /\
    CARD V = 5 /\
    (!v w. ~(v = w) /\ v IN V /\ w IN V /\ ~({v,w} IN E) ==> sqrt8 <= dist(v,w)) /\
    (!v w. {v,w} IN E ==> &2 <= dist(v,w) /\ dist(v,w) <= &2 * h0) ==>
    #0.616 <= tau_fun V E FF`".

"let JEJTVGB_pent_pro_concl = 
  `!V E FF. 
    convex_local_fan (V,E,FF) /\
    packing V /\
    V SUBSET ball_annulus /\
    CARD V = 5 /\ 
    (!v w. ~(v = w) /\ v IN V /\ w IN V /\ ~({v,w} IN E) ==> &2 * h0 <= dist(v,w)) /\
    (?v0 w0.
       (!v w. {v,w} IN E /\ ~({v,w} = {v0,w0}) ==> &2 <= dist(v,w) /\ dist(v,w) <= &2 * h0) /\
       {v0,w0} IN E /\
       &2 *h0 <= dist(v0,w0) /\ dist(v0,w0) <= sqrt8)
     ==>
    #0.616 <= tau_fun V E FF`".

"let JEJTVGB_quad_pro_concl = 
  `!V E FF. 
    convex_local_fan (V,E,FF) /\
    packing V /\
    V SUBSET ball_annulus /\
    CARD V = 4 /\ 
    (!v w. ~(v = w) /\ v IN V /\ w IN V /\ ~({v,w} IN E) ==> sqrt8 <= dist(v,w)) /\
    (?v0 w0.
       (!v w. {v,w} IN E /\ ~({v,w} = {v0,w0}) ==> &2 <= dist(v,w) /\ dist(v,w) <= &2 * h0) /\
       {v0,w0} IN E /\
       &2 *h0 <= dist(v0,w0) /\ dist(v0,w0) <= sqrt8)
     ==>
    #0.477 <= tau_fun V E FF`".

"let JEJTVGB_quad_diag_concl = 
  `!V E FF. 
    convex_local_fan (V,E,FF) /\
    packing V /\
    V SUBSET ball_annulus /\
    CARD V = 4 /\
    (!v w. ~(v = w) /\ v IN V /\ w IN V /\ ~({v,w} IN E) ==> &3 <= dist(v,w)) /\
    (!v w. {v,w} IN E ==> &2 <= dist(v,w) /\ dist(v,w) <= &2 * h0) ==>
    #0.567 <= tau_fun V E FF`".

"let JEJTVGB_concl = 
  let co = [JEJTVGB_std_concl;JEJTVGB_std3_concl;JEJTVGB_pent_diag_concl;JEJTVGB_pent_pro_concl;
				      JEJTVGB_quad_pro_concl;JEJTVGB_quad_diag_concl] in
    list_mk_conj co".


"let lp_main_estimate = new_definition (mk_eq (`lp_main_estimate:bool`,JEJTVGB_concl))".


Lemma rho_rho_fun y: `rho_fun y = rho y`.
Proof.
rewrite Sphere.rho rho_fun Sphere.const1 Sphere.ly Sphere.interp.
rewrite -Nonlinear_lemma.sol0_EQ_sol_y Sphere.h0.
by move: PI_POS; "CONV_TAC REAL_FIELD".
Qed.

(* Fan *)
Section Fan.

Variable V: `:real^3->bool`.
Variable E: `:(real^3->bool)->bool`.

Hypothesis fanV: `FAN (vec 0,V,E)`.

Let dartH: `dart (hypermap_of_fan (V,E)) = dart_of_fan (V,E)`.
Proof. by rewrite COMPONENTS_HYPERMAP_OF_FAN. Qed.

Let in_dart_inV d: `d IN dart_of_fan (V,E) ==> FST d IN V /\ SND d IN V`.
Proof. by rewrite {1}pair_expand => /(PAIR_IN_DART_OF_FAN fanV). Qed.

(* BallAnnulus *)
Section BallAnnulus.

Hypothesis subV: `V SUBSET ball_annulus`.

Let norm_inV v: `v IN V ==> &2 <= norm v /\ norm v <= &2 * h0`.
Proof. by rewrite SUBSET in subV; move/subV; rewrite Fnjlbxs.in_ball_annulus. Qed.

Lemma tau_fun_eq_tauVEF f: `f IN face_set (hypermap_of_fan (V,E)) /\ 2 <= CARD f
	==> tau_fun V E f = tauVEF (V,E,f)`.
Proof.
rewrite tau_fun tauVEF => [] [f_in card_f].
rewrite -REAL_OF_NUM_SUB // real_sub -REAL_MUL_RNEG REAL_NEG_SUB REAL_EQ_ADD_RCANCEL.
apply SUM_EQ => d d_in_f /=.
have d_in: `d IN dart_of_fan (V,E)` by rewrite -dartH (in_face_imp_in_dart_alt d_in_f).
rewrite rho_rho_fun (azim_in_fan_eq_azim_dart fanV) //.
rewrite Sphere.rho ly_EQ_lmfun ?norm_inV ?(in_dart_inV d_in) //.
by rewrite sol0_over_pi_EQ_const1; arith.
Qed.

End BallAnnulus.

End Fan.


(* FullySurrounded *)
Section FullySurrounded.

Variable V: `:real^3->bool`.
Variable E: `:(real^3->bool)->bool`.

Hypothesis fanV: `FAN (vec 0,V,E)`.
Hypothesis f_surr: `fully_surrounded (V,E)`.

Let dartH: `dart (hypermap_of_fan (V,E)) = dart_of_fan (V,E)`.
Proof. by rewrite COMPONENTS_HYPERMAP_OF_FAN. Qed.

Let dart1_eq: `dart1_of_fan (V,E) = dart_of_fan (V,E)`.
Proof. by rewrite fully_surrounded_dart_of_fan_eq. Qed.


Lemma azim_dart_eq_dihV v w: `(v,w) IN dart_of_fan (V,E)
	==> azim_dart (V,E) (v,w) = dihV (vec 0) v w (sigma_fan (vec 0) V E v w)`.
Proof.
move => vw_in; move: (vw_in); rewrite -dart1_eq => vw_in1.
rewrite fully_surrounded_azim_dart_eq_azim //.
rewrite AZIM_DIVH ?(DART1_NOT_COLLINEAR fanV) ?sigma_in_dart1 //.
rewrite -fully_surrounded_azim_dart_eq_azim //.
by move: f_surr; rewrite fully_surrounded => ->.
Qed.

Lemma tau3_eq_tau_fun v w: `(v,w) IN dart_of_fan (V,E) 
	/\ CARD (face (hypermap_of_fan (V,E)) (v,w)) = 3
	==> tau3 (sigma_fan (vec 0) V E v w) v w 
		= tau_fun V E (face (hypermap_of_fan (V,E)) (v,w))`.
Proof.
move => [vw_in card3].
move: (vw_in); rewrite -dart1_eq => vw_in1.
have := "let_RULE TRIANGULAR_FACE" fanV vw_in1 card3 => f_eq.
set w' := `sigma_fan _ V E v w`.
rewrite tau_fun card3 f_eq.
have neqs: `~(v = w) /\ ~(w = w')`.
  by rewrite !(PAIR_IN_DART1_OF_FAN_IMP_NOT_EQ fanV) // -w'_def f_fan_pair3.
rewrite !SUM_CLAUSES ?(FINITE_INSERT, FINITE_EMPTY) //.
rewrite !(IN_INSERT, NOT_IN_EMPTY) !PAIR_EQ !neqs /= -neqs /=.
have -> x: `x * &(3 - 2) = x` by arith.
have in_dart: `w,w' IN dart_of_fan (V,E) /\ w',v IN dart_of_fan (V,E)`.
  rewrite dart_of_fan_eq !IN_UNION -w'_def f_fan_pair3 //=; left.
  by rewrite dart1_switch sigma_in_dart1.
rewrite !rho_rho_fun !(azim_in_fan_eq_azim_dart fanV) //.
rewrite tau3 !azim_dart_eq_dihV // !f_eq w'_def.
by arith.
Qed.


(* BallAnnulus *)
Section BallAnnulus.

Hypothesis subV: `V SUBSET ball_annulus`.

Lemma f_surr_tau_fun_eq_tauVEF f: `f IN face_set (hypermap_of_fan (V,E))
	==> tau_fun V E f = tauVEF (V,E,f)`.
Proof.
move => f_in; rewrite (tau_fun_eq_tauVEF fanV) // subV f_in.
move/lemma_face_representation: f_in => [x]; rewrite dartH => [] [x_in] ->.
by move: (FULLY_SURROUNDED_IMP_CARD_FACE_GE_3 fanV f_surr x_in); arith.
Qed.

Lemma f_surr_tau_fun_eq_tauVEF_alt d: `d IN dart_of_fan (V,E)
	==> tau_fun V E (face (hypermap_of_fan (V,E)) d) 
		= tauVEF (V,E,face (hypermap_of_fan (V,E)) d)`.
Proof. by rewrite -dartH lemma_in_face_set => /f_surr_tau_fun_eq_tauVEF. Qed.

Lemma f_surr_tau3_eq_tauVEF v w: `(v,w) IN dart_of_fan (V,E) 
	/\ CARD (face (hypermap_of_fan (V,E)) (v,w)) = 3
	==> tau3 (sigma_fan (vec 0) V E v w) v w 
		= tauVEF (V, E, face (hypermap_of_fan (V,E)) (v,w))`.
Proof. by move => h; rewrite tau3_eq_tau_fun // f_surr_tau_fun_eq_tauVEF_alt. Qed.

End BallAnnulus.

End FullySurrounded.




