needs "nobranching_lp.hl";;

module Test_case = struct
let hypermap_string = "63917576180 21 6 0 1 2 3 4 5 3 0 5 6 3 6 5 4 3 6 4 7 3 7 4 8 3 8 4 3 3 8 3 9 3 9 3 2 4 9 2 10 11 3 10 2 1 3 10 1 12 3 12 1 0 3 12 0 13 4 13 0 6 7 3 13 7 14 3 14 7 8 3 14 8 9 3 14 9 11 3 13 14 11 3 12 13 11 3 11 10 12 ";;
let precision = 3;;
(***************)
(* Constraints *)
(***************)
let constraints = [
("azim_sum", [3; 9; 11; 12; ], [(mk_real_int64 84L); (mk_real_int64 242L); (mk_real_int64 182L); (mk_real_int64 322L); ]);
("azim_sum_neg", [0; 6; 8; 13; 14; ], [(mk_real_int64 280L); (mk_real_int64 229L); (mk_real_int64 90L); (mk_real_int64 49L); (mk_real_int64 93L); ]);
("rhazim_sum", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; ], [(mk_real_int64 939L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1075L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 992L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1096L); (mk_real_int64 1052L); (mk_real_int64 1096L); ]);
("sol_sum3", [0; 1; 8; 17; ], [(mk_real_int64 176L); (mk_real_int64 183L); (mk_real_int64 49L); (mk_real_int64 49L); ]);
("sol_sum3_neg", [14; 15; ], [(mk_real_int64 51L); (mk_real_int64 90L); ]);
("tau_sum3_neg", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; ], [(mk_real_int64 939L); (mk_real_int64 939L); (mk_real_int64 992L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1146L); (mk_real_int64 1052L); (mk_real_int64 1052L); (mk_real_int64 1096L); (mk_real_int64 1096L); (mk_real_int64 1146L); (mk_real_int64 1051L); (mk_real_int64 1056L); (mk_real_int64 1096L); (mk_real_int64 1096L); (mk_real_int64 1096L); (mk_real_int64 1052L); ]);
("tau_sum4_neg", [0; 1; ], [(mk_real_int64 1075L); (mk_real_int64 1146L); ]);
("tau_sum6_neg", [0; ], [(mk_real_int64 1146L); ]);
("ln_def_neg", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; ], [(mk_real_int64 35L); (mk_real_int64 264L); (mk_real_int64 264L); (mk_real_int64 185L); (mk_real_int64 264L); (mk_real_int64 264L); (mk_real_int64 94L); (mk_real_int64 264L); (mk_real_int64 264L); (mk_real_int64 264L); (mk_real_int64 264L); (mk_real_int64 264L); (mk_real_int64 208L); (mk_real_int64 160L); (mk_real_int64 208L); ]);
("rho_def", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; ], [(mk_real_int64 5898L); (mk_real_int64 7202L); (mk_real_int64 7202L); (mk_real_int64 6756L); (mk_real_int64 7202L); (mk_real_int64 7202L); (mk_real_int64 6236L); (mk_real_int64 7202L); (mk_real_int64 7202L); (mk_real_int64 7202L); (mk_real_int64 7202L); (mk_real_int64 7202L); (mk_real_int64 6883L); (mk_real_int64 6608L); (mk_real_int64 6883L); ]);
("edge_sym", [0; 1; 11; 13; 28; 35; 39; 52; 55; ], [(mk_real_int64 28L); (mk_real_int64 36L); (mk_real_int64 98L); (mk_real_int64 115L); (mk_real_int64 81L); (mk_real_int64 168L); (mk_real_int64 86L); (mk_real_int64 264L); (mk_real_int64 10L); ]);
("edge_sym_neg", [7; 16; 17; 20; 22; 23; 26; 33; 36; 42; 48; 49; 61; 64; ], [(mk_real_int64 7L); (mk_real_int64 37L); (mk_real_int64 37L); (mk_real_int64 157L); (mk_real_int64 25L); (mk_real_int64 109L); (mk_real_int64 21L); (mk_real_int64 193L); (mk_real_int64 87L); (mk_real_int64 139L); (mk_real_int64 268L); (mk_real_int64 77L); (mk_real_int64 46L); (mk_real_int64 40L); ]);
("y1_def", [7; 10; 12; 18; 21; 31; 57; 60; 62; ], [(mk_real_int64 26L); (mk_real_int64 49L); (mk_real_int64 115L); (mk_real_int64 45L); (mk_real_int64 45L); (mk_real_int64 25L); (mk_real_int64 19L); (mk_real_int64 20L); (mk_real_int64 9L); ]);
("y1_def_neg", [6; 9; 11; 13; 16; 17; 20; 23; 25; 28; 32; 33; 34; 36; 37; 38; 39; 40; 41; 47; 48; 50; 51; 53; 55; 58; 59; 65; 66; ], [(mk_real_int64 67L); (mk_real_int64 61L); (mk_real_int64 28L); (mk_real_int64 90L); (mk_real_int64 92L); (mk_real_int64 17L); (mk_real_int64 206L); (mk_real_int64 137L); (mk_real_int64 137L); (mk_real_int64 17L); (mk_real_int64 34L); (mk_real_int64 162L); (mk_real_int64 7L); (mk_real_int64 148L); (mk_real_int64 150L); (mk_real_int64 29L); (mk_real_int64 30L); (mk_real_int64 84L); (mk_real_int64 30L); (mk_real_int64 43L); (mk_real_int64 206L); (mk_real_int64 223L); (mk_real_int64 46L); (mk_real_int64 54L); (mk_real_int64 264L); (mk_real_int64 191L); (mk_real_int64 75L); (mk_real_int64 26L); (mk_real_int64 90L); ]);
("y2_def_neg", [6; 7; 9; 10; 11; 12; 13; 16; 18; 20; 21; 23; 25; 31; 33; 34; 36; 37; 40; 48; 50; 55; 58; 59; 60; 62; 66; ], [(mk_real_int64 60L); (mk_real_int64 42L); (mk_real_int64 54L); (mk_real_int64 15L); (mk_real_int64 28L); (mk_real_int64 35L); (mk_real_int64 90L); (mk_real_int64 92L); (mk_real_int64 14L); (mk_real_int64 206L); (mk_real_int64 14L); (mk_real_int64 137L); (mk_real_int64 137L); (mk_real_int64 7L); (mk_real_int64 162L); (mk_real_int64 7L); (mk_real_int64 148L); (mk_real_int64 211L); (mk_real_int64 144L); (mk_real_int64 206L); (mk_real_int64 131L); (mk_real_int64 75L); (mk_real_int64 29L); (mk_real_int64 54L); (mk_real_int64 6L); (mk_real_int64 52L); (mk_real_int64 90L); ]);
("y2_def", [17; 28; 32; 38; 39; 41; 47; 51; 53; 57; 65; ], [(mk_real_int64 27L); (mk_real_int64 21L); (mk_real_int64 39L); (mk_real_int64 18L); (mk_real_int64 18L); (mk_real_int64 18L); (mk_real_int64 66L); (mk_real_int64 28L); (mk_real_int64 33L); (mk_real_int64 19L); (mk_real_int64 16L); ]);
("y3_def_neg", [6; 7; 9; 10; 11; 12; 13; 16; 18; 20; 21; 23; 25; 31; 33; 34; 36; 37; 40; 48; 50; 55; 58; 59; 60; 62; 66; ], [(mk_real_int64 60L); (mk_real_int64 42L); (mk_real_int64 54L); (mk_real_int64 15L); (mk_real_int64 28L); (mk_real_int64 35L); (mk_real_int64 90L); (mk_real_int64 92L); (mk_real_int64 14L); (mk_real_int64 206L); (mk_real_int64 14L); (mk_real_int64 137L); (mk_real_int64 137L); (mk_real_int64 7L); (mk_real_int64 162L); (mk_real_int64 7L); (mk_real_int64 148L); (mk_real_int64 211L); (mk_real_int64 144L); (mk_real_int64 206L); (mk_real_int64 131L); (mk_real_int64 75L); (mk_real_int64 29L); (mk_real_int64 54L); (mk_real_int64 6L); (mk_real_int64 52L); (mk_real_int64 90L); ]);
("y3_def", [17; 28; 32; 38; 39; 41; 47; 51; 53; 57; 65; ], [(mk_real_int64 27L); (mk_real_int64 21L); (mk_real_int64 39L); (mk_real_int64 18L); (mk_real_int64 18L); (mk_real_int64 18L); (mk_real_int64 66L); (mk_real_int64 28L); (mk_real_int64 33L); (mk_real_int64 19L); (mk_real_int64 16L); ]);
("y4_def", [1; 4; 5; 6; 12; 15; 21; 24; 46; 48; ], [(mk_real_int64 138L); (mk_real_int64 75L); (mk_real_int64 59L); (mk_real_int64 177L); (mk_real_int64 70L); (mk_real_int64 70L); (mk_real_int64 38L); (mk_real_int64 16L); (mk_real_int64 30L); (mk_real_int64 46L); ]);
("y4_def_neg", [0; 3; 7; 10; 11; 14; 17; 19; 22; 23; 26; 27; 28; 29; 30; 31; 33; 34; 36; 37; 39; 41; 43; 44; 45; 51; 52; ], [(mk_real_int64 48L); (mk_real_int64 44L); (mk_real_int64 63L); (mk_real_int64 64L); (mk_real_int64 50L); (mk_real_int64 143L); (mk_real_int64 95L); (mk_real_int64 95L); (mk_real_int64 73L); (mk_real_int64 113L); (mk_real_int64 103L); (mk_real_int64 65L); (mk_real_int64 33L); (mk_real_int64 35L); (mk_real_int64 18L); (mk_real_int64 35L); (mk_real_int64 125L); (mk_real_int64 143L); (mk_real_int64 180L); (mk_real_int64 53L); (mk_real_int64 62L); (mk_real_int64 297L); (mk_real_int64 10L); (mk_real_int64 274L); (mk_real_int64 99L); (mk_real_int64 30L); (mk_real_int64 41L); ]);
("y5_def", [7; 11; 17; 28; 32; 34; 38; 39; 41; 47; 51; 53; 58; 65; ], [(mk_real_int64 41L); (mk_real_int64 59L); (mk_real_int64 27L); (mk_real_int64 21L); (mk_real_int64 39L); (mk_real_int64 16L); (mk_real_int64 18L); (mk_real_int64 18L); (mk_real_int64 18L); (mk_real_int64 66L); (mk_real_int64 28L); (mk_real_int64 33L); (mk_real_int64 10L); (mk_real_int64 16L); ]);
("y5_def_neg", [6; 9; 10; 12; 13; 16; 18; 20; 21; 23; 25; 31; 33; 36; 37; 40; 48; 50; 55; 57; 59; 60; 62; 66; ], [(mk_real_int64 41L); (mk_real_int64 37L); (mk_real_int64 15L); (mk_real_int64 35L); (mk_real_int64 63L); (mk_real_int64 64L); (mk_real_int64 14L); (mk_real_int64 143L); (mk_real_int64 14L); (mk_real_int64 95L); (mk_real_int64 95L); (mk_real_int64 7L); (mk_real_int64 113L); (mk_real_int64 103L); (mk_real_int64 151L); (mk_real_int64 105L); (mk_real_int64 143L); (mk_real_int64 80L); (mk_real_int64 23L); (mk_real_int64 10L); (mk_real_int64 76L); (mk_real_int64 6L); (mk_real_int64 40L); (mk_real_int64 41L); ]);
("y6_def", [7; 11; 14; 17; 18; 19; 21; 24; 26; 28; 32; 34; 38; 39; 41; 47; 50; 51; 53; 54; 56; 58; 59; 60; 62; 65; 66; ], [(mk_real_int64 41L); (mk_real_int64 59L); (mk_real_int64 98L); (mk_real_int64 27L); (mk_real_int64 181L); (mk_real_int64 74L); (mk_real_int64 252L); (mk_real_int64 120L); (mk_real_int64 74L); (mk_real_int64 81L); (mk_real_int64 39L); (mk_real_int64 296L); (mk_real_int64 18L); (mk_real_int64 270L); (mk_real_int64 18L); (mk_real_int64 143L); (mk_real_int64 240L); (mk_real_int64 218L); (mk_real_int64 33L); (mk_real_int64 193L); (mk_real_int64 274L); (mk_real_int64 10L); (mk_real_int64 83L); (mk_real_int64 99L); (mk_real_int64 139L); (mk_real_int64 41L); (mk_real_int64 117L); ]);
("y6_def_neg", [6; 9; 10; 12; 13; 16; 20; 23; 31; 33; 36; 37; 40; 48; 55; 57; ], [(mk_real_int64 41L); (mk_real_int64 37L); (mk_real_int64 15L); (mk_real_int64 35L); (mk_real_int64 63L); (mk_real_int64 64L); (mk_real_int64 143L); (mk_real_int64 95L); (mk_real_int64 7L); (mk_real_int64 113L); (mk_real_int64 103L); (mk_real_int64 151L); (mk_real_int64 105L); (mk_real_int64 143L); (mk_real_int64 23L); (mk_real_int64 10L); ]);
("RHA", [6; 8; 9; 11; 13; 14; 27; 30; 33; 35; 36; 38; 42; 51; 52; 54; 56; 57; 59; 60; 63; 67; ], [(mk_real_int64 201L); (mk_real_int64 54L); (mk_real_int64 47L); (mk_real_int64 208L); (mk_real_int64 154L); (mk_real_int64 154L); (mk_real_int64 71L); (mk_real_int64 20L); (mk_real_int64 95L); (mk_real_int64 95L); (mk_real_int64 44L); (mk_real_int64 2L); (mk_real_int64 51L); (mk_real_int64 19L); (mk_real_int64 96L); (mk_real_int64 90L); (mk_real_int64 51L); (mk_real_int64 51L); (mk_real_int64 29L); (mk_real_int64 51L); (mk_real_int64 51L); (mk_real_int64 44L); ]);
("RHB", [2; 5; 26; 29; 45; ], [(mk_real_int64 71L); (mk_real_int64 208L); (mk_real_int64 71L); (mk_real_int64 23L); (mk_real_int64 154L); ]);
("yy10", [8; ], [(mk_real_int64 97L); ]);
("tau6", [0; ], [(mk_real_int64 1146L); ]);
("ineq105", [7; ], [(mk_real_int64 53L); ]);
("ineq106", [0; 3; 22; 28; 29; 31; 36; 37; 39; 41; 45; 51; ], [(mk_real_int64 7L); (mk_real_int64 7L); (mk_real_int64 23L); (mk_real_int64 48L); (mk_real_int64 51L); (mk_real_int64 51L); (mk_real_int64 96L); (mk_real_int64 77L); (mk_real_int64 90L); (mk_real_int64 90L); (mk_real_int64 22L); (mk_real_int64 44L); ]);
("ineq107", [1; 4; 6; 12; 15; 21; 27; 30; 46; 48; ], [(mk_real_int64 104L); (mk_real_int64 98L); (mk_real_int64 229L); (mk_real_int64 90L); (mk_real_int64 90L); (mk_real_int64 49L); (mk_real_int64 93L); (mk_real_int64 93L); (mk_real_int64 39L); (mk_real_int64 93L); ]);
("ineq108", [11; 22; 33; 41; 44; ], [(mk_real_int64 74L); (mk_real_int64 84L); (mk_real_int64 182L); (mk_real_int64 171L); (mk_real_int64 271L); ]);
("ineq109", [1; 5; 24; 52; ], [(mk_real_int64 176L); (mk_real_int64 183L); (mk_real_int64 49L); (mk_real_int64 49L); ]);
("ineq110", [43; 45; ], [(mk_real_int64 51L); (mk_real_int64 90L); ]);
("ineq111", [0; 3; 7; 10; 14; 17; 19; 23; 26; 27; 30; 34; 36; 41; 44; 45; 48; 52; ], [(mk_real_int64 347L); (mk_real_int64 315L); (mk_real_int64 501L); (mk_real_int64 514L); (mk_real_int64 1146L); (mk_real_int64 760L); (mk_real_int64 760L); (mk_real_int64 901L); (mk_real_int64 822L); (mk_real_int64 1092L); (mk_real_int64 723L); (mk_real_int64 1146L); (mk_real_int64 919L); (mk_real_int64 944L); (mk_real_int64 709L); (mk_real_int64 532L); (mk_real_int64 209L); (mk_real_int64 459L); ]);
("ineq113", [11; ], [(mk_real_int64 633L); ]);
("ineq114", [0; 5; 7; 8; 17; 18; 23; 25; 28; 32; 37; 38; 41; 43; 45; 47; 49; 50; 51; ], [(mk_real_int64 591L); (mk_real_int64 623L); (mk_real_int64 246L); (mk_real_int64 246L); (mk_real_int64 386L); (mk_real_int64 386L); (mk_real_int64 151L); (mk_real_int64 230L); (mk_real_int64 4L); (mk_real_int64 372L); (mk_real_int64 30L); (mk_real_int64 9L); (mk_real_int64 112L); (mk_real_int64 386L); (mk_real_int64 193L); (mk_real_int64 370L); (mk_real_int64 372L); (mk_real_int64 514L); (mk_real_int64 593L); ]);
("ineq116", [0; ], [(mk_real_int64 6L); ]);
("ineq119", [2; 6; ], [(mk_real_int64 170L); (mk_real_int64 905L); ]);
("ineq120", [0; 1; 3; 4; ], [(mk_real_int64 413L); (mk_real_int64 41L); (mk_real_int64 452L); (mk_real_int64 241L); ]);
];;

(***************)
(* Variables   *)
(***************)
let target_variables = [
("ln_hi", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; ], [(mk_real_int64 2850L); (mk_real_int64 3650L); (mk_real_int64 3650L); (mk_real_int64 2700L); (mk_real_int64 3650L); (mk_real_int64 3650L); (mk_real_int64 2700L); (mk_real_int64 3650L); (mk_real_int64 3650L); (mk_real_int64 3650L); (mk_real_int64 3650L); (mk_real_int64 3650L); (mk_real_int64 3475L); (mk_real_int64 3600L); (mk_real_int64 3475L); ]);
];;

(*************************)

let variable_bounds = [
("azim_lo", [2; 6; 8; 9; 10; 11; 13; 14; 23; 24; 26; 29; 33; 35; 42; 51; 52; 55; 57; 59; 61; 63; 64; ], [(mk_real_int64 504L); (mk_real_int64 1034L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1002L); (mk_real_int64 4L); (mk_real_int64 4L); (mk_real_int64 364L); (mk_real_int64 364L); (mk_real_int64 504L); (mk_real_int64 962L); (mk_real_int64 474L); (mk_real_int64 20L); (mk_real_int64 128L); (mk_real_int64 220L); (mk_real_int64 366L); (mk_real_int64 888L); (mk_real_int64 364L); (mk_real_int64 182L); (mk_real_int64 380L); (mk_real_int64 128L); (mk_real_int64 236L); ]);
("azim_hi", [5; 17; 27; 28; 30; 38; 43; 45; 65; ], [(mk_real_int64 524608L); (mk_real_int64 53L); (mk_real_int64 54L); (mk_real_int64 78L); (mk_real_int64 616L); (mk_real_int64 504L); (mk_real_int64 678L); (mk_real_int64 139L); (mk_real_int64 218L); ]);
("rhazim_hi", [6; 8; 9; 11; 33; 35; 39; 41; 42; 50; 51; 52; 56; 57; 59; 60; 63; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("rhazim_lo", [5; 30; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("rho_lo", [1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; ], [(mk_real_int64 536L); (mk_real_int64 536L); (mk_real_int64 700L); (mk_real_int64 536L); (mk_real_int64 536L); (mk_real_int64 2272L); (mk_real_int64 536L); (mk_real_int64 536L); (mk_real_int64 536L); (mk_real_int64 536L); (mk_real_int64 536L); ]);
("rho_hi", [0; 12; 13; 14; ], [(mk_real_int64 2676L); (mk_real_int64 4264L); (mk_real_int64 2768L); (mk_real_int64 4264L); ]);
("tau_lo", [1; 2; 12; 15; 17; 18; 19; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 93000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("tau_hi", [3; 4; 8; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("y1_lo", [7; 12; 13; 16; 17; 20; 31; 33; 34; 37; 39; 41; 48; 50; 51; 55; 58; 60; 62; 65; 66; ], [(mk_real_int64 576L); (mk_real_int64 500L); (mk_real_int64 180L); (mk_real_int64 520L); (mk_real_int64 390L); (mk_real_int64 280L); (mk_real_int64 500L); (mk_real_int64 180L); (mk_real_int64 399L); (mk_real_int64 60L); (mk_real_int64 600L); (mk_real_int64 600L); (mk_real_int64 280L); (mk_real_int64 20L); (mk_real_int64 200L); (mk_real_int64 105L); (mk_real_int64 305L); (mk_real_int64 500L); (mk_real_int64 120L); (mk_real_int64 400L); (mk_real_int64 19L); ]);
("y1_hi", [6; 9; 11; 23; 25; 28; 32; 36; 38; 40; 47; 57; 59; ], [(mk_real_int64 340L); (mk_real_int64 100L); (mk_real_int64 367L); (mk_real_int64 200L); (mk_real_int64 200L); (mk_real_int64 305L); (mk_real_int64 460L); (mk_real_int64 40L); (mk_real_int64 200L); (mk_real_int64 360L); (mk_real_int64 230L); (mk_real_int64 380L); (mk_real_int64 240L); ]);
("y2_hi", [6; 10; 11; 12; 18; 21; 23; 25; 28; 36; 37; 39; 41; 47; 50; 51; 55; 57; 58; 59; 60; 62; 65; ], [(mk_real_int64 88L); (mk_real_int64 104L); (mk_real_int64 367L); (mk_real_int64 192L); (mk_real_int64 320L); (mk_real_int64 320L); (mk_real_int64 200L); (mk_real_int64 200L); (mk_real_int64 306L); (mk_real_int64 40L); (mk_real_int64 304L); (mk_real_int64 564L); (mk_real_int64 564L); (mk_real_int64 248L); (mk_real_int64 524L); (mk_real_int64 28L); (mk_real_int64 84L); (mk_real_int64 380L); (mk_real_int64 24L); (mk_real_int64 448L); (mk_real_int64 72L); (mk_real_int64 244L); (mk_real_int64 16L); ]);
("y2_lo", [7; 9; 13; 16; 17; 20; 31; 32; 33; 34; 38; 40; 48; 53; 66; ], [(mk_real_int64 384L); (mk_real_int64 152L); (mk_real_int64 180L); (mk_real_int64 520L); (mk_real_int64 64L); (mk_real_int64 280L); (mk_real_int64 448L); (mk_real_int64 52L); (mk_real_int64 180L); (mk_real_int64 399L); (mk_real_int64 528L); (mk_real_int64 276L); (mk_real_int64 280L); (mk_real_int64 240L); (mk_real_int64 19L); ]);
("y3_hi", [6; 10; 11; 12; 18; 21; 23; 25; 28; 36; 37; 39; 41; 47; 50; 51; 55; 57; 58; 59; 60; 62; 65; ], [(mk_real_int64 88L); (mk_real_int64 104L); (mk_real_int64 367L); (mk_real_int64 192L); (mk_real_int64 320L); (mk_real_int64 320L); (mk_real_int64 200L); (mk_real_int64 200L); (mk_real_int64 306L); (mk_real_int64 40L); (mk_real_int64 304L); (mk_real_int64 564L); (mk_real_int64 564L); (mk_real_int64 248L); (mk_real_int64 524L); (mk_real_int64 28L); (mk_real_int64 84L); (mk_real_int64 380L); (mk_real_int64 24L); (mk_real_int64 448L); (mk_real_int64 72L); (mk_real_int64 244L); (mk_real_int64 16L); ]);
("y3_lo", [7; 9; 13; 16; 17; 20; 31; 32; 33; 34; 38; 40; 48; 53; 66; ], [(mk_real_int64 384L); (mk_real_int64 152L); (mk_real_int64 180L); (mk_real_int64 520L); (mk_real_int64 64L); (mk_real_int64 280L); (mk_real_int64 448L); (mk_real_int64 52L); (mk_real_int64 180L); (mk_real_int64 399L); (mk_real_int64 528L); (mk_real_int64 276L); (mk_real_int64 280L); (mk_real_int64 240L); (mk_real_int64 19L); ]);
("y4_hi", [4; 5; 6; 7; 23; 26; 27; 28; 29; 31; 33; 37; 39; 41; 43; 46; ], [(mk_real_int64 754L); (mk_real_int64 292L); (mk_real_int64 17L); (mk_real_int64 375L); (mk_real_int64 375L); (mk_real_int64 250L); (mk_real_int64 389L); (mk_real_int64 120L); (mk_real_int64 65L); (mk_real_int64 65L); (mk_real_int64 330L); (mk_real_int64 255L); (mk_real_int64 350L); (mk_real_int64 215L); (mk_real_int64 4L); (mk_real_int64 147L); ]);
("y4_lo", [0; 1; 3; 10; 11; 12; 14; 15; 21; 22; 24; 30; 34; 36; 44; 45; 48; 51; 52; ], [(mk_real_int64 170L); (mk_real_int64 584L); (mk_real_int64 170L); (mk_real_int64 250L); (mk_real_int64 690L); (mk_real_int64 430L); (mk_real_int64 250L); (mk_real_int64 430L); (mk_real_int64 123L); (mk_real_int64 295L); (mk_real_int64 124L); (mk_real_int64 486L); (mk_real_int64 250L); (mk_real_int64 635L); (mk_real_int64 260L); (mk_real_int64 210L); (mk_real_int64 236L); (mk_real_int64 140L); (mk_real_int64 499L); ]);
("y5_hi", [6; 7; 9; 10; 11; 12; 13; 18; 21; 28; 33; 36; 37; 39; 40; 41; 47; 50; 51; 55; 57; 58; 60; 65; ], [(mk_real_int64 173L); (mk_real_int64 216L); (mk_real_int64 173L); (mk_real_int64 104L); (mk_real_int64 292L); (mk_real_int64 192L); (mk_real_int64 375L); (mk_real_int64 320L); (mk_real_int64 320L); (mk_real_int64 306L); (mk_real_int64 375L); (mk_real_int64 250L); (mk_real_int64 364L); (mk_real_int64 564L); (mk_real_int64 489L); (mk_real_int64 564L); (mk_real_int64 248L); (mk_real_int64 69L); (mk_real_int64 28L); (mk_real_int64 4L); (mk_real_int64 4L); (mk_real_int64 19L); (mk_real_int64 72L); (mk_real_int64 16L); ]);
("y5_lo", [16; 17; 20; 31; 32; 34; 38; 48; 53; 59; 62; 66; ], [(mk_real_int64 250L); (mk_real_int64 64L); (mk_real_int64 250L); (mk_real_int64 448L); (mk_real_int64 52L); (mk_real_int64 124L); (mk_real_int64 528L); (mk_real_int64 250L); (mk_real_int64 240L); (mk_real_int64 132L); (mk_real_int64 261L); (mk_real_int64 499L); ]);
("y6_lo", [14; 16; 17; 18; 19; 20; 21; 24; 25; 26; 28; 31; 32; 34; 38; 39; 47; 48; 50; 51; 53; 54; 56; 59; 60; 62; 65; 66; ], [(mk_real_int64 98000L); (mk_real_int64 250L); (mk_real_int64 64L); (mk_real_int64 194680L); (mk_real_int64 74000L); (mk_real_int64 250L); (mk_real_int64 266000L); (mk_real_int64 120000L); (mk_real_int64 95000L); (mk_real_int64 74000L); (mk_real_int64 60000L); (mk_real_int64 448L); (mk_real_int64 52L); (mk_real_int64 280124L); (mk_real_int64 528L); (mk_real_int64 251436L); (mk_real_int64 77000L); (mk_real_int64 250L); (mk_real_int64 320000L); (mk_real_int64 190000L); (mk_real_int64 240L); (mk_real_int64 193000L); (mk_real_int64 274000L); (mk_real_int64 159132L); (mk_real_int64 105000L); (mk_real_int64 180000L); (mk_real_int64 26000L); (mk_real_int64 158499L); ]);
("y6_hi", [6; 7; 9; 10; 11; 12; 13; 21; 28; 33; 36; 37; 40; 41; 47; 50; 51; 55; 57; 58; 60; 62; 65; ], [(mk_real_int64 173L); (mk_real_int64 216L); (mk_real_int64 173L); (mk_real_int64 104L); (mk_real_int64 292L); (mk_real_int64 192L); (mk_real_int64 375L); (mk_real_int64 320L); (mk_real_int64 306L); (mk_real_int64 375L); (mk_real_int64 250L); (mk_real_int64 364L); (mk_real_int64 489L); (mk_real_int64 564L); (mk_real_int64 248L); (mk_real_int64 69L); (mk_real_int64 28L); (mk_real_int64 4L); (mk_real_int64 4L); (mk_real_int64 19L); (mk_real_int64 72L); (mk_real_int64 739L); (mk_real_int64 1016L); ]);
("ye_lo", [0; 1; 11; 13; 35; 38; 40; 42; 52; 54; 67; ], [(mk_real_int64 28000L); (mk_real_int64 36000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 255000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 397000L); (mk_real_int64 1000L); (mk_real_int64 66000L); ]);
("ye_hi", [15; 18; 19; 51; 67; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("yn_hi", [0; 1; 4; 5; 7; 8; 12; 13; 14; ], [(mk_real_int64 340L); (mk_real_int64 936L); (mk_real_int64 936L); (mk_real_int64 1936L); (mk_real_int64 936L); (mk_real_int64 936L); (mk_real_int64 192L); (mk_real_int64 1840L); (mk_real_int64 192L); ]);
("yn_lo", [2; 3; 6; 9; 10; 11; ], [(mk_real_int64 64L); (mk_real_int64 1060L); (mk_real_int64 144L); (mk_real_int64 64L); (mk_real_int64 64L); (mk_real_int64 64L); ]);
];;
let result = prove_hypermap_lp hypermap_string precision constraints target_variables variable_bounds;;
end;;

concl (Test_case.result)
