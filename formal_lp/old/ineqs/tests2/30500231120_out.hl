needs "nobranching_lp.hl";;

module Test_case = struct
let hypermap_string = "30500231120 20 4 0 1 2 3 3 0 3 4 3 4 3 5 3 5 3 6 3 6 3 2 3 6 2 7 3 7 2 1 3 7 1 8 3 8 1 9 3 9 1 0 4 9 0 4 10 3 10 4 11 3 11 4 5 4 11 5 12 13 3 12 5 6 4 12 6 7 8 3 13 12 8 3 13 8 9 3 13 9 10 3 10 11 13 ";;
let precision = 3;;
(***************)
(* Constraints *)
(***************)
let constraints = [
("azim_sum_neg", [1; 2; 6; 7; 11; 12; ], [(mk_real_int64 276L); (mk_real_int64 28L); (mk_real_int64 28L); (mk_real_int64 276L); (mk_real_int64 258L); (mk_real_int64 258L); ]);
("azim_sum", [0; 4; 5; 9; 10; 13; ], [(mk_real_int64 291L); (mk_real_int64 18L); (mk_real_int64 292L); (mk_real_int64 291L); (mk_real_int64 292L); (mk_real_int64 18L); ]);
("rhazim_sum", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 1021L); (mk_real_int64 993L); (mk_real_int64 1003L); (mk_real_int64 993L); (mk_real_int64 1021L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 1003L); ]);
("sol_sum3_neg", [1; 2; 7; 13; ], [(mk_real_int64 134L); (mk_real_int64 48L); (mk_real_int64 48L); (mk_real_int64 134L); ]);
("sol_sum3", [3; 4; 5; 6; 9; 10; 14; 15; ], [(mk_real_int64 123L); (mk_real_int64 174L); (mk_real_int64 174L); (mk_real_int64 123L); (mk_real_int64 175L); (mk_real_int64 114L); (mk_real_int64 114L); (mk_real_int64 175L); ]);
("tau_sum3_neg", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; ], [(mk_real_int64 993L); (mk_real_int64 886L); (mk_real_int64 945L); (mk_real_int64 993L); (mk_real_int64 891L); (mk_real_int64 891L); (mk_real_int64 993L); (mk_real_int64 945L); (mk_real_int64 993L); (mk_real_int64 909L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 886L); (mk_real_int64 993L); (mk_real_int64 909L); ]);
("tau_sum4_neg", [0; 1; 2; 3; ], [(mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); (mk_real_int64 993L); ]);
("ln_def_neg", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 94L); (mk_real_int64 94L); (mk_real_int64 125L); (mk_real_int64 94L); (mk_real_int64 106L); (mk_real_int64 94L); (mk_real_int64 125L); (mk_real_int64 94L); (mk_real_int64 94L); (mk_real_int64 94L); (mk_real_int64 94L); (mk_real_int64 94L); (mk_real_int64 94L); (mk_real_int64 106L); ]);
("rho_def", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 6237L); (mk_real_int64 6237L); (mk_real_int64 6413L); (mk_real_int64 6237L); (mk_real_int64 6301L); (mk_real_int64 6237L); (mk_real_int64 6413L); (mk_real_int64 6237L); (mk_real_int64 6237L); (mk_real_int64 6237L); (mk_real_int64 6237L); (mk_real_int64 6237L); (mk_real_int64 6237L); (mk_real_int64 6301L); ]);
("edge_sym_neg", [5; 8; 9; 11; 54; 57; ], [(mk_real_int64 60L); (mk_real_int64 13L); (mk_real_int64 134L); (mk_real_int64 141L); (mk_real_int64 60L); (mk_real_int64 134L); ]);
("edge_sym", [12; 23; 26; 27; ], [(mk_real_int64 13L); (mk_real_int64 141L); (mk_real_int64 13L); (mk_real_int64 13L); ]);
("y1_def_neg", [5; 8; 10; 11; 13; 14; 16; 18; 21; 24; 27; 30; 36; 39; 40; 46; 53; 55; 56; 63; ], [(mk_real_int64 87L); (mk_real_int64 66L); (mk_real_int64 52L); (mk_real_int64 26L); (mk_real_int64 19L); (mk_real_int64 24L); (mk_real_int64 26L); (mk_real_int64 81L); (mk_real_int64 108L); (mk_real_int64 24L); (mk_real_int64 78L); (mk_real_int64 95L); (mk_real_int64 108L); (mk_real_int64 21L); (mk_real_int64 17L); (mk_real_int64 95L); (mk_real_int64 87L); (mk_real_int64 41L); (mk_real_int64 66L); (mk_real_int64 108L); ]);
("y1_def", [9; 15; 22; 38; 57; 60; ], [(mk_real_int64 10L); (mk_real_int64 76L); (mk_real_int64 58L); (mk_real_int64 72L); (mk_real_int64 51L); (mk_real_int64 34L); ]);
("y2_def_neg", [5; 11; 13; 14; 15; 16; 18; 21; 22; 24; 30; 36; 38; 39; 40; 46; 53; 55; 60; 63; ], [(mk_real_int64 87L); (mk_real_int64 26L); (mk_real_int64 19L); (mk_real_int64 24L); (mk_real_int64 23L); (mk_real_int64 26L); (mk_real_int64 81L); (mk_real_int64 108L); (mk_real_int64 42L); (mk_real_int64 24L); (mk_real_int64 95L); (mk_real_int64 108L); (mk_real_int64 22L); (mk_real_int64 21L); (mk_real_int64 17L); (mk_real_int64 95L); (mk_real_int64 87L); (mk_real_int64 41L); (mk_real_int64 60L); (mk_real_int64 108L); ]);
("y2_def", [8; 9; 10; 27; 56; 57; ], [(mk_real_int64 42L); (mk_real_int64 10L); (mk_real_int64 53L); (mk_real_int64 27L); (mk_real_int64 42L); (mk_real_int64 51L); ]);
("y3_def_neg", [5; 11; 13; 14; 15; 16; 18; 21; 22; 24; 30; 36; 38; 39; 40; 46; 53; 55; 60; 63; ], [(mk_real_int64 87L); (mk_real_int64 26L); (mk_real_int64 19L); (mk_real_int64 24L); (mk_real_int64 23L); (mk_real_int64 26L); (mk_real_int64 81L); (mk_real_int64 108L); (mk_real_int64 42L); (mk_real_int64 24L); (mk_real_int64 95L); (mk_real_int64 108L); (mk_real_int64 22L); (mk_real_int64 21L); (mk_real_int64 17L); (mk_real_int64 95L); (mk_real_int64 87L); (mk_real_int64 41L); (mk_real_int64 60L); (mk_real_int64 108L); ]);
("y3_def", [8; 9; 10; 27; 56; 57; ], [(mk_real_int64 42L); (mk_real_int64 10L); (mk_real_int64 53L); (mk_real_int64 27L); (mk_real_int64 42L); (mk_real_int64 51L); ]);
("y4_def_neg", [1; 4; 5; 6; 7; 10; 14; 20; 23; 26; 31; 34; 37; 39; 40; 41; ], [(mk_real_int64 60L); (mk_real_int64 79L); (mk_real_int64 55L); (mk_real_int64 100L); (mk_real_int64 40L); (mk_real_int64 17L); (mk_real_int64 56L); (mk_real_int64 17L); (mk_real_int64 141L); (mk_real_int64 66L); (mk_real_int64 15L); (mk_real_int64 66L); (mk_real_int64 60L); (mk_real_int64 29L); (mk_real_int64 79L); (mk_real_int64 26L); ]);
("y4_def", [9; 11; 12; 18; 30; 32; 44; ], [(mk_real_int64 40L); (mk_real_int64 118L); (mk_real_int64 56L); (mk_real_int64 158L); (mk_real_int64 112L); (mk_real_int64 37L); (mk_real_int64 134L); ]);
("y5_def_neg", [5; 9; 11; 14; 15; 18; 24; 30; 38; 39; 46; 53; 55; 57; ], [(mk_real_int64 60L); (mk_real_int64 55L); (mk_real_int64 40L); (mk_real_int64 17L); (mk_real_int64 23L); (mk_real_int64 56L); (mk_real_int64 17L); (mk_real_int64 66L); (mk_real_int64 22L); (mk_real_int64 15L); (mk_real_int64 66L); (mk_real_int64 60L); (mk_real_int64 29L); (mk_real_int64 26L); ]);
("y5_def", [8; 10; 13; 16; 22; 27; 40; 56; ], [(mk_real_int64 42L); (mk_real_int64 53L); (mk_real_int64 40L); (mk_real_int64 56L); (mk_real_int64 17L); (mk_real_int64 13L); (mk_real_int64 37L); (mk_real_int64 42L); ]);
("y6_def_neg", [5; 9; 11; 14; 15; 18; 24; 38; 39; 46; 57; ], [(mk_real_int64 60L); (mk_real_int64 55L); (mk_real_int64 40L); (mk_real_int64 17L); (mk_real_int64 23L); (mk_real_int64 56L); (mk_real_int64 17L); (mk_real_int64 22L); (mk_real_int64 15L); (mk_real_int64 13L); (mk_real_int64 26L); ]);
("y6_def", [4; 7; 8; 10; 13; 16; 22; 27; 28; 29; 40; 45; 47; 52; 55; 56; ], [(mk_real_int64 60L); (mk_real_int64 73L); (mk_real_int64 42L); (mk_real_int64 53L); (mk_real_int64 40L); (mk_real_int64 56L); (mk_real_int64 17L); (mk_real_int64 13L); (mk_real_int64 53L); (mk_real_int64 66L); (mk_real_int64 37L); (mk_real_int64 66L); (mk_real_int64 66L); (mk_real_int64 60L); (mk_real_int64 45L); (mk_real_int64 42L); ]);
("RHA", [1; 6; 7; 9; 11; 12; 13; 16; 17; 18; 19; 20; 21; 23; 25; 26; 29; 33; 35; 36; 37; 39; 44; 47; 49; 52; 55; 57; 58; 61; 62; 63; ], [(mk_real_int64 28L); (mk_real_int64 10L); (mk_real_int64 116L); (mk_real_int64 106L); (mk_real_int64 48L); (mk_real_int64 76L); (mk_real_int64 28L); (mk_real_int64 129L); (mk_real_int64 101L); (mk_real_int64 101L); (mk_real_int64 101L); (mk_real_int64 101L); (mk_real_int64 129L); (mk_real_int64 28L); (mk_real_int64 48L); (mk_real_int64 76L); (mk_real_int64 28L); (mk_real_int64 10L); (mk_real_int64 83L); (mk_real_int64 94L); (mk_real_int64 83L); (mk_real_int64 10L); (mk_real_int64 10L); (mk_real_int64 28L); (mk_real_int64 28L); (mk_real_int64 10L); (mk_real_int64 116L); (mk_real_int64 106L); (mk_real_int64 10L); (mk_real_int64 83L); (mk_real_int64 83L); (mk_real_int64 94L); ]);
("ineq106", [4; 6; 23; 40; ], [(mk_real_int64 106L); (mk_real_int64 48L); (mk_real_int64 48L); (mk_real_int64 106L); ]);
("ineq107", [11; 18; 30; 44; ], [(mk_real_int64 152L); (mk_real_int64 152L); (mk_real_int64 145L); (mk_real_int64 145L); ]);
("ineq108", [4; 6; 23; 40; ], [(mk_real_int64 9L); (mk_real_int64 99L); (mk_real_int64 99L); (mk_real_int64 9L); ]);
("ineq109", [9; 12; 17; 18; 28; 32; 44; 47; ], [(mk_real_int64 123L); (mk_real_int64 174L); (mk_real_int64 174L); (mk_real_int64 123L); (mk_real_int64 175L); (mk_real_int64 114L); (mk_real_int64 114L); (mk_real_int64 175L); ]);
("ineq110", [5; 7; 23; 41; ], [(mk_real_int64 134L); (mk_real_int64 48L); (mk_real_int64 48L); (mk_real_int64 134L); ]);
("ineq111", [1; 5; 7; 10; 14; 17; 20; 23; 26; 28; 31; 34; 37; 39; 44; 47; ], [(mk_real_int64 483L); (mk_real_int64 228L); (mk_real_int64 248L); (mk_real_int64 134L); (mk_real_int64 451L); (mk_real_int64 451L); (mk_real_int64 134L); (mk_real_int64 248L); (mk_real_int64 526L); (mk_real_int64 452L); (mk_real_int64 118L); (mk_real_int64 526L); (mk_real_int64 483L); (mk_real_int64 228L); (mk_real_int64 118L); (mk_real_int64 452L); ]);
("ineq114", [1; 2; 4; 5; 6; 7; 9; 10; 12; 17; 19; 20; 21; 23; 24; 28; 31; 32; 34; 36; 38; 40; 41; 42; 43; 47; ], [(mk_real_int64 465L); (mk_real_int64 45L); (mk_real_int64 236L); (mk_real_int64 422L); (mk_real_int64 232L); (mk_real_int64 465L); (mk_real_int64 197L); (mk_real_int64 662L); (mk_real_int64 440L); (mk_real_int64 440L); (mk_real_int64 197L); (mk_real_int64 662L); (mk_real_int64 465L); (mk_real_int64 232L); (mk_real_int64 467L); (mk_real_int64 457L); (mk_real_int64 226L); (mk_real_int64 648L); (mk_real_int64 467L); (mk_real_int64 45L); (mk_real_int64 465L); (mk_real_int64 236L); (mk_real_int64 422L); (mk_real_int64 226L); (mk_real_int64 648L); (mk_real_int64 457L); ]);
("ineq119", [2; 7; 8; 14; ], [(mk_real_int64 609L); (mk_real_int64 570L); (mk_real_int64 570L); (mk_real_int64 609L); ]);
("ineq120", [3; 4; 6; 9; 11; 15; ], [(mk_real_int64 384L); (mk_real_int64 386L); (mk_real_int64 37L); (mk_real_int64 386L); (mk_real_int64 37L); (mk_real_int64 384L); ]);
];;

(***************)
(* Variables   *)
(***************)
let target_variables = [
("ln_hi", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 2525L); (mk_real_int64 2525L); (mk_real_int64 2725L); (mk_real_int64 2525L); (mk_real_int64 3325L); (mk_real_int64 2525L); (mk_real_int64 2725L); (mk_real_int64 2525L); (mk_real_int64 2525L); (mk_real_int64 2525L); (mk_real_int64 2525L); (mk_real_int64 2525L); (mk_real_int64 2525L); (mk_real_int64 3325L); ]);
];;

(*************************)

let variable_bounds = [
("azim_lo", [8; 34; 36; 38; 39; 40; 41; 56; 58; 59; 60; 63; ], [(mk_real_int64 264L); (mk_real_int64 210L); (mk_real_int64 918L); (mk_real_int64 1000L); (mk_real_int64 524L); (mk_real_int64 352L); (mk_real_int64 210L); (mk_real_int64 264L); (mk_real_int64 524L); (mk_real_int64 352L); (mk_real_int64 1000L); (mk_real_int64 918L); ]);
("azim_hi", [2; 3; 5; 6; 9; 10; 11; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 27; 28; 31; 33; 42; 44; 46; 50; 51; 52; 54; 57; ], [(mk_real_int64 123L); (mk_real_int64 72L); (mk_real_int64 90L); (mk_real_int64 170L); (mk_real_int64 172L); (mk_real_int64 232L); (mk_real_int64 90L); (mk_real_int64 322L); (mk_real_int64 412L); (mk_real_int64 1000L); (mk_real_int64 440L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 440L); (mk_real_int64 1000L); (mk_real_int64 322L); (mk_real_int64 412L); (mk_real_int64 90L); (mk_real_int64 232L); (mk_real_int64 342L); (mk_real_int64 588L); (mk_real_int64 46L); (mk_real_int64 588L); (mk_real_int64 46L); (mk_real_int64 342L); (mk_real_int64 123L); (mk_real_int64 72L); (mk_real_int64 170L); (mk_real_int64 90L); (mk_real_int64 172L); ]);
("rhazim_lo", [7; 8; 9; 16; 17; 18; 19; 20; 21; 35; 37; 55; 56; 57; 61; 62; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("rho_hi", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 3012L); (mk_real_int64 3012L); (mk_real_int64 2964L); (mk_real_int64 3012L); (mk_real_int64 1852L); (mk_real_int64 3012L); (mk_real_int64 2964L); (mk_real_int64 3012L); (mk_real_int64 3012L); (mk_real_int64 3012L); (mk_real_int64 3012L); (mk_real_int64 3012L); (mk_real_int64 3012L); (mk_real_int64 1852L); ]);
("tau_lo", [12; 18; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("y1_hi", [5; 8; 13; 21; 30; 36; 38; 46; 53; 56; 60; 63; ], [(mk_real_int64 60L); (mk_real_int64 285L); (mk_real_int64 427L); (mk_real_int64 546L); (mk_real_int64 320L); (mk_real_int64 215L); (mk_real_int64 500L); (mk_real_int64 320L); (mk_real_int64 60L); (mk_real_int64 285L); (mk_real_int64 46L); (mk_real_int64 215L); ]);
("y1_lo", [9; 10; 11; 14; 16; 18; 22; 24; 27; 39; 40; 55; 57; ], [(mk_real_int64 120L); (mk_real_int64 65L); (mk_real_int64 400L); (mk_real_int64 120L); (mk_real_int64 274L); (mk_real_int64 180L); (mk_real_int64 573L); (mk_real_int64 120L); (mk_real_int64 465L); (mk_real_int64 240L); (mk_real_int64 214L); (mk_real_int64 40L); (mk_real_int64 80L); ]);
("y2_hi", [5; 10; 13; 21; 22; 27; 30; 36; 46; 53; 63; ], [(mk_real_int64 60L); (mk_real_int64 508L); (mk_real_int64 427L); (mk_real_int64 546L); (mk_real_int64 323L); (mk_real_int64 108L); (mk_real_int64 320L); (mk_real_int64 215L); (mk_real_int64 320L); (mk_real_int64 60L); (mk_real_int64 215L); ]);
("y2_lo", [8; 9; 11; 14; 15; 16; 18; 24; 38; 39; 40; 55; 56; 57; 60; ], [(mk_real_int64 140L); (mk_real_int64 120L); (mk_real_int64 400L); (mk_real_int64 120L); (mk_real_int64 104L); (mk_real_int64 274L); (mk_real_int64 180L); (mk_real_int64 120L); (mk_real_int64 40L); (mk_real_int64 240L); (mk_real_int64 214L); (mk_real_int64 40L); (mk_real_int64 140L); (mk_real_int64 80L); (mk_real_int64 494L); ]);
("y3_hi", [5; 10; 13; 21; 22; 27; 30; 36; 46; 53; 63; ], [(mk_real_int64 60L); (mk_real_int64 508L); (mk_real_int64 427L); (mk_real_int64 546L); (mk_real_int64 323L); (mk_real_int64 108L); (mk_real_int64 320L); (mk_real_int64 215L); (mk_real_int64 320L); (mk_real_int64 60L); (mk_real_int64 215L); ]);
("y3_lo", [8; 9; 11; 14; 15; 16; 18; 24; 38; 39; 40; 55; 56; 57; 60; ], [(mk_real_int64 140L); (mk_real_int64 120L); (mk_real_int64 400L); (mk_real_int64 120L); (mk_real_int64 104L); (mk_real_int64 274L); (mk_real_int64 180L); (mk_real_int64 120L); (mk_real_int64 40L); (mk_real_int64 240L); (mk_real_int64 214L); (mk_real_int64 40L); (mk_real_int64 140L); (mk_real_int64 80L); (mk_real_int64 494L); ]);
("y4_hi", [4; 5; 10; 12; 17; 20; 26; 28; 30; 31; 34; 39; 40; 44; 47; ], [(mk_real_int64 225L); (mk_real_int64 236L); (mk_real_int64 250L); (mk_real_int64 376L); (mk_real_int64 1L); (mk_real_int64 250L); (mk_real_int64 250L); (mk_real_int64 200L); (mk_real_int64 85L); (mk_real_int64 250L); (mk_real_int64 250L); (mk_real_int64 500L); (mk_real_int64 225L); (mk_real_int64 271L); (mk_real_int64 200L); ]);
("y4_lo", [1; 6; 7; 9; 11; 14; 18; 23; 32; 37; 41; ], [(mk_real_int64 375L); (mk_real_int64 695L); (mk_real_int64 408L); (mk_real_int64 148L); (mk_real_int64 504L); (mk_real_int64 375L); (mk_real_int64 652L); (mk_real_int64 103L); (mk_real_int64 64L); (mk_real_int64 375L); (mk_real_int64 264L); ]);
("y5_hi", [9; 10; 14; 16; 21; 24; 27; 30; 36; 39; 46; 55; 60; 63; ], [(mk_real_int64 236L); (mk_real_int64 508L); (mk_real_int64 250L); (mk_real_int64 376L); (mk_real_int64 1L); (mk_real_int64 250L); (mk_real_int64 100L); (mk_real_int64 250L); (mk_real_int64 200L); (mk_real_int64 250L); (mk_real_int64 250L); (mk_real_int64 500L); (mk_real_int64 146L); (mk_real_int64 200L); ]);
("y5_lo", [5; 8; 11; 13; 15; 18; 22; 38; 40; 53; 56; 57; ], [(mk_real_int64 375L); (mk_real_int64 140L); (mk_real_int64 408L); (mk_real_int64 148L); (mk_real_int64 104L); (mk_real_int64 375L); (mk_real_int64 252L); (mk_real_int64 40L); (mk_real_int64 64L); (mk_real_int64 375L); (mk_real_int64 140L); (mk_real_int64 264L); ]);
("y6_lo", [4; 5; 7; 8; 11; 13; 15; 18; 22; 28; 29; 30; 38; 40; 45; 46; 47; 52; 53; 55; 56; 57; ], [(mk_real_int64 60000L); (mk_real_int64 375L); (mk_real_int64 73000L); (mk_real_int64 140L); (mk_real_int64 408L); (mk_real_int64 148L); (mk_real_int64 104L); (mk_real_int64 375L); (mk_real_int64 252L); (mk_real_int64 53000L); (mk_real_int64 66000L); (mk_real_int64 66000L); (mk_real_int64 40L); (mk_real_int64 64L); (mk_real_int64 66000L); (mk_real_int64 53000L); (mk_real_int64 66000L); (mk_real_int64 60000L); (mk_real_int64 60375L); (mk_real_int64 73500L); (mk_real_int64 140L); (mk_real_int64 264L); ]);
("y6_hi", [9; 10; 14; 16; 21; 24; 27; 30; 36; 39; 46; 60; 63; ], [(mk_real_int64 236L); (mk_real_int64 508L); (mk_real_int64 250L); (mk_real_int64 376L); (mk_real_int64 1L); (mk_real_int64 250L); (mk_real_int64 100L); (mk_real_int64 250L); (mk_real_int64 200L); (mk_real_int64 250L); (mk_real_int64 250L); (mk_real_int64 146L); (mk_real_int64 200L); ]);
("ye_hi", [11; 55; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("ye_lo", [6; ], [(mk_real_int64 60000L); ]);
("yn_lo", [0; 1; 2; 3; 5; 6; 7; 8; 9; 10; 11; 12; ], [(mk_real_int64 1144L); (mk_real_int64 1144L); (mk_real_int64 1500L); (mk_real_int64 1144L); (mk_real_int64 144L); (mk_real_int64 500L); (mk_real_int64 144L); (mk_real_int64 1144L); (mk_real_int64 1144L); (mk_real_int64 144L); (mk_real_int64 1144L); (mk_real_int64 1144L); ]);
("yn_hi", [4; 13; ], [(mk_real_int64 944L); (mk_real_int64 944L); ]);
];;
let result = prove_hypermap_lp hypermap_string precision constraints target_variables variable_bounds;;
end;;

concl (Test_case.result)
