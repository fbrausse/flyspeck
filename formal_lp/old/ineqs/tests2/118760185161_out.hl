needs "nobranching_lp.hl";;

module Test_case = struct
let hypermap_string = "118760185161 20 4 0 1 2 3 4 0 3 4 5 3 4 3 2 3 4 2 6 4 6 2 7 8 3 7 2 1 3 7 1 9 3 9 1 10 3 10 1 0 3 10 0 11 3 11 0 5 3 11 5 12 3 12 5 4 3 12 4 6 3 12 6 13 3 13 6 8 3 8 7 9 4 13 8 9 10 3 13 10 11 3 11 12 13 ";;
let precision = 3;;
(***************)
(* Constraints *)
(***************)
let constraints = [
("azim_sum", [1; 3; 5; 6; 10; 13; ], [(mk_real_int64 12L); (mk_real_int64 270L); (mk_real_int64 3L); (mk_real_int64 310L); (mk_real_int64 156L); (mk_real_int64 324L); ]);
("azim_sum_neg", [4; 7; 9; 11; 12; ], [(mk_real_int64 46L); (mk_real_int64 185L); (mk_real_int64 171L); (mk_real_int64 45L); (mk_real_int64 11L); ]);
("rhazim_sum", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 869L); (mk_real_int64 1180L); (mk_real_int64 1180L); (mk_real_int64 1180L); (mk_real_int64 869L); (mk_real_int64 1035L); (mk_real_int64 1035L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1038L); (mk_real_int64 1022L); (mk_real_int64 1026L); (mk_real_int64 1026L); ]);
("sol_sum3_neg", [1; 5; 11; ], [(mk_real_int64 12L); (mk_real_int64 143L); (mk_real_int64 132L); ]);
("sol_sum3", [3; 8; 13; 15; ], [(mk_real_int64 171L); (mk_real_int64 45L); (mk_real_int64 171L); (mk_real_int64 6L); ]);
("tau_sum3_neg", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; ], [(mk_real_int64 869L); (mk_real_int64 1035L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1038L); (mk_real_int64 1022L); (mk_real_int64 869L); (mk_real_int64 869L); (mk_real_int64 869L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 1022L); (mk_real_int64 1022L); ]);
("tau_sum4_neg", [0; 1; 2; 3; ], [(mk_real_int64 1180L); (mk_real_int64 869L); (mk_real_int64 1026L); (mk_real_int64 1026L); ]);
("ln_def_neg", [1; 2; 3; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 301L); (mk_real_int64 301L); (mk_real_int64 301L); (mk_real_int64 141L); (mk_real_int64 141L); (mk_real_int64 131L); (mk_real_int64 131L); (mk_real_int64 131L); (mk_real_int64 144L); (mk_real_int64 127L); (mk_real_int64 131L); (mk_real_int64 131L); ]);
("ln_def", [0; 4; ], [(mk_real_int64 42L); (mk_real_int64 42L); ]);
("rho_def", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 5457L); (mk_real_int64 7416L); (mk_real_int64 7416L); (mk_real_int64 7416L); (mk_real_int64 5457L); (mk_real_int64 6501L); (mk_real_int64 6501L); (mk_real_int64 6448L); (mk_real_int64 6448L); (mk_real_int64 6448L); (mk_real_int64 6520L); (mk_real_int64 6421L); (mk_real_int64 6448L); (mk_real_int64 6448L); ]);
("edge_sym", [5; 6; 10; 15; 22; 25; 38; 41; ], [(mk_real_int64 68L); (mk_real_int64 68L); (mk_real_int64 51L); (mk_real_int64 7L); (mk_real_int64 28L); (mk_real_int64 93L); (mk_real_int64 1L); (mk_real_int64 3L); ]);
("edge_sym_neg", [12; 13; 20; 23; 29; 31; 32; 35; 37; 44; 47; 60; ], [(mk_real_int64 7L); (mk_real_int64 167L); (mk_real_int64 15L); (mk_real_int64 146L); (mk_real_int64 78L); (mk_real_int64 144L); (mk_real_int64 109L); (mk_real_int64 304L); (mk_real_int64 161L); (mk_real_int64 22L); (mk_real_int64 31L); (mk_real_int64 20L); ]);
("y1_def_neg", [6; 8; 9; 10; 12; 13; 15; 19; 22; 23; 25; 28; 29; 30; 31; 33; 34; 36; 37; 39; 40; 41; 43; 44; 51; 53; 60; 62; 63; ], [(mk_real_int64 53L); (mk_real_int64 29L); (mk_real_int64 122L); (mk_real_int64 190L); (mk_real_int64 83L); (mk_real_int64 118L); (mk_real_int64 5L); (mk_real_int64 96L); (mk_real_int64 118L); (mk_real_int64 136L); (mk_real_int64 229L); (mk_real_int64 146L); (mk_real_int64 86L); (mk_real_int64 46L); (mk_real_int64 184L); (mk_real_int64 58L); (mk_real_int64 302L); (mk_real_int64 92L); (mk_real_int64 108L); (mk_real_int64 45L); (mk_real_int64 66L); (mk_real_int64 4L); (mk_real_int64 6L); (mk_real_int64 263L); (mk_real_int64 225L); (mk_real_int64 26L); (mk_real_int64 13L); (mk_real_int64 184L); (mk_real_int64 81L); ]);
("y1_def", [11; 18; 21; 24; 27; 32; 35; 42; 45; 52; 61; ], [(mk_real_int64 4L); (mk_real_int64 7L); (mk_real_int64 7L); (mk_real_int64 86L); (mk_real_int64 54L); (mk_real_int64 23L); (mk_real_int64 23L); (mk_real_int64 5L); (mk_real_int64 67L); (mk_real_int64 7L); (mk_real_int64 19L); ]);
("y2_def", [6; 8; 10; 12; 15; 22; 27; 29; 30; 33; 34; 36; 39; 41; 43; 45; 63; ], [(mk_real_int64 68L); (mk_real_int64 18L); (mk_real_int64 118L); (mk_real_int64 57L); (mk_real_int64 7L); (mk_real_int64 30L); (mk_real_int64 54L); (mk_real_int64 52L); (mk_real_int64 62L); (mk_real_int64 35L); (mk_real_int64 44L); (mk_real_int64 56L); (mk_real_int64 28L); (mk_real_int64 2L); (mk_real_int64 4L); (mk_real_int64 45L); (mk_real_int64 121L); ]);
("y2_def_neg", [9; 11; 13; 18; 19; 21; 23; 24; 25; 28; 31; 32; 35; 37; 40; 42; 44; 51; 52; 53; 60; 61; 62; ], [(mk_real_int64 122L); (mk_real_int64 1L); (mk_real_int64 98L); (mk_real_int64 2L); (mk_real_int64 26L); (mk_real_int64 2L); (mk_real_int64 136L); (mk_real_int64 26L); (mk_real_int64 81L); (mk_real_int64 146L); (mk_real_int64 50L); (mk_real_int64 7L); (mk_real_int64 7L); (mk_real_int64 108L); (mk_real_int64 96L); (mk_real_int64 2L); (mk_real_int64 69L); (mk_real_int64 122L); (mk_real_int64 2L); (mk_real_int64 26L); (mk_real_int64 27L); (mk_real_int64 6L); (mk_real_int64 184L); ]);
("y3_def", [6; 8; 10; 12; 15; 22; 27; 29; 30; 33; 34; 36; 39; 41; 43; 45; 63; ], [(mk_real_int64 68L); (mk_real_int64 18L); (mk_real_int64 118L); (mk_real_int64 57L); (mk_real_int64 7L); (mk_real_int64 30L); (mk_real_int64 54L); (mk_real_int64 52L); (mk_real_int64 62L); (mk_real_int64 35L); (mk_real_int64 44L); (mk_real_int64 56L); (mk_real_int64 28L); (mk_real_int64 2L); (mk_real_int64 4L); (mk_real_int64 45L); (mk_real_int64 121L); ]);
("y3_def_neg", [9; 11; 13; 18; 19; 21; 23; 24; 25; 28; 31; 32; 35; 37; 40; 42; 44; 51; 52; 53; 60; 61; 62; ], [(mk_real_int64 122L); (mk_real_int64 1L); (mk_real_int64 98L); (mk_real_int64 2L); (mk_real_int64 26L); (mk_real_int64 2L); (mk_real_int64 136L); (mk_real_int64 26L); (mk_real_int64 81L); (mk_real_int64 146L); (mk_real_int64 50L); (mk_real_int64 7L); (mk_real_int64 7L); (mk_real_int64 108L); (mk_real_int64 96L); (mk_real_int64 2L); (mk_real_int64 69L); (mk_real_int64 122L); (mk_real_int64 2L); (mk_real_int64 26L); (mk_real_int64 27L); (mk_real_int64 6L); (mk_real_int64 184L); ]);
("y4_def_neg", [0; 1; 2; 4; 5; 7; 10; 11; 13; 15; 16; 17; 18; 19; 21; 22; 24; 25; 27; 28; 29; 31; 32; 39; 46; 47; ], [(mk_real_int64 33L); (mk_real_int64 85L); (mk_real_int64 221L); (mk_real_int64 102L); (mk_real_int64 100L); (mk_real_int64 87L); (mk_real_int64 50L); (mk_real_int64 94L); (mk_real_int64 200L); (mk_real_int64 28L); (mk_real_int64 102L); (mk_real_int64 98L); (mk_real_int64 118L); (mk_real_int64 165L); (mk_real_int64 66L); (mk_real_int64 333L); (mk_real_int64 105L); (mk_real_int64 55L); (mk_real_int64 52L); (mk_real_int64 27L); (mk_real_int64 4L); (mk_real_int64 8L); (mk_real_int64 346L); (mk_real_int64 245L); (mk_real_int64 128L); (mk_real_int64 227L); ]);
("y4_def", [3; 6; 9; 12; 20; 23; 30; 40; 41; 45; ], [(mk_real_int64 7L); (mk_real_int64 10L); (mk_real_int64 11L); (mk_real_int64 132L); (mk_real_int64 35L); (mk_real_int64 35L); (mk_real_int64 8L); (mk_real_int64 11L); (mk_real_int64 55L); (mk_real_int64 30L); ]);
("y5_def", [6; 8; 10; 12; 15; 22; 29; 30; 33; 34; 36; 39; 41; 43; 53; 63; ], [(mk_real_int64 68L); (mk_real_int64 18L); (mk_real_int64 118L); (mk_real_int64 51L); (mk_real_int64 7L); (mk_real_int64 111L); (mk_real_int64 52L); (mk_real_int64 62L); (mk_real_int64 35L); (mk_real_int64 73L); (mk_real_int64 56L); (mk_real_int64 28L); (mk_real_int64 2L); (mk_real_int64 4L); (mk_real_int64 55L); (mk_real_int64 124L); ]);
("y5_def_neg", [9; 11; 13; 18; 19; 21; 23; 24; 25; 27; 28; 31; 32; 35; 37; 40; 42; 44; 45; 51; 52; 60; 61; 62; ], [(mk_real_int64 85L); (mk_real_int64 1L); (mk_real_int64 64L); (mk_real_int64 2L); (mk_real_int64 10L); (mk_real_int64 2L); (mk_real_int64 94L); (mk_real_int64 26L); (mk_real_int64 39L); (mk_real_int64 28L); (mk_real_int64 102L); (mk_real_int64 20L); (mk_real_int64 7L); (mk_real_int64 7L); (mk_real_int64 56L); (mk_real_int64 69L); (mk_real_int64 2L); (mk_real_int64 12L); (mk_real_int64 31L); (mk_real_int64 66L); (mk_real_int64 2L); (mk_real_int64 20L); (mk_real_int64 6L); (mk_real_int64 128L); ]);
("y6_def", [6; 8; 10; 12; 15; 18; 22; 24; 26; 27; 29; 30; 33; 34; 36; 39; 41; 42; 43; 45; 52; 53; 59; 61; 63; ], [(mk_real_int64 68L); (mk_real_int64 238L); (mk_real_int64 118L); (mk_real_int64 51L); (mk_real_int64 7L); (mk_real_int64 4L); (mk_real_int64 111L); (mk_real_int64 11L); (mk_real_int64 226L); (mk_real_int64 106L); (mk_real_int64 52L); (mk_real_int64 62L); (mk_real_int64 35L); (mk_real_int64 73L); (mk_real_int64 360L); (mk_real_int64 234L); (mk_real_int64 2L); (mk_real_int64 339L); (mk_real_int64 172L); (mk_real_int64 22L); (mk_real_int64 337L); (mk_real_int64 55L); (mk_real_int64 129L); (mk_real_int64 354L); (mk_real_int64 153L); ]);
("y6_def_neg", [9; 11; 13; 19; 21; 23; 25; 28; 31; 32; 35; 37; 40; 44; 51; 60; 62; ], [(mk_real_int64 85L); (mk_real_int64 1L); (mk_real_int64 64L); (mk_real_int64 10L); (mk_real_int64 2L); (mk_real_int64 94L); (mk_real_int64 39L); (mk_real_int64 24L); (mk_real_int64 20L); (mk_real_int64 7L); (mk_real_int64 7L); (mk_real_int64 56L); (mk_real_int64 18L); (mk_real_int64 12L); (mk_real_int64 53L); (mk_real_int64 20L); (mk_real_int64 123L); ]);
("RHA", [4; 6; 8; 14; 15; 19; 20; 26; 28; 31; 33; 38; 39; 41; 46; 49; 57; 58; 59; 62; ], [(mk_real_int64 312L); (mk_real_int64 166L); (mk_real_int64 118L); (mk_real_int64 9L); (mk_real_int64 154L); (mk_real_int64 81L); (mk_real_int64 154L); (mk_real_int64 11L); (mk_real_int64 143L); (mk_real_int64 20L); (mk_real_int64 56L); (mk_real_int64 158L); (mk_real_int64 82L); (mk_real_int64 160L); (mk_real_int64 9L); (mk_real_int64 9L); (mk_real_int64 11L); (mk_real_int64 4L); (mk_real_int64 16L); (mk_real_int64 4L); ]);
("RHB", [3; ], [(mk_real_int64 312L); ]);
("ineq105", [6; 9; ], [(mk_real_int64 169L); (mk_real_int64 16L); ]);
("ineq106", [0; 2; 4; 7; 10; 13; 17; 18; 19; 21; 22; 24; 27; 29; 31; 32; 47; ], [(mk_real_int64 48L); (mk_real_int64 312L); (mk_real_int64 146L); (mk_real_int64 73L); (mk_real_int64 154L); (mk_real_int64 154L); (mk_real_int64 143L); (mk_real_int64 16L); (mk_real_int64 138L); (mk_real_int64 97L); (mk_real_int64 312L); (mk_real_int64 153L); (mk_real_int64 76L); (mk_real_int64 7L); (mk_real_int64 9L); (mk_real_int64 9L); (mk_real_int64 4L); ]);
("ineq107", [3; 6; 9; 12; 20; 23; 25; 28; 30; 33; 40; 44; 45; ], [(mk_real_int64 9L); (mk_real_int64 13L); (mk_real_int64 14L); (mk_real_int64 171L); (mk_real_int64 45L); (mk_real_int64 46L); (mk_real_int64 1L); (mk_real_int64 46L); (mk_real_int64 11L); (mk_real_int64 34L); (mk_real_int64 14L); (mk_real_int64 21L); (mk_real_int64 39L); ]);
("ineq108", [2; 5; 18; 22; 31; 32; 39; 47; ], [(mk_real_int64 12L); (mk_real_int64 34L); (mk_real_int64 156L); (mk_real_int64 75L); (mk_real_int64 3L); (mk_real_int64 310L); (mk_real_int64 171L); (mk_real_int64 330L); ]);
("ineq109", [10; 25; 41; 47; ], [(mk_real_int64 171L); (mk_real_int64 45L); (mk_real_int64 171L); (mk_real_int64 6L); ]);
("ineq110", [4; 15; 33; ], [(mk_real_int64 12L); (mk_real_int64 143L); (mk_real_int64 132L); ]);
("ineq111", [1; 5; 7; 11; 13; 16; 19; 22; 25; 28; 32; 39; 44; 46; ], [(mk_real_int64 676L); (mk_real_int64 613L); (mk_real_int64 293L); (mk_real_int64 753L); (mk_real_int64 759L); (mk_real_int64 813L); (mk_real_int64 559L); (mk_real_int64 540L); (mk_real_int64 562L); (mk_real_int64 496L); (mk_real_int64 1026L); (mk_real_int64 1026L); (mk_real_int64 132L); (mk_real_int64 1022L); ]);
("ineq112", [6; ], [(mk_real_int64 339L); ]);
("ineq113", [33; 44; ], [(mk_real_int64 422L); (mk_real_int64 92L); ]);
("ineq114", [0; 5; 7; 8; 10; 14; 15; 17; 19; 21; 22; 26; 27; 29; 34; 35; 36; 37; 42; 43; ], [(mk_real_int64 192L); (mk_real_int64 422L); (mk_real_int64 148L); (mk_real_int64 246L); (mk_real_int64 273L); (mk_real_int64 267L); (mk_real_int64 21L); (mk_real_int64 203L); (mk_real_int64 463L); (mk_real_int64 18L); (mk_real_int64 310L); (mk_real_int64 307L); (mk_real_int64 114L); (mk_real_int64 259L); (mk_real_int64 298L); (mk_real_int64 306L); (mk_real_int64 517L); (mk_real_int64 509L); (mk_real_int64 524L); (mk_real_int64 274L); ]);
("ineq119", [3; 7; 10; 14; ], [(mk_real_int64 809L); (mk_real_int64 101L); (mk_real_int64 408L); (mk_real_int64 378L); ]);
("ineq120", [0; 2; 4; 8; 9; 12; 15; ], [(mk_real_int64 356L); (mk_real_int64 15L); (mk_real_int64 768L); (mk_real_int64 421L); (mk_real_int64 197L); (mk_real_int64 428L); (mk_real_int64 221L); ]);
];;

(***************)
(* Variables   *)
(***************)
let target_variables = [
("ln_hi", [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; ], [(mk_real_int64 3025L); (mk_real_int64 3200L); (mk_real_int64 3200L); (mk_real_int64 3200L); (mk_real_int64 3025L); (mk_real_int64 3325L); (mk_real_int64 3325L); (mk_real_int64 2600L); (mk_real_int64 2600L); (mk_real_int64 2600L); (mk_real_int64 3000L); (mk_real_int64 3325L); (mk_real_int64 2600L); (mk_real_int64 2600L); ]);
];;

(*************************)

let variable_bounds = [
("azim_lo", [0; 2; 8; 15; 19; 20; 22; 31; 34; 41; 45; 46; 47; 48; 49; 56; 59; ], [(mk_real_int64 152L); (mk_real_int64 630L); (mk_real_int64 808L); (mk_real_int64 674L); (mk_real_int64 352L); (mk_real_int64 4L); (mk_real_int64 102L); (mk_real_int64 162L); (mk_real_int64 940L); (mk_real_int64 866L); (mk_real_int64 298L); (mk_real_int64 452L); (mk_real_int64 444L); (mk_real_int64 358L); (mk_real_int64 366L); (mk_real_int64 234L); (mk_real_int64 476L); ]);
("azim_hi", [3; 4; 7; 13; 14; 16; 18; 26; 27; 29; 33; 38; 39; 54; 57; 58; 60; 62; ], [(mk_real_int64 435L); (mk_real_int64 144L); (mk_real_int64 247L); (mk_real_int64 172L); (mk_real_int64 118L); (mk_real_int64 176L); (mk_real_int64 127L); (mk_real_int64 142L); (mk_real_int64 146L); (mk_real_int64 78L); (mk_real_int64 268L); (mk_real_int64 182L); (mk_real_int64 364L); (mk_real_int64 424L); (mk_real_int64 518L); (mk_real_int64 24L); (mk_real_int64 172L); (mk_real_int64 1000L); ]);
("rhazim_hi", [4; 10; 12; 28; 29; 34; 38; 39; 41; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("rhazim_lo", [3; 26; 57; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("rho_lo", [1; 2; 3; 7; 8; 9; 12; 13; ], [(mk_real_int64 880L); (mk_real_int64 880L); (mk_real_int64 880L); (mk_real_int64 616L); (mk_real_int64 616L); (mk_real_int64 616L); (mk_real_int64 616L); (mk_real_int64 616L); ]);
("rho_hi", [0; 4; 5; 6; 10; 11; ], [(mk_real_int64 3796L); (mk_real_int64 3796L); (mk_real_int64 2940L); (mk_real_int64 2940L); (mk_real_int64 2792L); (mk_real_int64 1248L); ]);
("tau_lo", [2; 8; 10; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("tau_hi", [17; ], [(mk_real_int64 1000L); ]);
("y1_lo", [6; 10; 12; 13; 15; 18; 19; 22; 24; 25; 28; 30; 32; 33; 34; 39; 40; 41; 43; 60; ], [(mk_real_int64 235L); (mk_real_int64 20L); (mk_real_int64 40L); (mk_real_int64 330L); (mk_real_int64 40L); (mk_real_int64 500L); (mk_real_int64 540L); (mk_real_int64 221L); (mk_real_int64 500L); (mk_real_int64 20L); (mk_real_int64 340L); (mk_real_int64 260L); (mk_real_int64 500L); (mk_real_int64 200L); (mk_real_int64 25L); (mk_real_int64 600L); (mk_real_int64 280L); (mk_real_int64 200L); (mk_real_int64 105L); (mk_real_int64 260L); ]);
("y1_hi", [8; 9; 11; 23; 27; 29; 31; 36; 37; 42; 44; 45; 51; 53; 61; 62; 63; ], [(mk_real_int64 200L); (mk_real_int64 320L); (mk_real_int64 500L); (mk_real_int64 460L); (mk_real_int64 340L); (mk_real_int64 200L); (mk_real_int64 580L); (mk_real_int64 200L); (mk_real_int64 545L); (mk_real_int64 500L); (mk_real_int64 70L); (mk_real_int64 160L); (mk_real_int64 135L); (mk_real_int64 179L); (mk_real_int64 500L); (mk_real_int64 40L); (mk_real_int64 144L); ]);
("y2_lo", [6; 8; 10; 11; 15; 19; 21; 28; 31; 34; 36; 37; 39; 40; 45; 51; 52; 63; ], [(mk_real_int64 62L); (mk_real_int64 528L); (mk_real_int64 64L); (mk_real_int64 368L); (mk_real_int64 568L); (mk_real_int64 168L); (mk_real_int64 128L); (mk_real_int64 340L); (mk_real_int64 388L); (mk_real_int64 332L); (mk_real_int64 308L); (mk_real_int64 107L); (mk_real_int64 336L); (mk_real_int64 272L); (mk_real_int64 8L); (mk_real_int64 436L); (mk_real_int64 128L); (mk_real_int64 330L); ]);
("y2_hi", [9; 12; 13; 18; 22; 23; 24; 25; 27; 29; 30; 32; 33; 35; 41; 42; 43; 44; 53; 60; 61; 62; ], [(mk_real_int64 320L); (mk_real_int64 704L); (mk_real_int64 36L); (mk_real_int64 24L); (mk_real_int64 235L); (mk_real_int64 460L); (mk_real_int64 8L); (mk_real_int64 436L); (mk_real_int64 340L); (mk_real_int64 52L); (mk_real_int64 608L); (mk_real_int64 160L); (mk_real_int64 308L); (mk_real_int64 8L); (mk_real_int64 548L); (mk_real_int64 328L); (mk_real_int64 368L); (mk_real_int64 436L); (mk_real_int64 179L); (mk_real_int64 48L); (mk_real_int64 72L); (mk_real_int64 40L); ]);
("y3_lo", [6; 8; 10; 11; 15; 19; 21; 28; 31; 34; 36; 37; 39; 40; 45; 51; 52; 63; ], [(mk_real_int64 62L); (mk_real_int64 528L); (mk_real_int64 64L); (mk_real_int64 368L); (mk_real_int64 568L); (mk_real_int64 168L); (mk_real_int64 128L); (mk_real_int64 340L); (mk_real_int64 388L); (mk_real_int64 332L); (mk_real_int64 308L); (mk_real_int64 107L); (mk_real_int64 336L); (mk_real_int64 272L); (mk_real_int64 8L); (mk_real_int64 436L); (mk_real_int64 128L); (mk_real_int64 330L); ]);
("y3_hi", [9; 12; 13; 18; 22; 23; 24; 25; 27; 29; 30; 32; 33; 35; 41; 42; 43; 44; 53; 60; 61; 62; ], [(mk_real_int64 320L); (mk_real_int64 704L); (mk_real_int64 36L); (mk_real_int64 24L); (mk_real_int64 235L); (mk_real_int64 460L); (mk_real_int64 8L); (mk_real_int64 436L); (mk_real_int64 340L); (mk_real_int64 52L); (mk_real_int64 608L); (mk_real_int64 160L); (mk_real_int64 308L); (mk_real_int64 8L); (mk_real_int64 548L); (mk_real_int64 328L); (mk_real_int64 368L); (mk_real_int64 436L); (mk_real_int64 179L); (mk_real_int64 48L); (mk_real_int64 72L); (mk_real_int64 40L); ]);
("y4_hi", [0; 1; 5; 6; 7; 12; 16; 17; 18; 19; 22; 23; 24; 25; 28; 30; 33; 41; 45; 46; 47; ], [(mk_real_int64 120L); (mk_real_int64 500L); (mk_real_int64 85L); (mk_real_int64 49L); (mk_real_int64 370L); (mk_real_int64 183L); (mk_real_int64 375L); (mk_real_int64 45L); (mk_real_int64 180L); (mk_real_int64 595L); (mk_real_int64 405L); (mk_real_int64 558L); (mk_real_int64 195L); (mk_real_int64 103L); (mk_real_int64 558L); (mk_real_int64 503L); (mk_real_int64 410L); (mk_real_int64 404L); (mk_real_int64 147L); (mk_real_int64 250L); (mk_real_int64 154L); ]);
("y4_lo", [2; 3; 4; 9; 10; 11; 13; 15; 20; 21; 27; 29; 31; 32; 39; 40; 44; ], [(mk_real_int64 940L); (mk_real_int64 43L); (mk_real_int64 362L); (mk_real_int64 178L); (mk_real_int64 86L); (mk_real_int64 125L); (mk_real_int64 365L); (mk_real_int64 28L); (mk_real_int64 215L); (mk_real_int64 445L); (mk_real_int64 60L); (mk_real_int64 795L); (mk_real_int64 220L); (mk_real_int64 765L); (mk_real_int64 385L); (mk_real_int64 178L); (mk_real_int64 267L); ]);
("y5_hi", [9; 18; 22; 24; 25; 28; 29; 30; 31; 32; 33; 34; 35; 37; 40; 41; 42; 43; 53; 60; 61; 62; ], [(mk_real_int64 500L); (mk_real_int64 24L); (mk_real_int64 460L); (mk_real_int64 8L); (mk_real_int64 181L); (mk_real_int64 375L); (mk_real_int64 52L); (mk_real_int64 608L); (mk_real_int64 357L); (mk_real_int64 160L); (mk_real_int64 308L); (mk_real_int64 368L); (mk_real_int64 8L); (mk_real_int64 178L); (mk_real_int64 8L); (mk_real_int64 548L); (mk_real_int64 328L); (mk_real_int64 368L); (mk_real_int64 404L); (mk_real_int64 308L); (mk_real_int64 72L); (mk_real_int64 250L); ]);
("y5_lo", [6; 8; 10; 11; 12; 13; 15; 19; 21; 23; 27; 36; 39; 44; 45; 51; 52; 63; ], [(mk_real_int64 62L); (mk_real_int64 528L); (mk_real_int64 64L); (mk_real_int64 368L); (mk_real_int64 208L); (mk_real_int64 249L); (mk_real_int64 568L); (mk_real_int64 53L); (mk_real_int64 128L); (mk_real_int64 125L); (mk_real_int64 28L); (mk_real_int64 308L); (mk_real_int64 336L); (mk_real_int64 134L); (mk_real_int64 40L); (mk_real_int64 6L); (mk_real_int64 128L); (mk_real_int64 480L); ]);
("y6_hi", [8; 9; 18; 22; 24; 25; 28; 29; 30; 31; 32; 33; 34; 35; 37; 39; 40; 41; 42; 53; 60; 61; 62; 63; ], [(mk_real_int64 472L); (mk_real_int64 500L); (mk_real_int64 24L); (mk_real_int64 460L); (mk_real_int64 8L); (mk_real_int64 181L); (mk_real_int64 375L); (mk_real_int64 52L); (mk_real_int64 608L); (mk_real_int64 357L); (mk_real_int64 160L); (mk_real_int64 308L); (mk_real_int64 368L); (mk_real_int64 8L); (mk_real_int64 178L); (mk_real_int64 664L); (mk_real_int64 8L); (mk_real_int64 548L); (mk_real_int64 328L); (mk_real_int64 404L); (mk_real_int64 308L); (mk_real_int64 72L); (mk_real_int64 250L); (mk_real_int64 520L); ]);
("y6_lo", [6; 8; 10; 11; 12; 13; 15; 18; 19; 21; 23; 24; 26; 27; 28; 36; 39; 40; 42; 43; 44; 45; 51; 52; 59; 61; 62; 63; ], [(mk_real_int64 62L); (mk_real_int64 221000L); (mk_real_int64 64L); (mk_real_int64 368L); (mk_real_int64 208L); (mk_real_int64 249L); (mk_real_int64 568L); (mk_real_int64 6000L); (mk_real_int64 53L); (mk_real_int64 128L); (mk_real_int64 125L); (mk_real_int64 37000L); (mk_real_int64 226000L); (mk_real_int64 134028L); (mk_real_int64 78000L); (mk_real_int64 304308L); (mk_real_int64 207000L); (mk_real_int64 51000L); (mk_real_int64 341000L); (mk_real_int64 167632L); (mk_real_int64 134L); (mk_real_int64 53040L); (mk_real_int64 13006L); (mk_real_int64 339128L); (mk_real_int64 129000L); (mk_real_int64 360000L); (mk_real_int64 5000L); (mk_real_int64 30000L); ]);
("ye_lo", [20; 27; 30; 31; 32; 33; 35; 63; ], [(mk_real_int64 74000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("ye_hi", [11; 12; 18; 43; 52; ], [(mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); (mk_real_int64 1000L); ]);
("yn_lo", [3; 5; 8; 9; 12; 13; ], [(mk_real_int64 1876L); (mk_real_int64 716L); (mk_real_int64 956L); (mk_real_int64 956L); (mk_real_int64 956L); (mk_real_int64 956L); ]);
("yn_hi", [0; 1; 2; 4; 6; 7; 10; 11; ], [(mk_real_int64 1234L); (mk_real_int64 124L); (mk_real_int64 124L); (mk_real_int64 1234L); (mk_real_int64 284L); (mk_real_int64 44L); (mk_real_int64 56L); (mk_real_int64 1348L); ]);
];;
let result = prove_hypermap_lp hypermap_string precision constraints target_variables variable_bounds;;
end;;

concl (Test_case.result)
