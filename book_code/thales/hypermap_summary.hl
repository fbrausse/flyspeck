(* summary of hypermap.ml file *)

permutes;;

(* `orbit_map f x` set of iterates of x under f. *)
exist_hypermap;;  (* existence theorem for hypermap type *)
hypermap_tybij;;  (* type construction of hypermap *)
dart;; (* extracts darts *)
edge_map;; (* extracts edge_map *)
node_map;; (* extracts node_map *)
face_map;; (* extracts face_map *)

edge;; (* orbit under edge map *)
node;;  (* orbit under node map *)
face ;; (* orbit under face map *)

(* paths done by a new recursive definition *)
comb_component;; (* combinatorial component *)
set_of_orbits;;  (* of a permutation f *)
number_of_orbits;; (* cardinality *)

edge_set;; (* set of all edges *)
node_set;;
face_set;;
set_of_components;; (* set of all combinatorial components *)

number_of_edges;;
number_of_nodes;;
number_of_faces;;
number_of_components;;

plain_hypermap;;
planar_hypermap;;
simple_hypermap;;

dart_degenerate;;
dart_nondegenerate;;

connected_hypermap;;

edge_path;; (* `edge_path  H x i = e^i x` *)
node_path;;
face_path;;

(* contour path stuff.... *)

shift;;  (* rotates e,n,f by triality *)

(* walkup transformations *)


iso;; (* isomorphism of hypermap *)
