
/**
 * Description: Generate coordinates of a planar graph in DOT format.
 * Company: University of Pittsburgh
 * @author Thomas C. Hales
 */
package render;
import graph.*;

public class Gentikz {
    private double x[]; // x coordinates.
    private double y[]; // y coordinates.
    private String archive;
    private Graph G;
    private Coordinate C;
    private Formatter F;

    private int c(double x) {
	return (new Long(Math.round(400.0*x))).intValue();
    }

    public Gentikz(String archive) {
	this.archive = archive;
        F = new Formatter(archive);
	G = Graph.getInstance(F);
        C = new Coordinate(F);
        C.setRandomCoords();
        for(int i = 0;i < 100;i++)
            C.Move(0.02);
        x = new double[F.vertexCount()];
        y = new double[F.vertexCount()];
        util.Eiffel.jassert(x.length==y.length);
        util.Eiffel.jassert(x.length==F.vertexCount());
        util.Eiffel.jassert(x.length==G.vertexSize());
        for(int i = 0;i < x.length;i++) {
            x[i] = C.getX(i);
            y[i] = C.getY(i);
        }
        for(int i = 0;i < 100000;i++) {
            if(C.Move(0.02) < 0.005) // 0.005 was 0.01
                break;
            for(int j = 0;j < x.length ;j++) {
                x[j] = C.getX(j);
                y[j] = C.getY(j);
            }
        }
	// generate tikz file
	Invariant inv = new Invariant(G);
        System.out.println("%tikz format auto generated by Gentikz");
        System.out.println("%in LaTeX file, enclose code in tikzpicture environment");
	System.out.println("% invariant: "+inv.getHash());
        System.out.println("%Set the coordinates of the points:");
        System.out.println("\\tikzstyle{every node}=[draw,shape=circle];");
	for (int j=0;j< x.length;j++) {
	    System.out.println("\\path ( "+ c(x[j]) +  "," + c(y[j]) + 
               ") node (P"+j+") {$"+j+"$};");
	}
        System.out.println("%Draw edges:");
        System.out.println("\\draw");
	for(int i = 0;i < x.length ;i++)
            for(int r = 0;r < F.adjacentSize(i);r++) {
                int j = F.adjacent(i, r);
                util.Eiffel.jassert(0<= j && j <x.length);
                if (i < j) { System.out.println("  (P"+i+ ") -- (P" + j + ")"); }
            }
	System.out.println(";");
    }

    public static void main(String[] args) {
        for (String s: args) {  new Gentikz(s); }
    }

}
