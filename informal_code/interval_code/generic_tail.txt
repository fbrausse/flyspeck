
main()
	{
	cout << "welcome " << endl << flush;
	moduleTest();
	selfTest();
	Timer tm;
	tm.start();
	time_t starttime = time(0);
	cout.precision(20);
	if (testRun()) {
	        time_t elapsed = time(0) - starttime;
		tm.stop();
		int cellcount = prove::get_cellcount();
		ofstream log;
 		char filename[]= //"/tmp/qed_log.txt";
		"/Users/flyspeck/Desktop/googlecode/flyspeck/interval_code/qed_log_2012.txt";
		cout << "QED, ineq(" << ineq_id << "),";
		cout << " secs(" << elapsed << "), ";
		cout << " cells(" << cellcount << "), ";
		cout << ver << ", " << flush; 
		system ("date");
	        if (error::get_error_count() == 0) {
		  log.open (filename, ios::out | ios::app);
		log << "QED, ineq(" << ineq_id << "),";
		log << " secs(" << elapsed << "), ";
		log << " msecs(" << tm.duration() << "), ";
		log << " cells(" << cellcount << "), ";
		log << ver << ", " << flush; 
		log.close();
		char dater[300];	
		sprintf(dater,"date >> %s",filename);
		system (dater);
		}
		}
	else cout << "FAIL" ;
	cout << endl << flush;
	}
