(* ========================================================================== *)
(* FLYSPECK - CODE FORMALIZATION                                              *)
(*                                                                            *)
(* Lemma: Linear Programs                                                     *)
(* Program: Tame Hypermap                                                     *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2010-08-05                                                           *)
(* ========================================================================== *)


Here are a few notes about the proposed formalization of the linear
programming part of the proof.  The linear programming code in this
directory has been written with the formalization in mind. The code
itself does not need to be proved correct.  It is enough to insert
some proof generating scripts inside the iterations that have already
been given.

The main observation is that the branching of cases into subcases has
essentially the same structure as the branching of a goal into
subgoals.  Each time a branching function is called (specifically,
each time mk_bb is called), a justification needs to be automatically
generated, in the technical sense of the word justification found in
the subgoal package.

None of the complicated combinatorial structures that appear in the
"basic" cases of Obua's thesis appear here.  In that sense, what is to
be done is much easier than Obua's thesis.

What needs to be included in the formal justification:

- Each dart classes needs to be formally defined (is strict or weak
  inequality used for example).  For each branchnbound, a theorem is
  needed showing that the data file is valid for that hypermap.  It
  will be a big conjunction stating that such an such a dart belongs
  to such and such a class.

- There are the "special nonlinear inequalities" in head.mod
that need formal verification.

- Let's assume that the nonlinear inequalities are all correct and
that the classification of tame hypermaps is correct.  The nonlinear
inequalities state that if a dart belongs to such and such a dart
class of a bb, then such an such an inequality holds for the dart of
the bb.  

- Each time the linear program solve is called, the dual certificate
  must be checked.  The extra check to be performed is for every
  nonzero coefficient of the dual certificate, the inequality has a
  valid dart class.

