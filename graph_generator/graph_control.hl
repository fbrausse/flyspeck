(* ========================================================================== *)
(* FLYSPECK - CODE FORMALIZATION                                              *)
(*                                                                            *)
(* Software: Graph Generator                                                     *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2010-09-28                                                           *)
(* ========================================================================== *)

(* Code to control the graph generator *)

let graph_dir = flyspeck_dir ^ "/../graph_generator";;
let graph_src = graph_dir ^ "/src";;
let graph_classes = graph_dir ^ "/classes";;

let graph_out =  "/tmp/graph_out.txt";;
let render_out = "/tmp/render_out.txt";;

let set_properties s = 
    Sys.command(Printf.sprintf "cd %s; cp %s /tmp/graph.properties" graph_dir s);;

let compile () = 
  Sys.command(Printf.sprintf "cd %s; javac -d ../classes graph/Generator.java " graph_src);;

let execute () = 
  Sys.command(Printf.sprintf "cd %s; java -Xms300m -Xmx1g graph/Generator > %s" graph_classes graph_out);;

let run() = 
  let _ = set_properties (graph_dir ^"/properties/KeplerFlyspeck.properties") in
  let _ = compile() in
    execute();;

(* run();;   *)

(* rendering *)

let compile_render () = 
  Sys.command(Printf.sprintf "cd %s; javac -d ../classes render/Gendot.java " graph_src);;

let execute_render s = 
  Sys.command(Printf.sprintf "cd %s; java render/Gendot %s > %s" graph_classes s render_out);;

execute_render "0 24 3 0 1 2 3 0 2 3 3 3 2 4 3 4 2 1 3 4 1 5 3 5 1 0 3 5 0 6 3 6 0 7 3 7 0 3 3 7 3 8 3 8 3 9 3 9 3 4 3 9 4 10 3 10 4 5 3 10 5 11 3 11 5 6 3 11 6 12 3 12 6 7 3 12 7 8 3 12 8 13 3 13 8 9 3 11 12 13 3 10 11 13 3 13 9 10 ";;
