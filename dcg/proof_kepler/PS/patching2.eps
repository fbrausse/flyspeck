%!PS-Adobe-2.0 EPSF-1.2
%%Title: patching2.FH10
%%Creator: FreeHand 10.0
%%CreationDate: Fri Mar 01 12:24:51 2002 
%%BoundingBox: 0 0 190 136
%%FHPathName:C:\Documents and Settings\Thomas Hales\Desktop\REVISION\patching2.FH10
%ALDOriginalFile:C:\Documents and Settings\Thomas Hales\Desktop\REVISION\patching2.FH10
%ALDBoundingBox: -130 -422 482 370
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t==#^::et!!!\rGQI2;HZ36Q<Bke3Z5goEP?:BpES2-$
%:s8V<!2jU!7XW;1Y0ACO.a5*#fP&8<ebM"kMX5,:?V1!W5AP#W?.[\R1VEe>eTp5*t#uFMJ&1Af@.FULB"&(.n0U2RQ9P9OQ%$)0-L:5:oSF=(N^&,%&`f7(`b'VJ5*p7q6SF<!:H1,CGUE)0c$P]L$R7("E2$LOhL?]Aj<@Hd+@m+f;5K4(-Jg(o*-)B'gh7`RNgNVhO)@prRW.i:%qJ)\Z1kq1U;.:#HAjIT$k;9$&k2%>0:Y)X-
%:+1UA"m':gpAQo9;G9Q-%$(n,!E7lAh$&:?fpfdV@g5.2C_MR5JEK$/p5p\$[F(4pdU8>6&gQg'`%JiSVcbZt:0XOG):1ZO<(X[X:h1jf>q83<;S^`>>D4l5;m@cJc*OJmm;5pR=R)TW9qoXBCq'm(bI^U6'PLajl#BKO,_p:"bJVmj/TQ7Xf106#b'qm:[7V8sjAhp@\?J#+e+Ln@U<2+X]OruW?<!$&4m]VpCPiW0:>9WJTM9bj\
%:e67LW5bW-6[5L&0Kn@\rG9S\nrXV4t-p3,h0bf8h80u6[H$bIS_Lgf"`X5d"Nr;=PG&]ILao5'C%bJueSf[fqK$QT[+JN1C'do)a^PplmITU)O`R/af.eqr2'J-O]c>D7u%37s[QG9\bR40fMgoB`jKregf)271,ji^K*jYYXmj>^M<igb]h0biur8YnF#e4.)W$5r4KX^j)LgnIcOQS92El?X=M_O8@l)R;j1e9)S`:&ClWU(Lbc
%:m\,!Tn8Uf:Uc!6!g_&>fd_Ukn`R^dBF4?+):'X65%09r[*D-[p8-F5'kY4*<iRT.6]S4NXHi_g7l"5I4^gEO2&3_3_>,<o;HjLN^Oi*-%;7`loPZpW_PnIn>)]W0%Dk4-MD[1uHB*tg^IZWdV3Q7/ddG^:a-&nS"*O`u]df\)dLZfoN[c]tfc-5n#iqZtCOj4$%Nj1eIh^HsJ-t/7(]1D@)LjkS;9VAt&([;$7Nk=h,n<^"`o**Y_
%:kV>VGQ40DmH>fLp&h9cqor.0H3^#%YckpeE\'Nl,EGimkDgptN:TPXCbjR1>/S]-sjUaD.K+en#"eXiX<FE14LZC"`n)f?^edk>SgMWFjKF7>O.`^b_BWNs([]U"bbSmEj+]TJc]7iSX:cM%-PbB3;jMmK@/6jGd-,C?\(Jc;%Xd0lGq.tA6LKr!I:k.[7XI?2bSI:Ru>X"_<*3;f17WaC1ibi/f'a3;XGP.i.b=OLT%kd&9WWNV1
%:l/Yh!>fe/*^:o.\G>+C)q-J+pZCJuTq0Z4SBY]_Hc!:]O5gEASOh0h3(UdKLd`4cX*h_$C&)Om103d``paKQs*eFnYm,5K\!BQ%O!7fX@j?_J5IoFbl?InV\"P3#<?\Zg/#L0_$!$*oR/ZI5.NSO7B_@KMg3p/SV)f2etp@G[P^`K4'IM&fNkXA7]TJY:`U#F`;amh(pQScqPoP6Mc5(U,d+.tp\IThMu"0??gT$H<o);#!J2R3/r
%:s.dU2(QG>hCAtfapeSo>k:LA4)X*dP\f$@KS)a%>VPen.Bm2TM'5&AH,ZS\sD2:W:>bKf$RV3hb8U[i1&F/[-NR0)TfYE$KT#U#7V!Sc;_um@L.ebkC3(l=DY*0ZBd\9M-5b6F":V];[)ess;"i>-_md@XtT3o[K,gEAkdk,jtgi=1ieBfHlhm.%+G"4Sqc\l0GM%0%=Q0p1t6+UcmZCW\*KR6u;_@i:UgPHi`K:`BhdXe&,3N^h6
%:^)0I?1&J$o(2$!nKS>P:?:I&'[.MP<9s6&g4ckji.^m2t9D?:-[$IA`nhsn&gI+Di$=!CE[]&`mMlMg:q*i[5.&a28[M>ojH;(9NaejfD.^T",/Vs^Qde1p8D0qp$BgsY.1p!]oMiifLnpm&=/Q8DLEbSl'V/6b(,if`Aot[SdYl-_:qM5J'B]jK@V);/u_jVKjU%^\ud0#dK<4hq%#B#>0;]*>UZ%N^u8(o;l8s:Nbk(_(cQDc3r
%:G\_[5d2iR=pB6egM+GX+AN8t&=^Q>TBbau]J1nsN/f-s0K=2&nTSk-G"0Lp*+YVoPGNg@`XK!s4+g/A/P]jhp:"LAd;!Pgu=Y$+2Bj>^#a@RG*ZbdYj,UJDVP[Qt[`TnSF1eI6VXQ!)l%Qq<GjP;s?8]=s-`_C9h;fe5XJBPOCA\DZ/h$76PU@!]1=4Wk==g4>&X\rl2RGI=nW0X,P.]_s2Sg&po*nKEnPp*Sfl4&\`cI-:VCK-Z>
%:^bW-sLb'C8fM3ZsYl?l_`0\Ca?')U#Ic?hYq[5'&+XaD,n<,&BTTq?Wk,XZa"i4]ZrgS1DrcVc3`Vh`kZ2*.rjJq^iKtBs]8n>"6TD=X@jairohSN?JFUtj`r9GW\0$$UhefuhqdgJ0m3TSs:a@VXRGW3VkGB;<`Fc8@okcOL;oQH\B=FUgeO<hii3R#RqkVW5@nmKrWSQs-tH]ISTSRMX_gHb$cTL8?IaO),O"/<Q-,LhTr\'\L7
%:`X1o2Pr`[>;=JgZ/KmK_!+qVmQ]+\QUJ]!?kpWpf1]$a(3b-#E2?,@#RqdC25Yo`f1f16\5Su5i'@s?>*_X;&oSBQ\4oVh`N(.1db/RpCR/6m2p\,bd`'<nT>+op&nLl!`g3s!IYQb;9gLkt@i.%,$W+l1d[k1jF6dtA([VsNVNW0"@GdVRagj,n85XVl:.USha\3h61<R-edS\>ohP;u<(Q9d<FPp&t\Vl!"uLuAC*=aE:Nc$Xjr
%:12\^nN]mH!l(N8O?Iu>s.f>@#'#VS1:[OEdm:ZHiPPu(a3tVAX;gS[s(XWL5ajqr_&a*c3^t)VH=[6kU^_TO[UV0FkUL2FQ(O1]'P-YAA-27(=nGNae62F"a@SMi=hG*I4%tTHsNp'b6r#g*']15LGQm+qk;-k4c.2fOl9Yaqu4NDF(TD,YNm1O4#l'LYPoMjN7`_h)qVS<<j/8:sOC8@qjQM367.fC8ren/2l8&%A462C1qI>r7+
%:-bYXkKROOdr_npW)Z>VQI5Tj\=aC^1:ti+Z_.>;./"2$/rf:2Q[Y_6IgcfPWKU1XQ1WNEQcJko?r"a_9_?%;E^Fc-_<.BIJ#LE-QOa]7WeF6LlTS37S2*B-/p-7?j(YDk@_XHrmPF;%A+C]o:+1"Xig-7(]bOh9[H\]VS-FgJ\hbClO(dQ?D_+QB"9\FY?De=7s@@sW*jCI(U>%[69\W`j*C;[W<%mN;XfJpm]'\5m20mV@&U:C_l
%:!*g3"U+klr2U#V`c'd8aj]%K#@Me0J.9(8F(<'uJ?]<ak9I;Y=c'i7%l0pUW$+/IoQpVk\YUV@STmD%&:a@O>@5FO:Vri'-o.*r>^"d[@248-g@V0]OFR%AL[T<F%(,H\"a,oK6Tui/jUF-PB3PDKV@.2(m`6:bZ9-t7sj]f`;`[CV;=q4t\`B<DV-.:13@Nh;cqo76.Gr+]s&>.3:Z>722M;Fb@,b'Oeq6^UGClROdLHnXt\HgP-
%:Z-2gLG&qIN*mL>6e^Up9Y+:TMPHBs@-=O??Q<V\3B*V@Vl.1t?4Roela2ckp>@WpgbK$ANB"f!`MWE5h$`Bs/90j-:>7.*fOVCJ"3H^?f9iVM?+g-sP7b/R-&IsCI+BkjHTM\Q5`ms0HVXj8)_MfLPF0ehsTI"G!NqFij,DVXVWTD+$:-4l(og\M\p-hT,:Ug6"D+FQl8,Z^,D-\ODNh(!)&,5j.SA_G+Wl/-`g%lAEGrNq5l^G_A
%:>,[8+rZ7^)-p%%S8q$Z<\'oi4U[9D/\&W,!19.U:@ubLQ33Ja9ej(Ll[%*8g0f,9D`iLYt/$#aq>DBa=h/n8^C0-3>HT-m,__;.E7c-<NXq`0@1#d!Cq*o^XkKhBimEtq)`lJJ((c9/sMDFAXKBEi_G[\<(I3:5n/!$GM.?/l!;2K=2+cm'_"dX8STS=A96U3,BKfdRcM61`R;Q.Qt@>+L&AYT>o-X[a6Z)`)WI5NBo-5ACrP4=>C
%:-$(UO]+S9*aF9D+qcmL[jD7H8D'B<qBOP@.fq4V$RZ_(^a/>ei=%pa)&.sR\B_Y1Nj^Dfcgg]WuE2o:]0dI%`J\YGkWaOIk`ugaBcR+S'1!V?r'uG(-?ZK=22#<NTaf0u]6om_rKYe$]R(4K,#37D)!m*u[s0=aJ17\[u=0JP84PIo1_Z"4^L@a0R0eS,8iJrFta[><5A3/jSlo<_@Kt?!4Ti&G]*(n--/(%moP0%=V(lsDP#.O%r
%:=/&NMYiMsgq,Ca52X+Wt349H:=%!aS6YRl.0Xg&EnJ&$O9'WBOQ[f?=;."9;"L>*f)O^q+q.$+t[4..)f.mJp<YM`hYlsZCUWY+&#[Zj<*'6A&*&N9:]Z]JtcJW0hii9972kDjbGW/TTb<\t-&e67cVN3_`"cNcX'DO7(r](6"0;F9EDH6Q^4IiV&JG=gb(cBV'a<M&7SMTML@$+q#,<h_Bpj?`dfEVXB)*1CPOQDsQS>X\Fhh/]Y
%:.:eAEYEEC71c%6Mh:4D>]c%5R:Fu_s_[EdQ_hhcN?pRBj[nf^d/nGZUH3H=%gP+bIe8TlF^"XV8-'f:_b#AYrY(fGJK98f:=!pjBPG(BWG^?3),2'XL*mIAJPPndN*O1PG`'V@U_`2d2!\so*9k)Y=s"tn(FLIb4DpCOhA4ZE`LXIo(fX5::dk\4K5AH2Q3f4/l<C`2!fA)&5r$U72DXt$uL6IMSdE7d'n)ef@9\dj/\^<%a-cm4'
%:O'=<IF(.URq5J,pbK\eDOo;_06<C:ccFGfs]9tggf?@[F/!@p[f>Lj).s@U$,i&+D+)(Jkl`45bbF@1!qr?@7SenK;@#nJ8gU<lkWfFZEoXgMsoKm*3HDjn%[tAj3Vo,hgYrs\XPhk2^.Ba2!Dd#lSh;-nreC7q`HR\]_A!,9,lpsc[@m@AEXmk\Y,C-2e:.eZ5[^Wu<`p8(SqhfOu-e-0588lB%e[:m&W[cj&>C^9Q@lqM5MdI`m
%:\%VOVC[nmp$Fp*_04/VHQLqJF0et_b?;@cg!W'J8^V@/sh6?jD7Q$[XAE-b\L;ARcFNGjc(J3[]+2:$<`P;$4o`AE`k8fH>,opP8%U7N8H&kbXGWF#%Z1309qJDc%F>b#qpV`LaMU05lDk4@W\E-`7Dp9=&%>a1iq4"eJ59:i-eQ(:WZo/k7Y7J*DICnBMmp>VRe/JTMIm[Mo5/jA-,W/67FECo8ft/%@jIO[02?A*DnsjNSr_Hsf
%:%L@["l+"ghb5ors%tuZrq88Q#(DRcW>uh84\-O_4@m>1RL`=@E60!??rh>N]'nkQ1q4WMVoXlo'A^'#Hf.U!S7Pcjf0k!^lT&)MtPLs%'I*LQHg5+3rHUSSVobDdAK&-;/onim!`Bph2%%\;i=(Ee+`RNE./a4">C>S&o)'_KNl"p943gGaO`jWmYi!kBM^W4DYEV_YLAOVr2`/iT<Ue(r"D7m9iL!MDN[^mC2$F[<Ae@fQZ](G6M
%:pgTOrTpAD?Hcf`uE)j=(brL2pqemA"fUT%FI.'s)<GApdoh54*9<!-aqWBiP35Obc>Ko)i@bK!g50PIid&UXKA%PgM(0F[;<r7irEbd^)^$6A5oVV:_XQ!Y[DbH+GbD9d-mIk5G)HM*k9OFdVDII*pHJeD&R<Ep][^FWnpm^lmbG)/T1+A9/[L[<N]f4&g\#@/&P98tRB@W;IX*ejb=<*r05Gh\,@mfE':GH=:3:kFSE?r9dS!0&W
%:FM9H;RtC2UY6o,trJe-r9<H'DajliJda,.U?3G6BgW8$OU6s^]\6go994%T:%F0MO,P;LY`3A2gd<HbNrH@pShkJcRg/Yf@<g(k`E!?!dX2d;is$#bH3q^qi`b!3'jMUMN:M?d!>jfdTB.:_Sk%JcE3o%&qng/+rnpcHBEGVBsET.0?D_[G(D,8>VQu6JAYt;ITiYY;@7]1iPi09/O7B>X;Z[r]-m:^>eC;g&,XT5C:6dF\M2'DmS
%:'ltF74]Y7_UqP5OD--%[m=s#0UrLYr(cQ1EjbD5Q)aq,7[,#CGai\o,L6\mCi`I'[/+-JENPM[C?#IBb;7FE=05fI<$1F?f<Eo&MYAQ5jf^E]X7<QAXAJabPC1=4QG0:*u:!!3hcC8%`@%hBQ:f0pPg`EY`eYn]EdZLdQU0C$di)0l`=1,[b>.pHtEZ36.<2Wn]a%Gk^<up*;m;9m_L_cV.Q&51oe>Md8bU\/6c+9LE^\Gb&<r^ZQ
%:kMKT5D]UZcHtM3NTUD?.Zg$7:_MdAbFukNnIC?!>R.$F"h_Kd>ZZ(S_5%KD+=6DKBj1[2+0]jOK4Egfr@dR?UVrUQn3EqE&dN62d>Fda"$chKTF9fR(NoRPBe8Ck,ar+\K/5-Q!6i(+jH4V$GlA2U6FJ,bJmC94eBPI2_mrX6iVkW"-+45#Rn'Nr`/H%d2!W=0iK)URtUJK;[e">!bkYLHhkg/KHl-o9+3%XS'HBCBYT;Bm(Eo-"4
%:EF9IMAEb7Ooq;%VqA]8n+RsI/L%!-IgmW2#)K<RE'-D7l%QKZ>K=EkuVuCTOk)_s?C*(C^/G6[GWGCgE,5PMlFPQlu,$=+B!%S*R!09T`Ch7$aCh3SJ"@@-OF(eNeDu]qA6?73iBE/(D<^^Y3F8u?L<E"![Bl7P`!VB<9D.7F"6Yp1PErZ4^:h=ZgE+NO$Bm+&XEbT%a!<>i5:L\'M@rq\No1`/*EbTE(!!):Y9PJQi!!)+T:p(J2
%:6tp.Q!!2pa@<?'[Bl.D]!.m[26uQR+ART+\EW?(u6>URMCB+?\7;QOPASuSi!Wk]/F`V4iBle@r!PDH-E)0qX!!!En7mogbDKGjYN^d`!AOL*N@rc:&FDl1"!KL,f@T6cFCh3SIo2BpO@W-'VBju*kEd7Wc;,D:OE(k=p!!,ejEc5H!A9Dp(!!#YZDes?42?3_^6t(1G!!)C\:18!N!!(G@Ble@r!6@iJDIlXQF8u;a7;QOP6WLtr
%:9PJQi!!%43Ch7H[Ec5njF*%B^=$q+OFDl"mEc5Ff!/sB]B6A6+!!.XLFEq\6:i^Jn9QP:U!I[mcDfe?bCi=>P!!"Z=@<6-m9PJBU!!"W<@<6-m7VQ[T!!'#hF_PAtErZ5$:gnHZ!!#SXDes6$@ruX0!!-G)ARfgjDJ*cs!!'`,@<lF)!!"?3EcQ)B:gnHZ!!&fbEc6)>!!!!!`rWRKI0$_VI0$_VI/q[qa8j9]a8j9]a8j9]C2DRa
%:a8j9]a8j9]dJtTo-3,@m-3,@m-3,@mdK-`VI0$_VI0$_VI0$_VI0$_VI/q[qm/TcZG6$n/[/do@G6$n.^&W?WG6"WCl2e9m^&W?Wl2e9m^&W?Wl2e9m^&W?WG6,)Om/ZMR0*(A?JH5';l2^2P[/l9f/ci?[$j!a:]E%=!l2^2O0*$1s3<8FH<ralRG6'](G6'](0*$1s?N>9N3<47(3<47(3<47(3<8FH<ralRG6'](G6'](1t((,
%:G6'](m/U2fG6'](0*/H\G6'](G6'](l2[U[l2\NudK&Y8]E*Q`dJtp#G6$%l*WYI+q>mu)q>mu(G5s5qG6'](l2[U\q>fd]oE"Oao)Z6#"9@]g!s,e2"9@]g!s/N(2ZW4FG6"WCm/V>1l2[U\]E%3sm/aTpm/aTpm/aTpm/aTpm/UAkm/UAkm/Z_Xm/aTpl2ZhEm/aTpm/aTpm/Z_Xm/Z_Y;#ot`l2ZE*CghEs6tKkHA7Yc@m%MY5
%:s8W*!s8N)X
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1822 -2006 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
userdict begin /supdict 65 dict def end 
supdict begin 
/str1 512 string def     
/dx 500 def     
/dy 700 def     
/cnt 0 def     
/newinside {
{flattenpath}fp clipper
pathbbox
1 index 4 index sub round cvi /dx xdf
0 index 3 index sub round cvi /dy xdf
pop pop translate
222 srand
newpath
} bind def
/randint {
rand exch mod } def
/rand8 { rand -16 bitshift 255 and} def
/rand2 
{ rand -16 bitshift 3 and } def
/brandxy {
dx randint dy randint } def
/x1  
{ angle cos abs dx mul } def
/x2  
{ 90 angle sub cos abs dy mul } def
/y1  
{ angle sin abs dx mul } def
/y2  
{ 90 angle sub sin abs dy mul } def
/backgnd 
{ xstart ystart m
xstart ystart abs L
xstart abs ystart abs L
xstart abs ystart L
closepath fill } def
/incrcnt  
{ /cnt cnt 1 add def } def
/colorchoice
{
/found false def  
gray?
{/CCblack [0 0 0 0] def
color 1 exch sub
CCblack 3 3 -1 roll put
CCblack vc} 
{color length 2 eq
{color 1 get type (text) type eq
{0 1 spots length 1 sub
{/cnt xdf      
spots cnt get 4 get color 1 get eq
{/found true def exit} if 
} for
found {color 1 cnt put} {color 1 3 put} ifelse
} if 
color vc
} if 
color length 4 eq {color vc} if   
} ifelse
} def
/gray?  
{ color type 0 type eq color type .0 type eq or } def
end 
userdict begin /texturedict 50 dict def end
texturedict begin
/scalefactor .24 def
/angarray [0 90 180 270] def
/imagesize 72 def
/scaledsize
{
imagesize scalefactor mul
} def
/angget
{
angarray aryindex get
} def
/xtransget
{
xtrans aryindex get
} def
/ytransget
{
ytrans aryindex get
} def
/imageloop				
{
0 scaledsize dy		
{
/ycur exch def
0 scaledsize dx
{
/xcur exch def
gsave
xcur ycur translate		
/aryindex rand2 def	
angget rotate
xtransget ytransget translate	
imagesize imagesize scale	
0 0 moveto
(a) show
grestore
} for
} for
} def
end
/invbuf{
0 1
2 index length 1 sub
{
dup				
2 index exch 	
get 			
255 xor			
2 index 		
3 1 roll put
}
for
}bdf
/settexturepattern
{
texturedict fhtexturepattern get
invflag
{
dup length /str2 exch string def str2 copy invbuf
} if
/fhtexturepattern xdf
} bdf
/texture {	
gsave
[0 0 0 0] vc
filler	
grestore
supdict begin  
/txsave save def
newinside
vc  
texturedict begin
/fhtexturepattern xdf  
/invflag false def
fhtexturepattern (burlap) eq		
{/imagesize 144 def}{/imagesize 72 def} ifelse
fhtexturepattern (light-mezzo) eq {/invflag true def} if
fhtexturepattern (light-mezzo) eq fhtexturepattern (heavy-mezzo) eq or
{/fhtexturepattern (mezzo) def} if
9 dict begin
/FontType 3 def
/FontMatrix [1 imagesize div 0 0 1 imagesize div 0 0] def
/FontBBox [0 0 imagesize imagesize] def
/PaintType 3 def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} bind for
Encoding 97 /thetile put
/CharProcs 2 dict def
CharProcs begin
/.notdef {} def
/thetile {
imagesize imagesize true
[imagesize 0 0 imagesize 0 0]
{fhtexturepattern} systemdict begin imagemask end
} def
end
/BuildChar {
imagesize 0
0 0 imagesize imagesize
setcachedevice
exch begin
Encoding exch get
CharProcs exch get
end
exec
} bdf
currentdict
end
/TextureFont exch definefont pop
/xtrans [0 0 scaledsize neg scaledsize neg] def
/ytrans [0 scaledsize neg scaledsize neg 0] def
/TextureFont findfont scaledsize scalefont setfont
fhtexturepattern (burlap) eq fhtexturepattern (denim) eq or
{
fhtexturepattern (burlap) eq
{settexturepattern burlapimageloop}
{settexturepattern denimimageloop}
ifelse
}
{settexturepattern imageloop} ifelse
txsave restore
end
end
} def
texturedict begin
/light-mezzo
<> def
/heavy-mezzo
<> def
/mezzo 
<
FF 00 FF 00 FF 00 FF 00 FF 9E 7E 1F A8 FF E1 FD F1 C7
DC FC 3F F8 FF F8 FD FB 83 FC 78 7F F0 F0 F8 FC FF FF
FF F0 7F F0 F0 78 7D 9F FF BF FC F1 F1 E0 7F 3F DF 87
8F FF E1 F1 E7 FF 3F CF 07 E3 FF EF 73 C7 FF 1F 80 1F
60 1F E7 03 C3 FE 1F 00 FE 70 07 E7 83 81 F8 1F 01 FC
70 03 CF 83 C1 F0 7F 3F F8 7F 83 FF E7 C1 E3 FE 7F FC
3F C7 FF FF E0 E7 FE 7F DE 1F FF C3 FF F0 EF FE 7F 0E
3F FF 87 FF F8 FE 7E 7E 06 79 FF EE 7E 7C FC 3F FC 06
F0 FC CC 3C 1E FE 3F FC 07 E0 61 CE 08 0E 7F 1F FC FF
E0 01 DF 81 E4 7F 1F FF FF E7 83 FF C3 F0 7E 1F FF FF
E7 E3 FF C7 F0 7C 3F 8F FF E7 FF FF FF FF FC 7F 8F FF
E7 FF E3 FF FF F9 FF 8F F9 F7 FF C1 FE FF E3 FF 8F C1
3F 9F C1 FC FE 07 E3 1F C0 3E 0F C1 F9 FC 1F E0 3F E0
7E 07 F1 F1 F0 1F E0 FF F8 7C 0F F9 F1 E0 1F F1 FF FE
7C CF FF F0 F0 3F FF F3 7E 7C EF FF F0 F8 78 FF F0 3E
3F E0 3F E0 7F F8 7F FC 3E 3F F0 1F 80 7F F0 7F FE 3C
9F F8 7F 8F FF F0 7C FF 79 8F FF FF 9F FF F0 78 7F F9
87 FF F3 FF C1 F0 F8 7F F1 9F FF E1 FF E1 FB FC 7F F9
FF 83 E0 FF F7 FF FF FF FF FF 01 E0 FF FF FF FF FF FF
F7 39 E0 F8 FF FF 8F F7 FF E3 79 E0 F8 FE 1F 07 F3 DF
63 3B E1 F8 7C 1E 37 FB C6 43 BF F1 FC 78 0F F7 FF 80
43 FF F0 FC 78 1F F3 FF 80 63 FF FD FE 78 7F F8 7F 80
60 FF BF FE 78 FF F8 7F 80 20 3F 0F FF F8 FF F8 7F F0
00 3E 07 FF F8 FC 3C FF FE 03 FE 07 FF FD FC 1F FB FE
FF FC 07 FE 5F FE 1F F0 7F FF FC 0F CE 0F FF 9F E0 3F
FF FE 1F 8F 1F FF FF E0 7F FF 7F 3F 87 1F E3 FF F0 7F
FF 1F FF 8F 9F C1 E1 F3 F9 CF 8F FF 0F 9F 03 F0 7F F9
87 87 FF 0F FC 07 F8 7F F9 87 CF FF 0F F8 1F F8 7F F9
07 CF 9F FF F8 7F FC 7F FC 0F FF 8F FF F8 FF FF FE 3E
7F FE C3 FF FC F8 FF FC 1C 7F 78 E1 FF FF F8 7F FC 0C
7F 20 E0 FF FF FC 7F FE 0E 1F 00 F9 F8 FF FC 7F FF 0E
1F 81 FF F8 06 FC 20 3F FE 1F FF FF F8 00 FE 00 3F FC
FF FF FF F0 73 FF 80 3F FD FF FF 7F E0 FF FF FC 3B F9
FF FC 77 C1 FF CF FE 30 F9 F3 F8 F3 C7 C3 CF FF F8 79
D3 C3 F9 FF 87 E0 7F FE 3D 83 CF F9 FE 07 E0 C7 FE 1F
C3 9F FD F0 7F E7 E3 FC 3F FF 00 FF 00 FF 00 FF 00 FF
> def
end  
texturedict begin
/burlapimageloop
{ 0 scaledsize dy
{ /ycur xdf
0 scaledsize dx
{ /xcur xdf
gsave
xcur ycur translate
/aryindex rand2 def
aryindex 1 and 0 eq
{ angget rotate
xtransget ytransget translate } if
imagesize imagesize scale
0 0 moveto
(a) show
grestore
} for
} for } def
/burlap
<
FC 00 00 00 07 E0 00 00 00 FC 00 00 00 7E 00 00 00 3F
E1 FE 0E 00 23 FC 00 00 3F FC 03 FF FF BF FF FF F0 0F
C0 7F 1F 80 21 F8 00 3E 3F EC 03 FF FE 31 FF FF 38 07
C0 7F FF C0 71 F8 01 FF FF CC 07 FF FE 01 BF FF 08 07
E9 FF FF C1 F9 FF F3 FF FF C6 07 FF FC 00 1F FF 08 07
E3 FF FF C0 79 FF FF FF FF 86 07 FF 88 00 4F FF 88 07
F3 FF FF 60 39 FE 01 FF FF 82 03 FF CE DC 0F FF D0 3F
F0 FF FF 20 79 FE 21 FF FF 98 03 FF FF 84 0F FF E0 7F
D0 7F FF 00 79 FF F8 1F FF 9D 03 FF FF 00 07 FF E0 FF
90 7F FF 00 7F FF E0 07 FF 8E 03 FF FF 00 07 FF E0 7F
10 FF FF 01 FF FF C0 07 FF 98 03 FF FC 00 07 FF E0 7E
30 FF FF 87 FF FF C0 07 FF F1 87 FF FC 00 0F FF F0 FA
70 3F FF E1 FF FF 80 03 FF 80 C7 FF FE 00 1F FF FF F0
78 3F FF F1 FF FF C0 03 FF 80 FF FF FC 00 2F FF FF F0
78 3F FF F3 FF FD 80 13 FF C7 FF FF FC 10 0F F9 FF FC
78 7F FF FF FF F8 80 1F FF FF FF FF FC 10 0F F8 81 3E
78 FF 8F FF FF F8 00 1F FE C7 FF FF FC 00 07 F0 00 0E
78 F6 00 3F FF FE 00 1F 00 80 7F FF FE 00 70 E0 00 06
38 E0 00 0C FF FE 00 3E 00 00 01 FF FC 00 FF 80 00 00
10 E0 00 10 00 FE 00 1E 02 00 00 3F FC 61 FF C0 00 00
00 60 00 20 00 3E 00 1E 06 00 00 3F FF C3 FF C0 00 00
00 20 00 00 00 1C 00 FE 00 00 00 78 FF 8F DF C0 00 60
00 00 00 00 00 0F 8F FC 00 00 00 60 7F 1F 1F C0 00 60
0C 00 40 00 00 1F F4 1C 00 00 00 00 FF 3E 13 C0 01 F8
1C 00 40 00 00 4F E0 00 00 00 00 00 FF FE 11 C3 E7 FC
7F 00 40 00 00 EF 60 00 04 00 00 21 FB FE 01 FF FF FE
7E 00 40 00 00 7F 00 00 3C 00 00 63 F0 3E 01 FF FF FE
7C 0C C0 00 00 FF 00 01 FE 00 02 FF E0 0C 01 FF F8 FE
40 0F E0 00 01 FF 80 07 FF 39 E3 FF E0 00 01 FF F8 06
18 0F FF FF 9F FF C0 0F FF FF FF FF EF 00 01 FF 80 00
98 1F FF F9 FF FF C0 1F FF FF FF FF FF F0 01 FF C0 03
98 1F FF FB FF FF C0 7F FF FF F8 FF C9 FF B3 FF C0 0F
F8 1F FF FA 0F FF 80 7F FF FF F0 7F F8 7F FF FF 60 0F
F8 3F FF F0 0F FF 83 FF FF FF E0 3F FF FF FF FE 30 07
F8 3F FF F0 1F FF 83 FF FF FF E0 1F FF FF FF FC 30 03
F8 7F FF E0 3F F8 03 FF FF F9 F0 1C 7F FF FF F8 10 03
F0 3F FF C0 1F C0 00 FF FF F8 70 38 70 01 FF F8 10 C3
FE 1F FF C0 1F 00 00 0F FF FF 30 30 00 00 18 00 18 F7
FF 3F FF C0 0E 00 00 01 FF FF 94 30 00 00 03 80 0C F7
F8 0F FC C6 06 00 00 03 FF 90 0C 30 00 00 01 C6 00 7F
F8 03 FC 00 06 00 00 00 FF 90 1C 20 00 00 01 E1 88 7F
F0 00 FC 01 C2 00 00 00 FF F0 18 02 00 00 03 F0 7C 3F
80 00 1D 80 E2 00 00 00 EF F8 18 07 80 00 03 F8 10 1F
80 00 1F C0 62 00 00 01 8F F1 18 1F 80 00 43 FF 10 1F
00 00 1F E0 03 00 00 03 9F F0 3C 1F E0 03 8F FF 88 0E
00 00 1F FC 03 C7 FF FF DF F0 1C 1F FF FF FF FF C8 00
1F E0 3F FC 03 CF F7 77 FF FE 06 3F FF BC 1F FF F8 20
1F 8C FF FC 03 FF 81 21 FF FF 07 7F FF F0 1F FF 90 38
3C 04 7F FC 03 FF 80 00 FF FF 07 FF FF E0 0F FF 80 1C
78 00 7F F8 03 FF F0 00 FF F8 20 FF FF E0 07 FF E0 1E
78 00 FF F8 03 FF E0 00 7F F8 03 FF FF F0 07 FF F8 7E
30 00 7F F8 07 FF E0 00 3F FC 0F FF FF E0 07 FF FC 7E
70 00 3F F8 0F FF E0 00 3F FE 0F 7F FF E0 0F FF E0 7E
70 00 3F F9 FF FF F0 00 FF FF 1C 7F FF E0 1F FF F4 3E
60 00 3F FF BF FF F0 01 FF FF F8 7F FF C0 03 FF FE 2E
78 00 7F FE 3F FF F0 00 FF FF B0 3F FF 80 03 F0 00 0E
70 04 7F FE 7F FF F0 00 FF FE F0 1F FF 80 03 E0 00 3E
70 07 FE 43 FF FF 00 00 FF B8 0E 0F F0 80 07 E0 01 FE
70 07 C0 03 FF FF C0 03 FC 00 03 CF F0 00 1F C0 07 FC
70 07 C0 04 BF FF C0 03 D0 00 00 FF FE 40 3F 80 00 18
70 07 80 18 9F FF C0 1F C0 00 00 7F FF 80 FF 00 00 0C
70 07 80 7C 00 3F C0 1F 80 00 00 6F FF 01 FF 80 03 80
70 07 80 E4 00 7F C0 1E 00 00 00 CF FF 00 79 80 00 00
71 03 83 C0 00 FF C0 1E 00 00 C1 1F FF C0 11 80 00 02
71 00 87 C0 01 9F CE 1C 00 01 E0 3F FF E0 00 00 00 06
FF 00 8F C0 01 99 FF 00 22 1F E0 3F FF C0 00 01 FE 03
FD 00 DF C0 03 9B FF 00 FF 1F 80 1F FF E0 00 7F FF EF
FC 01 FF C0 07 FF FF 00 FF FF 80 3F FF F0 01 FF FF E7
FC 01 FF FF FF FF FF 00 FF C6 03 FF FF F8 01 FF FE 0F
F8 03 FF FF FF FF FF 00 FF FF FF FF FF F8 01 FF FC 07
F8 03 FF FF FF FF FC 00 FF FF FF BF FF F8 01 FF FC 07
FC 03 FF FF C7 FF 20 03 FF FF FF 3F FF F8 01 FF FC 0F
FC 07 FF F3 03 FF 10 0F FF FF FE 39 FF F0 03 FF FE 0F
F8 0F FF C0 00 FF B0 FF FF FF F8 13 FF F0 03 FF FE 1F
F8 3F FF C0 01 FF F1 F9 FF FF F8 87 FF E0 47 FF FE 1F
F0 3F FF F0 03 FF F9 C1 FF FF F8 07 FF F0 07 FF FE 1F
F8 3F FF F8 03 FF FF 83 FF FF 7C 07 FF F8 07 FF FE 1F
F8 3F FF F8 03 FF FF 1F FF FF 78 03 FF F0 2F FF FE 0F
BC 7F FF E0 03 FF FF FF FF FF F0 03 DF F1 FF FF FF 0F
1F FF FF E0 03 FF FF FF FF FF 90 03 8F F3 FF FF FF 0A
1F FF FF C0 07 FF FF FF FF FF C0 07 0F FF FF FF FF 02
1F FF FF C0 0F E3 F7 FF FF FF C0 0F 1F FF 3F FF FC 02
0E 7F FF C0 0F C2 01 FF FF FF 80 BF 3E 00 1F FF FC 00
00 7F FF 80 07 F8 03 F8 67 BF 80 EF FC 00 00 07 F8 30
00 07 FF 00 67 E0 07 C0 00 07 00 FF FC 00 00 00 18 78
00 00 7E 00 73 80 0C 00 00 01 00 FF BE 00 00 00 00 F8
00 00 1C 01 F3 00 10 00 00 01 80 FD DF 00 00 00 01 F8
00 00 18 01 F0 00 00 00 00 01 00 7C FF C0 00 06 0F F0
0F 80 18 1F E0 00 00 00 00 0E 04 7F FF C0 00 1E 0F E0
0F 00 11 98 60 00 00 00 00 1C 04 7C CF E0 00 7E 3F 00
1F 01 11 80 00 E0 01 84 00 1C 20 3C 07 F0 60 7F FC 00
3F 03 B1 80 07 FF FF FF 40 1D F0 0C 41 FF BC FF F8 00
3E 7F FB F0 0F FF FF C1 8F FF FC 00 61 FF 81 FF F8 0C
3F FF FF C0 0F FF FF C1 FF FF FC 01 E7 FF E0 FF FE 1E
38 3F FF C0 1F FF FF C1 FF FF FC 07 FF FF E0 FF FE 1E
30 3F FF E0 7F FF FE 00 FF FF F8 07 FF FF F0 FF FE 1E
38 3F FF E0 7F FF F8 00 7F FF F0 03 FF 3C 00 7F FE 3C
38 1F FF E0 7F FF FC 00 3F FF F0 01 FF 3C 00 7F FE 30
00 1F FF F0 FF FF FC 00 1F FF F0 01 FF FC 01 7F FC 00
00 1F FE 01 FF FF FC 01 FF FF F0 01 FF FE 01 3F FC 00
80 1F FF 00 7F FF FC 01 FF FF F0 01 FF FE 00 9F FC 00
FE 0F FF 00 7F FF FE 04 FF FF F0 03 FF FE 00 5F FE 01
FC 0F FF DE 7F FF FB 06 7F FF FE 7F FF FE 00 7F FF C3
F8 0F FF FF FF FF F8 80 3F FF FF FF FF FF 00 7F FF 8F
F8 07 FF FF FF FF FC 00 1F FF F3 FF FF FE 00 7F FF DF
FC 03 FF FF FF FF FE 00 1F FF 81 FF FF FE 00 FF FF FF
FE 0F BF BD FF FF FC 00 7F FE 01 FF FF FC 00 FF FF FF
FE 1C 3E 10 FF FF F0 00 FF FC 00 FF FF F8 00 FF 81 FF
FE 1E 7C 00 7F F3 F0 03 FA 38 00 FF FF C0 00 FE 00 3F
FE 0F 8C 00 7F F3 E0 01 F8 00 00 9C FF C0 00 F0 00 3F
FE 1F 00 00 03 FF 00 00 7E 00 00 00 FF C0 00 60 00 07
FC 1F 20 00 01 FF A0 00 7F 00 00 01 FF C0 00 E0 00 0F
F9 9F F0 00 00 9F F8 01 7F 00 00 00 7F C0 44 F0 00 8F
F9 8F F0 00 00 1F FC 03 3F 00 78 00 7F E0 0C 70 00 1F
39 C0 78 00 00 3F FC 00 1F 88 7C 00 FF E1 3E 00 07 FF
21 80 20 00 00 3F FC 04 1F 80 0C 03 FF B3 3C 00 07 FC
20 80 00 00 00 7F FC 20 1C 00 04 00 7F FF 38 00 07 F8
18 03 00 00 00 8F FC 70 1C 00 02 00 1F FF B8 00 00 18
4F 00 00 00 00 0F F8 70 38 00 01 00 1F FF 80 00 00 18
7E 00 00 00 00 3F FF F0 30 00 01 00 7F FF 80 00 00 00
7E 00 00 00 00 FF FF D0 30 00 01 80 7F FF 80 10 00 00
3C 00 00 00 00 FF FE C0 30 00 00 00 3F E7 00 10 00 0C
38 0C 00 00 07 FF FE 00 70 07 F0 00 3F EF 00 10 01 FC
10 1F 00 00 1F FF FE 00 7F 9F F0 00 7F F8 00 1E 07 FC
10 1F 00 00 3F FF FE 00 7F FF C0 0F FF F0 00 1F FF F0
00 3F DF C0 0F FF FE 00 FF FF C3 9F FF F0 00 1F FF FC
00 7F FF 80 1F FF FF C1 FF FF FF C3 FF F0 00 9F FF FC
00 7F F7 98 7F FF E0 00 FF FF FE 01 FF F3 00 BF FF 00
3F FF FF FC 03 FC 00 00 FF FF F0 01 FF FF 87 FF F8 00
7F FF FF FE 01 F0 1F 80 3F FF F0 01 FF E0 07 FF F0 00
7F FF FF F8 01 FF C3 C0 1F FF C0 03 7F FC 1F FF F0 00
18 FF FF F0 01 FF 80 00 0F FF C0 02 7F FE 0F FF F8 38
08 3F FF F0 03 FF C0 00 07 FF C0 00 7F FF EF FF F8 3C
00 3F FF F0 03 C1 C3 80 03 FF F0 00 7F FF FF FF F0 74
80 7F FF E0 03 C3 E7 FF 00 FF F8 00 77 F7 FF FF E0 61
87 FF FF 80 0F 80 01 1F C0 7F F0 00 E0 01 FF FF C0 C3
8F FF FF 80 0F 00 00 00 7F FF 60 00 E0 1F C3 FF C0 87
E7 FF FF 80 1F 00 00 00 1F FE 00 00 00 09 07 FF E1 87
F0 1D FC 80 3B 00 00 00 1F FE 00 00 00 00 07 FF E0 0F
F0 00 FC 00 71 00 00 00 04 FC 00 0C 30 00 3F FF E0 3F
F0 00 DC 01 FE 00 03 0C 1C 3F C0 19 E0 30 0E 03 C0 7F
F8 00 00 01 FC 00 0F 80 03 FB C0 10 80 F0 28 03 80 7F
F8 00 00 01 FC 00 1F C0 03 FB E0 20 00 F0 30 02 00 1F
FC 00 00 00 3F 00 00 00 0F C0 00 00 01 F8 00 00 00 3F
> def
end  
texturedict begin
/sand
<
00 18 00 00 00 40 06 00 18 C0 00 00 60 00 00 00 00 00
C0 00 00 20 00 00 00 00 00 00 00 00 00 06 00 60 00 00
00 00 00 00 00 00 60 40 00 00 40 0C 02 00 00 00 60 00
00 40 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 C0 00 00 00 00 00 18 00 00 00
00 00 80 00 00 18 00 00 00 04 00 C0 00 00 00 04 00 00
06 00 00 38 0C 00 06 00 00 00 00 00 38 0C 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 07 00
00 00 00 00 00 01 00 03 00 00 00 00 00 00 00 00 00 06
00 00 06 00 00 00 00 00 07 10 0C 04 00 00 00 00 C0 00
10 08 00 01 80 00 00 80 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 C0 00 00 00 00 00 00 00 00 C0 00 00 00
00 00 00 00 00 00 60 00 C0 00 00 60 30 00 00 00 00 C0
00 C0 00 30 00 00 00 00 00 C0 00 00 00 10 00 00 C0 00
80 00 00 00 10 00 00 C0 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 06 00 00 01 00 00 00 00 00 00 00 00 01
00 00 60 20 00 00 00 03 81 00 60 60 30 00 00 00 03 80
40 20 00 00 1C 00 00 00 00 60 00 00 00 18 00 07 00 00
00 00 00 00 00 00 02 00 00 00 00 00 00 00 06 00 00 00
00 00 00 00 00 02 00 00 00 00 00 60 30 00 00 00 00 00
00 C0 60 10 00 00 00 00 60 00 C0 00 00 0C 00 00 00 70
00 00 00 00 0C 00 01 80 00 00 00 00 00 00 00 01 80 00
00 00 00 00 00 00 00 00 00 00 00 0C 00 00 06 00 00 00
20 00 1C 08 00 00 00 00 04 30 00 18 0C 00 00 00 00 06
00 30 00 00 00 00 00 10 00 00 20 00 00 06 00 00 10 00
00 00 00 00 00 00 10 00 00 60 00 00 00 00 00 10 00 00
00 00 00 00 00 00 00 00 00 00 00 01 80 00 00 00 00 00
00 01 01 80 00 30 00 00 80 00 03 80 03 00 00 00 00 C0
00 00 00 00 00 00 00 00 00 03 00 00 00 00 00 01 80 00
03 00 00 00 0C 00 00 00 00 00 00 00 00 0C 00 00 00 00
00 00 00 00 00 00 00 00 00 80 00 06 00 00 03 00 00 0C
00 00 06 00 00 03 00 08 0C 00 04 00 00 00 00 00 0C 00
00 06 00 06 00 00 00 00 00 00 00 00 00 00 00 08 00 00
00 00 00 00 04 00 0C 00 00 01 80 00 00 06 00 00 00 00
00 00 00 00 00 06 00 00 40 00 00 01 00 00 07 00 00 20
00 00 03 80 00 00 00 60 00 00 03 00 00 00 00 00 20 00
> def
end  
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1823.25 2081.5 m
1898.25 2081.5 L
1898.25 2006.5 L
1823.25 2006.5 L
1823.25 2081.5 L
0.75 w
s	
n
1842 2044 m
1823.2617 2081.5 L
1823.25 2006.5 L
1842 2044 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
1 j
3.863693 M
[0 0 0 1]vc
false setoverprint
S	
n
1898.25 2081.5 m
1879.5 2044 L
1898.25 2006.5 L
1898.25 2081.5 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
[0 0 0 1]vc
false setoverprint
S	
n
1935.75 2081.5 m
2010.75 2081.5 L
2010.75 2006.5 L
1935.75 2006.5 L
1935.75 2081.5 L
0 j
s	
n
1954.5 2044 m
1935.7617 2081.5 L
1935.75 2006.5 L
1954.5 2044 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
[0 0 0 1]vc
false setoverprint
S	
n
2010.75 2081.5 m
1992 2044 L
2010.75 2006.5 L
2010.75 2081.5 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
[0 0 0 1]vc
false setoverprint
S	
n
1823.25 2081.5 m
1860.75 2062.75 L
1898.25 2081.5 L
1823.25 2081.5 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
1 j
[0 0 0 1]vc
false setoverprint
S	
n
1823.25 2006.5 m
1898.25 2006.5 L
1860.75 2025.25 L
1823.25 2006.5 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
[0 0 0 1]vc
false setoverprint
S	
n
1904.25 2069.125 m
1928.25 2069.125 L
S	
n
true eomode
1928.25 2069.125 m
1926.8334 2071.25 L
1932.5 2069.125 L
1926.8334 2067 L
1928.25 2069.125 L
f	
n
false eomode
1935.75 2081.5 m
1973.25 2062.75 L
2010.75 2081.5 L
1935.75 2081.5 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
0 j
[0 0 0 1]vc
false setoverprint
S	
n
1935.75 2006.5 m
2010.75 2006.5 L
1973.25 2025.25 L
1935.75 2006.5 L
h
q
 (light-mezzo) [0 0 0 1] texture Q
false eomode
[0 0 0 1]vc
false setoverprint
S	
n
1935.75 2081.5 m
1954.5 2044 L
1973.25 2044 L
1973.25 2062.75 L
1935.75 2081.5 L
h
q
 (sand) [0 0 0 1] texture Q
false eomode
1 j
[0 0 0 1]vc
false setoverprint
S	
n
1898.25 2141.4993 m
1909.4998 2118.9996 L
1920.7496 2118.9996 L
1920.7496 2130.2495 L
1898.25 2141.4993 L
h
q
 (sand) [0 0 0 1] texture Q
false eomode
0.45 w
[0 0 0 1]vc
false setoverprint
S	
n
1898.25 2141.4993 m
1920.7496 2130.2495 L
1943.2493 2141.4993 L
1931.9995 2118.9996 L
1943.2493 2096.5 L
1920.7496 2107.7498 L
1898.25 2096.5 L
1909.4998 2118.9996 L
1898.25 2141.4993 L
s	
n
vmr
vmr
end
%%Trailer
