%!PS-Adobe-2.0 EPSF-1.2
%%Title: capriquoin.FH10
%%Creator: FreeHand 10.0
%%CreationDate: Sun Apr 27 14:33:23 2003 
%%BoundingBox: 0 0 187 187
%%FHPathName:E:\ARCHIVE\My Documents\My Papers\KEP02\KEP 03 BOOK\ANNALS AND DCG\FreeHand\capriquoin.FH10
%ALDOriginalFile:E:\ARCHIVE\My Documents\My Papers\KEP02\KEP 03 BOOK\ANNALS AND DCG\FreeHand\capriquoin.FH10
%ALDBoundingBox: -245 -309 367 483
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t==#^::et!!!ZQGQI2:%<,S(<BaU.>"`kkfSPm'np3QB
%:s8V?5&ZMk-d+\$h8LmG'G5QM0Xo>GpQ"4_NP1Aua[+>5%pW8TR!\-&ZV#g=GL'H)a;CLJMBbEaje'OOK)'EWB1Lu4X#SVq99J`5R8q<4YFSX41J,A**enQ*^njZ],n%AO=c9:pWF3_JfhRAhdBa;o0+sfc'R>>UWVB>rj:`\O$K`Z-Lq@gng0j]Bn'VuWu+g72HDnU;N^:ekN4OBe>3Zd<rTq6GT"DV+*NHs$A!sJkS)+l^0D9XZ;
%:4bradIcK<(Fmh$Med2=7U1C$T&!6s!edLmKLX_B,LNX9s`"TVs9];?r7F0GVg/b(_VXTdE99mZ&U3t7gf.KDe9MCuY6bR)I0&u2mM"W':"0P,`LBiL'e:?0\T_fMY9lHjIBoh1@buK+GC$_MHkF6JS:aj!K83(?oX_U@!aMhp)?=H_4<J#pV>.PQFn:l(j+LE9&OdU$qQ;"<+YA=%P6#bdBXZ"E6ObHhWP=hL:L&:0^&63cSonPP&
%:5sld!)t[=Id"+OB+F7m>apnSEMmsGR+ln.BO[A">/h7VCV]h=)a6INF7ZRosHSp+sj6G8\ZsZjWFe.lG>i9SiXQ/Q*n#>f]HW5fsQdh$/OA!?AhRYhL@>U#>a6lg`*T'eh745XQY+o&U*'q%2NFg=-fcc\_I8;;&+`ku.=N.Ll*GT=L8NJGXo@u0h//50^?r'LrP-[MMM:YBDUKu<$Cknal&?=PY(lMC:]aQIN9]m+Mb_\t%pY`C2
%:2pomWO.,8J\eU6d*I3at0HBRIE#Z7rC8;6g!QSi1(O;M]$n%#7@fZ[()T,)[ASUHWZs4?T"t;o#0'@0RXG,'H!\]DF%':ZOG#>#@$hM8%:sg\3SFK@3@4NqpXec-"&.Dn29jS]USZs#M#DI[U$XPiB#LQ%%7rP0OjHGcr*^Nsk%#HjjmF4J)F=2=f4WIakF1q*s'$MUW3?Zg,f'iVTlI78?\7dH)OZ_,)r?V?+JElNRTH8XE2"#0]
%:GSjcfIi2FE/E?@t;#iF=mp1$3d'Q^0IT648!o5.p6XhIg_`eSuf$^:CG4SPBqS_qj@"'&7f;X%LPXF@S!D[0!'\oE&Vujk,D.8U^CjZ,4g*g-jUD-n#A6k[#,a3hWKBi&#0!iK[+19-48[r;:L:+C00q+V612/AWX^V_^3^TCIGL9:aBtta2;bnaKS<D>nE&k+4;UYqt-'&HZ]RhmtL?2F38"Pbo-P]3MEb^/O[&05&((-h]p`gds
%:X3bK:e-TG`IjDBD+^2Z[Kf].JDKbK"h9^%A%#<Y__O;=MnQgeJ*Pc$4*46%8"OXr5<Km0jUr!'Bd'<%h(cH(`BY"3VaIqd0O\8E1aSlDV^QWE`\_J@`ci[#+aVX+@]8<,-(9iSX$Khr#&o7njn3'>'oXG*l1oP*`kI(*`!]lc6L=T8O6X&h25Y':7DFN$H&aF'+HO]G91d%m?:#FMU^<7A&]Sh*`>IR`3Ah:M9:F=B/[f4q`cC`rt
%::DD=X3iI[7TZJe42V-HLn[*fo0@G5)LDh:dB+a:h"ZHO`$s4!1)&/UjUR16Pd\1/mSF37<G_(>-c4D=C__d*i86E3N>"nJM2Wp9*aE`W`%QWi*0-I<Lm#\RQ*6E\db6Bum0A">A"X6#RC2j/00HN`m%<C%+aSM):a:8A>A3G2M"Kdcl^5A^>T--5VXNO.`nij?Hc?b)`q'BS++D3hIN'BY;%191ZEdmuk?s+XcIH_q9+2MN@c6BL8
%:(,n%$Y&U0LU)8&aFR`d]/>;)agr/YI0[#[8`TY*HpSk_(H^@LS]dS^Ie2ie`+8;ltjfa/IkKqQlGM`>Y?[rKq%Qe!!i9`/6]*(71^.ID`cR/q?j41k;[#PKcJ"fbQ*TlP)WReX^pOE,DC6"bZ49W5jYF]L@X&8kOO4(D6$U^o5j,ERKn+Si=Y+5*q[I8'`nmT(V?'mOp$HtX;VLtdE%F1lSJ43^(r8Kat^BMn&%8MA"mK<jk0Tg[c
%:09<.&))^_8On7ff8BR+e).[$%)>]L2=FU[:5=Y?F2a[?0r)GjDl4I0+6hCn.4cQPhHcZ"A\3?s*4blq-`q><AjSTFDr1bM)r7&4TNS4)N6pH7g"X<+3lf@uhrm*SXI(=s!s$%cW"Bhq`8'^uR,sAtn%-m'463d=EADe"+H3Gk.5XDN6Z_"^`<Zp'"TnW?9IXrh[MG@$%hBUJF`%]1!a6$2\:)ktOT\&V*T+MuU;YUS>+r=M6*+_4W
%:(q?WC"s.5#Q*mD)XTFk\h,`P3mB6G#6,1pg\(b0"h5/.L]H=%%=7,J[Cj$:dFD+SWJlTcJkVnbuE=_.DnJ8;FfA,8231>*MK561Xq=d'snAYA+I%\Ia/aJ\:/`=hC?e%,cn9l=DdkG\gSu'(d$dQKh"8q/l:Y`KR"6d1)bZ>Q79(9,UQL_I^luIF1DW]?"A^FEK3WuMtGH7M&`-eWol#f<M`10IV?XBIH1_fpn-,HhTlENJrL,e>P
%:mWeRiSFsY<g4A>R+58$uX%5]"=bbuU3Jq?4`n%@2Z[gI*!aAJNStfjOQWhri0$kK1U3>*q^/5l5O@l+iU9,aGU=5KLY(/u])F7tgP"mu7X-?e\i)/S+4J,$d21U(>#$+Dl3A$YF\l#5t%^(;HcBYMM'"u?/;er&B/`!A>)H#*ulhah2+8m25XJr@tQJP8!O8A0U0>3A%62/3Sj%sC>&2V,d+=tA]/.dKCc3foW1r_;)i?BB%cr[=V
%:)[A`!=E31Q.^+Mk'6-%YF!&[c8$lX!%s*=<0$jjB'0I3^HjJ'qZ/2hqGH--O@LtltSb3M5RHD-HiI(a]*MW)Kh6g_Wfc3C(n=)-^nP_7@01YUO3fgZBBt3=0Y+tg1oLl%_e3!n@*9>?+&nse[nQOR/0g=d>pcO2s:tI.A3p+CPmDe8(+"PAWf>:G-1+#fAl@CHQ?$Kp:L\M=G#+h9MF+)6r(n3r=4Du,Y*/?#Ld;lcWqp9.;W`Hj]
%:4rMPcEgl7^MIe12@B*J[ma>j/Mc_"5FX.k=o1<(^''Y*4m<ftU(h^GK?;2_McH<\F,*P4Al?.AU>NBlW'1\I#X]+2m_k!oR+)gL0cuUrZSfR-6aX.[HV.F[j1>Ft>dYbLIq5E&=bf$6t`CsTX:Tido3TV;WbiPS020Vj+-gr,"A^FCfD&AYC\.W]`4dCt'YK,24WUWAM3SrE8]d0d%O(D4lBJu?E>sc]:_9C\"H9U@-)o:!:7M"ta
%:1aR@X\JRqS=QRqp6u5Fq>`_i_alIQ6L2OXsTo&JHOHbX"TmA,dQ"Y!482u1_9"A2Kbp4=k-l<&\cIrIZ2Ja&eC@tB!Q%Y<bj+k=e/8[XKDf%7\(Hd<pPF,(CjdTJBFt+0oM(48P74Ss7mdk\9LHWAh*e2i.5O.VqlLRHUh/U_L;,e6=?9tj1A9=N4AMu,^`,SS^>CR>BFW3Yqo8:$5F0s2=NQ'Z>eeK(Y=MZ]3fEk;fDT*?HB2^/7
%:`g2ps,&KZ,ATDe(99%4HCYcS]DFlY?A.(7nLoU;(8L'BD"U:dZ"[I_U.2X+IqqUW0St:YP=ihKG)j83%-##UW#%B$_/-L`i^j$I*8\H6#dN]gRa3kk-'$!G(Gmf1.?n&=UV$q$66f8fCb(N=?i7[l4f-i-!=d#RWmpId!0B`Otb"he[k'X4T6"`fdVR%ODK]6X>/"G7ik28G\l^sV=$Zq#WMD2=QSkJ`*U817MP(JnH1SZJ+NS^L1
%:-uT_1#_C@dfm)5jcH+r.po2ZJQ&%7@&0h(([>=$u;1flbBK@r9ZEb\a/uDU$R6HZ[WQS-'?&GGT(ZQ^e,]Y:I8IC.(;h@o^\;N\)<7KO//0<%oF[f90B@Ro:d`I4fSlfZlb8\llL*PAB><lcA7d3Tg-LOaa0r:'Eq7X&[\C#:CV:!B;=N[hUa^@W-N.k;6@M"K+WOT8MdXd[oP`;6l`(J7O&lB679!bf%M'[M0Vci*0U7Zb>Hr+JR
%:)NZ(0e/Ono%FVXC((,ho4n6nkg,,`%Bl+,,XX<*,'1q?VC;Hu;$D-T%Ql)8!%S/lfhO,Od4a=R4oW#:L4.28-6l/7E?m;PH&d]n_B0+8*!`E.Q$#CFis!E?CbIF>`f=QGN(=$>N+RDE`(mbH7`'Z!gG:o]1"/e.*0]mNd"Lf<[JShX+SY7KCNp3u4cXhD3Q9s$0i)Q!Y(se5fcM5)Z1TR4jbk+e@.^D%c5FN#S"VsN9&`7[i<8'?(
%:H7GC@`@I#PRU9/,:6-lG^+N2<P[%6$<i/6WFtPPa)N:8V3&cPORL1@q,;Uj`iDeELA3;pg9D/+Yg>Z7d&.ab4,jEr9&J7qAbp?E_r,;@pV;6LJZSfeQYn=6`16RJ5e#o\g:!9o'a&.9)f4LTO<LcLthJa5#HB.k"f6CJBeX$X/Co+/m]<t?iRum5A2qqpB.;i7mET2sW[o:i/Q[<Z&BD1*"$!Ff2NO([!]9OtS8'YVd/#m!2^VX?M
%:/%h1M`Z]GV(2hmlO0j:F\(.LBnl@[&^-jTWn:GctNi47@gG[R5ePN;;^0B8YLSIjbU%Y>u)e^163c'-UgTRGuAN.&/b"KW9RT:&@='+!rokLasXd$lQM.jIM#L\dDZ(:0l<d6OSOmK9OAklKM2R^>e`gct0p,24?L=M:XZ(@brX)#5$MB^mQ>C^:R`d36MDI`-rfAa!W'l_JV?G>3r/nrKudb)@BqJhD_*h[otiUOF*(l"$R%GH_*
%:1b.`h2O?C]0+<RkYpG%HHo.7Xh>I4B"oD>Xf*escCu8&kQZQ3W0\Om`cF_olMjNK%&K?5_Uj\6OQcZ(ur1-s-7Ju.RrVH=.LHVi`I!+lPDk_N#PJ:/QrKFK@Z+;En+na)LZ.Fcclb;1.q7>/D48"bic/4U)gSY>2QDDN`1_]0s?+02j#C0r=KM=_gYoFJ4UAY/0fQ97#gWKWEMMsqu9m@k[oFDZR7h'bRHJAQt047"g;+aC-5Q#Ks
%:i.*YK=?%a@<X$A(behG1De;9R3'1Pbi+jE3KZ:@)^:7QDh)rB"2CGc9eGb2P:UM(8hmSCH.-bTTMBn\cO(oD$[YdMS<=Eu0_^_r2=iL%*no\X]>O&oF*&>N'qD5\#\P-1`-7>g':[kBDA%Te*4aHr2VIc&9+7e@W9B6Bi?"q$\]nOcS;n@i+m0:.$/`PWm(47mXT2:G?6fXFt?fA#`_-?O([FfrO1l^$Who`D]PuMSep9&k$'@6>E
%:]iLDC\#b!QiYO!;q*MLBVQF!US&Z%\X9#(G<^4#_<IKFP-)LKO4I04#Z&G\_.d/I"Y?8c]P$V/6LW_O!YhSQuYWf1nD4/+=]<,ONDgC*Fq+S]`QM%]?!rgdKiMC*6crJ6>4Muo_a51TB_c82UX^oKJjZ.HVasDLTIW#9PTtXScc-8tR/X@U":ZKeM3R3KVFf5$CA&B%GT6Y;3$]Nt&gU>TipfVV`2cKQ/Cs.S6-@_MQ)fF;%`Kd$M
%:FpZ-[(MHHJSuYT2JL5!oRkBM26`4M0O6OB^Ge1(WoXk%PjgL>(k(YCrYM;;7Qh_`/Ik"AMrS>!90e`@]Gf``p.e6j4QfI4+L2G5`:c.DbITn4-_r`fUa/BUkRoP<jWt`4l<2.m7QL?NPbIhGP-k_H;-tSsp#-*5Q0&@:KdGE.XCuB9%bA2*,*rAugm_r#N>&_BB7pI'8RO.r.F1$HukI+m-*N=$q*TLb>U>0kEZ9`#7L%f=d:2+&g
%:8UAK'=7'fu.lti:R<;adEWXk1E4PXhUZR8'5MS#+'D=)g.XL\AT5HN.)rGO56nSC_bGa2Se\kK-oTg"'$B+?fbqHQMa[4Z(@)HUAkP!P4=c#b=7[e1qKNR"t^#IHUlCVhES#DBgk/V1YZqEOteiZujcadfVC@c^4p]s6WH'OB`iRFbIrlcnlnkBY06,35Lq6/UU6gl"WJp_1dJY8O&PB3/i;8S+IEc*4Z)1A[,gYqSiGZr++F0rZM
%:AepE2dLM](lM1E.p#rL:'5;IAr^n@d^,-X=CXqD5a*sQ)3fMNf-ZNs75E=X<l*gNS3KDbOUMorC<1G`KqR^\RQ.P'^B_-=jrIWK=[&9j=&0$5dO^1'5m9[Q*bN1tJpNo$iSXjULhQA)/Y0O2q,@7"ohh`]I`Q<(G60/pHQg#`:5Q(rf.UBhuaWI:=djOA2k`bW=rAo@a*i+STe+>?m(1!`^cu7BGl$)oIY](ddH>$J&ke3U;Quq2p
%:QTce,_]`WG+,D:aCV[WWhi-ksI-?uEi0d+rJ3/d)_uXS-EG#bAL/;q-DC;C[D%E4F`tQkhBh-;D5<GkM*rmem"9=KPBl%?h@VfTU!X(i1F`V4qBlF%R"%%$NF(bOS\Q2+4@rq\O[8g.IEbTE(!!2^jH#7#/CdW#IF)q<^*`-EgF)Y]#FD5o07ri<S!!*'oE)0qXARff^!:ro`FE2)5B)hqs9h]8BF8u=&9gi]*F8u@<6t(1KX22rO
%:<,$2\!!%U?847B+87c4?AT@bN2aV>!@qu&EH:;X]D.RU,!!33gEclG:9PJQi!!0o<AoD^,!!0`59lNm;C&e5B5t==4Df0Xs!00N_Ch6"GF(96)E--#=!!/*Z@:E2E@VfTU!V968D.7F"9PIsV@<-Vn!Du[6DfABkF8u>9:i^JaARoq(AH2^'6Z6dZE]*mt>XW"B@/p;p9ho,6AH2_Y9PJQi!!()6Bl7KY@<;JLG"$4YD+nYb<%=;%
%:F8u;b7;QOP:i^Jn9QP:U!/sB]B6A6+!!.XLFEq\6:i^Jn9QP:U!I[mcDfe?bCi=>P!!"Z=@<6-m9PJBU!!"W<@<6-m7VQ[T!!'#hF_PAtErZ5$:gnHZ!!#SXDes6$@ruX0!!*p4G%#1e!5;-8H"D!r!%(!PEc6.u@<?/_!2N,*Dfp"!!!!"t!OVrV!OVrV!OVrV!7Ckg!6>/]!6>/]!6>/]!6>/]!6>/g!%%[m!%%[m!%%[mZAhH+
%:!%%]o!OVrV!OVrV!OVrV!OVrV!OVrV!7Cl7!)!<9!9sTm!58GW!9sQu!-\Ee!3-%a!OVpA!)!<9!OVpp!:9b>!:9f<!:9dO!:9fp!KI.4!OVn9!OVs@!:9dO!OVo#!%n7q!BC/F!OVpA!-\Ee!>kf\!>kf\!PndR!-\H(!-\H(!9sTm!58H]!:9g"!J(7!!-\Fk!?M7+!Vui)!Vui)!-\Dq!-\H(!9sQ[!Vuf]!V?Ea!V6?"ag094
%:!X&Mg!WrJ2!X&Mg!WrK*!&joF!-\FC!:9c1!9sQ[!PAEt!:9fp!:9fp!:9fp!:9fp!:9bk!:9bk!:9dX!:9fp!9sQE!:9fp!:9fp!:9dX!:9dX!Drja!9sQ97VlLTAOL*>De*DZs8W-!b#u8d
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1937 -1893 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1978.75 1962 m
1982.875 1962.125 L
1987.125 1964.125 L
1990.5 1967 L
1993.125 1970.5 L
1996.125 1976.875 L
1990.125 1978.625 L
1983.125 1979.25 L
1977.25 1978.375 L
1972 1975.25 L
1970.375 1971 L
1972.5 1965.875 L
1975.625 1963.625 L
1978.75 1962 L
[0.1156 0.0909 0.5832 0]vc
f	
[0 0 0 1]vc
S	
n
1938.1972 1986.3521 m
1938.1972 2037.4663 1979.6322 2078.9014 2030.7464 2078.9014 C
2081.8607 2078.9014 2123.2957 2037.4663 2123.2957 1986.3521 C
2123.2957 1935.2379 2081.8607 1893.8028 2030.7464 1893.8028 C
1979.6322 1893.8028 1938.1972 1935.2379 1938.1972 1986.3521 C
s	
n
1962.1972 1999.4507 m
1962.1972 2020.0255 1970.6595 2036.7043 1981.0986 2036.7043 C
1991.5377 2036.7043 2000 2020.0255 2000 1999.4507 C
2000 1978.8759 1991.5377 1962.1972 1981.0986 1962.1972 C
1970.6595 1962.1972 1962.1972 1978.8759 1962.1972 1999.4507 C
s	
n
1999.4333 1938.2742 m
1979.2504 1949.9268 1966.7517 1966.0626 1971.5162 1974.3151 C
1976.2808 1982.5676 1996.5042 1979.8113 2016.6871 1968.1588 C
2036.87 1956.5062 2049.3687 1940.3704 2044.6041 1932.1179 C
2039.8395 1923.8654 2019.6162 1926.6216 1999.4333 1938.2742 C
s	
n
1980.75 2036.75 m
1974.5 2025.9375 1974.5 2017.6875 1974.5 2005.25 C
1974.5 1995.9375 1974.4375 1995.6875 1977 1986.75 C
1977.9375 1983.4375 1980.0625 1976.25 1981.25 1973 C
1983 1968.1875 1986.0625 1965.1875 1989.25 1961.25 C
1994.1875 1955.1875 1998.75 1953.25 2005 1949 C
2011.0093 1944.9137 2016 1942.5 2023.25 1939.25 C
2031.1002 1935.731 2035.375 1932.6875 2044 1931.25 C
S	
n
1970.75 1968.125 m
1995.625 1976.75 L
S	
n
vmr
vmr
end
%%Trailer
