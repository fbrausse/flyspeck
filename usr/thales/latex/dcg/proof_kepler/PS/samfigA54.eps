%!PS-Adobe-2.0 EPSF-1.2
%%Title: tomfigs2.fh
%%Creator: FreeHand 7.0
%%CreationDate: 7/27/98 1:29 PM
%%BoundingBox: 0 0 283 118
%%FHPathName:Thor:Mathfust:New Interval Ä:figures:tomfigs2.fh
%ALDOriginalFile:Thor:Mathfust:New Interval Ä:figures:tomfigs2.fh
%ALDBoundingBox: -189 -494 423 298
%%FHPageNum:2
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentCustomColors: (80% Grey.spot)
%%+ (20% Grey.spot)
%%+ (30% Grey.spot)
%%+ (60% Grey.spot)
%%+ (10% Grey.spot)
%%CMYKCustomColor: 0 0 0 0.8 (80% Grey.spot)
%%+ 0 0 0 0.2 (20% Grey.spot)
%%+ 0 0 0 0.3 (30% Grey.spot)
%%+ 0 0 0 0.6 (60% Grey.spot)
%%+ 0 0 0 0.1 (10% Grey.spot)
%%CMYKProcessColor: 0 0 0 0.4 (40% Grey.prcs)
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 245 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/sepdef{
 dup where not
 {
AltsysSepDict
 }
 if 
 3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/_NXLevel2 defed { 
 _NXLevel2 not {   
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
 } if
} if
/md defed{ 
 md type /dicttype eq {  
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
 }if 
}if
/setstrokeadjust defed
{
 true setstrokeadjust
 /C{curveto}bdf
 /L{lineto}bdf
 /m{moveto}bdf
}
{
 /dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
 /C{dr curveto}bdf
 /L{dr lineto}bdf
 /m{dr moveto}bdf
 /setstrokeadjust{pop}bdf 
}ifelse
/rectstroke defed /xt xdf
xt {/yt save def} if
/privrectpath { 
 4 -2 roll m
 dtransform round exch round exch idtransform 
 2 copy 0 lt exch 0 lt xor
 {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
 {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
 ifelse
 closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
xt {yt restore} if
/_fonthacksave false def
/currentpacking defed 
{
 /_bfh {/_fonthacksave currentpacking def false setpacking} bdf
 /_efh {_fonthacksave setpacking} bdf
}
{
 /_bfh {} bdf
 /_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
 false setoverprint  
 
 
 /-save0- save def
 5 index concat
 pop
 storerect left bottom width height rectclip
 pop
 
 /MMdict_count countdictstack def
 /MMop_count count 1 sub def
 userdict begin
 
 /showpage {} def
 
 0 setgray 0 setlinecap 1 setlinewidth
 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
 
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
 statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
 end 
def
/printerRes 
 gsave
 matrix defaultmatrix setmatrix
 72 72 dtransform
 abs exch abs
 max
 grestore
 def
/graycalcs
[
 {Angle Frequency}   
 {GrayAngle GrayFrequency} 
 {0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
 {0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
 forcemaxsteps
 {
maxsteps
 }
 {
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
 
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
 }
 ifelse
} bdf
/nextrelease defed { 
 /languagelevel defed not {    
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
 }if
}if
fhnumcolors 1 ne {
 /calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
 
 
 currentpagedevice /PreRenderingEnhance known
 {
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
 } if
} if
/gradfrequency 144 def
printerRes 1000 lt {
 /gradfrequency 72 def
} if
/adjnumsteps {
 
 dup dtransform abs exch abs max  
 
 printerRes div       
 
 gradfrequency mul      
 round        
 5 max       
 min        
}bdf
/goodsep {
 spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
 0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
 systemdict /packedarray known 
 {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
 }
 { 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
 }ifelse
}bdf
/i{dup 0 eq
 {pop df dup} 
 {dup} ifelse 
 /clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
 {/filler /eofill load def /clipper /eoclip load def}
 {/filler /fill load def /clipper /clip load def}
 ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
 /NF exch def 
 {    
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
 }forall 
 NF
}bdf
/MN{
 1 index length   
 /Len exch def 
 dup length Len add  
 string dup    
 Len     
 4 -1 roll    
 putinterval   
 dup     
 0      
 4 -1 roll   
 putinterval   
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
 {1 index MN cvn/NewN exch def cvn
 findfont dup maxlength dict CD dup/FontName NewN put dup
 /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RC}
 ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
 {exch pop findfont 3 -1 roll pop}
 {pop dup findfont dup maxlength dict CD dup dup
 /Encoding exch /Encoding get 256 array copy 7 -1 roll 
 {3 -1 roll dup 4 -2 roll put}forall put definefont}
 ifelse}bdf
/RCJ{4 -1 roll 
 /ourvec xdf    
 256 string cvs   
 (|______) anchorsearch
 {pop    
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
 }
 {pop}    
 ifelse
}bdf
/RFJ{ 
 dup      
 FontDirectory exch   
 known     
 {pop 3 -1 roll pop}  
 {RCJ} 
 ifelse
}bdf
/hasfont
{
 /resourcestatus where 
 {
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
 }
 {
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
 }
 ifelse
}bdf
/FDFJ
{
 dup   
 hasfont  
 not   
 {   
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
 }
 if
}bdf
/FFJ{
 _bfh
 dup     
 256 string cvs  
 (|______)exch MN 
 cvn     
 dup     
 FontDirectory
 exch known   
 {     
exch 
pop 
findfont 
3 -1 roll 
pop 
 }
 {     
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
 }
 ifelse
 _efh
}bdf
/fps{
 currentflat   
 exch     
 dup 0 le{pop 1}if 
 {
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
 }loop 
 pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf
userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
 /Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh 
_efh 
end %. AltsysDict
%%EndSetup
AltsysDict begin /privrectpath1  { 4 -2 roll m dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto closepath }bdf 
/rectfill{gsave newpath privrectpath1 fill grestore}def end
AltsysDict begin 
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
 add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
 max max max  
} ndf
/maxspot {
 pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
 0 1 2 index length 1 sub
 { 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
 }for
 4 1 roll pop pop pop
}bdf
/colorimage{
 pop pop
 [
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
 ]cvx 
 image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
 }
 ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
 aload pop 
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
 }
 ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
 aload pop
 (_vc_Registration) eq 
 {
pop pop pop pop separationimage
 }
 {
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
 }
 ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
 spots exch get
 dup 4 get (_vc_Registration) eq
 {pop 1 exch sub setseparationgray}
 {0 5 getinterval exch setcustomcolor}
 ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
 
 userdict /islevel2
 systemdict /languagelevel known dup
 {
pop systemdict /languagelevel get 2 ge
 } if
 put
 
 islevel2 not
 {
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
 } if
 
 /tc
 {
gsave
setcmykcolor currentcmykcolor
grestore
 } bind def
 /testCMYKColorThrough
 {
tc add add add 0 ne
 } bind def
 /fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
 }
 { pop }
 ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor      
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
 /yt xdf       
 /xt xdf       
 /ang xdf      
 storerect
 /taperfcn xdf
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 height abs adjnumsteps   
 dup 2 lt {pop 2} if    
 1 sub /numsteps1 xdf
 currentflat mark    
 currentflat clipflatness  
 /delta top bottom sub numsteps1 1 add div def 
 /right right left sub def  
 /botsv top delta sub def  
 {
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfs6 {
 /tint2 xdf      
 /tint1 xdf      
 bcs exch 1 exch put    
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 tint1 tint2 sub abs    
 bcs 1 get maxspot    
 calcgraysteps mul abs round  
 radius inrad sub abs   
 adjnumsteps      
 dup 1 lt {pop 1} if    
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf    
 currentflat mark    
 currentflat clipflatness  
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/_rfp6 {
 /k2 xdf /y2 xdf /m2 xdf /c2 xdf
 /k1 xdf /y1 xdf /m1 xdf /c1 xdf
 /inrad xdf      
 /radius xdf      
 /yt xdf       
 /xt xdf       
 c1 c2 sub abs
 m1 m2 sub abs
 y1 y2 sub abs
 k1 k2 sub abs
 maxcolor     
 calcgraysteps mul abs round 
 radius inrad sub abs  
 adjnumsteps     
 dup 1 lt {pop 1} if   
 1 sub /numsteps1 xdf
 radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
 2 div /halfstep xdf   
 currentflat mark   
 currentflat clipflatness 
 {
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
 }loop
 cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
 AltsysDict /cvc 2 index put 
 aload length dup 4 eq
 {pop setcmykcolor}
 {6 eq {sethexcolor} {setspotcolor} ifelse }
 ifelse
}bdf 
0 setseparationgray
/imgr {5652 13140 6264 13932 } def 
/bleed 0 def 
/clpr {5652 13140 6264 13932 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 
 userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-5841 -13634 translate
/currentpacking defed{false setpacking}if 
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0.8 (80% Grey.spot) false newcmykcustomcolor
0 0 0 0.2 (20% Grey.spot) false newcmykcustomcolor
0 0 0 0.3 (30% Grey.spot) false newcmykcustomcolor
0 0 0 0.6 (60% Grey.spot) false newcmykcustomcolor
0 0 0 0.1 (10% Grey.spot) false newcmykcustomcolor
]def
vms
0 i
6087.5 13635 m
6122.7969 13734.2299 L
6087 13710.5 L
6087.5 13635 L
[0 0 0 0.4]  vc
false setoverprint
f 
1 w
1 J
1 j
3.863693 M
[0 0 0 1]  vc
S 
n
5993 13635 m
6028.2969 13734.2299 L
5991.9221 13718.1458 L
5993 13635 L
[0 0 0 0.4]  vc
f 
[0 0 0 1]  vc
S 
n
5993 13635 m
5991.9221 13718.1458 L
5958.6525 13733.741 L
5993 13635 L
[0 0 0 0.4]  vc
f 
[0 0 0 1]  vc
S 
n
5889.5 13635 m
5916.259 13701.6482 L
5868.9547 13700.4249 L
5889.5 13635 L
h
[1 7]  vc
fhiscomposite spotascmyk or { 0 0 0 0.6 0 0 0 0.1 /normtaper load
 5868.95 13635 5916.26 13701.6  0 5892.61 13668.3 lfp4
} { 7 0 1 /normtaper load
 5868.95 13635 5916.26 13701.6  0 5892.61 13668.3 lfs4
true setoverprint
8 1 0 /normtaper load
 5868.95 13635 5916.26 13701.6  0 5892.61 13668.3 lfs4
} ifelse false setoverprint
[0 0 0 1]  vc
S 
n
5916.259 13701.6482 m
5906.3572 13700.5759 5895.8642 13700 5885 13700 C
5879.5488 13700 5874.1912 13700.145 5868.9547 13700.4249 C
5860.4331 13714.6664 L
5860.7441 13720.4902 L
5924.4465 13722.5549 L
5924.2194 13716.7856 L
5916.259 13701.6482 L
h
[1 4]  vc
fhiscomposite spotascmyk or { 5895.59 13711.3 36.0449 0 0 0 0 0.8 0 0 0 0.2 rfp6 
} { 5895.59 13711.3 36.0449 0 4 1 0 rfs6 
true setoverprint
5895.59 13711.3 36.0449 0 5 0 1 rfs6 
} ifelse false setoverprint
[0 0 0 1]  vc
S 
n
5924.2194 13716.7856 m
5912.0875 13714.674 5898.6456 13713.5 5884.5 13713.5 C
5876.1942 13713.5 5868.131 13713.9047 5860.4331 13714.6664 C
5842.2489 13725.9326 L
5884.5 13751.5 L
5935.6439 13729.5812 L
5924.2194 13716.7856 L
[1 6]  vc
f 
[0 0 0 1]  vc
S 
n
5889.5 13635 m
5868.9547 13700.4249 L
5866.1875 13708.5 5859.4308 13715.8526 5860.4331 13714.6664 C
5842.2489 13725.9326 L
5889.5 13635 L
[0 0 0 0.4]  vc
f 
[0 0 0 1]  vc
S 
n
5889.5 13635 m
5935.6439 13729.5812 L
5924.2194 13716.7856 L
5920.4191 13711.2256 5917.7655 13706.1796 5916.259 13701.6482 C
5889.5 13635 L
[0 0 0 0.4]  vc
f 
[0 0 0 1]  vc
S 
n
S 
n
5988 13751.5 m
5958.6525 13733.741 L
5991.9221 13718.1458 L
6028.2969 13734.2299 L
5988 13751.5 L
[1 6]  vc
f 
[0 0 0 1]  vc
S 
n
6087.5 13635 m
6087 13710.5 L
6053.1525 13733.741 L
6087.5 13635 L
[0 0 0 0.4]  vc
f 
[0 0 0 1]  vc
S 
n
S 
n
6082.5 13751.5 m
6053.1525 13733.741 L
6087 13710.5 L
6122.7969 13734.2299 L
6082.5 13751.5 L
[1 6]  vc
f 
[0 0 0 1]  vc
S 
n
5867.4547 13700.4249 m
5867.4547 13701.2534 5868.1263 13701.9249 5868.9547 13701.9249 C
5869.7831 13701.9249 5870.4547 13701.2534 5870.4547 13700.4249 C
5870.4547 13699.5965 5869.7831 13698.9249 5868.9547 13698.9249 C
5868.1263 13698.9249 5867.4547 13699.5965 5867.4547 13700.4249 C
f 
n
5914.759 13701.6482 m
5914.759 13702.4766 5915.4306 13703.1482 5916.259 13703.1482 C
5917.0875 13703.1482 5917.759 13702.4766 5917.759 13701.6482 C
5917.759 13700.8198 5917.0875 13700.1482 5916.259 13700.1482 C
5915.4306 13700.1482 5914.759 13700.8198 5914.759 13701.6482 C
f 
n
5967.6555 13700.6201 m
5967.6555 13701.4485 5968.3271 13702.1201 5969.1555 13702.1201 C
5969.9839 13702.1201 5970.6555 13701.4485 5970.6555 13700.6201 C
5970.6555 13699.7917 5969.9839 13699.1201 5969.1555 13699.1201 C
5968.3271 13699.1201 5967.6555 13699.7917 5967.6555 13700.6201 C
f 
n
6011.4042 13700.9938 m
6011.4042 13701.8222 6012.0757 13702.4938 6012.9042 13702.4938 C
6013.7326 13702.4938 6014.4042 13701.8222 6014.4042 13700.9938 C
6014.4042 13700.1653 6013.7326 13699.4938 6012.9042 13699.4938 C
6012.0757 13699.4938 6011.4042 13700.1653 6011.4042 13700.9938 C
f 
n
5864.97 13699.071 m
5864.8259 13699.071 5864.6999 13699.071 5864.5739 13698.9449 C
5864.4298 13698.8099 5864.4118 13698.6568 5864.4118 13698.5938 C
5864.4118 13698.3778 5864.5739 13698.2787 5864.7449 13698.2787 C
5865.006 13698.2787 5865.2491 13698.4948 5865.2491 13698.8549 C
5865.2491 13699.296 5864.8259 13699.6291 5864.1868 13699.6291 C
5862.9714 13699.6291 5861.774 13698.3418 5861.774 13697.0724 C
5861.774 13696.2621 5862.2962 13695.5509 5863.2325 13695.5509 C
5864.5199 13695.5509 5865.2761 13696.5052 5865.2761 13696.6132 C
5865.2761 13696.6673 5865.2221 13696.7303 5865.168 13696.7303 C
5865.123 13696.7303 5865.105 13696.7123 5865.051 13696.6402 C
5864.3398 13695.749 5863.3585 13695.749 5863.2505 13695.749 C
5862.6833 13695.749 5862.4402 13696.1901 5862.4402 13696.7303 C
5862.4402 13697.0994 5862.6203 13697.9726 5862.9264 13698.5308 C
5863.2055 13699.044 5863.7006 13699.4311 5864.1958 13699.4311 C
5864.5018 13699.4311 5864.8439 13699.314 5864.97 13699.071 C
f 
n
5867.9126 13697.0432 m
5867.9126 13697.1945 5867.9126 13697.2071 5867.7677 13697.2071 C
5867.3769 13696.8037 5866.8224 13696.8037 5866.6207 13696.8037 C
5866.6207 13696.6084 L
5866.7467 13696.6084 5867.1186 13696.6084 5867.4463 13696.7722 C
5867.4463 13693.5079 L
5867.4463 13693.281 5867.4274 13693.2054 5866.8602 13693.2054 C
5866.6585 13693.2054 L
5866.6585 13693.01 L
5866.8791 13693.0289 5867.4274 13693.0289 5867.6794 13693.0289 C
5867.9315 13693.0289 5868.4798 13693.0289 5868.7003 13693.01 C
5868.7003 13693.2054 L
5868.4987 13693.2054 L
5867.9315 13693.2054 5867.9126 13693.2747 5867.9126 13693.5079 C
5867.9126 13697.0432 L
f 
n
vmrs
0 i
5907.5651 13698.171 m
5907.421 13698.171 5907.295 13698.171 5907.1689 13698.045 C
5907.0249 13697.9099 5907.0069 13697.7569 5907.0069 13697.6939 C
5907.0069 13697.4778 5907.1689 13697.3788 5907.34 13697.3788 C
5907.6011 13697.3788 5907.8441 13697.5948 5907.8441 13697.955 C
5907.8441 13698.3961 5907.421 13698.7292 5906.7818 13698.7292 C
5905.5665 13698.7292 5904.3691 13697.4418 5904.3691 13696.1724 C
5904.3691 13695.3622 5904.8913 13694.651 5905.8275 13694.651 C
5907.1149 13694.651 5907.8712 13695.6053 5907.8712 13695.7133 C
5907.8712 13695.7673 5907.8171 13695.8303 5907.7631 13695.8303 C
5907.7181 13695.8303 5907.7001 13695.8123 5907.6461 13695.7403 C
5906.9349 13694.849 5905.9536 13694.849 5905.8456 13694.849 C
5905.2784 13694.849 5905.0353 13695.2902 5905.0353 13695.8303 C
5905.0353 13696.1994 5905.2154 13697.0727 5905.5215 13697.6309 C
5905.8005 13698.144 5906.2957 13698.5311 5906.7908 13698.5311 C
5907.0969 13698.5311 5907.439 13698.4141 5907.5651 13698.171 C
[0 0 0 1]  vc
false setoverprint
f 
n
true eomode
5911.4845 13693.2066 m
5911.3269 13693.2066 L
5911.2954 13693.0175 5911.2513 13692.7402 5911.1883 13692.6457 C
5911.1442 13692.5953 5910.7282 13692.5953 5910.5896 13692.5953 C
5909.4553 13692.5953 L
5910.1233 13693.2444 L
5911.1064 13694.1141 5911.4845 13694.4544 5911.4845 13695.0845 C
5911.4845 13695.803 5910.9173 13696.3071 5910.1485 13696.3071 C
5909.4364 13696.3071 5908.97 13695.7273 5908.97 13695.1665 C
5908.97 13694.8136 5909.2851 13694.8136 5909.304 13694.8136 C
5909.4111 13694.8136 5909.6317 13694.8892 5909.6317 13695.1476 C
5909.6317 13695.3114 5909.5183 13695.4753 5909.2977 13695.4753 C
5909.2473 13695.4753 5909.2347 13695.4753 5909.2158 13695.469 C
5909.3607 13695.8786 5909.701 13696.1118 5910.0665 13696.1118 C
5910.64 13696.1118 5910.911 13695.6013 5910.911 13695.0845 C
5910.911 13694.5804 5910.5959 13694.0826 5910.2493 13693.6918 C
5909.0393 13692.3432 L
5908.97 13692.2739 5908.97 13692.2613 5908.97 13692.1101 C
5911.308 13692.1101 L
5911.4845 13693.2066 L
f 
n
false eomode
5964.5651 13697.921 m
5964.421 13697.921 5964.295 13697.921 5964.1689 13697.795 C
5964.0249 13697.6599 5964.0069 13697.5069 5964.0069 13697.4439 C
5964.0069 13697.2278 5964.1689 13697.1288 5964.34 13697.1288 C
5964.6011 13697.1288 5964.8441 13697.3448 5964.8441 13697.705 C
5964.8441 13698.1461 5964.421 13698.4792 5963.7818 13698.4792 C
5962.5665 13698.4792 5961.3691 13697.1918 5961.3691 13695.9224 C
5961.3691 13695.1122 5961.8913 13694.401 5962.8275 13694.401 C
5964.1149 13694.401 5964.8712 13695.3553 5964.8712 13695.4633 C
5964.8712 13695.5173 5964.8171 13695.5803 5964.7631 13695.5803 C
5964.7181 13695.5803 5964.7001 13695.5623 5964.6461 13695.4903 C
5963.9349 13694.599 5962.9536 13694.599 5962.8456 13694.599 C
5962.2784 13694.599 5962.0353 13695.0402 5962.0353 13695.5803 C
5962.0353 13695.9494 5962.2154 13696.8227 5962.5215 13697.3809 C
5962.8005 13697.894 5963.2957 13698.2811 5963.7908 13698.2811 C
5964.0969 13698.2811 5964.439 13698.1641 5964.5651 13697.921 C
f 
n
true eomode
5968.4845 13692.9566 m
5968.3269 13692.9566 L
5968.2954 13692.7675 5968.2513 13692.4902 5968.1883 13692.3957 C
5968.1442 13692.3453 5967.7282 13692.3453 5967.5896 13692.3453 C
5966.4553 13692.3453 L
5967.1233 13692.9944 L
5968.1064 13693.8641 5968.4845 13694.2044 5968.4845 13694.8345 C
5968.4845 13695.553 5967.9173 13696.0571 5967.1485 13696.0571 C
5966.4364 13696.0571 5965.97 13695.4773 5965.97 13694.9165 C
5965.97 13694.5636 5966.2851 13694.5636 5966.304 13694.5636 C
5966.4111 13694.5636 5966.6317 13694.6392 5966.6317 13694.8976 C
5966.6317 13695.0614 5966.5183 13695.2253 5966.2977 13695.2253 C
5966.2473 13695.2253 5966.2347 13695.2253 5966.2158 13695.219 C
5966.3607 13695.6286 5966.701 13695.8618 5967.0665 13695.8618 C
5967.64 13695.8618 5967.911 13695.3513 5967.911 13694.8345 C
5967.911 13694.3304 5967.5959 13693.8326 5967.2493 13693.4418 C
5966.0393 13692.0932 L
5965.97 13692.0239 5965.97 13692.0113 5965.97 13691.8601 C
5968.308 13691.8601 L
5968.4845 13692.9566 L
f 
n
5993 13635 m
5991.9221 13718.1458 L
5992 13723.5 L
1 w
0 J
0 j
3.863693 M
S 
n
false eomode
5992 13708 m
5981.5977 13713.5806 L
5991.9221 13718.1458 L
6001.1071 13713.8403 L
5992 13708 L
[1 6]  vc
f 
1 J
1 j
[0 0 0 1]  vc
S 
n
5993 13635 m
6012.9042 13700.9938 L
5969.1555 13700.6201 L
5993 13635 L
h
[1 7]  vc
fhiscomposite spotascmyk or { 0 0 0 0.6 0 0 0 0.1 /normtaper load
 5969.16 13635 6012.9 13701  0 5991.03 13668 lfp4
} { 7 0 1 /normtaper load
 5969.16 13635 6012.9 13701  0 5991.03 13668 lfs4
true setoverprint
8 1 0 /normtaper load
 5969.16 13635 6012.9 13701  0 5991.03 13668 lfs4
} ifelse false setoverprint
[0 0 0 1]  vc
S 
n
6004.72 13696.821 m
6004.5759 13696.821 6004.4499 13696.821 6004.3239 13696.6949 C
6004.1798 13696.5599 6004.1618 13696.4068 6004.1618 13696.3438 C
6004.1618 13696.1278 6004.3239 13696.0287 6004.4949 13696.0287 C
6004.756 13696.0287 6004.9991 13696.2448 6004.9991 13696.6049 C
6004.9991 13697.046 6004.5759 13697.3791 6003.9368 13697.3791 C
6002.7214 13697.3791 6001.524 13696.0918 6001.524 13694.8224 C
6001.524 13694.0121 6002.0462 13693.3009 6002.9825 13693.3009 C
6004.2699 13693.3009 6005.0261 13694.2552 6005.0261 13694.3632 C
6005.0261 13694.4173 6004.9721 13694.4803 6004.918 13694.4803 C
6004.873 13694.4803 6004.855 13694.4623 6004.801 13694.3902 C
6004.0898 13693.499 6003.1085 13693.499 6003.0005 13693.499 C
6002.4333 13693.499 6002.1902 13693.9401 6002.1902 13694.4803 C
6002.1902 13694.8494 6002.3703 13695.7226 6002.6764 13696.2808 C
6002.9555 13696.794 6003.4506 13697.1811 6003.9458 13697.1811 C
6004.2518 13697.1811 6004.5939 13697.064 6004.72 13696.821 C
f 
n
6007.6626 13694.7932 m
6007.6626 13694.9445 6007.6626 13694.9571 6007.5177 13694.9571 C
6007.1269 13694.5537 6006.5724 13694.5537 6006.3707 13694.5537 C
6006.3707 13694.3584 L
6006.4967 13694.3584 6006.8686 13694.3584 6007.1963 13694.5222 C
6007.1963 13691.2579 L
6007.1963 13691.031 6007.1774 13690.9554 6006.6102 13690.9554 C
6006.4085 13690.9554 L
6006.4085 13690.76 L
6006.6291 13690.7789 6007.1774 13690.7789 6007.4294 13690.7789 C
6007.6815 13690.7789 6008.2298 13690.7789 6008.4503 13690.76 C
6008.4503 13690.9554 L
6008.2487 13690.9554 L
6007.6815 13690.9554 6007.6626 13691.0247 6007.6626 13691.2579 C
6007.6626 13694.7932 L
f 
n
5990.5 13723.5 m
5990.5 13724.3284 5991.1716 13725 5992 13725 C
5992.8284 13725 5993.5 13724.3284 5993.5 13723.5 C
5993.5 13722.6716 5992.8284 13722 5992 13722 C
5991.1716 13722 5990.5 13722.6716 5990.5 13723.5 C
f 
n
5994.3473 13729.9711 m
5994.2033 13729.9711 5994.0773 13729.9711 5993.9512 13729.845 C
5993.8072 13729.71 5993.7892 13729.5569 5993.7892 13729.4939 C
5993.7892 13729.2779 5993.9512 13729.1788 5994.1223 13729.1788 C
5994.3833 13729.1788 5994.6264 13729.3949 5994.6264 13729.755 C
5994.6264 13730.1961 5994.2033 13730.5292 5993.5641 13730.5292 C
5992.3487 13730.5292 5991.1514 13729.2419 5991.1514 13727.9725 C
5991.1514 13727.1622 5991.6735 13726.451 5992.6098 13726.451 C
5993.8972 13726.451 5994.6534 13727.4053 5994.6534 13727.5133 C
5994.6534 13727.5674 5994.5994 13727.6304 5994.5454 13727.6304 C
5994.5004 13727.6304 5994.4824 13727.6124 5994.4284 13727.5403 C
5993.7171 13726.6491 5992.7359 13726.6491 5992.6278 13726.6491 C
5992.0607 13726.6491 5991.8176 13727.0902 5991.8176 13727.6304 C
5991.8176 13727.9995 5991.9976 13728.8727 5992.3037 13729.4309 C
5992.5828 13729.9441 5993.078 13730.3312 5993.5731 13730.3312 C
5993.8792 13730.3312 5994.2213 13730.2141 5994.3473 13729.9711 C
f 
n
true eomode
5998.3361 13725.9267 m
5998.3361 13726.4309 5998.3046 13726.935 5998.084 13727.4014 C
5997.7941 13728.0063 5997.2773 13728.1072 5997.0127 13728.1072 C
5996.6346 13728.1072 5996.1745 13727.9433 5995.9161 13727.3572 C
5995.7145 13726.9224 5995.683 13726.4309 5995.683 13725.9267 C
5995.683 13725.4541 5995.7082 13724.8869 5995.9666 13724.408 C
5996.2375 13723.8975 5996.6976 13723.7715 5997.0064 13723.7715 C
5997.3467 13723.7715 5997.8256 13723.9038 5998.1029 13724.5025 C
5998.3046 13724.9373 5998.3361 13725.4289 5998.3361 13725.9267 C
h
5997.0064 13723.9101 m
5996.7606 13723.9101 5996.3888 13724.0677 5996.2753 13724.6726 C
5996.206 13725.0508 5996.206 13725.6305 5996.206 13726.0023 C
5996.206 13726.4057 5996.206 13726.8216 5996.2564 13727.1619 C
5996.3762 13727.9118 5996.8488 13727.9685 5997.0064 13727.9685 C
5997.2143 13727.9685 5997.6302 13727.8551 5997.75 13727.2312 C
5997.813 13726.8783 5997.813 13726.3994 5997.813 13726.0023 C
5997.813 13725.5297 5997.813 13725.1012 5997.7437 13724.6978 C
5997.6492 13724.0992 5997.2899 13723.9101 5997.0064 13723.9101 C
f 
n
false eomode
6012.9042 13700.9938 m
6005.0583 13700.3435 5996.8899 13700 5988.5 13700 C
5981.8987 13700 5975.4333 13700.2127 5969.1555 13700.6201 C
5973.8801 13707.0545 5975.8416 13709.6047 5981.5977 13713.5806 C
5989.9208 13713.1286 5996.4241 13713.2152 6001.1071 13713.8403 C
6006.75 13710 6009.875 13705.875 6012.9042 13700.9938 C
h
[1 4]  vc
fhiscomposite spotascmyk or { 5993.19 13712 26.5664 0 0 0 0 0.8 0 0 0 0.2 rfp6 
} { 5993.19 13712 26.5664 0 4 1 0 rfs6 
true setoverprint
5993.19 13712 26.5664 0 5 0 1 rfs6 
} ifelse false setoverprint
[0 0 0 1]  vc
S 
n
6075.9469 13718.0894 m
6080.9754 13713.3031 6084.6775 13708.1065 6087.053 13702.5 C
6090.0322 13708.3821 6094.0821 13713.7452 6099.2023 13718.5889 C
6091.1841 13717.182 6083.4321 13717.0155 6075.9469 13718.0894 C
h
[1 4]  vc
fhiscomposite spotascmyk or { 6087.08 13716.4 13.8945 0 0 0 0 0.8 0 0 0 0.2 rfp6 
} { 6087.08 13716.4 13.8945 0 4 1 0 rfs6 
true setoverprint
6087.08 13716.4 13.8945 0 5 0 1 rfs6 
} ifelse false setoverprint
[0 0 0 1]  vc
S 
n
vmr
vmr
end
%%Trailer
