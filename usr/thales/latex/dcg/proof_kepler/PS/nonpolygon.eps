%!PS-Adobe-2.0 EPSF-1.2
%%Title: nonpolygon.FH10
%%Creator: FreeHand 10.0
%%CreationDate: Mon Feb 25 21:56:19 2002 
%%BoundingBox: 0 0 168 107
%%FHPathName:C:\Documents and Settings\Thomas Hales\Desktop\REVISION\nonpolygon.FH10
%ALDOriginalFile:C:\Documents and Settings\Thomas Hales\Desktop\REVISION\nonpolygon.FH10
%ALDBoundingBox: -207 -415 405 377
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t==#^::et!!!Z`GQI2;HZ5M*F[(1S]948gJ-?ET>IM+7
%:s8V?&/0!1E)t-F'=`S)CDcb@ZZ6\`fCC);fh+uI&qss0tOpl3Wi]s&r&k\UY1a,VdZ2(-sa`NshVA%\Jcp*nkD&u&KdS(TN>D>i#dQA?nCk(VsYMHgkPsTGOKg'dsoA.GIpRH<n\bCLGhX?o5BF@P]/4D!\.M5ZX78@)e6.H8$b2mTC0V17W+63/F7Ni,f*7CjclIK0`n%S<]*=m8ULk3UVqGfo;BG`&?TYq8]9S5YIcUg__^s%^:
%:c!?*KI;%f%B%^CiZ4-kcFi[]5_Pa=F>h02K"GbKdpe(KTAB,?V@E!2a0ZHX>TI)0fZXW^OTVZ@6>@'@gf'#>MHkrSFJY>q]@4L:T\VTr%Zk^>:nV7?SG,duE/*LlK*HVDNUg8Qg/QJhlVQkiT^>4<$?b+s-:R-NDd^#I`Jt0O6crC9=:a;@NBt<gY19Xdq.mh!=2):B'f9/^bmq&'i4:!PhcYB2r&4qtP74Nmm'(54S6F<%'Q`%9M
%:#au*Oh4W>66lX5/%\_In`agJO)TA7<L=#soVfK>Kp_?-Ci,kchija9W`>E$7,8XjC="]O#6bgk)<c=1-cNkMnSRjq>raQC$IBNheopSp$!cm_\:g79Id'6!XdF7i)nFdr>Yb4^2DPN2oC,gf]ko8rUR?A`Vf(ttIa@bT`dBN1Mkq]Wu;OXs-(sY(\3G0sG#R0qSR&2k]lA^&!(c'fF?-+i9\V3pm.q'uHWll\r&SD<Gkf@T8a=@5n
%:C"H($1[V&c\qP#ja2]42T9_/Nn3Cq398@+i.(0a/T;>kiEB5die.7KU$n)Dj,9c-IU(?Og)K#^f:)UR3_A?SpN,B8Q1&N>3!TC_d7&(IYLG(q^VoW;d4"Z2hKIF<ep1[,QH*+>rA\;To@_=9,!1kZbjm_Y*TAgPP7[q@E7uK3U[^MPACS228,OMB2i,(tkBLtpB7\X%816tT9To-+hoL"jW:_[=]/J!t+e.<Xr?P`:@>'O"C&]]n+
%:pH`j_N6d$h,gA]C&\:?j##3IVP7@nf.oWuOjG([9RtlD5L'i![%/S4;c.Wis#8cu9LV(Bd>A-"s:86Z7KqmQ?q*5Z3*bl=?j@]'TL'AbjRc9DZ`[tse)N+n/PuNshVNZ)fl=fhu]qGNd1fd'=fhcKGRnRc2Q@Z"I*MlflgZTLQ$K)]2W?W:PO/n,=Im0&j`lFk>63[bYo`k!R**!f]*U7`[5*f3SfsI'=#/',?f1;ZuE"T3RAQY!S
%:];c#fgfbC_&/>h^@o/.L=NQS/YS,Xjqqu81!S@n"-GGD]8,Mf=UWTTbF>qV8mqU7^?dn!6$<Xk99nr>P%dLMI!$0SH/5iGg)VO]b_?[#KRI_H=%;hd[p%H(5^ilFg?3'=7qAQ:+Bc=&pe_u8qamfr`cKR$`VdIrkNsJijrtqQ.qTnE"VZA=6^WKI(5=[,srYmoTb;u4I<W25E`r@a4/U()?C?q2&\etq$W$B[tW`245Zn3/R"AkFE
%:#U:5n`O4E39C!3BLE0@;(94c?78'?-IhJFne5-T?%s4=:cq3.!i-b5p03ZIHN&,l=Ks^6A`A0a`nl)[XZ-ON#DgV?f)0/XKeQ7lT=b`F\X)Zk^(i[QXP9*[EZF;h)aH2TLqnPDuCSqTWG'VXD"RA-[emCQ4MLFe82qoV!,sCka-]un$6Vb5`Q2e35r0JohjJ9!Xi2$>8Z^57E8M;*5**A9CE)kHo"m\8A=GQS#g:m,t`V/TgcFNYr
%:#A#=YS,*ZM5L+c&G,5ajdc3957$7[5l/C6$&d0Lo@(gjOo)^ua)J*n&Q^%eWQ"jDl[7chNqd8frIJ5(o8WZUApS\#6p>U/facM]m\CW6o,fiR'H!_<i-"p]b-urHuk<YjoNoDhcT\dH75e:DdBgo4<fLe#\$2JHojf;p9(eslH:4);nhia[(Wk@6's2ZA<K8!-d<PGgH;&9!gII&-3F#TVqJ'dqEm;Hlh`kM2SGEpm\L=a5,>/iqg
%:^"]=_(S4cUl\fu@>@'KA6VdKmm:Yg5s)Nl'O_!?iFUKS=E".ES,M9NFA:n^U]'%8FmsMgtp<q.qD?'=#LK>)+:A5)&E3.8lR(FbnmC+_$\)-/2+Udl>]m_67acM]m3Vc8D_5ko*OH\P4n;@2.-_?SHQZ_=qZi]QN$s-lNRdLijA*hZIf3?JZO\<,AX1hu*+>`Ouh%eZpQYqm.H@5_PlV[G?VeLrVBUm@EO?Q@Q8fs`BGTc"b$[NBI
%:*$p=.ZkY_aO-Z;cMS.pTI10#kkkia?5cn4fpfDR)*:S(pLp(B.?mN>u'17`i*q!l6UU3-5Y;@0@UTclW1<6oiJ!$M/k$Qt>dhk+2@)&.*#p\L^C6Q=ZH*#M_'_ajR)JO:$(W?.D:PPU9H"\Xn]6O?7%t/BB^[A/l?u5:2?Pi2:lJGUohYr@_bAhLko%h>F-t`>]0YfIg]>^=rFWZA0GrUtne0sIK;O!;an]O<*>d8!Bo/p\u5BnC)
%:NA:Vf'S3m"2T/[Lid"D4d1CTSXKjbY,7U&Lm\e*LM/_Q`s#2==Kd>;RmO-&!$2@Fe,E*mHB<42?%ER0_(1ZKg><lR(9)3?\c_`;Y"m7!1j[iPTV_J-3#JM#<!ZY!o!l=P$dJ]`#+%LPr+QToGR46W],7Qt@;=Wp?U>u[BjBqGr9i>nq"c5^]=^kr"r>Iga^L"4Y&b*gsL+FYN<[t:>PdT*5IY3sN2^,NaBIg.IU\#\OYGN9'k-#W*
%:"8#6"'+mdg:1qO>Vnr?RnIS2`62S9d/ojl`_:L7-1HEe!#):gUEl6QoTIpB0UCfB$%Ou+rhIeIg-Oh'28*T%XKJ=&Q5(Vl[Qic&t44W,=&<tO\TLS_%%<p@43,_0*V%CA7]h5pZ2#%Xhr.[C1V94N9EBct.Kt%A0gku6CZJcEZ@Pr[nB>I4efi%'J,-0]\F"<3L%on^B>1/d!k'%N23_iTu\^=VBnT3ZM)oi5N_HKMc-GMjr_P762
%:!*;U<%ASfh_H/rXXer_m'4EeW3qra_:ldlpCp':(oU`$]A0d[G<Gm_fZ4684?78!kdN*Xj&J;%?)u;p1iUj2(Cc!l1+oA`'Z#m/IjC17&G[=*WU<1@DrGIC+J"rG<-R6]RI/hi4f9+Y_-Vr7"n*;t#+.XD<CeVgBR;Cp)jN)"IJ)c!j6E8(rc<)hAMTmJ(=m*k(-EG.WIF5$9.)"^.)"#C(#Lc8#RU,1\VB_7`lj#\5N*3=,@3-7'
%:dDiGRBK1@5Y-raR>riQm`Z:aP.],7[Q6!Z\WLh%MdP9C8-[n'iGB,V&f!.iBAY\3E2=#dY6J5o'^o;1k$SOo490lN>PX*\b:-D*QD-=_QLo[?#Td>V=LkB(DL^%WFcra-l`mr6S94XgNQl8!Ec=^hpJqgY;.,Mg8N\"Y&;G2pPSp!46km1ipm0b?T52gLlgdbV@,;/G`gO%0#Em3PM[Q>_(`2Y5d`(Us"\mhA$I$WHm:_>'[-*=&g
%:m7u\=kgX;rp&1rJB%O:7pGGui]@1H7W5^TI3QRcLLu,6nI%g&bHqM<dX5RSM@T9=0=XC3)BXmBV9\1\dD@.Ph]dl^iU+!_sV/lhPf7N!(*HZUtcCp8YRGLNS'CIoX%(7WXO!5".+EM_GIgQdH(Z_(6#m1&Gic/WcTd(\#846Ui!6FuuHujU-Nt-:8%KWQI'l<.u+'IM77A0oYMA#.>9o$=a*M6KeBlD%VB/(XpN+pcMQIOkY%\1#^
%:jEtWl,J1;sgo!6I@oE\bDA(>.qI`<ria#]L;l?E>rfQ`-JH]'7[tk:m?XVf>,U'GAhg78%AfsrA7-PKn_/A..:fP8]ac7l*St(ZSZD7';`\iF+/sjXnkYUN6$c^5",9kP[E]=Vh$&$DVJl9(fMbLj0aO<""*\Ed`KCQqP=p^@8;LtJk*15gbVKS3<?n0gido_b]SI8.[>T,\iFts*%3uf(m/'akG&3M%pHSq3bG*J,.?u[=ub@X!U
%:`<_e#.r-Kj>F::@m.c>P_B+\mL1!lI%!N6.aYfYtQ&giLlI8HlKMYODIp*+g[,,b01be?T"NHeJ3PJ.Q_)Jh?Mf]KMR)d`0Ws$Ck\t`p5e<n!@n\aqCSPkpTB04El.SH<WECG_m5t/:7"O0ntrn.!6McGp9)&7;r)[=5F$c1b48C=^^eNO*DkA/-dlp=&V;L8#W_\s55cD65DB0!sjk]@.7V\:'PgL,4]6VGN@12M$#o5pEP.PBao
%:"dC1HX2r[EPT#pZn@Btp('DC0nN#K/E-A7.+Qi.`c&*-cT(14TR8hC.Y<_gGrPH3sHltN4Blet0Z$?de@6=O)(P5#4rm7(l$Y--6Ys>BN33ggj)K2)U%].1^nLj94;^<Y#,(Y<@U)ZBM!l>,f]>V!<s*O1>1qSgZf&rD]fIp:3qNDN?mFj7hBaNI;*&TjmVF'ILX;;b'c^U$NFj/mZ`bsJ00,92tb(e@5qDQ`#<6]5=DjT3S,'mjB
%:^0pcVM)S>M::7gMe9egdfl%cVFQFo/cAeOQok^$:C'IUCTe'fc7[I!lE<oi9_G+85\YbEu>MX7%?I)*q'hr>H4CPo(8(8a92@]=b2:N)2ht:f[IA%*cTsAA-#24`q%V\XHo<f:9m,kTIBl1qdBfQp;[C':AY86HW8pLgc%OF$o5[#EPgSqGmKkG0B8Ua[I;G*Ca\b*ithY1rrmq="d<*OShm"h(1\n2aU<i,,3$*](rgeP*)!F2TD
%:D6Ej->l8_)"7Eb?e!Fie9DZ#X1>"CcD,)hC"8%!R/sjJ.@G'A3;6EWida@[=@F1>Lc^A=@6a;U8jS^<7loU\$?_A2]m@bquda=M<`KmcNhX2(>?;?:cJCs%\n&FTaVW/iV;ce;`+/(5m5J(pFkLGsWQn//O&5P4[CUMq^&fqanX'usp=DS[eICQuVbPd<rD+S'5<tm4b#/"&%`MG4Zl7=@tiU28BGqIar/#*+r!qM4[Y?2S-FghBl
%:('s&sj&o\pp468K5Bpem'g,uB<+$^51.j7;"n:jeeoPJhW1rqX.&WdqVj6>;5T#lUl(@?:c6tj=LWp!MI1o%W-oL7G#e%+Ze*CXd&h?W"n+hF4[2Ak><Rdb:^-erWZ$HA^<Y8iBQn>\&T%5&e7;=-L(a#Bb0!/Sg]m!UH`aF:?1*+&i9OpMqiJk)h\>jLap[HsJ-]Z%q/%F*H0"cUh1sn[Wo=$WEn9Hgd,HmkJTe1*qFg#!Wh5opV
%:5+Ugfe7-hPHt>!D\B;8<p%eHQDndSdj5sl'ji^RKAYn3feM"5[%Ahp(CS)jHiWPl,Cc'n2`%nrMI$diW@8t54a6'=89X(auN;a]UV<2k,7b%sJk]L[ER)Qt-hM1ZX98I36mA;gY\/!GTkrZ<-%BSo=DnAo>C%f"^HWtn"Islcj=YLO,9hH&E[,K97pDV`S#$(GEZK'1,PdVk!&Dru7(W@cOpM$M82V5LT;O#7*SF!(A3"fSB)FM`2
%:>$i,9>sW2NCPBL<r5MlC;Hr+djDs'MnRpJX)Z_Mhf&@XO-mj-Eq:c;L.50:fc8j7)VnV;PE#Vsgr-c*PSpYb>T]gNC$`Da:10P'gi4aU3a=m-LA,VXi?MrWh=>;K*E4kBJR^,&BqJtA[b)h"2g,u8Xs)"HO$#=>P^VD2DZIUAM\k:!.X@X-#Vkkn;mq(?qPK6[\ePJk]3\*#rS9"/6kS7Yh=0R6#9b)A5-g$SY!fUFo3=@XG!q":K
%:R.I8OV3#:dJ#@Lu?:X<na!_t-EG[eW[C1rjmW?8HOkD5>X">V83KL=Hfm9]4.FHEJa47gti-H4mf3dF6pVOlg[nL^,hRQXp2_VFYX1$j>]2]V(J+Jt/\E%C6W=A6\%i-&uq\?6(>F)TlEX5cE9]OnL=itba8dK.Q=:R&m7&/[L$&u&jZA?LKB5LD]q6/N*^"0GdI*P_j>Ed+`JjZp?bc=^=$`?2elt9Yp)-+]L,^nXtVuQH8\_U'F
%:'m)s\ioeeUpA*82PaY?ZNY+1(X6GHt4Sj/p]>`I_E]"?dbUa`BV&qJ1`G;C#b(gnqIm@+l-H&Z#EOHW)(u1)q\!h=/((Sb[BI@^[a73>\2DMsqMDN7k=BG_S,CNX"\fV<1g(@V6g?WWnD1tpFltuI)[^A"P]%bqB0btdHDK<3C]35K<U2@r3kTTe>*)?2VHAm<.*iDf_n'Yk4pZVA9$2Q4O!I]tl:RC=(oS<'/oZ-SOoV_=oFS"@O
%:oHc[2Cc!%`4s[6KoKG`GkUJC/LDo@4(/NpjMgK<M'fMZYO>H9S1D-r(G9"R-)>OPQk)_s?.dk1@DJK3e',R#*7.c^mFPQluD8_YJ!%J$Q!09T`Ch7$aCh3SJ"@@-OF(eNeDu]qA6?73iBE/(D<^^Y3F8u?L<E"![Bl7P`!VB<9D.7F"6Yp1PErZ4^:h=ZgE+NO$Bm+&XEbT%a!<>i5:L\'M@rq\No1`/*EbTE(!!):Y9PJQi)Z-Kc
%:!!)+T6tp.Q!!2pa@<?'[Bl.D]!.m[26uQR+ART+\EW?(u6>URMCB+?\7;QOPASuSi!Wk]/F`V4iBle@r!PDH-E)0qX!!!En7mogbDKGjYN^d`!AOL*N@rc:&FDl1"!KL,f@T6cFCh3SIo2BpO@W-'VBju*kEd7Wc;,D:OE(k=p!!,ejEc5H!A9Dp(!!#YZDes?42?3_^6t(1G!!)C\:18!N!!(G@Ble@r!6@iJDIlXQF8u;aLquCo
%:7;QOP9PJQi!!%43Ch7H[Ec5njF*%B^N(.MoF`M$n!J+0kH#.%gEc5njF*%B_I8b*'F@0t_DfR`9!&$ZIF(o,XBl7J^!%pTHF(o,RBl%Sc!3/P3Bk1dr!!,)V@<?/_!(fOrCi!ZmFDl1"!>nUU@;GoD^._s\AT@bN-:)ZmDg,#dFD(XSUdoHDF`7<\!!')$[/k[V[/k[V[/k[UdK%>ga8j9]a8j9]a8j9]a8j9]a8jWg-3,@m897fq
%:-3,@m-3,@m-32Hp[/k[V[/k[V[/k[V[/k[V[/k[UdK&Y79)s/9l2e9m^&W?Wl2\NuG5ugeWW;;b[/do@G5ugf[/fRom/Sd>m/_b<m/ZDOm/aTqNW:[4[/^U9[/mo?m/ZDOm/aTp0*$1s3<47(3<47(3<47(3<1Z3G6'](G6&N\G6'](G6&N\G6'](G6'](l2[U[l2\NudK&Y8]E*Q`dK"IkdK(Bhl2g_^[/p+)[/bCNG6'](+46>%
%:l2[U\q>fd]oE"Oao)Z6#"9@]g!s,e2"9@]g!s/N(2ZW4FG6"WCm/V>1l2[U\]E%3sm/aTpm/aTpm/aTpm/aTpm/UAkm/UAkm/Z_Xm/aTpl2ZhEm/aTpm/aTpm/Z_Xm/Z_Y;#ot`l2ZE*CghEs6tKkHA7Yc@s8W*!O0_Ek
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1899 -1999 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
1937.6139 2060.9945 m
1908.898 2060.9946 L
1900.0242 2088.3054 L
1923.256 2105.1841 L
1946.4877 2088.3049 L
1937.6139 2060.9945 L
0.4096 w
s	
n
1999.2964 2059.5472 m
1970.5805 2059.5473 L
1961.7067 2086.858 L
1984.9385 2103.7368 L
2008.1702 2086.8576 L
1999.2964 2059.5472 L
s	
n
1972.5401 2021.7779 m
1961.3863 2002.4591 L
1939.0789 2002.4591 L
1927.9252 2021.7779 L
1939.0789 2041.0968 L
1961.3863 2041.0968 L
1972.5401 2021.7779 L
s	
n
2029.8253 2019.0742 m
2018.6715 1999.7554 L
1996.3641 1999.7554 L
1985.2104 2019.0742 L
1996.3641 2038.3931 L
2018.6715 2038.3931 L
2029.8253 2019.0742 L
s	
n
1923.8288 2104.703 m
1923.0097 2082.1764 L
S	
n
1985.0603 2078.2854 m
1985.0603 2078.851 1985.5187 2079.3094 1986.0842 2079.3094 C
1986.6497 2079.3094 1987.1082 2078.851 1987.1082 2078.2854 C
1987.1082 2077.7199 1986.6497 2077.2615 1986.0842 2077.2615 C
1985.5187 2077.2615 1985.0603 2077.7199 1985.0603 2078.2854 C
f	
S	
n
2043.6295 2102.86 m
2036.0524 2079.719 L
2053.6641 2079.719 L
2043.6295 2102.86 L
s	
n
2006.3582 2016.8492 m
2006.3582 2017.4147 2006.8166 2017.8732 2007.3821 2017.8732 C
2007.9476 2017.8732 2008.4061 2017.4147 2008.4061 2016.8492 C
2008.4061 2016.2837 2007.9476 2015.8253 2007.3821 2015.8253 C
2006.8166 2015.8253 2006.3582 2016.2837 2006.3582 2016.8492 C
f	
S	
n
2057.838 2059.3562 m
2029.1221 2059.3563 L
2020.2482 2086.6671 L
2043.48 2103.5458 L
2066.7118 2086.6666 L
2057.838 2059.3562 L
s	
n
1939.3927 2041.0141 m
1950.0416 2020.5354 L
S	
n
vmr
vmr
end
%%Trailer
