//begin low level functions
int asciiToDecimal(int c){
    if (97 <= c){
	c = c - 87;}else{
	c = c - 48;}
    return  c;}

int getChar(BufferedReader br){
    char[] tmp = new char[6];
    for (int i = 0; i < 6; i++)
        tmp[i] = (char)br.read();
    int result = 0;
    int factor = 1;
    for (int i = 5; i >= 2; i--){
	result += factor * asciiToDecimal(tmp[i]);
	factor *= 16;}
    return  result;}

String readLine(BufferedReader br){
    StringBuilder sb = new StringBuilder();
    while(true){
	int c = getChar(br);
	if(c==10)
	    break;
        sb.appendCodePoint(c);
    }
    return sb.toString();
}

readFile(String filename){
    String result = null;
    try{
	//print(filename);
	File file = new File(filename);
	// print(file);
	stream = new BufferedReader(new FileReader(file));
	int c = stream.read();
	StringBuilder sb = new StringBuilder();
	while (c != -1){
	    sb.append((char)c);
	    c = stream.read();
	}
	result = sb.toString();

    }
    catch (IOException x) {
	System.err.println(x);
    } 
    finally{
	if (stream != null)
	    stream.close();
    }
    return result;
}

void appendStringToFilename(String s, String p){
    //Convert the string to a byte array.
    byte[] data = s.getBytes();
    
    OutputStream out = null;
    try {
	out = new BufferedOutputStream(new FileOutputStream(p));
	out.write(data, 0, data.length);
    } catch (IOException x) {
	System.err.println(x);
    } finally {
	if (out != null) {
	    out.flush();
	    out.close();
	}
    }
}

String runCommand(String cmd){
    String result;
    
    result = global.hol.runCommand(cmd);
    
    //print(result);
    eval(global.hol.getEvalString());
    return result;
}
runHOLCommands(String cmd){
	global.hol.runHOLCommands(cmd);
	eval(global.hol.getEvalString());
}
//end low level functions
