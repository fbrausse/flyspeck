(* More definitions and conclusions *)

let GLTVHUM_concl = `!V (u0:real^3) p.  packing V /\ saturated V /\ (u0 IN V) ==>
   (p IN voronoi_closed V u0 <=>
  (?vl. vl IN barV V 3 /\ p IN rogers V vl /\ (truncate_simplex 0 vl = [u0])))`;;

let DUUNHOR_concl = `!V ul vl.   ul IN barV V 3 /\ vl IN barV V 3 /\ ~(rogers V ul = rogers V vl) ==>
   coplanar (rogers V ul INTER rogers V vl)`;;

let QXSKIIT_concl = 
  `!(vf:A->real^N) b .  FINITE (IMAGE vf (:A)) /\ 
    ~ affine_dependent (IMAGE vf (:A)) /\  (!i j. (vf i = vf j) ==> (b i = b j))
   ==> (?!p.  p IN affine hull (IMAGE vf (:A)) /\ (!i j.  (p dot (vf i - vf j) = (b i - b j))))`;;

(*
let OAPVION_concl = `!S.  ~(S = {}) /\ ~affine_dependent S ==>
    ?!p. ?c.  (p IN affine hull S) /\ (!(v:real^N). (v IN S) ==> (dist(p,v) = c))`;;
*)

let OAPVION1_concl = `!S. ~(S = {}) /\ ~affine_dependent S ==>
    (circumcenter S) IN (affine hull S)`;;

let OAPVION2_concl = `!S.  ~affine_dependent S ==>
  (!w. w IN S ==> (radV S = dist(circumcenter S, w)))`;;

let OAPVION3_concl = `!S.  ~affine_dependent S ==>
  (!p.  (p IN affine hull S) /\ (?c. !w. (w IN S) ==> (dist(p,w) = c)) ==> (p = circumcenter S))`;;

let MHFTTZN1_concl = `!V ul k.  (k <= 3) /\ saturated V /\ packing V /\ barV V k ul ==>
  dim_aff (set_of_list ul) = k`;;

let MHFTTZN2_concl = `!V ul k.  (k <= 3) /\ saturated V /\ packing V /\ barV V k ul ==>
   (!p. p IN   affine hull voronoi_list V ul <=> (!u.  (u IN set_of_list ul  ==> p IN bis (HD ul) u)))`;;

let MHFTTZN3_concl = `!V ul k.  (k <= 3) /\ saturated V /\ packing V /\ barV V k ul ==>
   ((affine hull (voronoi_list V ul)) INTER (affine hull (set_of_list ul)) = { circumcenter (set_of_list ul) } )`;;

let MHFTTZN4_concl = `!V ul k u v.  (k <= 3) /\ saturated V /\ packing V /\ barV V k ul /\
  u IN affine hull voronoi_list V ul /\ v IN affine hull (set_of_list ul) ==>
   ((u - q) dot (v - q) = &0)`;;

(* CHNGQBD *)

let HL = new_definition `hl (ul:(real^N)list) = radV (set_of_list ul)`;;

let XYOFCGX =  `!V S (p:real^3).  S SUBSET V /\ ~affine_dependent S /\
   (p = circumcenter S) /\ (radV S < sqrt(&2)) ==>
   (!u v.  u IN S /\ v IN (V DIFF S) ==>dist(v,p) > dist(u,p))`;;

let XNHPWAB1_concl = 
`!V ul k.  saturated V /\ packing V /\ (k <= 3) /\ (ul IN barV V k) /\ (hl ul < sqrt(&2)) ==>
  (omega_list V ul = circumcenter (set_of_list ul))`;;

let XNHPWAB2_concl = 
`!V ul k.  saturated V /\ packing V /\ (k <= 3) /\ (ul IN barV V k) /\ (hl ul < sqrt(&2)) ==>
  (omega_list V ul IN convex hull  (set_of_list ul))`;;

(*
let XNHPWAB3_concl = 
`!V ul k.  saturated V /\ packing V /\ (k <= 3) /\ (ul IN barV V k) /\ (hl ul < sqrt(&2)) ==>
  (aff_dim (IMAGE (omega_list_n V ul) (0..k)) = &k)`;;
*)

let XNHPWAB3_concl = 
`!V ul k.  saturated V /\ packing V /\ (k <= 3) /\ (ul IN barV V k) /\ (hl ul < sqrt(&2)) ==>
  (aff_dim { omega_list_n V ul j | j IN  (0..k)} = &k)`;;

pterm XNHPWAB3_concl;;
let XNHPWAB4_concl = 
`!V ul k.  saturated V /\ packing V /\ (k <= 3) /\ (ul IN barV V k) /\ (hl ul < sqrt(&2)) ==>
  (! i j.  (i < j) /\ (j <= k)  ==>  hl(truncate_simplex i ul) < hl(truncate_simplex j ul))`;;


let WAUFCHE1_concl = 
 `!V ul k.  saturated V /\ packing V /\ ul IN barV V k ==> hl ul <= 
    dist(omega_list V ul, HD ul)`;;

let WAUFCHE2_concl = 
 `!V ul k.  saturated V /\ packing V /\ ul IN barV V k /\
    hl ul < sqrt(&2) ==> (hl ul = dist(omega_list V ul, HD ul))`;;


(* rearrangement *)


let REVERSE_TABLE  = define `(REVERSE_TABLE (f:num->A) 0 = []) /\ 
   (REVERSE_TABLE f (SUC i) = CONS (f i)  ( REVERSE_TABLE f i))`;;

let TABLE = define `!(f:num->A) k. TABLE f k = REVERSE (REVERSE_TABLE f k)`;;

let left_action = new_definition `!p f x. left_action (p:A->C) (f:A->B) x = f(inverse p x)`;;

let left_action_list = new_definition `left_action_list p (ul:(A)list) = TABLE (\i. EL (inverse p i) ul) (LENGTH ul)`;;

let YIFVQDV_concl =  `!V ul k p.  packing V /\ saturated V /\ ul IN barV V k /\
     hl ul < sqrt(&2) /\ p permutes (0..k) ==>
  (left_action_list p ul IN barV V k) /\ (omega_list V (left_action_list p ul) = omega_list V ul)`;;

let KSOQKWL_concl = `!V ul p k.  saturated V /\ packing V /\ ul IN barV V k /\ hl ul < sqrt(&2) /\
p permutes (0..k) /\ (rogers V ul = rogers V (left_action_list p ul)) ==>  (p = I)`;;

(* TSIVSKG *)

let DROP = define `(DROP (ul:(A)list) 0  = TL ul) /\ (DROP ul (SUC i) = CONS(HD ul) (DROP (TL ul) i))`;;

let IVFICRK_concl = 
  `(!k. ?g.  (BIJ g { (i,sigma ) | i IN 0..(k+1) /\ sigma permutes (0..k) } { p | p permutes (0..(k+1)) })
    /\ (!(ul:(A)list) j.  (LENGTH ul = k+2) /\  j <= k ==> 
      (EL j ( left_action_list (g(i,sigma)) ul) = EL j (left_action_list sigma (DROP ul i) ))))`;;

let WQPRRDY_concl = 
  `!V ul k.  saturated V /\ packing V /\ ul IN barV V k /\ hl ul < sqrt(&2) ==>
    (convex hull (set_of_list ul) = UNIONS { rogers V (left_action_list p ul) |   p permutes (0..k) })`;;

(* TO HERE *)

let mxi = `!V ul. mxi V ul = @p. ((p IN convex hull { omega_list_n V ul 2  , omega_list V ul }) /\
    (dist(p, HD ul) = sqrt(&2)))`;;

let MXI_EXISTS_concl = `!V ul.  saturated V /\ packing V /\ barV V 3 ul /\
   hl (truncate_simplex 2 ul) < sqrt(&2) /\ sqrt(&2) <= hl ul ==>
    (mxi V ul IN convex hull { omega_list_n V ul 2  , omega_list V ul }) /\
    (dist(mxi V ul, HD ul) = sqrt(&2))`;;


let mcell0 = `!V ul. mcell0 V ul = { p | dist(p, omega_list_n V ul 0) > sqrt(&2)}`;;

let mcell1 = `!V ul. mcell1 V ul = convex hull 
  ({omega_list_n V ul 0} UNION {p | p IN rogers V ul /\ dist(p,omega_list_n V ul 0) = sqrt(&2)})`;;

let mcell2 = `!V ul. mcell2 V ul = convex hull
  ((set_of_list (truncate_simplex 1 ul )) UNION 
   { p | p IN rogers V ul /\ (p IN voronoi_list V (truncate_simplex 1 ul))
    /\ (dist(p, HD ul) = sqrt(&2)) })`;;

let mcell3 = `!V (ul:(real^3)list). mcell3 V ul = 
    if (hl (truncate_simplex 2 ul) < sqrt(&2)) /\ (sqrt(&2) <= hl ul) then
        convex hull (set_of_list (truncate_simplex 2 ul) UNION { xmi V ul })
    else {}`;;

let mcell4 = `!V ul. mcell4 V ul = convex hull (set_of_list ul)`;;

let mcell = `!(V:real^3->bool) ul.  (mcell i V ul) = 
   if (i=0) then mcell0 V ul else if (i=1) then mcell1 V ul else if (i=2) then mcell2 V ul 
   else if (i=3) then mcell3 V ul else mcell4 V ul`;;

let EMNWUUS1_concl = `!V ul. saturated V /\ packing V /\ barV V 3 ul ==>
   (hl ul < sqrt(&2) <=> ~(mcell4 V ul = {}))`;;

let EMNWUUS2_concl = `!V ul. saturated V /\ packing V /\ barV V 3 ul ==>
   (hl ul < sqrt(&2) <=> (mcell0 V ul = {}) /\ (mcell1 V ul = {}) /\ (mcell2 V ul = {}) /\ (mcell3 V ul = {}))`;;

let SLTSTLO_concl = `!V ul p.  saturated V /\ packing V /\ barV V 3 ul /\ (p IN rogers V ul) ==>
   (?i.  (i <= 4) /\ (p IN mcell i V ul))`;;

let RVFXZBU1_concl = `!V ul vl i j.   saturated V /\ packing V /\ barV V 3 ul /\ barV V 3 vl /\ ~(i=j) ==>
  NULLSET (mcell i V ul INTER mcell j V vl)`;;

let RVFXZBU2_concl = `!V ul vl i.   saturated V /\ packing V /\ barV V 3 ul /\ barV V 3 vl /\
  ~(NULLSET (mcell i V ul INTER mcell i V vl)) ==> (?p. p permutes 0..(i-1) /\ (vl = left_action_list p ul))`;;

let RVFXZBU3_concl = `!V ul i p.   saturated V /\ packing V /\ barV V 3 ul /\
   (p permutes 0..(i-1)) ==> (mcell i V (left_action_list p ul) = mcell i V ul)`;;

(*
let IJEKNGA_concl = 
*)

   let negligible_fun_p = new_definition `negligible_fun_p f S p = (? (C:real). (&0<= C)/\ ! (r:real). ( &1 <= r) ==> (sum (S INTER ball(p,r)) f) <= C * (r pow 2))`;;

   let negligible_fun_0 = new_definition `negligible_fun_0 f S  = negligible_fun_p f S ((vec:num->real^3) 0)`;;

   let fcc_compatible= new_definition `fcc_compatible f S = (!v. v IN S ==> sqrt( &32) <= measure(voronoi_open v S) + f v)`;;

   let kepler_conjecture = `kepler_conjecture = (!V. packing V /\ saturated V ==> (?(c:real). !(r:real). (&1<= r ==> vol ((UNIONS {ball(v:real^3, &1) | v IN V}) INTER ball(vec 0 ,r))/ vol (ball(vec 0, r))<= pi/ sqrt( &18) + c/ r)))`;;

(*
JGXZYGW already done by Nguyen Tat Thang
*)

   let sol0 = new_definition `sol0 = &3 * acs (&1 / &3)  - pi`;;
   let tau0 = new_definition `tau0 = &4 * pi - &20 * sol0`;;
   let mm1 = new_definition `mm1 = sol0 * sqrt(&8)/tau0`;;
   let mm2 = new_definition `mm2 = (&6 * sol0 - pi) * sqrt(&2) /(&6 * tau0)`;;
   let hplus = new_definition `hplus = #1.3254`;;
   let marchal_linear = `marchal_linear h = 
      (sqrt(&2)-h)*(hplus - h)*(&17*h - &9*(h pow 2) - &3)/
      ((sqrt(&2) - &1)*(hplus - &1))`;;

   let marchal =  `marchal h =
    (if (h <= &2) then marchal_linear h else &0)`;;



type_of `acs`;;
pterm  kepler_conjecture;;
gtype_of `truncate_simplex`;;
`rogers (left_action_list p ul)`;;
type_of `rogers`;;
`{ rogers (left_action_list p ul) |   p permutes (0..k) }`;;
`(convex hull (set_of_list ul) = UNIONS { rogers (left_action_list p ul) |   p permutes (0..k) })`;;
search [`(0..i)`;omit `x:real`;omit `x:real^N`];;

	    type_of `EL`;;
pterm YIFVQDV_concl;;
type_of `omega_list`;;
type_of `PRODUCT`;;
