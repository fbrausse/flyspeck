(* ========================================================================== *)
(* FLYSPECK - CODE BUILD                                                      *)
(*                                                                            *)
(* Chapter: All Chapters                                                      *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2012-04-12                                                           *)
(* ========================================================================== *)


(* Build of the computational parts of the Flyspeck Project *)

flyspeck_needs "strictbuild.hl";;

(* duplicated code *)
let unsplit d f = function
  | (x::xs) ->  List.fold_left (fun s t -> s^d^(f t)) (f x) xs
  | [] -> "";;

let join_comma  = unsplit "," (fun x-> x);;

let join_lines  = unsplit "\n" (fun x-> x);;

let join_space  = unsplit " " (fun x-> x);;
(* duplicated code *)

let print_string_as_text  = (* for debugging *)
  let datafile = Filename.temp_file "print_buffer" ".txt" in
    fun s -> 
      let outs = open_out datafile in
      let _ = Printf.fprintf outs "%s" s in
      let _ = close_out outs in
	Sys.command(sprintf "cat %s" datafile);;

let example_print_string_as_text() = print_string_as_text "1\n2\n\n3";;

let exists_pgm s = 
  let com = "command -v " ^ s in 
    not(process_to_string com = "");;

let java_found = exists_pgm "java";;

(* Build of Graph Generator -- java version *)

flyspeck_needs ("/../graph_generator/graph_control.hl");;

let example() = 
  let _ = Graph_control.example_render() in
  let _ = Graph_control.example_gentikz() in
    ();;

(*
    Graph_control.run_flyspeck();;
  (* run on April 13, 2012.  Output saved to string_archive.txt *)
*)

(* End of Graph Generator -- java version *)


(* Build of Linear Programs (informal glpk version) *)

let glpsol_found = exists_pgm "glpsol";;





