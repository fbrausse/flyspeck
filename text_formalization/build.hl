(* 
   Build file for Flyspeck project.

   the system dependent string flyspeck should be set to the "text_formalization" path.
   For example, on my system, I have added a line to my .bashrc file
   export FLYSPECK_DIR="$HOME/Desktop/flyspeck_google/source/text_formalization"

 *)

let flyspeck_dir = 
  (try Sys.getenv "FLYSPECK_DIR" with Not_found -> Sys.getcwd());;

let fullpath s = Filename.concat flyspeck_dir s;;

(* limit changes in the state of the proof assistant  *)

let CHEAT_TAC = FAIL_TAC "cheaters never prosper";;
let new_axiom _ = failwith "new_axiom has been disabled";; 

let (partially_restore_state:string->unit) =
  let (rewrites,conversions) = (basic_rewrites(),basic_convs()) in
  fun s ->
   (
       current_goalstack := ([]:goalstack);
       if not(List.length(axioms()) =3) then failwith ("Illegal axioms added by "^s); 
       prioritize_real();
       if not(basic_rewrites()=rewrites) then set_basic_rewrites rewrites;
       if not(basic_convs()==conversions) then set_basic_convs conversions  
   );;

partially_restore_state "build";;

let fileid s = 
  let s' = file_on_path (!load_path) (fullpath s) in
    (Filename.basename s',Digest.file s');;

let host = ref (fileid "build.hl");;
let depend = ref ([]:((string*Digest.t)*(string*Digest.t)) list);; (* needs dependency table *)

let flyspeck_needs s = 
  let id = fileid s in 
    if (List.mem id (!loaded_files)) then ()
    else
      (
        if List.mem (!host,id) (!depend) then failwith "There may be circular needs.";
	depend := (!host,id)::(!depend);
	(let h = (!host) in host := id; needs (fullpath s); host := h);
	partially_restore_state s;
      );;


(* HOL LIGHT *)
hol_version;;
needs "Multivariate/flyspeck.ml";;

(* utilities *)
flyspeck_needs "general/print-types.ml";;
flyspeck_needs  "general/update_database_310.ml";;
flyspeck_needs "general/prove_by_refinement.hl";;

(* general *)
flyspeck_needs  "general/sphere.hl";;

(* lemmas in geometry *)
flyspeck_needs "leg/geomdetail.hl";;
flyspeck_needs "leg/affprops.hl";;
flyspeck_needs "leg/cayleyR_def.hl";;
flyspeck_needs  "leg/collect_geom.hl";;


(* slow, and not generally needed. contains NUHSVLM on cayleyR:*)
(* flyspeck_needs  "leg/collect_geom2.hl";;  *)

(* nonlinear *)
flyspeck_needs  "nonlinear/ineq.hl";;
flyspeck_needs  "nonlinear/ineqdata3q1h.hl";;

(* trigonometry *)
flyspeck_needs  "trigonometry/trig1.ml";;
flyspeck_needs  "trigonometry/trig2.ml";;
flyspeck_needs  "trigonometry/trig_summary.hl";;

(* volume *)
(* to here *)
flyspeck_needs  "volume/volume.ml";;
flyspeck_needs  "volume/volume_summary.hl";;

(* hypermap *)
flyspeck_needs  "hypermap/hypermap.ml";;

(* fan *)
flyspeck_needs  "fan/fan.ml";;
flyspeck_needs  "fan/fan_summary.hl";;

(* packing *)
flyspeck_needs  "packing/formulation.ml";;

(* local fan -- no files *)


(* tame *)
