(* everything works when pasted into hol.light, needs to be double-checked *)


(* File of the nonlinear inequalities to be verified by interval arithmetic.
   File created Sep 4, 2009
*)


(* quad0.mod inequalities *)

needs "sphere.hl";;

prioritize_real();;

let s8= new_definition `s8 = sqrt(#8.0)`;;

let I_7931207804=
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.52, y4, s8);
(#2.0, y5, #2.52);
(#2.0, y6, #2.52)]
( (tau_y y1 y2 y3 y4 y5 y6) - #0.27 +
(#0.0295 * (y1 - #2.0)) - (#0.0778 * (y2 - #2.0)) - (#0.0778 * (y3 - #2.0)) - (#0.37 * (y4 - #2.0)) - (#0.27 * (y5 - #2.52)) - (#0.27 * (y6 - #2.52)) >= #0.0)`;;

  let I_2563100177=
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4, #2.52);
(#2.0, y5, s8);
(#2.0, y6, s8)]
( rhdih_y y1 y2 y3 y4 y5 y6) - #1.0685 - (#0.4635 * (y1 - #2.0)) + (#0.424 * (y2 - #2.0)) + (#0.424 * (y3 - #2.0)) - (#0.594 * (y4 - #2.0)) + (#0.124 * (y5 - #2.52)) + (#0.124 * (y6 - #2.52)) >= #0.0)`;;


(* branch APIECE inequality.*)

let I_5760733457=
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4, #2.52);
(#2.52, y5, s8);
(#2.52, y6, s8)]
(dih_y y1 y2 y3 y4 y5 y6 - #1.0705 
-( #0.1 * (y1 - #2)) + (#0.424 * (y2 - #2.0)) + (#0.424 * (y3 - #2.0)) - (#0.594 * (y4 - #2.0)) + (#0.124 * (y5 - #2.52)) + (#0.124 * (y6 - #2.52)) >= #0.0)`;;

(*permute the y coordinates so that [i,j] is the apiece dart
y5 is opposite, y6 is other long*)
let I_181212899=
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4, #2.52);
(#2.52, y5, s8);
(#2.52, y6, s8)]
(dih_y y1 y2 y3 y4 y5 y6) - #1.0705 - (#0.10 * (y1 - #2.0)) + (#0.424 * (y2 - #2.0)) + (#0.424 * (y3 - #2.0)) - (#5.94 * (y4 - #2.0)) + (#0.124 * (y5 - #2.52)) + (#0.124 * (y6 - #2.52)) >= #0.0`;;

let I_4840774900=
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(s8, y4, #3.0);
(#2.0, y5, #2.52);
(#2.0, y6, #2.52)]
(taum y1 y2 y3 y4 y5 y6) - #0.1054 - (#0.14132 * (y1 + (y2 / #2.0) + (y3 / #2.0) - #4.0)) - (#0.36499 * (y5 + y6 - #4.0)) >= #0.0`;;

let I_9225295803= 
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4, #2.25);
(#2.0, y5, #2.25);
(#2.0, y6, #2.25)]
(taum y1 y2 y3 y4 y5 y6) + #0.0034 - (#0.166 * (y1 + y2 + y3 - #6.0)) - (#0.22 * (y4 + y5 + y6 - #6.0)) >= #0.0`;;

let I_9291937879= 
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4, #2.25);
(#2.0, y5, #2.25);
(#2.0, y6, #2.25)]
(dih_y y1 y2 y3 y4 y5 y6) - #1.23 - (#0.235 * (y1 - #2.0)) + (#0.362 * (y2 + y3 - #4.0)) - (#0.694 * (y4 - #2.0)) + (#0.26 * (y5 + y6 - #4.0)) >= #0.0`;;

let I_7761782916= 
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4,#2.52);
(#2.0, y5, #2.52);
(#2.0, y6, #2.52)]
(taum y1 y2 y3 y4 y5 y6) - #0.05 - (#0.137 * (y1 + y2 + y3 - #6.0)) - (#0.17 * (y3 + y4 + y5 - #6.25)) >= #0.0`;;

let I_6224332984= 
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.52);
(#2.0, y3, #2.52);
(#2.0, y4,#2.52);
(#2.0, y5, #2.52);
(#2.0, y6, #2.52)]
(sol_y y1 y2 y3 y4 y5 y6) - (#0.589) + (#0.39 * (y1 + y2 + y3 - #6.0)) - (#0.235 * (y4 + y5 + y6 - #6.25)) >= #0.0`;;

let I_9229542852 = 
all_forall `ineq
[(#2.0, y1, #2.18);
(#2.0, y2, #2.18);
(#2.0, y3, #2.18);
(#2.0, y4, #2.25);
(#2.0, y5, #2.25);
(#2.0, y6, #2.25)]
(dih_y y1 y2 y3 y4 y5 y6) - #1.230 - (#0.2357 * (y1 - #2.0)) + (#0.2493 * (y2 + y3 - #4.0)) - (#0.682 * (y4 - #2.0)) + (#0.3035 * (y5 + y6 - #4.0)) >= #0.0`;;

let I_1550635295= 
all_forall `ineq
[(#2.0, y1, #2.18);
(#2.0, y2, #2.18);
(#2.0, y3, #2.18);
(#2.0, y4, #2.25);
(#2.0, y5, #2.25);
(#2.0, y6, #2.25)]
-(dih_y y1 y2 y3 y4 y5 y6) + #1.232 + (#0.261 * (y1 - #2.0)) - (#0.203 * (y2 + y3 - #4.0)) + (#0.772 * (y4 - #2.0)) - (#0.191 * (y5 + y6 - #4.0)) >= #0.0`;;

let I_4491491732= 
all_forall `ineq
[(#2.0, y1, #2.18);
(#2.0, y2, #2.18);
(#2.0, y3, #2.18);
(#2.0, y4, #2.25);
(#2.0, y5, #2.25);
(#2.0, y6, #2.25)]
(taum y1 y2 y3 y4 y5 y6) + #0.0008 - (#0.1631 * (y1 + y2 + y3 - #6.0)) - (#0.2127 * (y4 + y5 + y6 - #6.0)) >= #0.0`;;

let I_8282573160= 
all_forall `ineq
[(#2.18, y1, #2.52);
(#2.0, y2, #2.18);
(#2.0, y3, #2.18);
(#2.52, y4, s8);
(#2.0, y5, #2.52);
(#2.0, y6, #2.52)]
(taum y1 y2 y3 y4 y5 y6) - #0.1413 - (#0.214 * (y1 - #2.18)) - (#0.1259 * (y2 + y3 - #4.0)) - (#0.067 * (y4 - #2.52)) - (#0.241 * (y5 + y6 - #4.0)) >= #0.0`;;

let I_8611785756= 
all_forall `ineq
[(#2.0, y1, #2.52);
(#2.0, y2, #2.18);
(#2.0, y3, #2.18);
(#2.0, y4, #2.52);
(#2.0, y5, #2.52);
(#2.0, y6, #2.52)]
(sol_y y1 y2 y3 y4 y5 y6) - #0.589 + (#0.24 * (y1 + y2 + y3 - #6.0)) - (#0.16 * (y4 + y5 + y6 - #6.25)) >= #0.0`;;
