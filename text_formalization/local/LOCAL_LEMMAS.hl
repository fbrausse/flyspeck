(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                                   *)
(* Author: Nguyen Quang Truong                                          *)
(* Date: 2010-05-09                                                           *)
(* ========================================================================== *)


needs "/home/user1/flyspeck/working/LDURDPN.hl";;


module type Ldurdpn_type = sig

end;;

(* ================================================================ *)
(* lemma 6.13 - KOMWBWC *)
module Local_lemmas = struct



open Ldurdpn;;
open Lvducxu;;
open Sphere;;
open Trigonometry1;;
open Trigonometry2;;
open Hypermap;;
open Fan;;
open Prove_by_refinement;;
open Wrgcvdr_cizmrrh;;

let rho_node = new_definition ` rho_node FF v = (@w. (v,w) IN FF)`;;

let SWITCH_TAC t = UNDISCH_TAC t THEN DISCH_THEN (ASSUME_TAC o SYM);;







let LOCAL_FAN_IMP_IN_V = prove_by_refinement
(` local_fan (V,E,FF) /\ x,y IN FF ==> x IN V /\ y IN V `,
[REWRITE_TAC[local_fan];
NHANH lemma_face_subset;
NHANH ELMS_OF_HYPERMAP_HYP;
LET_TAC THEN STRIP_TAC;
DOWN;
UNDISCH_TAC ` face H (x':real^3 # real^3) SUBSET dart H`;
ASM_REWRITE_TAC[SUBSET];
DISCH_THEN NHANH;
DOWN_TAC;
REWRITE_TAC[FAN; darts_of_hyp; IN_UNION; Wrgcvdr_cizmrrh.IN_ORD_E_EQ_IN_E];
STRIP_TAC;
DOWN;
UNDISCH_TAC ` UNIONS E SUBSET (V:real^3 -> bool) `;
NHANH lemma_sub_support;
REWRITE_TAC[INSERT_SUBSET; SUBSET];
MESON_TAC[];
DOWN;
REWRITE_TAC[self_pairs; IN_ELIM_THM; PAIR_EQ];
MESON_TAC[]]);;


let LOCAL_FAN_RHO_NODE_PROS = prove_by_refinement
(`local_fan (V,E,FF)
         ==> (!x. x IN V ==> x, (rho_node FF x) IN FF) /\
              (!x. x IN FF ==> x = FST x,rho_node FF (FST x))`,
[ABBREV_TAC `k = (\x. FST (x:real^3 # real^3)) `;
SWITCH_TAC `(\x. FST (x:real^3 # real^3)) = k`;
STRIP_TAC;
MP_TAC2 Wrgcvdr_cizmrrh.BIJ_BETWEEN_FF_AND_V;
REWRITE_TAC[BIJ];
STRIP_TAC;
SUBGOAL_THEN ` (!x. x IN V ==> x,rho_node FF x IN (FF:real^3 # real^3 -> bool))` ASSUME_TAC;
REPEAT STRIP_TAC;
REWRITE_TAC[rho_node];
CONV_TAC SELECT_CONV;
DOWN THEN DOWN;
REWRITE_TAC[SURJ];
STRIP_TAC;
FIRST_ASSUM NHANH;
ASM_REWRITE_TAC[];
STRIP_TAC;
EXISTS_TAC ` SND (y:real^3 # real^3) `;
FIRST_X_ASSUM (SUBST1_TAC o SYM);
ASM_REWRITE_TAC[];
DOWN THEN SIMP_TAC[];
DOWN;
REWRITE_TAC[SURJ];
STRIP_TAC THEN STRIP_TAC;
UNDISCH_TAC ` !x. x IN (FF:real^3 # real^3 -> bool) ==> k x IN (V:real^3 -> bool) ` ;
DISCH_THEN NHANH;
FIRST_X_ASSUM NHANH;
DOWN THEN DOWN;
ASM_REWRITE_TAC[INJ];
MESON_TAC[FST]]);;




let ORTHONORMAL_CYCLIC = prove_by_refinement
(`~( x:real^N = y ) /\ FINITE U /\ (! u1 u2. u1 IN U /\ u2 IN U 
==> (u1 - u2) dot (x - y ) = &0) /\
U INTER affine hull {x,y} = {} ==>
cyclic_set U x y `,
[SIMP_TAC[cyclic_set];
STRIP_TAC;
REWRITE_TAC[VECTOR_ARITH` p = q + h % x <=> p - q = h % x `];
REPEAT STRIP_TAC;
FIRST_X_ASSUM (ASSUME_TAC o (SPECL [`p:real^N`;` q:real^N`]));
FIRST_X_ASSUM MP_TAC2;
ASM_REWRITE_TAC[IN];
ASM_REWRITE_TAC[DOT_LMUL; REAL_ENTIRE; DOT_EQ_0];
DISCH_THEN DISJ_CASES_TAC;
ASM_REWRITE_TAC[VECTOR_MUL_LZERO; VECTOR_ADD_RID];
ASM_REWRITE_TAC[VECTOR_ADD_RID; VECTOR_MUL_RZERO]]);;




let FAN_SINGLETON_V_DARTS = prove_by_refinement
(` FAN (x:real^N,V,E) /\ V = {v} ==> darts_of_hyp E V = {(v,v)}`,
[REWRITE_TAC[FAN; darts_of_hyp; EXTENSION; IN_INSERT; NOT_IN_EMPTY; SUBSET; IN_UNION; ord_pairs; self_pairs; IN_ELIM_THM];
NHANH lemma_sub_support;
REWRITE_TAC[INSERT_SUBSET];
REPEAT STRIP_TAC;
EQ_TAC;
ASM_MESON_TAC[];
STRIP_TAC;
DISJ2_TAC;
EXISTS_TAC ` v:real^N`;
ASM_REWRITE_TAC[EE; IN_ELIM_THM];
DOWN_TAC THEN REWRITE_TAC[graph; IN];
STRIP_TAC;
FIRST_ASSUM NHANH;
REWRITE_TAC[HAS_SIZE; Geomdetail.CARD2];
REPEAT STRIP_TAC;
UNDISCH_TAC ` (E:(real^N -> bool) -> bool) {v,x'':real^N}`;
PAT_ONCE_REWRITE_TAC `\x. x ==> i ` [GSYM IN ];
PHA;
NHANH lemma_sub_support;
REWRITE_TAC[INSERT_SUBSET; IN];
ASM_MESON_TAC[]]);;





let FAN_IN_DARTS_FST_EQ_SND_SELF_PAIRS = prove_by_refinement
(` FAN (x:real^N,V,E) /\ y IN darts_of_hyp E V 
==> ( FST y = SND y <=> y IN self_pairs E V )`,
[REWRITE_TAC[FAN; graph; darts_of_hyp; IN_UNION; ord_pairs; self_pairs; IN_ELIM_THM];
STRIP_TAC;
FIRST_X_ASSUM (MP_TAC2 o (SPEC `{a,b:real^N}`));
ONCE_REWRITE_TAC[GSYM IN];
ASM_REWRITE_TAC[];
ASM_REWRITE_TAC[HAS_SIZE; Geomdetail.CARD2; PAIR_EQ];
MESON_TAC[];
ASM_REWRITE_TAC[];
EXISTS_TAC ` v:real^N`;
ASM_REWRITE_TAC[]]);;




let FAN_FST_EQ_SND_SUPPER_EQ = prove_by_refinement
(` FAN (x,V,E) /\ FST y = SND y ==>
ee_of_hyp (x,V,E) y = y /\
nn_of_hyp (x,V,E) y = y /\
ff_of_hyp (x,V,E) y = y `,
[STRIP_TAC;
ASM_CASES_TAC ` y IN darts_of_hyp E (V:real^3 -> bool) `;
ASM_SIMP_TAC[Lvducxu.EE_OF_HYP_IDE_FST_SND_EQ];
UNDISCH_TAC ` FST y = SND (y:real^3 # real^3) `; 
ASSUME_TAC2 (
ISPEC `x:real^3 ` (GEN `x:real^N `FAN_IN_DARTS_FST_EQ_SND_SELF_PAIRS));
ASM_SIMP_TAC[nn_of_hyp3; ff_of_hyp3];
ASM_REWRITE_TAC[nn_of_hyp2; ee_of_hyp2; ff_of_hyp2]]);;






let COLLINEAR_CROSS_0 = prove(
` collinear {x,y,z} <=> (y - x ) cross ( z - x ) = vec 0 `,
ONCE_REWRITE_TAC[Trigonometry2.COLLINEAR_TRANSABLE] THEN 
REWRITE_TAC[CROSS_EQ_0]);;




let DET_CROSS = prove(` det (vector [x;y;z]) = (x cross y ) dot z `,
REWRITE_TAC[Trigonometry2.DET_VEC3_EXPAND; Trigonometry2.DET_VEC3_AS_CROSS_DOT]);;



let COPLANAR_IFF_CROSS_DOT = prove(
` coplanar {x,y,z,t} <=> (( y - x ) cross ( z - x ) ) dot ( t - x ) = &0`,
REWRITE_TAC[COPLANAR_DET_EQ_0; DET_CROSS]);;





let CROSS_DOT_COPLANAR = prove(
 ` (x cross y) dot z = &0 <=> coplanar {vec 0, x, y, z}`,
REWRITE_TAC[COPLANAR_IFF_CROSS_DOT; VECTOR_SUB_RZERO]);;





let SUBSET_NOT_COLLINEAR_AFFINE_HULL_EQ = prove_by_refinement
(` {a:real^3,b,c} SUBSET affine hull {x,y,z} /\ ~( collinear {a,b,c})
==> affine hull {x,y,z} = affine hull {a,b,c} `,
[REWRITE_TAC[COLLINEAR_CROSS_0];
REWRITE_TAC[GSYM DOT_EQ_0];
REWRITE_TAC[CROSS_DOT_COPLANAR];
STRIP_TAC;
REWRITE_TAC[EXTENSION];
GEN_TAC;
EQ_TAC;
DOWN THEN NHANH (SMOOTH_GEN_ALL Trigonometry2.NONCOPLANAR_3_BASIS);
REWRITE_TAC[VECTOR_SUB_RZERO];
STRIP_TAC;
FIRST_X_ASSUM (MP_TAC o (SPEC ` x':real^3 - a`));
REPEAT STRIP_TAC;
SUBGOAL_THEN ` coplanar {a,b,c,x':real^3}` MP_TAC;
DOWN_TAC;
REWRITE_TAC[coplanar; INSERT_SUBSET; EMPTY_SUBSET];
MESON_TAC[];
ASM_REWRITE_TAC[COPLANAR_IFF_CROSS_DOT; DOT_RADD; DOT_RMUL; DOT_CROSS_SELF;
 Collect_geom.ZERO_NEUTRAL; REAL_ENTIRE; DOT_EQ_0; GSYM COLLINEAR_CROSS_0];
STRIP_TAC;
FIRST_X_ASSUM SUBST_ALL_TAC;
UNDISCH_TAC ` x' - (a:real^3) = t1 % (b - a) + t2 % (c - a) + &0 % ((b - a) cross (c - a)) `;
REWRITE_TAC[VECTOR_MUL_LZERO; VECTOR_ADD_RID; VECTOR_ARITH` x' - a = t1 % (b - a) + t2 % (c - a) <=> x' = (&1 - t1 - t2) % a + t1 % b + t2 % c `; AFFINE_HULL_3; IN_ELIM_THM];
MESON_TAC[REAL_ARITH` (&1 - a - b ) + a + b = &1 `];
DOWN_TAC;
NHANH NOT_COPLANAR_NOT_COLLINEAR;
ONCE_REWRITE_TAC[Trigonometry2.COLLINEAR_TRANSABLE];
REWRITE_TAC[VECTOR_SUB_RZERO];
MESON_TAC[];
DOWN_TAC;
NHANH (ISPEC ` affine ` HULL_MONO);
REWRITE_TAC[HULL_HULL; SUBSET];
MESON_TAC[]]);;




let THREE_NOT_COLL_DETER_PLANE = prove(
`plane P /\ {a:real^3,b,c} SUBSET P /\ ~collinear {a,b,c}
==> affine hull {a,b,c} = P `, REWRITE_TAC[plane] THEN 
MESON_TAC [SUBSET_NOT_COLLINEAR_AFFINE_HULL_EQ ]);;




let LOCAL_FAN_NOT_V_SING = prove_by_refinement
(` local_fan (V,E,FF) ==> ~(?v. V = {v}) `,
[REWRITE_TAC[local_fan; dih2k];
LET_TAC;
NHANH ELMS_OF_HYPERMAP_HYP;
REPEAT STRIP_TAC;
UNDISCH_TAC ` V = {v:real^3}`;
UNDISCH_TAC `FAN (vec 0:real^3,V,E) `;
PHA;
NHANH FAN_SINGLETON_V_DARTS;
NHANH (MESON[CARD_SINGLETON]` S = {c} ==> CARD S = 1 `);
STRIP_TAC;
UNDISCH_TAC ` CARD (dart (H:(real^3 # real^3) hypermap)) = 2 * CARD (FF:real^3 # real^3 -> bool)` ;
DOWN;
EXPAND_TAC "H";
ASM_SIMP_TAC[];
MESON_TAC[FACE_NOT_EMPTY; ARITH_RULE` 1 <= a ==> ~( 1 = 2 * a ) `]]);;





let LOCAL_FAN_NOT_SING_FF = prove_by_refinement
(` local_fan (V,E,FF) ==> ~(? x. FF = {x})`,
[STRIP_TAC;
ABBREV_TAC ` k = (\x. FST (x:real^3 # real^3)) `;
SWITCH_TAC ` (\x. FST (x:real^3 # real^3)) = k `;
ASSUME_TAC2 Wrgcvdr_cizmrrh.BIJ_BETWEEN_FF_AND_V;
DOWN;
REWRITE_TAC[BIJ];
NHANH Wrgcvdr_cizmrrh.SURJ_IMP_S2_EQ_IMAGE_S1;
REPEAT STRIP_TAC;
FIRST_X_ASSUM SUBST_ALL_TAC;
DOWN;
REWRITE_TAC[IMAGE; IN_INSERT; NOT_IN_EMPTY; SET_RULE` {y | ?x'. x' = x /\ y = k x'} = {k x }`];
DOWN_TAC THEN NHANH LOCAL_FAN_NOT_V_SING;
MESON_TAC[]]);;






let LOCAL_FAN_IN_FF_DISTINCT = prove_by_refinement
(` local_fan (V,E,FF) /\ x IN FF ==> ~( FST x = SND x ) `,
[NHANH LOCAL_FAN_NOT_SING_FF;
REWRITE_TAC[local_fan];
LET_TAC;
STRIP_TAC;
DOWN;
ASM_REWRITE_TAC[];
NHANH lemma_face_identity;
STRIP_TAC;
FIRST_X_ASSUM SUBST_ALL_TAC;
STRIP_TAC;
SUBGOAL_THEN ` face_map (H:(real^3 # real^3) hypermap) x = x ` ASSUME_TAC;
DOWN_TAC;
NHANH ELMS_OF_HYPERMAP_HYP;
IMP_TAC THEN SIMP_TAC[];
STRIP_TAC;
STRIP_TAC;
DOWN;
UNDISCH_TAC ` FAN (vec 0:real^3,V,E) `;
PHA;
SIMP_TAC[FAN_FST_EQ_SND_SUPPER_EQ];
DOWN THEN PHA THEN ONCE_REWRITE_TAC[orbit_one_point];
REWRITE_TAC[GSYM face; ETA_AX];
ASM_MESON_TAC[]]);;




let LOCAL_FAN_IN_FF_IN_ORD_PAIRS = prove_by_refinement
(` local_fan (V,E,FF) /\ x IN FF ==> x IN ord_pairs E `,
[NHANH LOCAL_FAN_IN_FF_DISTINCT;
REWRITE_TAC[local_fan];
NHANH ELMS_OF_HYPERMAP_HYP;
LET_TAC;
NHANH lemma_face_subset;
ASM_REWRITE_TAC[SUBSET];
STRIP_TAC;
UNDISCH_TAC ` (x:real^3 # real^3) IN FF `;
ASM_REWRITE_TAC[];
FIRST_X_ASSUM NHANH;
ASM_REWRITE_TAC[darts_of_hyp; IN_UNION];
STRIP_TAC;
DOWN;
REWRITE_TAC[self_pairs; IN_ELIM_THM];
STRIP_TAC;
FIRST_X_ASSUM SUBST_ALL_TAC;
REPLICATE_TAC 4 DOWN;
REWRITE_TAC[]]);;






let LOCAL_FAN_IN_FF_NOT_COLLINEAR = prove(
` local_fan (V,E,FF) /\ x IN FF ==> ~( collinear {vec 0, FST x, SND x }) `,
NHANH LOCAL_FAN_IN_FF_IN_ORD_PAIRS THEN 
REWRITE_TAC[Wrgcvdr_cizmrrh.IN_ORD_E_EQ_IN_E; local_fan; FAN; fan6; IN] THEN 
LET_TAC THEN STRIP_TAC THEN DOWN THEN FIRST_X_ASSUM NHANH THEN 
SIMP_TAC[SET_RULE` {a} UNION S = a INSERT S `]);;







let LOCAL_FAN_CHARACTER_OF_RHO_NODE = prove_by_refinement
(` local_fan (V,E,FF) ==> (! v. v IN V ==> ~( rho_node FF v = v ) /\
v, rho_node FF v IN ord_pairs E /\
~ (collinear {vec 0, v, rho_node FF v})) `,
[NHANH LOCAL_FAN_RHO_NODE_PROS;
STRIP_TAC;
FIRST_X_ASSUM NHANH;
FIRST_X_ASSUM NHANH;
GEN_TAC THEN IMP_TAC THEN REMOVE_TAC;
DOWN THEN PHA;
NHANH LOCAL_FAN_IN_FF_DISTINCT;
NHANH LOCAL_FAN_IN_FF_NOT_COLLINEAR;
NHANH LOCAL_FAN_IN_FF_IN_ORD_PAIRS;
SIMP_TAC[]]);;


let graph2 = prove(`graph E <=> (!e. e IN E ==> FINITE e /\ CARD e = 2)`,
REWRITE_TAC[graph; IN; HAS_SIZE]);;

let GRAPH_WITH_SET2 = prove(
` graph E ==> (! a b. {a,b} IN E ==> ~( a = b )) `,
REWRITE_TAC[graph2] THEN DISCH_THEN NHANH THEN 
SIMP_TAC[Geomdetail.CARD2]);;



let FAN_V_TWO_ELMS_IN_E_DARTS2 = prove_by_refinement
(` FAN (x:real^N,V,E) /\ V = {v1,v2} /\ {v1,v2} IN E ==>
darts_of_hyp E V = {(v1,v2), (v2,v1)}`,
[REWRITE_TAC[darts_of_hyp; FAN; EXTENSION; IN_UNION; ord_pairs; self_pairs;
 IN_ELIM_THM; SUBSET; graph2; IN_INSERT; NOT_IN_EMPTY];
STRIP_TAC THEN GEN_TAC;
EQ_TAC;
STRIP_TAC;
UNDISCH_TAC ` {a:real^N, b} IN E `;
NHANH lemma_sub_support;
REWRITE_TAC[INSERT_SUBSET; EMPTY_SUBSET];
FIRST_X_ASSUM NHANH;
FIRST_X_ASSUM NHANH;
ASM_REWRITE_TAC[Geomdetail.CARD2; PAIR_EQ];
MESON_TAC[];
UNDISCH_TAC ` v:real^N IN V `;
UNDISCH_TAC ` !x. ~(x IN EE (v:real^N) E)`;
UNDISCH_TAC ` {v1, v2:real^N} IN E`;
ASM_REWRITE_TAC[EE; IN_ELIM_THM];
PHA;
MESON_TAC[INSERT_COMM];
STRIP_TAC;
DISJ1_TAC;
DOWN THEN DOWN;
MESON_TAC[];
DISJ1_TAC;
DOWN THEN DOWN THEN PHA;
MESON_TAC[INSERT_COMM]]);;



let FAN_IN_E_DIFF = prove(
` FAN (x,V,E) ==> (! x y. {x,y} IN E ==> ~( x,y = y,x)) `,
REWRITE_TAC[PAIR_EQ; FAN] THEN NHANH GRAPH_WITH_SET2 THEN MESON_TAC[]);;




let LOCAL_FAN_NOT_TWO_V_IN_E = prove_by_refinement
(` local_fan (V,E,FF) ==> ~(? v1 v2. V = {v1,v2} /\ {v1,v2} IN E )`,
[NHANH Wrgcvdr_cizmrrh.LOCAL_FAN_IMP_FAN;
STRIP_TAC THEN STRIP_TAC;
DOWN_TAC;
NHANH FAN_V_TWO_ELMS_IN_E_DARTS2;
NHANH FAN_IN_E_DIFF;
NHANH LOCAL_FAN_NOT_SING_FF;
REWRITE_TAC[GSYM Geomdetail.CARD2; local_fan; dih2k];
LET_TAC;
NHANH ELMS_OF_HYPERMAP_HYP;
ASM_REWRITE_TAC[];
STRIP_TAC;
UNDISCH_TAC` CARD (dart (H:(real^3 # real^3) hypermap)) = 2 * CARD (FF:real^3 # real^3 -> bool) `;
ASM_SIMP_TAC[ARITH_RULE` 2 = 2 * x <=> x = 1 `];
STRIP_TAC;
SUBGOAL_THEN ` face H (x:real^3 # real^3) = {x} ` ASSUME_TAC;
MATCH_MP_TAC set_one_point;
ASM_REWRITE_TAC[FACE_FINITE; face_refl];
UNDISCH_TAC ` ~(?x. FF = {x:real^3 # real^3})`;
ASM_REWRITE_TAC[];
MESON_TAC[]]);;






let LOCAL_FAN_ORBIT_MAP_V = prove(
` local_fan (V,E,FF) ==> (! v. v IN V ==> orbit_map (rho_node FF) v = V) `,
NHANH LOCAL_FAN_RHO_NODE_PROS THEN 
STRIP_TAC THEN 
ABBREV_TAC ` k = (\x. FST (x:real^3 # real^3)) ` THEN 
SWITCH_TAC `(\x. FST (x:real^3 # real^3)) = k ` THEN 
ASSUME_TAC2 (SMOOTH_GEN_ALL Wrgcvdr_cizmrrh.WRGCVDR) THEN 
FIRST_X_ASSUM (MP_TAC o (SPEC ` rho_node (FF:real^3 # real^3 -> bool) `)) THEN 
STRIP_TAC THEN 
FIRST_X_ASSUM MP_TAC2 THEN 
DISCH_THEN MP_TAC2 THEN 
SIMP_TAC[EQ_SYM_EQ]);;





let LOCAL_FAN_RHO_NODE_PROS2 = ONCE_REWRITE_RULE[TAUT` a /\ b <=> b /\ a `] LOCAL_FAN_RHO_NODE_PROS;;



let FINTE_OF_N_FIRST_ELMS2 = prove(`FINITE {ITER n f x | n < i}`,
REWRITE_TAC[SET_RULE` {ITER n f x | n < i} = {y | ?n. n < i /\ y = ITER n f x}`]
THEN REWRITE_TAC[Wrgcvdr_cizmrrh.FINITE_OF_N_FIRST_ELMS]);;




let PLANE_AFFINE_HUL_INTER_P = prove_by_refinement
(` plane P /\ {x,y,z} SUBSET P 
==> affine hull {x, x + ( y - x ) cross ( z - x )} INTER P = {x} `,
[REWRITE_TAC[AFFINE_HULL_2; EXTENSION; IN_INSERT; NOT_IN_EMPTY; IN_INTER];
STRIP_TAC;
GEN_TAC;
REWRITE_TAC[IN_ELIM_THM];
EQ_TAC;
STRIP_TAC;
SUBGOAL_THEN ` coplanar {x,y,z,x':real^3} ` ASSUME_TAC;
DOWN_TAC;
REWRITE_TAC[coplanar; plane; INSERT_SUBSET];
MESON_TAC[];
DOWN;
ASM_REWRITE_TAC[COPLANAR_IFF_CROSS_DOT; VECTOR_ARITH` u % x + v % ( x + y ) =
 ( u + v ) % x + v % y `; VECTOR_MUL_LID; VECTOR_ARITH ` (a + b:real^N) - a = 
b `; VECTOR_ARITH` a + b = a <=> b = vec 0 `; DOT_RMUL; REAL_ENTIRE; DOT_EQ_0;
 VECTOR_MUL_EQ_0];
DOWN THEN PHA;
SIMP_TAC[INSERT_SUBSET];
STRIP_TAC;
EXISTS_TAC` &1 `;
EXISTS_TAC ` &0 `;
REWRITE_TAC[REAL_ADD_RID; VECTOR_MUL_LZERO; VECTOR_MUL_LID; VECTOR_ADD_RID]]);;





let FAN_IMP_V_DIFF = prove( ` FAN (x,V,E) ==> (! v. v IN V ==> ~( v = x )) `,
REWRITE_TAC[FAN; fan2] THEN MESON_TAC[]);;






let LOCAL_FAN_IMP_CYCLIC_SET = prove_by_refinement
(` local_fan (V,E,FF) /\ v IN V /\
{ITER n (rho_node FF) v | n <= l } = U /\
plane P /\ vec 0 IN P /\
U SUBSET P /\ v cross (rho_node FF v ) = e 
==>  cyclic_set U (vec 0 ) e `,
[NHANH LOCAL_FAN_RHO_NODE_PROS;
STRIP_TAC;
MATCH_MP_TAC ORTHONORMAL_CYCLIC;
UNDISCH_TAC ` v:real^3 IN V `;
UNDISCH_TAC ` !x. x IN V ==> x,rho_node FF x IN (FF:real^3 # real^3 -> bool) `;
STRIP_TAC;
FIRST_ASSUM NHANH;
STRIP_TAC;
DOWN;
UNDISCH_TAC ` local_fan (V,E,FF) `;
PHA;
NHANH LOCAL_FAN_IN_FF_NOT_COLLINEAR;
REWRITE_TAC[ GSYM CROSS_EQ_0];
ASM_SIMP_TAC[];
EXPAND_TAC "U";
REWRITE_TAC[ARITH_RULE` a <= b <=> a < b + 1 `];
REWRITE_TAC[FINTE_OF_N_FIRST_ELMS2];
STRIP_TAC;
ASM_CASES_TAC ` l = 0 `;
ASM_REWRITE_TAC[ARITH_RULE ` x < 0 + 1 <=> x = 0`; IN_ELIM_THM];
CONJ_TAC;
REPEAT STRIP_TAC;
ASM_REWRITE_TAC[VECTOR_SUB_REFL; DOT_LZERO];
REWRITE_TAC[EXTENSION; NOT_IN_EMPTY; IN_INTER; IN_ELIM_THM];
STRIP_TAC;
STRIP_TAC;
DOWN;
ASM_REWRITE_TAC[ITER; AFFINE_HULL_2; IN_ELIM_THM; VECTOR_MUL_RZERO; VECTOR_ADD_LID];
STRIP_TAC;
SUBGOAL_THEN ` v dot (e:real^3) = &0` ASSUME_TAC;
EXPAND_TAC "e";
REWRITE_TAC[DOT_CROSS_SELF];
DOWN;
ASM_REWRITE_TAC[DOT_LMUL; REAL_ENTIRE; DOT_EQ_0];
STRIP_TAC;
FIRST_X_ASSUM SUBST_ALL_TAC;
DOWN;
REWRITE_TAC[VECTOR_MUL_LZERO];
MP_TAC2 Wrgcvdr_cizmrrh.LOCAL_FAN_IMP_FAN;
REWRITE_TAC[FAN; fan2];
UNDISCH_TAC ` v:real^3 IN V `;
MESON_TAC[];
SUBGOAL_THEN ` {vec 0, v, rho_node (FF:real^3 # real^3 -> bool) v} SUBSET P ` ASSUME_TAC;
ASM_REWRITE_TAC[INSERT_SUBSET; EMPTY_SUBSET];
UNDISCH_TAC ` U SUBSET (P:real^3 -> bool) `;
MATCH_MP_TAC (SET_RULE` a IN S /\ b IN S ==> S SUBSET A ==> a IN A /\ b IN A `);
EXPAND_TAC "U";
REWRITE_TAC[IN_ELIM_THM];
CONJ_TAC;
EXISTS_TAC ` 0`;
DOWN;
REWRITE_TAC[ITER];
ARITH_TAC;
EXISTS_TAC ` 1 `;
DOWN;
REWRITE_TAC[ITER1];
ARITH_TAC;
DOWN;
UNDISCH_TAC ` plane (P:real^3 -> bool) `;
PHA;
NHANH PLANE_AFFINE_HUL_INTER_P;
ASM_REWRITE_TAC[VECTOR_SUB_RZERO; VECTOR_ADD_LID];
ASSUME_TAC2 LOCAL_FAN_ORBIT_MAP_V;
UNDISCH_TAC ` v:real^3 IN V `;
FIRST_ASSUM NHANH;
ASM_REWRITE_TAC[ARITH_RULE` a < b + 1 <=> a <= b `];
REPEAT STRIP_TAC;
SUBGOAL_THEN ` ! u. u IN U ==> (u:real^3) dot --e = &0 ` ASSUME_TAC;
REPEAT STRIP_TAC;
SUBGOAL_THEN ` {vec 0, v, rho_node FF v, u:real^3} SUBSET P` MP_TAC;
DOWN_TAC;
SIMP_TAC[INSERT_SUBSET];
STRIP_TAC;
DOWN;
UNDISCH_TAC ` U SUBSET (P:real^3 -> bool) `;
SET_TAC[];
UNDISCH_TAC `plane (P:real^3 -> bool) `;
REWRITE_TAC[plane];
STRIP_TAC;
ASM_REWRITE_TAC[];
STRIP_TAC;
SUBGOAL_THEN ` coplanar {vec 0, v, rho_node FF v, u:real^3} ` MP_TAC;
REWRITE_TAC[coplanar];
DOWN THEN MESON_TAC[];
ASM_REWRITE_TAC[COPLANAR_IFF_CROSS_DOT; VECTOR_SUB_RZERO; DOT_RNEG];
SIMP_TAC[DOT_SYM];
REAL_ARITH_TAC;
ASM_SIMP_TAC[DOT_LSUB; VECTOR_SUB_LZERO];
REAL_ARITH_TAC;
REWRITE_TAC[EXTENSION; NOT_IN_EMPTY; IN_INTER];
REPEAT STRIP_TAC;
SUBGOAL_THEN ` x IN affine hull {vec 0, e:real^3} INTER P` MP_TAC;
ASM_REWRITE_TAC[IN_INTER];
UNDISCH_TAC ` x IN U:real ^3 -> bool `;
UNDISCH_TAC ` U SUBSET P:real^3 -> bool `;
SET_TAC[];
ASM_REWRITE_TAC[IN_INSERT; NOT_IN_EMPTY];
SUBGOAL_THEN ` U SUBSET (V:real^3 -> bool) ` MP_TAC;
EXPAND_TAC "U";
EXPAND_TAC "V";
REWRITE_TAC[GSYM POWER_TO_ITER; lemma_subset_orbit];
REWRITE_TAC[SUBSET];
STRIP_TAC;
UNDISCH_TAC ` x:real^3 IN U `;
FIRST_X_ASSUM NHANH;
MP_TAC2 Wrgcvdr_cizmrrh.LOCAL_FAN_IMP_FAN;
REWRITE_TAC[FAN; fan2];
MESON_TAC[]]);;


(* -------------------------------- *)
(* ================================ *)

end;;