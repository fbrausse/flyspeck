(* ------------------------------------------------------------------------ *)
(*                     Changed by Vu Khac Ky - 15 Nov 2012                  *)
(*   The tactic SET_TAC has been changed collect_geom.hl, therefore         *)
(*   other files cannot be processed. It causes some troubles,              *)
(*    so I change it back to the original one here.                         *)
(* ------------------------------------------------------------------------ *)

let SET_TAC =
  let PRESET_TAC =
    POP_ASSUM_LIST(K ALL_TAC) THEN REPEAT COND_CASES_TAC THEN
    REWRITE_TAC[EXTENSION; SUBSET; PSUBSET; DISJOINT; SING] THEN
    REWRITE_TAC[NOT_IN_EMPTY; IN_UNIV; IN_UNION; IN_INTER; IN_DIFF; IN_INSERT;
                IN_DELETE; IN_REST; IN_INTERS; IN_UNIONS; IN_IMAGE;
                IN_ELIM_THM; IN] in
  fun ths ->
    (if ths = [] then ALL_TAC else MP_TAC(end_itlist CONJ ths)) THEN
    PRESET_TAC THEN
    MESON_TAC[];;

let SET_RULE tm = prove(tm,SET_TAC[]);;

let AFF_GE_1_3 = prove(`!x u v w.
         DISJOINT {x} {u, v, w}
         ==> aff_ge {x} {u, v, w} =
             {y | ?t1 t2 t3 t4.
                      &0 <= t2 /\
                      &0 <= t3 /\
                      &0 <= t4 /\
                      t1 + t2 + t3 + t4 = &1 /\
                      y = t1 % x + t2 % u + t3 % v + t4 % w}`,
AFF_TAC);;

let KY_COPLANAR_3 = prove (
 `!a b c:real^3. coplanar {a,b,c}`, 
  REPEAT GEN_TAC THEN REWRITE_TAC[coplanar] THEN EXISTS_TAC `a:real^3` THEN 
  EXISTS_TAC `b:real^3` THEN EXISTS_TAC `c:real^3` THEN 
  REWRITE_TAC[Qzksykg.SET_SUBSET_AFFINE_HULL]);;

let NEGLIGIBLE_MEASURE_UNION_klema = prove_by_refinement (
 `!s t. measurable s /\ measurable t /\ negligible t ==>
vol (s UNION t) = vol s`,
[(REPEAT STRIP_TAC);
 (REWRITE_WITH `vol (s UNION t) = vol s + vol t - vol (s INTER t)`);
 (ASM_SIMP_TAC[MEASURE_UNION]);
 (REWRITE_WITH `vol t = &0`);
 (ASM_SIMP_TAC[MEASURE_EQ_0]);
 (REWRITE_WITH `vol (s INTER t) = &0`);
 (MATCH_MP_TAC MEASURE_EQ_0);
 (MATCH_MP_TAC NEGLIGIBLE_SUBSET);
 (EXISTS_TAC `t:real^3->bool` THEN ASM_REWRITE_TAC[] THEN SET_TAC[]);
 (REAL_ARITH_TAC)]);;

(* ========================================================================= *)


g (mk_imp(tsk_hyp,`TSKAJXY_statement`));;
e (STRIP_TAC);;
e (REWRITE_TAC[TSKAJXY_statement; mcell_set; IN_ELIM_THM]);;
e (REWRITE_TAC[IN]);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `NULLSET X`);;
e (REWRITE_TAC[gammaX]);;
e (MATCH_MP_TAC (REAL_ARITH `x = &0 /\ y = &0 /\ z = &0 ==> x - y + z >= &0`));;
e (REWRITE_TAC[total_solid; REAL_ENTIRE]);;
e (REPEAT STRIP_TAC);;
e (MATCH_MP_TAC MEASURE_EQ_0);;
e (ASM_REWRITE_TAC[]);;
e (DISJ2_TAC);;
e (REWRITE_WITH `VX V X = {}`);;
e (REWRITE_TAC[VX]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[SUM_CLAUSES]);;
e (DISJ2_TAC);;
e (REWRITE_WITH `edgeX V X = {}`);;
e (REWRITE_TAC[edgeX]);;
e (REWRITE_WITH `VX V X = {}`);;
e (REWRITE_TAC[VX]);;
e (ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`]);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUM_CLAUSES]);;

e (NEW_GOAL `~(X:real^3->bool = {})`);;
e (STRIP_TAC THEN SWITCH_TAC THEN UP_ASM_TAC THEN 
   REWRITE_TAC[ASSUME `X:real^3->bool = {}`; NEGLIGIBLE_EMPTY]);;

(* ========================================================================= *)

e (ASM_CASES_TAC `i >= 4`);;
e (NEW_GOAL `X = mcell4 V ul`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT]);;
e (UP_ASM_TAC THEN REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0; u1; u2; u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_TAC[ASSUME `ul = [u0; u1; u2; u3:real^3]`; set_of_list]);;
e (STRIP_TAC);;
e (ABBREV_TAC `y1 = dist (u0:real^3, u1)`);;
e (ABBREV_TAC `y2 = dist (u0:real^3, u2)`);;
e (ABBREV_TAC `y3 = dist (u0:real^3, u3)`);;
e (ABBREV_TAC `y4 = dist (u2:real^3, u3)`);;
e (ABBREV_TAC `y5 = dist (u1:real^3, u3)`);;
e (ABBREV_TAC `y6 = dist (u1:real^3, u2)`);;

e (NEW_GOAL `VX V X = {u0,u1,u2,u3}`);;
e (REWRITE_WITH `VX V X = V INTER X`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH `X = mcell 4 V ul`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; ASSUME `i >= 4`; MCELL_EXPLICIT]);;

e (REWRITE_WITH 
  `V INTER mcell 4 V ul = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH ` mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; TRUNCATE_SIMPLEX_EXPLICIT_3;
                   set_of_list]);;

e (REWRITE_WITH `gammaX V X lmfun = gamma4fgcy y1 y2 y3 y4 y5 y6 lmfun`);;
e (REWRITE_TAC[gammaX; gamma4fgcy;gamma4f]);;

e (REWRITE_WITH `vol X = vol_y y1 y2 y3 y4 y5 y6`);;
e (REWRITE_TAC[vol_y; y_of_x; vol_x; 
   ASSUME `X = convex hull {u0, u1, u2, u3:real^3}`;
   VOLUME_OF_CLOSED_TETRAHEDRON; REAL_POW_2]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[REAL_ARITH `a - b + c = a - d <=> d = b - c`; vol4f]);;

(* ---------- *)
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} = 4`);;
e (REWRITE_TAC[ARITH_RULE `4 = 3 + 1`; GSYM set_of_list;
   GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `~(u0 = u1:real^3) /\ ~(u0 = u2) /\ ~(u0 = u3) /\ 
             ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3)`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} <= 3`);;
e (REWRITE_TAC[ASSUME `u0 = u1:real^3`; 
   SET_RULE `{u1, u1, u2, u3} = {u1,u2,u3}`;Geomdetail.CARD3 ]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} <= 3`);;
e (REWRITE_TAC[ASSUME `u0 = u2:real^3`; 
   SET_RULE `{u2, u1, u2, u3} = {u1,u2,u3}`;Geomdetail.CARD3 ]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} <= 3`);;
e (REWRITE_TAC[ASSUME `u0 = u3:real^3`; 
   SET_RULE `{u3, u1, u2, u3} = {u1,u2,u3}`;Geomdetail.CARD3 ]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} <= 3`);;
e (REWRITE_TAC[ASSUME `u1 = u2:real^3`; 
   SET_RULE `{u0, u2, u2, u3} = {u0,u2,u3}`;Geomdetail.CARD3 ]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} <= 3`);;
e (REWRITE_TAC[ASSUME `u1 = u3:real^3`; 
   SET_RULE `{u0, u3, u2, u3} = {u0,u2,u3}`;Geomdetail.CARD3 ]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {u0, u1, u2, u3:real^3} <= 3`);;
e (REWRITE_TAC[ASSUME `u2 = u3:real^3`; 
   SET_RULE `{u0, u1, u3, u3} = {u0,u1,u3}`;Geomdetail.CARD3 ]);;
e (ASM_ARITH_TAC);;


e (NEW_GOAL `edgeX V X = {{u0,u1:real^3}, {u0,u2}, {u0,u3}, 
                          {u1,u2}, {u1,u3}, {u2,u3}}`);;
e (REWRITE_TAC[edgeX]);;
e (ONCE_REWRITE_TAC[SET_EQ_LEMMA]);;
e (REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;

e (UNDISCH_TAC `VX V X u` THEN UNDISCH_TAC `VX V X v`);;
e (REWRITE_TAC[MESON[IN] `VX V X s <=> s IN VX V X`]);;
e (ASM_REWRITE_TAC[SET_RULE `v IN {u0, u1, u2, u3} <=> 
                             v = u0 \/ v = u1 \/ v = u2 \/ v = u3`]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `{u,v} = {v,u:real^3}`);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (REWRITE_WITH `{u,v} = {v,u:real^3}`);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (REWRITE_WITH `{u,v} = {v,u:real^3}`);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `{u,v} = {v,u:real^3}`);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (REWRITE_WITH `{u,v} = {v,u:real^3}`);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `{u,v} = {v,u:real^3}`);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (UP_ASM_TAC THEN REWRITE_TAC[SET_RULE `x IN {a,b,c,d,e,f} <=> 
   x = a \/ x = b \/ x = c \/ x = d \/ x = e \/ x = f`]);;
e (REWRITE_TAC[MESON[IN] `VX V X s <=> s IN VX V X`]);;
e (ASM_REWRITE_TAC[SET_RULE `v IN {u0, u1, u2, u3} <=> 
                             v = u0 \/ v = u1 \/ v = u2 \/ v = u3`]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `u0:real^3` THEN EXISTS_TAC `u1:real^3` THEN ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `u0:real^3` THEN EXISTS_TAC `u2:real^3` THEN ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `u0:real^3` THEN EXISTS_TAC `u3:real^3` THEN ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `u1:real^3` THEN EXISTS_TAC `u2:real^3` THEN ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `u1:real^3` THEN EXISTS_TAC `u3:real^3` THEN ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `u2:real^3` THEN EXISTS_TAC `u3:real^3` THEN ASM_REWRITE_TAC[]);;


e (ABBREV_TAC `f = 
 (\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0)`);;
e (MATCH_MP_TAC (REAL_ARITH `y = b /\ x = a ==> a - b = x - y`));;
e (STRIP_TAC);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ABBREV_TAC `S5 = {{u0, u2}, {u0, u3}, {u1, u2}, {u1, u3}, {u2, u3:real^3}}`);;
e (REWRITE_WITH `sum ({u0,u1:real^3} INSERT S5) f = 
   (if {u0,u1} IN S5 then sum S5 f else f {u0,u1} + sum S5 f)`);;
e (MATCH_MP_TAC Marchal_cells_2_new.SUM_CLAUSES_alt);;
e (EXPAND_TAC "S5");;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN EXPAND_TAC "S5");;
e (REWRITE_TAC[SET_RULE `x IN {a,b,c,d,e} <=> x=a\/x=b\/x=c\/x=d\/x=e`]);;
e (SET_TAC[ASSUME 
   `~(u0 = u1:real^3) /\ ~(u0 = u2) /\ ~(u0 = u3) /\ ~(u1 = u2) /\
    ~(u1 = u3) /\ ~(u2 = u3)`]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (EXPAND_TAC "S5");;

e (ABBREV_TAC `S4 = {{u0, u3}, {u1, u2}, {u1, u3}, {u2, u3:real^3}}`);;
e (REWRITE_WITH `sum ({u0,u2:real^3} INSERT S4) f = 
   (if {u0,u2} IN S4 then sum S4 f else f {u0,u2} + sum S4 f)`);;
e (MATCH_MP_TAC Marchal_cells_2_new.SUM_CLAUSES_alt);;
e (EXPAND_TAC "S4");;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN EXPAND_TAC "S4");;
e (REWRITE_TAC[SET_RULE `x IN {a,b,c,d} <=> x=a\/x=b\/x=c\/x=d`]);;
e (SET_TAC[ASSUME 
   `~(u0 = u1:real^3) /\ ~(u0 = u2) /\ ~(u0 = u3) /\ ~(u1 = u2) /\
    ~(u1 = u3) /\ ~(u2 = u3)`]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;


e (EXPAND_TAC "S4");;
e (ABBREV_TAC `S3 = {{u1, u2}, {u1, u3}, {u2, u3:real^3}}`);;
e (REWRITE_WITH `sum ({u0,u3:real^3} INSERT S3) f = 
   (if {u0,u3} IN S3 then sum S3 f else f {u0,u3} + sum S3 f)`);;
e (MATCH_MP_TAC Marchal_cells_2_new.SUM_CLAUSES_alt);;
e (EXPAND_TAC "S3");;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN EXPAND_TAC "S3");;
e (REWRITE_TAC[SET_RULE `x IN {a,b,c} <=> x=a\/x=b\/x=c`]);;
e (SET_TAC[ASSUME 
   `~(u0 = u1:real^3) /\ ~(u0 = u2) /\ ~(u0 = u3) /\ ~(u1 = u2) /\
    ~(u1 = u3) /\ ~(u2 = u3)`]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (EXPAND_TAC "S3");;
e (ABBREV_TAC `S2 = {{u1, u3}, {u2, u3:real^3}}`);;
e (REWRITE_WITH `sum ({u1,u2:real^3} INSERT S2) f = 
   (if {u1,u2} IN S2 then sum S2 f else f {u1,u2} + sum S2 f)`);;
e (MATCH_MP_TAC Marchal_cells_2_new.SUM_CLAUSES_alt);;
e (EXPAND_TAC "S2");;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN EXPAND_TAC "S2");;
e (REWRITE_TAC[SET_RULE `x IN {a,b} <=> x=a\/x=b`]);;
e (SET_TAC[ASSUME 
   `~(u0 = u1:real^3) /\ ~(u0 = u2) /\ ~(u0 = u3) /\ ~(u1 = u2) /\
    ~(u1 = u3) /\ ~(u2 = u3)`]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (EXPAND_TAC "S2");;
e (ABBREV_TAC `S1 = {{u2, u3:real^3}}`);;
e (REWRITE_WITH `sum ({u1,u3:real^3} INSERT S1) f = 
   (if {u1,u3} IN S1 then sum S1 f else f {u1,u3} + sum S1 f)`);;
e (MATCH_MP_TAC Marchal_cells_2_new.SUM_CLAUSES_alt);;
e (EXPAND_TAC "S1");;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN EXPAND_TAC "S1");;
e (REWRITE_TAC[SET_RULE `x IN {a} <=> x=a`]);;
e (SET_TAC[ASSUME 
   `~(u0 = u1:real^3) /\ ~(u0 = u2) /\ ~(u0 = u3) /\ ~(u1 = u2) /\
    ~(u1 = u3) /\ ~(u2 = u3)`]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (EXPAND_TAC "S1" THEN REWRITE_TAC[SUM_SING]);;


(* ========================================================================= *)
(* will be used frequently *)

e (REWRITE_WITH `f {u0, u1:real^3} = lmfun (y1 / &2) * dih_y y1 y2 y3 y4 y5 y6`);;
e (EXPAND_TAC "f");;

e (ABBREV_TAC `g = (\u v. if {u, v:real^3} IN edgeX V X
                          then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `(\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0) = (\({u, v:real^3}). g u v)`);;
e (EXPAND_TAC "g" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `(\({u, v:real^3}). g u v) {u0, u1} = (g u0 u1):real`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "g" );;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (MATCH_MP_TAC Marchal_cells_3.DIHX_SYM);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (EXISTS_TAC `i:num` THEN EXISTS_TAC `ul:(real^3)list` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;
e (EXPAND_TAC "g");;
e (COND_CASES_TAC);;
e (REWRITE_TAC[HL_2; REAL_ARITH  `inv(&2) * a = a / &2`]);;
e (REWRITE_TAC[REAL_ARITH ` t * lmfun(s) = lmfun(s) * t`]);;
e (EXPAND_TAC "y1" THEN AP_TERM_TAC);;
e (REWRITE_TAC[dihX]);;

e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u0; u1] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(4, ul:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (STRIP_TAC);;
e (MESON_TAC[MCELL_EXPLICIT; ASSUME `i >= 4`; ARITH_RULE `4 >= 4`]);;
e (REWRITE_TAC[INITIAL_SUBLIST]);;
e (EXISTS_TAC `[u2;u3:real^3]` THEN REWRITE_TAC[APPEND]);;

e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN]);;

e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `2 <= k`);;
e (NEW_GOAL `k = 4`);;
e (NEW_GOAL `4 = k /\
             (!t. 4 - 1 <= t /\ t <= 3
                  ==> omega_list_n V ul t = omega_list_n V ul' t)`);;
e (MATCH_MP_TAC Marchal_cells_3.MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[SET_RULE `x IN {2,3,4} <=> x=2\/x=3\/x=4`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_WITH `mcell 4 V ul = X`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MESON_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`; ASSUME `i >= 4`]);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `~NULLSET X`]);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu4]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `u0 = v0:real^3`);;
e (NEW_GOAL`u0 = HD [u0;u1:real^3]`);;
e (REWRITE_TAC[HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u0 = HD[u0;u1:real^3]`]);;
e (REWRITE_WITH `v0:real^3 = HD ul'`);;
e (ASM_REWRITE_TAC[HD]);;
e (REWRITE_WITH `[u0;u1:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u0;u1:real^3] = truncate_simplex (LENGTH [u0;u1] - 1) ul' /\
                  LENGTH [u0;u1] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `u1 = v1:real^3`);;
e (NEW_GOAL`u1 = EL 1 [u0;u1:real^3]`);;
e (REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u1 = EL 1 [u0;u1:real^3]`]);;

e (REWRITE_WITH `v1:real^3 = EL 1 ul'`);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (REWRITE_WITH `[u0;u1:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u0;u1:real^3] = truncate_simplex (LENGTH [u0;u1] - 1) ul' /\
                  LENGTH [u0;u1] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.EL_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3}`);;
e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3} <=> 
   convex hull {u0,u1,u2,u3:real^3} = convex hull {v0,v1,v2,v3}`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[ASSUME `{u0, u1, u2, u3:real^3} = {v0, v1, v2, v3} <=>
      convex hull {u0, u1, u2, u3} = convex hull {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (REWRITE_WITH `convex hull set_of_list ul= X:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell4 V ul`);;
e (MESON_TAC[ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[EL;HD;TL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`]);;
e (NEW_GOAL `(v2 = u2 /\ v3 = u3:real^3) \/ (v2 = u3 /\ v3 = u2)`);;


e (UP_ASM_TAC THEN UNDISCH_TAC `~(u0 = u1) /\ ~(u0 = u2) /\ ~(u0 = u3) /\
      ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3:real^3)`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u0 = v0:real^3`); GSYM (ASSUME `u1 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REFL_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u0 = v0:real^3`); GSYM (ASSUME `u1 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym; DIST_SYM]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell 4 V ul`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; 
   ASSUME `ul = [u0;u1;u2;u3:real^3]`; TRUNCATE_SIMPLEX_EXPLICIT_3]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_CASES_TAC `k = 1`);;

e (REWRITE_WITH `V INTER (X:real^3->bool) = 
                 set_of_list (truncate_simplex (k - 1) ul')`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 1 /\ 1 <= 4`]);;
e (REWRITE_WITH `mcell 1 V ul' = X`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 1`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; ASSUME `k = 1`]);;
e (REWRITE_WITH `truncate_simplex 0 (ul':(real^3)list) = [HD ul']`);;
e (MATCH_MP_TAC Packing3.TRUNCATE_0_EQ_HEAD);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (STRIP_TAC);;
e (NEW_GOAL `CARD (set_of_list [(HD ul'):real^3]) = 
             CARD (set_of_list (ul:(real^3)list))`);;
e (AP_TERM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[set_of_list; Geomdetail.CARD_SING] THEN ARITH_TAC);;
e (NEW_GOAL `k = 0`);;
e (ASM_ARITH_TAC);;

e (REWRITE_WITH `V INTER X = {}:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (NEW_GOAL `u0 IN {u0,u1,u2,u3:real^3}`);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

(* ========================================================================= *)

e (REWRITE_WITH `f {u0, u2:real^3} = lmfun (y2 / &2) * dih_y y2 y3 y1 y5 y6 y4`);;
e (EXPAND_TAC "f");;
e (ABBREV_TAC `g = (\u v. if {u, v:real^3} IN edgeX V X
                          then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `(\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0) = (\({u, v:real^3}). g u v)`);;
e (EXPAND_TAC "g" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `(\({u, v:real^3}). g u v) {u0, u2} = (g u0 u2):real`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "g" );;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (MATCH_MP_TAC Marchal_cells_3.DIHX_SYM);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (EXISTS_TAC `i:num` THEN EXISTS_TAC `ul:(real^3)list` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;
e (EXPAND_TAC "g");;
e (COND_CASES_TAC);;
e (REWRITE_TAC[HL_2; REAL_ARITH  `inv(&2) * a = a / &2`]);;
e (REWRITE_TAC[REAL_ARITH ` t * lmfun(s) = lmfun(s) * t`]);;
e (EXPAND_TAC "y2" THEN AP_TERM_TAC);;
e (REWRITE_TAC[dihX]);;

e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u0; u2] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;



e (ABBREV_TAC `wl = [u0;u2;u1;u3:real^3]`);;

  (* Need to list properties of wl at this point *)
e (NEW_GOAL `?p. p permutes 0..3 /\
                  wl:(real^3)list = left_action_list p ul`);;
e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "wl");;
e (MATCH_MP_TAC Marchal_cells_3.LEFT_ACTION_LIST_3_EXISTS);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_TAC[ARITH_RULE `4 = 3 + 1`]);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 wl`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `4` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `(4, wl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (STRIP_TAC);;

e (REWRITE_WITH `mcell i V [u0; u1; u2; u3] = mcell 4 V [u0; u1; u2; u3]`);;
e (MESON_TAC[MCELL_EXPLICIT; ASSUME `i >= 4`; ARITH_RULE `4 >= 4`]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Rvfxzbu.RVFXZBU);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (REWRITE_TAC[GSYM (ASSUME `wl:(real^3)list = left_action_list p ul`)]);;
e (EXPAND_TAC "wl");;
e (REWRITE_WITH `[u0; u2; u1; u3] = APPEND [u0; u2] [u1; u3:real^3]`);;
e (REWRITE_TAC[APPEND]);;
e (REWRITE_TAC[Packing3.INITIAL_SUBLIST_APPEND]);;

e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN]);;

e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `2 <= k`);;
e (NEW_GOAL `k = 4`);;
e (NEW_GOAL `4 = k /\
             (!t. 4 - 1 <= t /\ t <= 3
                  ==> omega_list_n V ul t = omega_list_n V ul' t)`);;
e (MATCH_MP_TAC Marchal_cells_3.MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[SET_RULE `x IN {2,3,4} <=> x=2\/x=3\/x=4`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_WITH `mcell 4 V ul = X`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MESON_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`; ASSUME `i >= 4`]);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `~NULLSET X`]);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu4]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `u0 = v0:real^3`);;
e (NEW_GOAL`u0 = HD [u0;u2:real^3]`);;
e (REWRITE_TAC[HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u0 = HD[u0;u2:real^3]`]);;
e (REWRITE_WITH `v0:real^3 = HD ul'`);;
e (ASM_REWRITE_TAC[HD]);;
e (REWRITE_WITH `[u0;u2:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u0;u2:real^3] = truncate_simplex (LENGTH [u0;u2] - 1) ul' /\
                  LENGTH [u0;u2] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `u2 = v1:real^3`);;
e (NEW_GOAL`u2 = EL 1 [u0;u2:real^3]`);;
e (REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u2 = EL 1 [u0;u2:real^3]`]);;

e (REWRITE_WITH `v1:real^3 = EL 1 ul'`);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (REWRITE_WITH `[u0;u2:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u0;u2:real^3] = truncate_simplex (LENGTH [u0;u2] - 1) ul' /\
                  LENGTH [u0;u2] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.EL_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3}`);;
e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3} <=> 
   convex hull {u0,u1,u2,u3:real^3} = convex hull {v0,v1,v2,v3}`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[ASSUME `{u0, u1, u2, u3:real^3} = {v0, v1, v2, v3} <=>
      convex hull {u0, u1, u2, u3} = convex hull {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (REWRITE_WITH `convex hull set_of_list ul= X:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell4 V ul`);;
e (MESON_TAC[ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[EL;HD;TL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`]);;

e (NEW_GOAL `(v2 = u1 /\ v3 = u3:real^3) \/ (v2 = u3 /\ v3 = u1)`);;
e (UP_ASM_TAC THEN UNDISCH_TAC `~(u0 = u1) /\ ~(u0 = u2) /\ ~(u0 = u3) /\
      ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3:real^3)`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u0 = v0:real^3`); GSYM (ASSUME `u2 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym; DIST_SYM]);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u0 = v0:real^3`); GSYM (ASSUME `u2 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell 4 V ul`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; 
   ASSUME `ul = [u0;u1;u2;u3:real^3]`; TRUNCATE_SIMPLEX_EXPLICIT_3]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_CASES_TAC `k = 1`);;

e (REWRITE_WITH `V INTER (X:real^3->bool) = 
                 set_of_list (truncate_simplex (k - 1) ul')`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 1 /\ 1 <= 4`]);;
e (REWRITE_WITH `mcell 1 V ul' = X`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 1`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; ASSUME `k = 1`]);;
e (REWRITE_WITH `truncate_simplex 0 (ul':(real^3)list) = [HD ul']`);;
e (MATCH_MP_TAC Packing3.TRUNCATE_0_EQ_HEAD);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (STRIP_TAC);;
e (NEW_GOAL `CARD (set_of_list [(HD ul'):real^3]) = 
             CARD (set_of_list (ul:(real^3)list))`);;
e (AP_TERM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[set_of_list; Geomdetail.CARD_SING] THEN ARITH_TAC);;
e (NEW_GOAL `k = 0`);;
e (ASM_ARITH_TAC);;

e (REWRITE_WITH `V INTER X = {}:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (NEW_GOAL `u0 IN {u0,u1,u2,u3:real^3}`);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S5" THEN SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

(* ========================================================================= *)

e (REWRITE_WITH `f {u0, u3:real^3} = lmfun (y3 / &2) * dih_y y3 y1 y2 y6 y4 y5`);;
e (EXPAND_TAC "f");;
e (ABBREV_TAC `g = (\u v. if {u, v:real^3} IN edgeX V X
                          then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `(\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0) = (\({u, v:real^3}). g u v)`);;
e (EXPAND_TAC "g" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `(\({u, v:real^3}). g u v) {u0, u3} = (g u0 u3):real`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "g" );;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (MATCH_MP_TAC Marchal_cells_3.DIHX_SYM);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (EXISTS_TAC `i:num` THEN EXISTS_TAC `ul:(real^3)list` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;
e (EXPAND_TAC "g");;
e (COND_CASES_TAC);;
e (REWRITE_TAC[HL_2; REAL_ARITH  `inv(&2) * a = a / &2`]);;
e (REWRITE_TAC[REAL_ARITH ` t * lmfun(s) = lmfun(s) * t`]);;
e (EXPAND_TAC "y3" THEN AP_TERM_TAC);;
e (REWRITE_TAC[dihX]);;

e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u0; u3] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;

e (ABBREV_TAC `wl = [u0;u3;u1;u2:real^3]`);;

  (* Need to list properties of wl at this point *)
e (NEW_GOAL `?p. p permutes 0..3 /\
                  wl:(real^3)list = left_action_list p ul`);;
e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "wl");;
e (MATCH_MP_TAC Marchal_cells_3.LEFT_ACTION_LIST_3_EXISTS);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_TAC[ARITH_RULE `4 = 3 + 1`]);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 wl`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `4` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `(4, wl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (STRIP_TAC);;

e (REWRITE_WITH `mcell i V [u0; u1; u2; u3] = mcell 4 V [u0; u1; u2; u3]`);;
e (MESON_TAC[MCELL_EXPLICIT; ASSUME `i >= 4`; ARITH_RULE `4 >= 4`]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Rvfxzbu.RVFXZBU);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (REWRITE_TAC[GSYM (ASSUME `wl:(real^3)list = left_action_list p ul`)]);;
e (EXPAND_TAC "wl");;
e (REWRITE_WITH `[u0; u3; u1; u2] = APPEND [u0; u3] [u1; u2:real^3]`);;
e (REWRITE_TAC[APPEND]);;
e (REWRITE_TAC[Packing3.INITIAL_SUBLIST_APPEND]);;

e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN]);;

e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `2 <= k`);;
e (NEW_GOAL `k = 4`);;
e (NEW_GOAL `4 = k /\
             (!t. 4 - 1 <= t /\ t <= 3
                  ==> omega_list_n V ul t = omega_list_n V ul' t)`);;
e (MATCH_MP_TAC Marchal_cells_3.MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[SET_RULE `x IN {2,3,4} <=> x=2\/x=3\/x=4`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_WITH `mcell 4 V ul = X`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MESON_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`; ASSUME `i >= 4`]);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `~NULLSET X`]);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu4]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `u0 = v0:real^3`);;
e (NEW_GOAL`u0 = HD [u0;u3:real^3]`);;
e (REWRITE_TAC[HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u0 = HD[u0;u3:real^3]`]);;
e (REWRITE_WITH `v0:real^3 = HD ul'`);;
e (ASM_REWRITE_TAC[HD]);;
e (REWRITE_WITH `[u0;u3:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u0;u3:real^3] = truncate_simplex (LENGTH [u0;u3] - 1) ul' /\
                  LENGTH [u0;u3] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `u3 = v1:real^3`);;
e (NEW_GOAL`u3 = EL 1 [u0;u3:real^3]`);;
e (REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u3 = EL 1 [u0;u3:real^3]`]);;

e (REWRITE_WITH `v1:real^3 = EL 1 ul'`);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (REWRITE_WITH `[u0;u3:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u0;u3:real^3] = truncate_simplex (LENGTH [u0;u3] - 1) ul' /\
                  LENGTH [u0;u3] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.EL_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3}`);;
e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3} <=> 
   convex hull {u0,u1,u2,u3:real^3} = convex hull {v0,v1,v2,v3}`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[ASSUME `{u0, u1, u2, u3:real^3} = {v0, v1, v2, v3} <=>
      convex hull {u0, u1, u2, u3} = convex hull {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (REWRITE_WITH `convex hull set_of_list ul= X:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell4 V ul`);;
e (MESON_TAC[ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[EL;HD;TL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`]);;

e (NEW_GOAL `(v2 = u1 /\ v3 = u2:real^3) \/ (v2 = u2 /\ v3 = u1)`);;
e (UP_ASM_TAC THEN UNDISCH_TAC `~(u0 = u1) /\ ~(u0 = u2) /\ ~(u0 = u3) /\
      ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3:real^3)`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u0 = v0:real^3`); GSYM (ASSUME `u3 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym; Nonlinear_lemma.dih_y_sym2;
               DIST_SYM]);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u0 = v0:real^3`); GSYM (ASSUME `u3 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym; Nonlinear_lemma.dih_y_sym2;
               DIST_SYM]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell 4 V ul`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; 
   ASSUME `ul = [u0;u1;u2;u3:real^3]`; TRUNCATE_SIMPLEX_EXPLICIT_3]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_CASES_TAC `k = 1`);;

e (REWRITE_WITH `V INTER (X:real^3->bool) = 
                 set_of_list (truncate_simplex (k - 1) ul')`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 1 /\ 1 <= 4`]);;
e (REWRITE_WITH `mcell 1 V ul' = X`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 1`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; ASSUME `k = 1`]);;
e (REWRITE_WITH `truncate_simplex 0 (ul':(real^3)list) = [HD ul']`);;
e (MATCH_MP_TAC Packing3.TRUNCATE_0_EQ_HEAD);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (STRIP_TAC);;
e (NEW_GOAL `CARD (set_of_list [(HD ul'):real^3]) = 
             CARD (set_of_list (ul:(real^3)list))`);;
e (AP_TERM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[set_of_list; Geomdetail.CARD_SING] THEN ARITH_TAC);;
e (NEW_GOAL `k = 0`);;
e (ASM_ARITH_TAC);;

e (REWRITE_WITH `V INTER X = {}:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (NEW_GOAL `u0 IN {u0,u1,u2,u3:real^3}`);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S5" THEN EXPAND_TAC "S4" THEN SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

(* ========================================================================= *)

e (REWRITE_WITH `f {u2, u3:real^3} = lmfun (y4 / &2) * dih_y y4 y3 y5 y1 y6 y2`);;
e (EXPAND_TAC "f");;
e (ABBREV_TAC `g = (\u v. if {u, v:real^3} IN edgeX V X
                          then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `(\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0) = (\({u, v:real^3}). g u v)`);;
e (EXPAND_TAC "g" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `(\({u, v:real^3}). g u v) {u2, u3} = (g u2 u3):real`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "g" );;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (MATCH_MP_TAC Marchal_cells_3.DIHX_SYM);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (EXISTS_TAC `i:num` THEN EXISTS_TAC `ul:(real^3)list` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;
e (EXPAND_TAC "g");;
e (COND_CASES_TAC);;
e (REWRITE_TAC[HL_2; REAL_ARITH  `inv(&2) * a = a / &2`]);;
e (REWRITE_TAC[REAL_ARITH ` t * lmfun(s) = lmfun(s) * t`]);;
e (EXPAND_TAC "y4" THEN AP_TERM_TAC);;
e (REWRITE_TAC[dihX]);;

e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u2; u3] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;

e (ABBREV_TAC `wl = [u2;u3;u0;u1:real^3]`);;

  (* Need to list properties of wl at this point *)
e (NEW_GOAL `?p. p permutes 0..3 /\
                  wl:(real^3)list = left_action_list p ul`);;
e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "wl");;
e (MATCH_MP_TAC Marchal_cells_3.LEFT_ACTION_LIST_3_EXISTS);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_TAC[ARITH_RULE `4 = 3 + 1`]);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 wl`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `4` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `(4, wl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (STRIP_TAC);;

e (REWRITE_WITH `mcell i V [u0; u1; u2; u3] = mcell 4 V [u0; u1; u2; u3]`);;
e (MESON_TAC[MCELL_EXPLICIT; ASSUME `i >= 4`; ARITH_RULE `4 >= 4`]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Rvfxzbu.RVFXZBU);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (REWRITE_TAC[GSYM (ASSUME `wl:(real^3)list = left_action_list p ul`)]);;
e (EXPAND_TAC "wl");;
e (REWRITE_WITH `[u2; u3; u0; u1] = APPEND [u2; u3] [u0; u1:real^3]`);;
e (REWRITE_TAC[APPEND]);;
e (REWRITE_TAC[Packing3.INITIAL_SUBLIST_APPEND]);;

e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN]);;

e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `2 <= k`);;
e (NEW_GOAL `k = 4`);;
e (NEW_GOAL `4 = k /\
             (!t. 4 - 1 <= t /\ t <= 3
                  ==> omega_list_n V ul t = omega_list_n V ul' t)`);;
e (MATCH_MP_TAC Marchal_cells_3.MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[SET_RULE `x IN {2,3,4} <=> x=2\/x=3\/x=4`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_WITH `mcell 4 V ul = X`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MESON_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`; ASSUME `i >= 4`]);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `~NULLSET X`]);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu4]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `u2 = v0:real^3`);;
e (NEW_GOAL`u2 = HD [u2;u3:real^3]`);;
e (REWRITE_TAC[HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u2 = HD[u2;u3:real^3]`]);;
e (REWRITE_WITH `v0:real^3 = HD ul'`);;
e (ASM_REWRITE_TAC[HD]);;
e (REWRITE_WITH `[u2;u3:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u2;u3:real^3] = truncate_simplex (LENGTH [u2;u3] - 1) ul' /\
                  LENGTH [u2;u3] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `u3 = v1:real^3`);;
e (NEW_GOAL`u3 = EL 1 [u2;u3:real^3]`);;
e (REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u3 = EL 1 [u2;u3:real^3]`]);;

e (REWRITE_WITH `v1:real^3 = EL 1 ul'`);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (REWRITE_WITH `[u2;u3:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u2;u3:real^3] = truncate_simplex (LENGTH [u2;u3] - 1) ul' /\
                  LENGTH [u2;u3] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.EL_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3}`);;
e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3} <=> 
   convex hull {u0,u1,u2,u3:real^3} = convex hull {v0,v1,v2,v3}`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[ASSUME `{u0, u1, u2, u3:real^3} = {v0, v1, v2, v3} <=>
      convex hull {u0, u1, u2, u3} = convex hull {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (REWRITE_WITH `convex hull set_of_list ul= X:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell4 V ul`);;
e (MESON_TAC[ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[EL;HD;TL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`]);;

e (NEW_GOAL `(v2 = u0 /\ v3 = u1:real^3) \/ (v2 = u1 /\ v3 = u0)`);;
e (UP_ASM_TAC THEN UNDISCH_TAC `~(u0 = u1) /\ ~(u0 = u2) /\ ~(u0 = u3) /\
      ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3:real^3)`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u2 = v0:real^3`); GSYM (ASSUME `u3 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;
e (REWRITE_WITH 
 `dih_y (dist (u2,u3)) (dist (u0,u2)) (dist (u1,u2)) (dist (u0,u1))
 (dist (u1,u3:real^3))
 (dist (u0,u3)) =
  dih_y (dist (u2,u3)) (dist (u1,u2)) (dist (u0,u2)) (dist (u0,u1))
 (dist (u0,u3)) 
 (dist (u1,u3:real^3))`);;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym]);;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym2]);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u2 = v0:real^3`); GSYM (ASSUME `u3 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;
e (REWRITE_WITH 
 `dih_y (dist (u2,u3)) (dist (u0,u2)) (dist (u1,u2)) (dist (u0,u1))
 (dist (u1,u3))
 (dist (u0,u3:real^3)) =
  dih_y (dist (u2,u3)) (dist (u1,u2)) (dist (u0,u2)) (dist (u0,u1))
 (dist (u0,u3))
 (dist (u1,u3))`);;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym]);;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym2]);;

e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell 4 V ul`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; 
   ASSUME `ul = [u0;u1;u2;u3:real^3]`; TRUNCATE_SIMPLEX_EXPLICIT_3]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_CASES_TAC `k = 1`);;

e (REWRITE_WITH `V INTER (X:real^3->bool) = 
                 set_of_list (truncate_simplex (k - 1) ul')`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 1 /\ 1 <= 4`]);;
e (REWRITE_WITH `mcell 1 V ul' = X`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 1`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; ASSUME `k = 1`]);;
e (REWRITE_WITH `truncate_simplex 0 (ul':(real^3)list) = [HD ul']`);;
e (MATCH_MP_TAC Packing3.TRUNCATE_0_EQ_HEAD);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (STRIP_TAC);;
e (NEW_GOAL `CARD (set_of_list [(HD ul'):real^3]) = 
             CARD (set_of_list (ul:(real^3)list))`);;
e (AP_TERM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[set_of_list; Geomdetail.CARD_SING] THEN ARITH_TAC);;
e (NEW_GOAL `k = 0`);;
e (ASM_ARITH_TAC);;

e (REWRITE_WITH `V INTER X = {}:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (NEW_GOAL `u0 IN {u0,u1,u2,u3:real^3}`);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S5" THEN EXPAND_TAC "S4" THEN EXPAND_TAC "S3" THEN 
   EXPAND_TAC "S2" THEN EXPAND_TAC "S1"THEN SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

(* ========================================================================= *)

e (REWRITE_WITH `f {u1, u3:real^3} = lmfun (y5 / &2) * dih_y y5 y1 y6 y2 y4 y3`);;
e (EXPAND_TAC "f");;
e (ABBREV_TAC `g = (\u v. if {u, v:real^3} IN edgeX V X
                          then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `(\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0) = (\({u, v:real^3}). g u v)`);;
e (EXPAND_TAC "g" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `(\({u, v:real^3}). g u v) {u1, u3} = (g u1 u3):real`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "g" );;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (MATCH_MP_TAC Marchal_cells_3.DIHX_SYM);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (EXISTS_TAC `i:num` THEN EXISTS_TAC `ul:(real^3)list` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;
e (EXPAND_TAC "g");;
e (COND_CASES_TAC);;
e (REWRITE_TAC[HL_2; REAL_ARITH  `inv(&2) * a = a / &2`]);;
e (REWRITE_TAC[REAL_ARITH ` t * lmfun(s) = lmfun(s) * t`]);;
e (EXPAND_TAC "y5" THEN AP_TERM_TAC);;
e (REWRITE_TAC[dihX]);;

e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u1; u3] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;

e (ABBREV_TAC `wl = [u1;u3;u0;u2:real^3]`);;

  (* Need to list properties of wl at this point *)
e (NEW_GOAL `?p. p permutes 0..3 /\
                  wl:(real^3)list = left_action_list p ul`);;
e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "wl");;
e (MATCH_MP_TAC Marchal_cells_3.LEFT_ACTION_LIST_3_EXISTS);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_TAC[ARITH_RULE `4 = 3 + 1`]);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 wl`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `4` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `(4, wl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (STRIP_TAC);;

e (REWRITE_WITH `mcell i V [u0; u1; u2; u3] = mcell 4 V [u0; u1; u2; u3]`);;
e (MESON_TAC[MCELL_EXPLICIT; ASSUME `i >= 4`; ARITH_RULE `4 >= 4`]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Rvfxzbu.RVFXZBU);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (REWRITE_TAC[GSYM (ASSUME `wl:(real^3)list = left_action_list p ul`)]);;
e (EXPAND_TAC "wl");;
e (REWRITE_WITH `[u1; u3; u0; u2] = APPEND [u1; u3] [u0; u2:real^3]`);;
e (REWRITE_TAC[APPEND]);;
e (REWRITE_TAC[Packing3.INITIAL_SUBLIST_APPEND]);;

e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN]);;

e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `2 <= k`);;
e (NEW_GOAL `k = 4`);;
e (NEW_GOAL `4 = k /\
             (!t. 4 - 1 <= t /\ t <= 3
                  ==> omega_list_n V ul t = omega_list_n V ul' t)`);;
e (MATCH_MP_TAC Marchal_cells_3.MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[SET_RULE `x IN {2,3,4} <=> x=2\/x=3\/x=4`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_WITH `mcell 4 V ul = X`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MESON_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`; ASSUME `i >= 4`]);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `~NULLSET X`]);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu4]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `u1 = v0:real^3`);;
e (NEW_GOAL`u1 = HD [u1;u3:real^3]`);;
e (REWRITE_TAC[HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u1 = HD[u1;u3:real^3]`]);;
e (REWRITE_WITH `v0:real^3 = HD ul'`);;
e (ASM_REWRITE_TAC[HD]);;
e (REWRITE_WITH `[u1;u3:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u1;u3:real^3] = truncate_simplex (LENGTH [u1;u3] - 1) ul' /\
                  LENGTH [u1;u3] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `u3 = v1:real^3`);;
e (NEW_GOAL`u3 = EL 1 [u1;u3:real^3]`);;
e (REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u3 = EL 1 [u1;u3:real^3]`]);;

e (REWRITE_WITH `v1:real^3 = EL 1 ul'`);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (REWRITE_WITH `[u1;u3:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u1;u3:real^3] = truncate_simplex (LENGTH [u1;u3] - 1) ul' /\
                  LENGTH [u1;u3] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.EL_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3}`);;
e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3} <=> 
   convex hull {u0,u1,u2,u3:real^3} = convex hull {v0,v1,v2,v3}`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[ASSUME `{u0, u1, u2, u3:real^3} = {v0, v1, v2, v3} <=>
      convex hull {u0, u1, u2, u3} = convex hull {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (REWRITE_WITH `convex hull set_of_list ul= X:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell4 V ul`);;
e (MESON_TAC[ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[EL;HD;TL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`]);;

e (NEW_GOAL `(v2 = u0 /\ v3 = u2:real^3) \/ (v2 = u2 /\ v3 = u0)`);;
e (UP_ASM_TAC THEN UNDISCH_TAC `~(u0 = u1) /\ ~(u0 = u2) /\ ~(u0 = u3) /\
      ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3:real^3)`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u1 = v0:real^3`); GSYM (ASSUME `u3 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u1 = v0:real^3`); GSYM (ASSUME `u3 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym]);;

e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell 4 V ul`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; 
   ASSUME `ul = [u0;u1;u2;u3:real^3]`; TRUNCATE_SIMPLEX_EXPLICIT_3]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_CASES_TAC `k = 1`);;

e (REWRITE_WITH `V INTER (X:real^3->bool) = 
                 set_of_list (truncate_simplex (k - 1) ul')`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 1 /\ 1 <= 4`]);;
e (REWRITE_WITH `mcell 1 V ul' = X`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 1`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; ASSUME `k = 1`]);;
e (REWRITE_WITH `truncate_simplex 0 (ul':(real^3)list) = [HD ul']`);;
e (MATCH_MP_TAC Packing3.TRUNCATE_0_EQ_HEAD);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (STRIP_TAC);;
e (NEW_GOAL `CARD (set_of_list [(HD ul'):real^3]) = 
             CARD (set_of_list (ul:(real^3)list))`);;
e (AP_TERM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[set_of_list; Geomdetail.CARD_SING] THEN ARITH_TAC);;
e (NEW_GOAL `k = 0`);;
e (ASM_ARITH_TAC);;

e (REWRITE_WITH `V INTER X = {}:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (NEW_GOAL `u0 IN {u0,u1,u2,u3:real^3}`);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S5" THEN EXPAND_TAC "S4" THEN EXPAND_TAC "S3" THEN 
   EXPAND_TAC "S2" THEN EXPAND_TAC "S1"THEN SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

(* ========================================================================= *)

e (REWRITE_WITH `f {u1, u2:real^3} =  lmfun (y6 / &2) * dih_y y6 y1 y5 y3 y4 y2`);;
e (EXPAND_TAC "f");;
e (ABBREV_TAC `g = (\u v. if {u, v:real^3} IN edgeX V X
                          then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `(\({u, v}). if {u, v} IN edgeX V X
             then dihX V X (u,v) * lmfun (hl [u; v])
             else &0) = (\({u, v:real^3}). g u v)`);;
e (EXPAND_TAC "g" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `(\({u, v:real^3}). g u v) {u1, u2} = (g u1 u2):real`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "g" );;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (MATCH_MP_TAC Marchal_cells_3.DIHX_SYM);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (EXISTS_TAC `i:num` THEN EXISTS_TAC `ul:(real^3)list` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b} = {b,a}`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;
e (EXPAND_TAC "g");;
e (COND_CASES_TAC);;
e (REWRITE_TAC[HL_2; REAL_ARITH  `inv(&2) * a = a / &2`]);;
e (REWRITE_TAC[REAL_ARITH ` t * lmfun(s) = lmfun(s) * t`]);;
e (EXPAND_TAC "y6" THEN AP_TERM_TAC);;
e (REWRITE_TAC[dihX]);;

e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u1; u2] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;

e (ABBREV_TAC `wl = [u1;u2;u0;u3:real^3]`);;

  (* Need to list properties of wl at this point *)
e (NEW_GOAL `?p. p permutes 0..3 /\
                  wl:(real^3)list = left_action_list p ul`);;
e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "wl");;
e (MATCH_MP_TAC Marchal_cells_3.LEFT_ACTION_LIST_3_EXISTS);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_TAC[ARITH_RULE `4 = 3 + 1`]);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 wl`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `4` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `(4, wl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (STRIP_TAC);;

e (REWRITE_WITH `mcell i V [u0; u1; u2; u3] = mcell 4 V [u0; u1; u2; u3]`);;
e (MESON_TAC[MCELL_EXPLICIT; ASSUME `i >= 4`; ARITH_RULE `4 >= 4`]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Rvfxzbu.RVFXZBU);;
e (ASM_REWRITE_TAC[SET_RULE `4 IN {0,1,2,3,4}`; ARITH_RULE `4 - 1 = 3`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (REWRITE_TAC[GSYM (ASSUME `wl:(real^3)list = left_action_list p ul`)]);;
e (EXPAND_TAC "wl");;
e (REWRITE_WITH `[u1; u2; u0; u3] = APPEND [u1; u2] [u0; u3:real^3]`);;
e (REWRITE_TAC[APPEND]);;
e (REWRITE_TAC[Packing3.INITIAL_SUBLIST_APPEND]);;

e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN]);;

e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `2 <= k`);;
e (NEW_GOAL `k = 4`);;
e (NEW_GOAL `4 = k /\
             (!t. 4 - 1 <= t /\ t <= 3
                  ==> omega_list_n V ul t = omega_list_n V ul' t)`);;
e (MATCH_MP_TAC Marchal_cells_3.MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[SET_RULE `x IN {2,3,4} <=> x=2\/x=3\/x=4`]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`)]);;
e (REWRITE_WITH `mcell 4 V ul = X`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MESON_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`; ASSUME `i >= 4`]);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `~NULLSET X`]);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu4]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `u1 = v0:real^3`);;
e (NEW_GOAL`u1 = HD [u1;u2:real^3]`);;
e (REWRITE_TAC[HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u1 = HD[u1;u2:real^3]`]);;
e (REWRITE_WITH `v0:real^3 = HD ul'`);;
e (ASM_REWRITE_TAC[HD]);;
e (REWRITE_WITH `[u1;u2:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u1;u2:real^3] = truncate_simplex (LENGTH [u1;u2] - 1) ul' /\
                  LENGTH [u1;u2] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `u2 = v1:real^3`);;
e (NEW_GOAL`u2 = EL 1 [u1;u2:real^3]`);;
e (REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (ONCE_REWRITE_TAC[ASSUME `u2 = EL 1 [u1;u2:real^3]`]);;

e (REWRITE_WITH `v1:real^3 = EL 1 ul'`);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `1 = SUC 0`; TL; HD]);;
e (REWRITE_WITH `[u1;u2:real^3] = truncate_simplex 1 ul'`);;
e (NEW_GOAL `[u1;u2:real^3] = truncate_simplex (LENGTH [u1;u2] - 1) ul' /\
                  LENGTH [u1;u2] <= LENGTH ul'`);;
e (MATCH_MP_TAC Packing3.INITIAL_SUBLIST_IMP_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH]);;
e (ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[LENGTH; ARITH_RULE `SUC(SUC(0)) - 1 = 1`]);;
e (MESON_TAC[]);;
e (MATCH_MP_TAC Packing3.EL_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3}`);;
e (NEW_GOAL `{u0,u1,u2,u3:real^3} = {v0,v1,v2,v3} <=> 
   convex hull {u0,u1,u2,u3:real^3} = convex hull {v0,v1,v2,v3}`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.BARV_AFFINE_INDEPENDENT);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[ASSUME `{u0, u1, u2, u3:real^3} = {v0, v1, v2, v3} <=>
      convex hull {u0, u1, u2, u3} = convex hull {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[GSYM set_of_list; GSYM (ASSUME `ul = [u0;u1;u2;u3:real^3]`); 
   GSYM (ASSUME `ul' = [v0;v1;v2;v3:real^3]`)]);;
e (REWRITE_WITH `convex hull set_of_list ul= X:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell4 V ul`);;
e (MESON_TAC[ASSUME `i >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 4`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[EL;HD;TL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`]);;

e (NEW_GOAL `(v2 = u0 /\ v3 = u3:real^3) \/ (v2 = u3 /\ v3 = u0)`);;
e (UP_ASM_TAC THEN UNDISCH_TAC `~(u0 = u1) /\ ~(u0 = u2) /\ ~(u0 = u3) /\
      ~(u1 = u2) /\ ~(u1 = u3) /\ ~(u2 = u3:real^3)`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u1 = v0:real^3`); GSYM (ASSUME `u2 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;

e (GMATCH_SIMP_TAC (REWRITE_RULE[LET_DEF;LET_END_DEF] DIHV_EQ_DIH_Y));;
e (STRIP_TAC);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v3:real^3`);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `v2:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE ` {v0, v1, v3, v2} =  {v0, v1, v2, v3}`]);;
e (REWRITE_TAC[coplanar] THEN STRIP_TAC);;
e (NEW_GOAL `affine hull {v0, v1, v2, v3:real^3} SUBSET 
             affine hull (affine hull {u, v, w})`);;
e (ASM_SIMP_TAC[Marchal_cells_2.AFFINE_SUBSET_KY_LEMMA]);;
e (UP_ASM_TAC THEN REWRITE_WITH `affine hull (affine hull {u, v, w}) = 
                                 affine hull {u:real^3, v, w}`);;
e (REWRITE_TAC[AFFINE_HULL_EQ; AFFINE_AFFINE_HULL]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {v0, v1, v2,v3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u,v,w:real^3}`);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `k = 4`; ASSUME `X = mcell k V ul'`]);;
e (REWRITE_WITH `mcell 4 V ul' = mcell4 V ul'`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT]);;
e (REWRITE_TAC[mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list; CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `u1 = v0:real^3`); GSYM (ASSUME `u2 = v1:real^3`)]);;
e (EXPAND_TAC "y1" THEN EXPAND_TAC "y2" THEN EXPAND_TAC "y3");;
e (EXPAND_TAC "y4" THEN EXPAND_TAC "y5" THEN EXPAND_TAC "y6");;
e (REWRITE_TAC[DIST_SYM]);;
e (REWRITE_TAC[Nonlinear_lemma.dih_y_sym]);;

e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (4 - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (REWRITE_WITH `mcell i V ul = mcell 4 V ul`);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (REWRITE_WITH `mcell 4 V [u0; u1; u2; u3] = X`);;
e (ASM_REWRITE_TAC[]);;
e (MESON_TAC[ARITH_RULE `4 >= 4`; MCELL_EXPLICIT; ASSUME `i >= 4`]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; 
   ASSUME `ul = [u0;u1;u2;u3:real^3]`; TRUNCATE_SIMPLEX_EXPLICIT_3]);;
e (REWRITE_TAC[GSYM (ASSUME `ul = [u0; u1; u2; u3:real^3]`)]);;
e (ASM_CASES_TAC `k = 1`);;

e (REWRITE_WITH `V INTER (X:real^3->bool) = 
                 set_of_list (truncate_simplex (k - 1) ul')`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 1 /\ 1 <= 4`]);;
e (REWRITE_WITH `mcell 1 V ul' = X`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 1`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; ASSUME `k = 1`]);;
e (REWRITE_WITH `truncate_simplex 0 (ul':(real^3)list) = [HD ul']`);;
e (MATCH_MP_TAC Packing3.TRUNCATE_0_EQ_HEAD);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (STRIP_TAC);;
e (NEW_GOAL `CARD (set_of_list [(HD ul'):real^3]) = 
             CARD (set_of_list (ul:(real^3)list))`);;
e (AP_TERM_TAC THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC Marchal_cells_3.BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[set_of_list; Geomdetail.CARD_SING] THEN ARITH_TAC);;
e (NEW_GOAL `k = 0`);;
e (ASM_ARITH_TAC);;

e (REWRITE_WITH `V INTER X = {}:real^3->bool`);;
e (REWRITE_TAC[ASSUME `X = mcell k V ul'`; ASSUME `k = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (NEW_GOAL `u0 IN {u0,u1,u2,u3:real^3}`);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (UP_ASM_TAC THEN MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S5" THEN EXPAND_TAC "S4" THEN EXPAND_TAC "S3" THEN 
   EXPAND_TAC "S2" THEN EXPAND_TAC "S1"THEN SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;


(* ==================================== *)
e (REAL_ARITH_TAC);;
e (AP_TERM_TAC);;

(* OK here *)


