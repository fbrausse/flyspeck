#use "/home/vu/flyspeck/working/GRUTOTI.hl";;

let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;

(* ========================================================================== *)
(* Continue GRUTOTI *)


e (NEW_GOAL 
 `!X. mcell_set V X /\ ~NULLSET (X INTER C)
     ==> (?k vl.
              2 <= k /\
              barV V 3 vl /\
              X = mcell k V vl /\
              truncate_simplex 1 vl = [u0; u1])`);;

e (REWRITE_TAC[mcell_set_2; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;




b();;

search [`mcell_set_2`];;

Sltstlo.SLTSTLO2;;

Ajripqn.AJRIPQN;;




e (ASM_CASES_TAC `i = 0`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `X = mcell i V ul`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell0]);;
e (STRIP_TAC);;
e (NEW_GOAL `X:real^3->bool INTER C = {}`);;
e (REWRITE_TAC[SET_RULE `x = {} <=> (!t. ~(t IN x))`]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `~(t:real^3 IN ball (HD ul, sqrt (&2)))`);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `t:real^3 IN ball (HD ul, sqrt (&2)))`);;
e (ASM_SET_TAC[]);;


b();;

e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "C");;


b();;
frontier;;
HAS_MEASURE_LUNE;;
HAS_MEASURE_LUNE_SIMPLE;;


search [`s SUBSET (interior t)`];;

rcone_ge;;
rconesgn;;

search [`barV`];;

mcell1;;
mcell2;;
mcell3;;
mcell4;;


Ajripqn.AJRIPQN;;
mcell1;;

search [`mcell i V ul = s`];;



aff
KIZHLTL1;;
KIZHLTL2;;
dihu2;;
dihu3;;
dihu4;;


search [`rogers`; `voronoi_closed`];;



(* Lemmas using often *)

MEASURE_DISJOINT_UNIONS_IMAGE;;
MEASURE_NEGLIGIBLE_UNIONS_IMAGE;;
SUM_CONST;;
FINITE_IMAGE_EXPAND;;

packing;;

(* -------------------------------------------------------------- *)



g `!ul a b k. {a, b} SUBSET set_of_list (truncate_simplex k ul) ==> 
        ?vl. ([a;b] = truncate_simplex 1 vl /\ 
             (?p. p permutes 0..k /\ vl = left_action_list p ul))`;;
e (REPEAT STRIP_TAC);;

;;

search []


(* Lemma 1 *)
(* may be needed *)

g `!u v:real^3. hl [u; v] = &1 / &2 * dist (u, v)`;;
e (REWRITE_TAC[HL; set_of_list; radV] THEN REPEAT GEN_TAC THEN 
   MATCH_MP_TAC SELECT_UNIQUE THEN REPEAT STRIP_TAC THEN 
   REWRITE_TAC[BETA_THM; CIRCUMCENTER_2; midpoint] THEN EQ_TAC);;
e (REPEAT STRIP_TAC);;
e (REWRITE_WITH `y = dist (inv (&2) % (u + v),v:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC THEN REWRITE_TAC[MESON [IN] `{a, b} s <=> s IN {a, b}`]);;

seans_fn();;

 THEN SET_TAC[]);;



SELECT_UNIQUE;;
b();;

search [`radV`];;

radV;;


let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;

open Upfzbzm_support_lemmas;;
#use "/home/vu/flyspeck/working/marchal_cells_3.hl";;
#use "/home/vu/flyspeck/working/KIZHLTL.hl";;
#use "/home/vu/flyspeck/working/UPFZBZM_2011.hl";;

(* ========================================================================== *)

g KIZHLTL3_new_concl;;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `saturated V /\ packing V`);;

(* ------------------------------------------------------------------------- *)
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (KY_CHEAT_TAC);;

edgeX;;
lmfun;;

(* ------------------------------------------------------------------------- *)
e (EXISTS_TAC `&0` THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

let KIZHLTL3 = top_thm();;






(*      The following lemma is to be proved by computer calculations         *)

let TSKAJXY_concl = 
`!V X. saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X  = {} 
   ==> gammaX V X lmfun >= &0`;;

let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;
let TSKAJXY = prove (TSKAJXY_concl, KY_CHEAT_TAC);;

(* ========================================================================== *)
(*               Continue back up of complementary lemmas                     *)
(* ========================================================================== *)

let SUM_GAMMAX_LMFUN_ESTIMATE_concl = 
  `!V. ?c. !r. saturated V /\ packing V /\ &1 <= r /\ 
               cell_cluster_estimate V /\ marchal_inequality /\
               lmfun_inequality V ==> 
    c * r pow 2 <=  sum {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X} 
    (\X. gammaX V X lmfun)`;;

(* ----------------------  We prove it below ------------------------------- *)

g SUM_GAMMAX_LMFUN_ESTIMATE_concl;;
e (GEN_TAC);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `!X. mcell_set V X /\ critical_edgeX V X  = {} ==> 
                 gammaX V X lmfun >= &0`);;
e (ASM_MESON_TAC[TSKAJXY]);;

(* ------------------------------------------------------------------------ *)

e (ABBREV_TAC `B = {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X}`);;
e (ABBREV_TAC `B0 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         critical_edgeX V X = {}}`);;
e (ABBREV_TAC `B1 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         ~(critical_edgeX V X = {})}`);;
e (REWRITE_WITH `B = B0 UNION B1:(real^3->bool)->bool`);;
e (EXPAND_TAC "B" THEN EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (REWRITE_WITH `sum (B0 UNION B1) (\X. gammaX V X lmfun) = 
   sum B0 (\X. gammaX V X lmfun) + sum B1 (\X. gammaX V X lmfun)`);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (EXPAND_TAC "B1");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= b /\ a <= c ==> a <= b + c`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_POS_LE);;
e (STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (REWRITE_TAC[BETA_THM; REAL_ARITH `&0 <= a <=> a >= &0`]);;
e (EXPAND_TAC "B0" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;


e (REWRITE_WITH 
  `sum B1 (\X. gammaX V X lmfun) = 
   sum B1 (\X. (gammaX V X lmfun) * 
                sum (critical_edgeX V X) (\e. critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[critical_weight]);;
e (REWRITE_WITH 
  `sum (critical_edgeX V x) (\e. &1 / &(CARD (critical_edgeX V x))) = 
   &(CARD (critical_edgeX V x)) * (&1 / &(CARD (critical_edgeX V x)))`);;
e (MATCH_MP_TAC SUM_CONST);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (REWRITE_TAC[REAL_ARITH `a * &1 / a = a / a`]);;
e (REWRITE_WITH `&(CARD (critical_edgeX V x)) / &(CARD (critical_edgeX V x)) = &1`);;
e (MATCH_MP_TAC REAL_DIV_REFL);;
e (REWRITE_TAC[REAL_OF_NUM_EQ]);;
e (REWRITE_WITH `CARD (critical_edgeX V x) = 0 <=> critical_edgeX V x = {}`);;
e (MATCH_MP_TAC CARD_EQ_0);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (ASM_REWRITE_TAC[]);;
e (REAL_ARITH_TAC);;



















