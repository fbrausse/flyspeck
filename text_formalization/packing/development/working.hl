(* checkpointed *)
needs "/home/ky/flyspeck/working/marchal_cells_3.hl";; 
#use "/home/ky/flyspeck/working/GRUTOTI.hl";;
(* checkpointed *)
let KY_CHEAT_TAC = MP_TAC (mk_fthm([],`F`)) THEN MESON_TAC[];;

(* ========================================================================== *)
(* Continue GRUTOTI *)


(* ========================================================================= *)
(*  Case k = 3                                                               *)
(* ========================================================================= *)

e (ASM_CASES_TAC `k = 3`);;
e (ABBREV_TAC `m = mxi V vl`);;
e (NEW_GOAL `?u2 u3. vl = [u0; u1;u2;u3:real^3]`);;
e (NEW_GOAL `?v0 v1 u2 u3. vl = [v0; v1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `u2:real^3` THEN EXISTS_TAC `u3:real^3`);;

e (REWRITE_WITH `u0 = v0:real^3`);;
e (REWRITE_WITH `v0:real^3 = HD (truncate_simplex 1 vl)`);;
e (REWRITE_TAC[ASSUME `vl = [v0;v1;u2;u3:real^3]`; 
   TRUNCATE_SIMPLEX_EXPLICIT_1; HD]);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_1; HD]);;

e (REWRITE_WITH `u1 = v1:real^3`);;
e (REWRITE_WITH `v1:real^3 = HD (TL (truncate_simplex 1 vl))`);;
e (REWRITE_TAC[ASSUME `vl = [v0;v1;u2;u3:real^3]`; 
   TRUNCATE_SIMPLEX_EXPLICIT_1; HD; TL]);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_1; HD; TL]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (ABBREV_TAC `L = aff_ge{u0, u1} {u2, m:real^3}`);;
e (REWRITE_WITH `vol (X INTER C) = vol (L INTER C)`);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell3]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list; 
   SET_RULE `{a,b,c} UNION {d} = {a,b,c,d}`]);;
e (REWRITE_WITH `mxi V [u0; u1; u2; u3] = m`);;
e (ASM_MESON_TAC[]);;

e (EXPAND_TAC "L");;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B /\ (!x. x IN B /\ x IN C ==> x IN A) ==>
  (A INTER C = B INTER C)`));;
e (REWRITE_TAC[Marchal_cells_2_new.CONVEX_HULL_4_SUBSET_AFF_GE_2_2]);;

e (NEW_GOAL `DISJOINT {u0, u1} {u2, m:real^3}`);;
e (REWRITE_TAC[DISJOINT]);;
e (ASM_CASES_TAC `u2 IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;

e (UNDISCH_TAC `~NULLSET (X INTER C)`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `mcell 3 V [u0; u1; u2; u3]`);;
e (STRIP_TAC);;
e (REWRITE_TAC[MCELL_EXPLICIT; mcell3; TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list;    SET_RULE `{a,b,c} UNION {d} = {a,b,c,d}`]);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `{u0, u1, u2, mxi V [u0; u1; u2; u3]} = 
                 {u0, u1, mxi V [u0; u1; u2; u3]}`);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_CONVEX_HULL_3]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (SET_TAC[]);;
e (ASM_MESON_TAC[]);;


e (ASM_CASES_TAC `m IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~NULLSET (X INTER C)`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `mcell 3 V [u0; u1; u2; u3]`);;
e (STRIP_TAC);;
e (REWRITE_TAC[MCELL_EXPLICIT; mcell3; TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list;    SET_RULE `{a,b,c} UNION {d} = {a,b,c,d}`]);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `{u0, u1, u2, mxi V [u0; u1; u2; u3]} = 
                 {u0, u1, u2}`);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_CONVEX_HULL_3]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (SIMP_TAC[Marchal_cells_2_new.AFF_GE_2_2; 
   ASSUME `DISJOINT {u0, u1} {u2, m:real^3}`]);;
e (REWRITE_TAC[CONVEX_HULL_4; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;

e (ASM_CASES_TAC `t1 < &0`);;
e (NEW_GOAL `F`);;




KY_CHEAT_TAC;;







Rogers.WAUFCHE2;;

search [`hl ul <= dist (a, b)`]
;;
search [`a * b = &0 <=> s`];;

b();;


search [`dist (a,b) pow 2 = dist (c, d) pow 2`];;

search [`HD `; `set_of_list`];;

b();;


b();;

b();;

search [`x IN s ==> x IN affine hull s`];;



search [`voronoi_list V zl`; `omega_list_n`];;

b();;

search [`LENGTH (truncate_simplex k ul)`];;


Rogers.HL_PROPERTIES;;
Rogers.WAUFCHE2;;
Rogers.XNHPWAB1;;
Rogers.WAUFCHE1;;







e (NEW_GOAL `!w:real^3. w IN set_of_list xl
                  ==> dist (circumcenter (set_of_list xl),w) = hl xl`);;
e (MATCH_MP_TAC Rogers.HL_PROPERTIES);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `2`);;
e (ASM_REWRITE_TAC[] THEN EXPAND_TAC "xl");;

search [`barV V k (truncate_simplex k ul)`];;


Rogers.HL_PROPERTIES;;
Rogers.WAUFCHE2;;
Rogers.XNHPWAB1;;
Rogers.WAUFCHE1;;


p();;
mcell2;;
p();;

search [`dist `; `hl`];;

e (KY_CHEAT_TAC);;
e (KY_CHEAT_TAC);;

b();;

e (SET_TAC[]);;





search 
p();;
b();;
dihu2;;
dihX;;


mcell2;;
mcell3;;
mcell4;;

dihV;;

arcV;;

aff_ge [``]
p();;
b();;
mxi;;

search [`mxi`];;
Packing3.CONVEX_HULL_EQ_EQ_SET_EQ;;

search [`mcell i V ul`];;
b();;
Qzksykg.QZKSYKG2;;
p();;

search [`rogers V ul = rogers V vl`];;
Njiutiu.NJIUTIU;;


search [`omega_list_n V ul i = t `];;

dihu2;;
dihX;;
p();;

search [`rogers V ul = rogers V vl`];;

e (KY_CHEAT_TAC);;
e (KY_CHEAT_TAC);;

p();;
dihu2;;
dihu3;;
dihu4;;

mcell3;;
mcell4;;


cell_params_d;;
SELECT_EXISTS;;
p();;

search [`?y. P y `; `(@x. P x)`];;

VOLUME_CONIC_CAP;;


p();;
p();;

seans_fn();;
search [` vol (conic_cap u0 u1 r c)`];;

b();;
AZIM_DIVH;;
p();;

 ``


b();;



dihu2;;
AZIM_EQ_0_PI_IMP_COPLANAR;;
VOLUME_CONIC_CAP_WEDGE;;
AZIM_DIVH;;
AZIM_DIHV_SAME;;
AZIM_DIHV_EQ_PI;;
AZIM_EQ_PI_SYM;;
Trigonometry.YVREJIS;;
VOLUME_CONIC_CAP_COMPL;;
VOLUME_CONIC_CAP_WEDGE_WEAK;;
AZIM_COMPL;;
vol_conic_cap_wedge;;

sol;;
dihV;;
conic_cap;;
p();;

b();;


















let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;

open Upfzbzm_support_lemmas;;
#use "/home/vu/flyspeck/working/marchal_cells_3;;
#use "/home/vu/flyspeck/working/KIZHLTL;;
#use "/home/vu/flyspeck/working/UPFZBZM_2011;;

(* ========================================================================== *)

g KIZHLTL3_new_concl;;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `saturated V /\ packing V`);;

(* ------------------------------------------------------------------------- *)
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (KY_CHEAT_TAC);;

edgeX;;
lmfun;;

(* ------------------------------------------------------------------------- *)
e (EXISTS_TAC `&0` THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

let KIZHLTL3 = top_thm();;






(*      The following lemma is to be proved by computer calculations         *)

let TSKAJXY_concl = 
`!V X. saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X  = {} 
   ==> gammaX V X lmfun >= &0`;;

let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;
let TSKAJXY = prove (TSKAJXY_concl, KY_CHEAT_TAC);;

(* ========================================================================== *)
(*               Continue back up of complementary lemmas                     *)
(* ========================================================================== *)

let SUM_GAMMAX_LMFUN_ESTIMATE_concl = 
  `!V. ?c. !r. saturated V /\ packing V /\ &1 <= r /\ 
               cell_cluster_estimate V /\ marchal_inequality /\
               lmfun_inequality V ==> 
    c * r pow 2 <=  sum {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X} 
    (\X. gammaX V X lmfun)`;;

(* ----------------------  We prove it below ------------------------------- *)

g SUM_GAMMAX_LMFUN_ESTIMATE_concl;;
e (GEN_TAC);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `!X. mcell_set V X /\ critical_edgeX V X  = {} ==> 
                 gammaX V X lmfun >= &0`);;
e (ASM_MESON_TAC[TSKAJXY]);;

(* ------------------------------------------------------------------------ *)

e (ABBREV_TAC `B = {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X}`);;
e (ABBREV_TAC `B0 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         critical_edgeX V X = {}}`);;
e (ABBREV_TAC `B1 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         ~(critical_edgeX V X = {})}`);;
e (REWRITE_WITH `B = B0 UNION B1:(real^3->bool)->bool`);;
e (EXPAND_TAC "B" THEN EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (REWRITE_WITH `sum (B0 UNION B1) (\X. gammaX V X lmfun) = 
   sum B0 (\X. gammaX V X lmfun) + sum B1 (\X. gammaX V X lmfun)`);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (EXPAND_TAC "B1");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= b /\ a <= c ==> a <= b + c`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_POS_LE);;
e (STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (REWRITE_TAC[BETA_THM; REAL_ARITH `&0 <= a <=> a >= &0`]);;
e (EXPAND_TAC "B0" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;


e (REWRITE_WITH 
  `sum B1 (\X. gammaX V X lmfun) = 
   sum B1 (\X. (gammaX V X lmfun) * 
                sum (critical_edgeX V X) (\e. critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[critical_weight]);;
e (REWRITE_WITH 
  `sum (critical_edgeX V x) (\e. &1 / &(CARD (critical_edgeX V x))) = 
   &(CARD (critical_edgeX V x)) * (&1 / &(CARD (critical_edgeX V x)))`);;
e (MATCH_MP_TAC SUM_CONST);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (REWRITE_TAC[REAL_ARITH `a * &1 / a = a / a`]);;
e (REWRITE_WITH `&(CARD (critical_edgeX V x)) / &(CARD (critical_edgeX V x)) = &1`);;
e (MATCH_MP_TAC REAL_DIV_REFL);;
e (REWRITE_TAC[REAL_OF_NUM_EQ]);;
e (REWRITE_WITH `CARD (critical_edgeX V x) = 0 <=> critical_edgeX V x = {}`);;
e (MATCH_MP_TAC CARD_EQ_0);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (ASM_REWRITE_TAC[]);;
e (REAL_ARITH_TAC);;


















