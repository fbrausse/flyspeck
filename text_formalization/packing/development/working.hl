
let SUM_PAIR_2_SET = prove
(`!f s:real^N->bool d.
 FINITE s
==> sum {(m,n) | m IN s /\ n IN s /\ ~(m = n) /\ dist(m,n) <= d}
 (\(m,n). f {m, n}) = &2 *
 sum {{m, n} | m IN s /\ n IN s /\ ~(m = n) /\ dist(m,n) <= d} f`,
REPEAT STRIP_TAC THEN MP_TAC(ISPECL
 [`\(m:real^N,n). {m,n}`;`(\(m,n). f {m,n}):real^N#real^N->real`;
  `{(m,n) | m IN s /\ n IN s /\ ~(m:real^N = n) /\ dist(m,n) <= d}`;
  `{{m,n} | m IN s /\ n IN s /\ ~(m:real^N = n) /\ dist(m,n) <= d}`]
  SUM_GROUP) THEN
  ANTS_TAC THENL
 [CONJ_TAC THENL
 [ONCE_REWRITE_TAC[SET_RULE
 `m IN s /\ n IN s /\ P m n <=>
  m IN s /\ n IN {n | n IN s /\ P m n}`] THEN
  MATCH_MP_TAC FINITE_PRODUCT_DEPENDENT THEN
  ASM_SIMP_TAC[FINITE_RESTRICT];
  REWRITE_TAC[SUBSET; FORALL_IN_IMAGE; FORALL_IN_GSPEC] THEN SET_TAC[]];
  DISCH_THEN(SUBST1_TAC o SYM) THEN REWRITE_TAC[GSYM SUM_LMUL] THEN
  MATCH_MP_TAC SUM_EQ THEN REWRITE_TAC[FORALL_IN_GSPEC] THEN
  MAP_EVERY X_GEN_TAC [`m:real^N`; `n:real^N`] THEN STRIP_TAC THEN
  MATCH_MP_TAC EQ_TRANS THEN
  EXISTS_TAC `sum {(m:real^N,n), (n,m)} (\(m,n). f {m,n})` THEN
  CONJ_TAC THENL
  [AP_THM_TAC THEN AP_TERM_TAC THEN GEN_REWRITE_TAC I [EXTENSION] THEN
  REWRITE_TAC[FORALL_PAIR_THM] THEN
  REWRITE_TAC[IN_ELIM_THM; PAIR_EQ; IN_INSERT; NOT_IN_EMPTY;
  SET_RULE `{a,b} = {c,d} <=> a = c /\ b = d \/ a = d /\ b = c`] THEN
  ASM_MESON_TAC[DIST_SYM];
  SIMP_TAC[SUM_CLAUSES; FINITE_INSERT; FINITE_EMPTY] THEN
  ASM_REWRITE_TAC[IN_SING; NOT_IN_EMPTY; PAIR_EQ; REAL_ADD_RID] THEN
  REWRITE_TAC[INSERT_AC] THEN REAL_ARITH_TAC]]);;
(* ========================================================================= *)
#use "/home/vu/flyspeck/working/marchal_cells_3.hl";;
#use "/home/vu/flyspeck/working/KIZHLTL.hl";;
(* ========================================================================= *)
let KY_CHEAT_TAC = MP_TAC (mk_fthm([],`F`)) THEN MESON_TAC[];;
(* ========================================================================= *)
let SUM_GAMMAX_LMFUN_ESTIMATE_concl = 
  `!V. ?c. !r. saturated V /\ packing V /\ &1 <= r /\ 
               cell_cluster_estimate V /\ marchal_inequality /\
               lmfun_inequality V ==> 
    c * r pow 2 <=  sum {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X} 
    (\X. gammaX V X lmfun)`;;

let TSKAJXY_concl = 
`!V X. saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X  = {} 
   ==> gammaX V X lmfun >= &0`;;

let SUM_BETA_BUMP_LEMMA = prove_by_refinement (
 `!V X. saturated V /\ packing V /\ mcell_set V X ==> 
         sum {e | e IN critical_edgeX V X } (\e. beta_bump V e X) = &0`,
[KY_CHEAT_TAC]);;

(* ========================================================================= *)
(* Two axioms *)
let TSKAJXY = prove (TSKAJXY_concl, KY_CHEAT_TAC);;
let OXLZLEZ = prove (OXLZLEZ_concl, KY_CHEAT_TAC);;

(*      The above lemmas are to be proved by computer calculations           *)
(* ========================================================================= *)
(*               Continue back up of complementary lemmas                    *)
(* ========================================================================= *)

g SUM_GAMMAX_LMFUN_ESTIMATE_concl;;
e (GEN_TAC);;
e (ASM_CASES_TAC `saturated V /\ packing V`);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `!X. mcell_set V X /\ critical_edgeX V X  = {} ==> 
                 gammaX V X lmfun >= &0`);;
e (ASM_MESON_TAC[TSKAJXY]);;

(* ------------------------------------------------------------------------ *)

e (ABBREV_TAC `B = {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X}`);;
e (ABBREV_TAC `B0 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         critical_edgeX V X = {}}`);;
e (ABBREV_TAC `B1 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         ~(critical_edgeX V X = {})}`);;
e (NEW_GOAL `FINITE (B1:(real^3->bool)->bool)`);;
e (EXPAND_TAC "B1");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;

e (REWRITE_WITH `B = B0 UNION B1:(real^3->bool)->bool`);;
e (EXPAND_TAC "B" THEN EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (REWRITE_WITH `sum (B0 UNION B1) (\X. gammaX V X lmfun) = 
   sum B0 (\X. gammaX V X lmfun) + sum B1 (\X. gammaX V X lmfun)`);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= b /\ a <= c ==> a <= b + c`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_POS_LE);;
e (STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (REWRITE_TAC[BETA_THM; REAL_ARITH `&0 <= a <=> a >= &0`]);;
e (EXPAND_TAC "B0" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;

e (REWRITE_WITH 
  `sum B1 (\X. gammaX V X lmfun) = 
   sum B1 (\X. (gammaX V X lmfun) * 
                sum (critical_edgeX V X) (\e. critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[critical_weight]);;
e (REWRITE_WITH 
  `sum (critical_edgeX V x) (\e. &1 / &(CARD (critical_edgeX V x))) = 
   &(CARD (critical_edgeX V x)) * (&1 / &(CARD (critical_edgeX V x)))`);;
e (MATCH_MP_TAC SUM_CONST);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (REWRITE_TAC[REAL_ARITH `a * &1 / a = a / a`]);;
e (REWRITE_WITH `&(CARD (critical_edgeX V x)) / &(CARD (critical_edgeX V x)) = &1`);;
e (MATCH_MP_TAC REAL_DIV_REFL);;
e (REWRITE_TAC[REAL_OF_NUM_EQ]);;
e (REWRITE_WITH `CARD (critical_edgeX V x) = 0 <=> critical_edgeX V x = {}`);;
e (MATCH_MP_TAC CARD_EQ_0);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (ASM_REWRITE_TAC[]);;
e (REAL_ARITH_TAC);;

(* ------------------------------------------------------------------------- *)
(* Hint:      - See proofs of KIZHLTL1; KIZHLTL2 to adapt                    *)
(* ------------------------------------------------------------------------- *)

e (REWRITE_TAC[GSYM SUM_LMUL]);;

e (ABBREV_TAC `T1:real^3->bool = V INTER ball (vec 0, r)`);;
e (ABBREV_TAC `T2 = {{u0, u1:real^3} | u0 IN T1 /\ u1 IN T1 /\ ~(u0 = u1) /\   
                                       hl [u0; u1] <= hplus}`);;
e (NEW_GOAL `FINITE (T2:(real^3->bool)->bool)`);;
e (EXPAND_TAC "T2" THEN MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{{u0, u1:real^3} | u0 IN T1 /\ u1 IN T1}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_SET_PRODUCT_KY_LEMMA);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC Pack2.KIUMVTC);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;

e (REWRITE_WITH 
 `sum B1 (\X. sum (critical_edgeX V X) 
                   (\x. gammaX V X lmfun * critical_weight V X)) =
  sum B1 (\X. sum {y:real^3->bool| y IN T2 /\ critical_edgeX V X y} 
                   (\x. gammaX V X lmfun * critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (AP_THM_TAC THEN AP_TERM_TAC);;
e (REWRITE_TAC[SET_RULE `a = b <=> b SUBSET a /\ a SUBSET b`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SET_RULE `A SUBSET {y | T2 y /\ A y} <=> A SUBSET T2`]);;
e (EXPAND_TAC "T2" THEN REWRITE_TAC[SUBSET; critical_edgeX; IN; IN_ELIM_THM; edgeX]);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "T1" THEN REWRITE_TAC[IN_ELIM_THM]);;
e (EXISTS_TAC `u':real^3` THEN EXISTS_TAC `v':real^3`);;
e (REWRITE_TAC[ASSUME `~(u' = v':real^3)`]);;

e (REWRITE_TAC[ASSUME `x' = {u, v:real^3}`; MESON[IN] `V (x:real^3) <=> x IN V`;
               GSYM (ASSUME `{u, v} = {u', v':real^3}`); IN_INTER]);;

e (NEW_GOAL `VX V x = V INTER x`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (UNDISCH_TAC `mcell_set V x` THEN REWRITE_TAC[mcell_set; IN; IN_ELIM_THM]);;
e (STRIP_TAC);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (NEW_GOAL `VX V x = {}`);;
e (REWRITE_TAC[VX]);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `VX V x u'` THEN ASM_REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`]);;
e (SET_TAC[]);;

e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (REWRITE_WITH `hl [u'; v':real^3] = hl [u; v:real^3]`);;
e (ASM_REWRITE_TAC[HL; set_of_list]);;
e (ASM_REWRITE_TAC[]);;

e (ABBREV_TAC `f = (\X. (\x:real^3->bool. 
                            gammaX V X lmfun * critical_weight V X))`);;
e (REWRITE_WITH 
 `sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y}
                  (\x:real^3->bool. gammaX V X lmfun * critical_weight V X)) = 
  sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y}
                  (\x:real^3->bool. f X x))`);;
e (EXPAND_TAC "f" THEN REFL_TAC);;
e (REWRITE_WITH 
  `sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y} (\x. f X x)) = 
   sum T2 (\x. sum {X | X IN B1 /\ critical_edgeX V X x} (\X. f X x))`);;
e (ASM_SIMP_TAC[SUM_SUM_RESTRICT]);;

e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REWRITE_TAC[MESON[] `(A/\B/\C)/\D <=> A/\B/\C/\D`]);;





SUM_BETA_BUMP_LEMMA;;

cell_cluster_estimate;;
cell_cluster;;
cluster_gammaX;;

beta_bump;;
bump;;




e (REWRITE_WITH 
`sum T2 (\x. sum
               {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                   ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
        (\X. f X x)) = 
sum T2  (\x. sum {X | mcell_set V X /\
                     ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) - 
sum T2  (\x. sum {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
                      ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x))`);;
e (REWRITE_TAC[REAL_ARITH `a = b - c <=> b = a + c`]);;
e (REWRITE_WITH 
` sum T2
 (\x. sum
      {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) +
 sum T2
 (\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) = 
 sum T2 
 (\x. (\x. sum
      {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) x + 
(\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) x)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC SUM_ADD);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SUM_EQ);;
e (REWRITE_TAC[BETA_THM] THEN REPEAT STRIP_TAC);;

e (REWRITE_WITH 
`sum
 {X | X SUBSET ball (vec 0,r) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x}
 (\X. f X x) +
 sum
 {X | ~(X SUBSET ball (vec 0,r)) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x}
 (\X. f X x) = 
 sum ({X | X SUBSET ball (vec 0,r) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x} UNION 
      {X | ~(X SUBSET ball (vec 0,r)) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x}) 
 (\X. f X x)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;

e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `B1:(real^3->bool)->bool`);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN SET_TAC[]);;

e (UP_ASM_TAC THEN EXPAND_TAC "T2");;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r + &8) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[Marchal_cells_3.FINITE_MCELL_SET_LEMMA]);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `x SUBSET VX V x'`);;
e (UNDISCH_TAC `critical_edgeX V x' x` THEN REWRITE_TAC[critical_edgeX;edgeX]);;
e (REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[ASSUME `x = {u, v:real^3}`; ASSUME `{u, v:real^3} = {u', v'}`]);;
e (SET_TAC[ASSUME `VX V x' u'`; ASSUME `VX V x' v'`]);;
e (NEW_GOAL `VX V x' = V INTER x'`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (UNDISCH_TAC `mcell_set V x'` THEN REWRITE_TAC[mcell_set; IN_ELIM_THM; IN]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (NEW_GOAL `VX V x' = {}`);;
e (ASM_REWRITE_TAC[VX]);;
e (UNDISCH_TAC `x SUBSET VX V x'` THEN REWRITE_TAC[ASSUME `VX V x' = {}`]);;
e (REWRITE_TAC[ASSUME `x = {u0, u1:real^3}`] THEN SET_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) x <=> x IN A`; IN_BALL]);;
e (NEW_GOAL `dist (vec 0, x'') <= dist (vec 0, u0:real^3) + dist (u0, x'')`);;
e (NORM_ARITH_TAC);;
e (NEW_GOAL `dist (vec 0, u0:real^3) < r`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (UNDISCH_TAC `(T1:real^3->bool) u0` THEN EXPAND_TAC "T1");;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) x <=> x IN A`] THEN SET_TAC[]);;
e (NEW_GOAL `dist (u0, x'':real^3) < &8`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (NEW_GOAL `x' SUBSET ball (u0:real^3,&8)`);;
e (UNDISCH_TAC `mcell_set V x'` THEN REWRITE_TAC[mcell_set; IN_ELIM_THM; IN]);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC MCELL_SUBSET_BALL8);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `x' = mcell i V ul`)]);;
e (UNDISCH_TAC `x SUBSET VX V x'` THEN UNDISCH_TAC `VX V x' = V INTER x'`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (SUBGOAL_THEN `(x'':real^3) IN x'` MP_TAC);;
e (UNDISCH_TAC `(x':real^3->bool) x''` THEN SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;

e (REWRITE_WITH ` ({X | X SUBSET ball (vec 0,r) /\
       mcell_set V X /\
       ~(critical_edgeX V X = {}) /\
       critical_edgeX V X x} UNION
  {X | ~(X SUBSET ball (vec 0,r)) /\
       mcell_set V X /\
       ~(critical_edgeX V X = {}) /\
       critical_edgeX V X x}) = 
 {X | mcell_set V X /\ ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}`);;
e (SET_TAC[]);;
e (REWRITE_WITH 
  `(\x. sum
      {X | mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x} (\X. f X x)) = 
    (\x. sum
      {X | mcell_set V X /\ critical_edgeX V X x} (\X. f X x))`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (STRIP_TAC);;
e (REWRITE_WITH 
`{X | mcell_set V X /\
      ~(!x. critical_edgeX V X x <=> {} x) /\ critical_edgeX V X x} = 
 {X | mcell_set V X /\ critical_edgeX V X x}`);;
e (REWRITE_TAC[SET_RULE `A = B <=> A SUBSET B /\ B SUBSET A`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:(real^3->bool)->bool) x <=> x IN A`]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  ` (\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x} (\X. f X x)) = 
     (\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           critical_edgeX V X x} (\X. f X x))`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (STRIP_TAC);;
e (REWRITE_WITH 
`{X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
      ~(!x. critical_edgeX V X x <=> {} x) /\ critical_edgeX V X x} = 
 {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\ critical_edgeX V X x}`);;
e (REWRITE_TAC[SET_RULE `A = B <=> A SUBSET B /\ B SUBSET A`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (GEN_TAC THEN DISCH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REPEAT STRIP_TAC);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:(real^3->bool)->bool) x <=> x IN A`]);;
e (SET_TAC[]);;

(* OK here *)

e (EXPAND_TAC "T2");;
e (EXPAND_TAC "T1");;

b();;




e (MATCH_MP_TAC (REAL_ARITH `&0 <= a /\ b + c <= &0 ==> c <= a - b`));;
e (STRIP_TAC);;
e (EXPAND_TAC "f");;
e (REWRITE_WITH 
 `sum T2
  (\x. sum {X | mcell_set V X /\ critical_edgeX V X x}
      (\X. gammaX V X lmfun * critical_weight V X)) = 
  sum T2 (\x. cluster_gammaX V x (cell_cluster V x))`);;
e (REWRITE_TAC[cell_cluster; IN; cluster_gammaX]);;


beta_bump;;
p();;


SUM_BETA_BUMP_THM;;

cluster_gammaX;;
b();;

cell_cluster_estimate;;

search [`f = g <=> (!x. f x = g x)`];;


VX;;

b();;


b();;
;;

search [`FINITE {X | X SUBSET ball (a,b) /\ mcell_set V X}`];;


e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN SET_TAC[]);;



b();;

seans_fn();;

search [`mcell`];;

search [`sum s1 f + sum s2 f`];;

seans_fn();;

SUM_ADD;;


b();;


search [`sum s f + sum s t`];;











e (EXPAND_TAC "T2");;
e (ABBREV_TAC 
  `g = (\x. sum {X | X IN B1 /\ critical_edgeX V X x} (\X. f X x))`);;
e (REWRITE_WITH 
   `sum {{u0:real^3, u1} | u0 IN T1 /\ u1 IN T1 /\ 
                          ~(u0 = u1) /\ hl [u0; u1] <= hplus} g =
    &1 / &2 * 
    sum {m,(n:real^3) | m IN T1 /\ n IN T1 /\ 
                       ~(m = n) /\ hl [m; n] <= hplus} (\(m,n). g {m, n})`);;
e (REWRITE_TAC[REAL_ARITH `a = &1 / &2 * b <=> b = &2 * a`]);;
e (REWRITE_TAC[HL_2; REAL_ARITH `inv (&2) * a <= b <=> a <= &2 * b`]);;
e (MATCH_MP_TAC SUM_PAIR_2_SET);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;

e (ABBREV_TAC `t = (\m:real^3. 
                       {n | n IN T1 /\ ~(m = n) /\ hl [m; n] <= hplus})`);;
e (REWRITE_WITH 
  `sum {m:real^3,n | m IN T1 /\ n IN T1 /\ ~(m = n) /\ hl [m; n] <= hplus}
   (\(m,n). g {m, n}) =  
   sum {m,n | m IN T1 /\ n IN t m} (\(m,n). g {m, n})`);;
e (EXPAND_TAC "t" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (ABBREV_TAC `h = (\m n:real^3. (g:(real^3->bool)->real) {m,n})`);;
e (REWRITE_WITH `sum {m,n:real^3 | m IN T1 /\ n IN t m} (\(m,n). g {m, n}) = 
                 sum {m,n | m IN T1 /\ n IN t m} (\(m,n). h m n)`);;
e (EXPAND_TAC "h");;
e (REWRITE_TAC[]);;

e (REWRITE_WITH 
   `sum {m:real^3,n:real^3 | m IN T1 /\ n IN t m} (\(m,n). h m n) = 
    sum T1 (\m. sum (t m) (h m))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC SUM_SUM_PRODUCT);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "t");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `T1:real^3->bool`);;
e (STRIP_TAC);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;

e (EXPAND_TAC "h" THEN EXPAND_TAC "g" THEN EXPAND_TAC "B1");;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;




(* ========================================================================= *)

g `!u0 V. packing V ==> CARD (V INTER ball (u0, r)) <= (a + &1) pow 3`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `sum (V INTER ball (u0,&4)) (\x. vol (ball (x:real^3, &1)))
           = & (CARD (V INTER ball (u0,&4))) * (&4 / &3 * pi)`);;
e (NEW_GOAL `&0 <= &1`);;
e (REAL_ARITH_TAC);;
e (REWRITE_WITH `(\x. vol (ball (x,&1))) = (\x. &4 / &3 * pi)`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (ASM_SIMP_TAC[VOLUME_BALL] THEN REAL_ARITH_TAC);;
e (MATCH_MP_TAC SUM_CONST);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA]);;
e (UP_ASM_TAC);;
e (ABBREV_TAC `f = (\x:real^3. ball (x, &1))`);;
e (REWRITE_WITH `(\x. vol (ball (x:real^3,&1))) = (\x. vol (f x))`);;
e (REWRITE_TAC[FUN_EQ_THM] THEN STRIP_TAC);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `sum (V INTER ball (u0:real^3,&4)) (\x. vol (f x)) = 
                 vol (UNIONS (IMAGE f (V INTER ball (u0,&4))))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC MEASURE_DISJOINT_UNIONS_IMAGE);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[] THEN REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA]);;
e (REWRITE_TAC[MEASURABLE_BALL]);;
e (REWRITE_TAC[DISJOINT; SET_RULE `a = {} <=> ~(?s. s IN a)`]);;
e (REWRITE_TAC[IN_INTER; IN_BALL]);;
e (STRIP_TAC);;
e (UNDISCH_TAC `packing V` THEN REWRITE_TAC[packing]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&2 <= dist (x,y:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `dist (x,y) <= dist (x,s) + dist (y,s:real^3)`);;
e (NORM_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (STRIP_TAC);;
e (NEW_GOAL `vol (UNIONS (IMAGE f (V INTER ball (u0:real^3,&4))))
             <= vol (ball (u0, &5))`);;
e (MATCH_MP_TAC MEASURE_SUBSET);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[IMAGE; MEASURABLE_BALL]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC MEASURABLE_UNIONS);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA]);;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[MEASURABLE_BALL]);;
e (REWRITE_TAC[UNIONS_SUBSET; IN_INTER; IN_BALL; IN_ELIM_THM; SUBSET]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (u0, x') <= dist (u0,x:real^3) + dist (x, x')`);;
e (NORM_ARITH_TAC);;
e (NEW_GOAL `dist (x,x':real^3) < &1`);;
e (REWRITE_TAC[GSYM IN_BALL] THEN ASM_MESON_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `&(CARD (V INTER ball (u0,&4))) * &4 / &3 * pi <= 
             vol (ball (u0,&5))`);;
e (ASM_REAL_ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_WITH 
  `vol (ball (u0,&5)) = &4 / &3 * pi * (&5) pow 3`);;
e (SIMP_TAC[VOLUME_BALL; REAL_ARITH `&0 <= &5`]);;

e (REWRITE_TAC[REAL_ARITH `a * &4 / &3 * pi <= &4 / &3 * pi * b <=> 
                           &0 <= pi * (b - a)`]);;
e (MP_TAC PI_POS THEN REAL_ARITH_TAC);;
e (STRIP_TAC);;
e (NEW_GOAL `&0 <= &5 pow 3 - &(CARD (V INTER ball (u0:real^3,&4)))`);;
e (MATCH_MP_TAC Real_ext.REAL_PROP_NN_LCANCEL);;
e (EXISTS_TAC `pi`);;
e (ASM_REWRITE_TAC[PI_POS]);;
e (REWRITE_TAC[GSYM REAL_OF_NUM_LE]);;
e (ASM_REAL_ARITH_TAC);;

let BOUNDS_V4_klemma = top_thm();;

(* ========================================================================= *)

g `!V u0. saturated V /\ packing V /\ u0 IN V 
     ==> CARD {X | mcell_set V X /\ VX V X u0} <= 1220703125`;;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `S = {ul,i | barV V 3 ul /\ i IN 0..4 /\ 
                                             u0 IN set_of_list ul}`);;
e (NEW_GOAL `FINITE (S:(real^3)list#num->bool)`);;
e (REWRITE_WITH `S = {ul,i | ul IN {ul | barV V 3 ul /\ 
                                         u0 IN set_of_list ul} /\ i IN 0..4}`);;
e (EXPAND_TAC "S");;
e (SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (MATCH_MP_TAC FINITE_SUBSET);;

e (ABBREV_TAC `T1 = V INTER ball (u0:real^3, &4)`);;
e (NEW_GOAL `FINITE (T1:real^3->bool)`);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `{ul | ?v0 v1 v2 v3. 
                     v0 IN T1 /\ v1 IN T1 /\ v2 IN T1 /\ v3 IN T1 /\
                     ul = [v0;v1;v2;v3:real^3]}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Ajripqn.FINITE_SET_LIST_LEMMA THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?v0 v1 v2 v3. x = [v0:real^3; v1; v2; v3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC THEN EXISTS_TAC `v0:real^3` THEN EXISTS_TAC
  `v1:real^3` THEN EXISTS_TAC `v2:real^3` THEN EXISTS_TAC `v3:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `set_of_list (x:(real^3)list) SUBSET T1`);;
e (EXPAND_TAC "T1" THEN REWRITE_TAC[SUBSET_INTER]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Packing3.BARV_SUBSET);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Qzyzmjc.BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:(real^3->bool)`);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `set_of_list (x:(real^3)list) u0` THEN ASM_REWRITE_TAC[IN]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;

e (ABBREV_TAC `f = (\(ul,i). mcell i V ul)`);;
e (NEW_GOAL `{X | mcell_set V X /\ VX V X u0} SUBSET 
             (IMAGE (f:(real^3)list#num->real^3->bool) S) `);;
e (EXPAND_TAC "S" THEN EXPAND_TAC "f" THEN REWRITE_TAC[IMAGE]);;
e (REWRITE_TAC[mcell_set_2; SUBSET; IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (EXISTS_TAC `ul:(real^3)list,i:num`);;
e (REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (REWRITE_TAC[MESON[IN] `(0..4) i <=> i IN 0..4`]);;
e (ASM_REWRITE_TAC[IN_NUMSEG_0]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) i <=> i IN A`]);;
e (ASM_REWRITE_TAC[IN_NUMSEG_0]);;
e (NEW_GOAL `(u0:real^3) IN V INTER x`);;
e (REWRITE_WITH `V INTER x = VX V x`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[VX]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) i <=> i IN A`]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[IN]);;
e (UP_ASM_TAC THEN REWRITE_WITH 
  `V INTER (x:real^3->bool) = set_of_list (truncate_simplex (i - 1) ul)`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `VX V x = V INTER x`);;

e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[VX]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) i <=> i IN A`]);;
e (SET_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `i = 0`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `VX V x u0` THEN ASM_REWRITE_TAC[]);;
e (ASM_SIMP_TAC [Lepjbdj.LEPJBDJ_0]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) i <=> i IN A`]);;
e (SET_TAC[]);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `VX V x u0` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) i <=> i IN A`]);;
e (SET_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) i <=> i IN A`]);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> (u0 IN A ==> u0 IN B)`));;
e (MATCH_MP_TAC Rogers.SET_OF_LIST_TRUNCATE_SIMPLEX_SUBSET);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1`);;
e (MATCH_MP_TAC BARV_LENGTH_LEMMA);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_ARITH_TAC);;
e (MATCH_MP_TAC (ARITH_RULE `(?b. a:num <= b /\ b <= c) ==> a <= c`));;
e (EXISTS_TAC `CARD (IMAGE (f:(real^3)list#num->real^3->bool) S)`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC FINITE_IMAGE);;
e (ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC (ARITH_RULE `(?b. a:num <= b /\ b <= c) ==> a <= c`));;
e (EXISTS_TAC `CARD (S:(real^3)list#num->bool)`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC CARD_IMAGE_LE);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH
  `S = {ul,i |ul IN {ul | barV V 3 ul /\ u0 IN set_of_list ul}/\ i IN 0..4}`);;
e (EXPAND_TAC "S" THEN SET_TAC[]);;
e (REWRITE_WITH 
  `CARD {ul,i |ul IN {ul | barV V 3 ul /\ u0 IN set_of_list ul}/\ i IN 0..4} =
   CARD {ul | barV V 3 ul /\ u0 IN set_of_list ul} * CARD (0..4)`);;
e (MATCH_MP_TAC CARD_PRODUCT);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (MATCH_MP_TAC FINITE_SUBSET);;

e (ABBREV_TAC `T1 = V INTER ball (u0:real^3, &4)`);;
e (NEW_GOAL `FINITE (T1:real^3->bool)`);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;

e (EXISTS_TAC `{ul | ?v0 v1 v2 v3. 
                     v0 IN T1 /\ v1 IN T1 /\ v2 IN T1 /\ v3 IN T1 /\
                     ul = [v0;v1;v2;v3:real^3]}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Ajripqn.FINITE_SET_LIST_LEMMA THEN ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?v0 v1 v2 v3. x = [v0:real^3; v1; v2; v3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC THEN EXISTS_TAC `v0:real^3` THEN EXISTS_TAC
  `v1:real^3` THEN EXISTS_TAC `v2:real^3` THEN EXISTS_TAC `v3:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `set_of_list (x:(real^3)list) SUBSET T1`);;
e (EXPAND_TAC "T1" THEN REWRITE_TAC[SUBSET_INTER]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Packing3.BARV_SUBSET);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Qzyzmjc.BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:(real^3->bool)`);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `set_of_list (x:(real^3)list) u0` THEN ASM_REWRITE_TAC[IN]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;

e (REWRITE_TAC[CARD_NUMSEG; ARITH_RULE `(4 + 1) - 0 = 5`]);;
e (REWRITE_TAC[ARITH_RULE `a * 5 <= 1220703125 <=> a <= 244140625`]);;

e (ABBREV_TAC `T1 = V INTER ball (u0:real^3, &4)`);;
e (NEW_GOAL `FINITE (T1:real^3->bool)`);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `{ul | barV V 3 ul /\ u0 IN set_of_list ul} SUBSET 
             {ul | ?v0 v1 v2 v3. 
                     v0 IN T1 /\ v1 IN T1 /\ v2 IN T1 /\ v3 IN T1 /\
                     ul = [v0;v1;v2;v3]}`);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?v0 v1 v2 v3. x = [v0:real^3; v1; v2; v3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC THEN EXISTS_TAC `v0:real^3` THEN EXISTS_TAC
  `v1:real^3` THEN EXISTS_TAC `v2:real^3` THEN EXISTS_TAC `v3:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `set_of_list (x:(real^3)list) SUBSET T1`);;
e (EXPAND_TAC "T1" THEN REWRITE_TAC[SUBSET_INTER]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Packing3.BARV_SUBSET);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Qzyzmjc.BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:(real^3->bool)`);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `set_of_list (x:(real^3)list) u0` THEN ASM_REWRITE_TAC[IN]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;

e (MATCH_MP_TAC (ARITH_RULE `(?x. a <= x /\ x <= b:num) ==> a <= b`));;
e (EXISTS_TAC `CARD {ul | ?v0 v1 v2 v3.
                v0 IN T1 /\
                v1 IN T1 /\
                v2 IN T1 /\
                v3 IN T1 /\
                ul = [v0:real^3; v1; v2; v3]}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (ASM_REWRITE_TAC[] THEN MATCH_MP_TAC FINITE_SET_LIST_LEMMA);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `CARD
        {y | ?u0 u1 u2 u3.
               u0 IN T1 /\
               u1 IN T1 /\
               u2 IN T1 /\
               u3 IN T1 /\
               y = [u0:real^3; u1; u2; u3:real^3]} = 
               CARD T1 * CARD T1 * CARD T1 * CARD T1`);;
e (ASM_SIMP_TAC [CARD_LIST_4_klemma]);;
e (NEW_GOAL `CARD (T1:real^3->bool) <= 125`);;
e (EXPAND_TAC "T1");;
e (MATCH_MP_TAC BOUNDS_V4_klemma);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `CARD (T1:real^3->bool) * CARD T1 <= 125 * 125`);;
e (MATCH_MP_TAC LE_MULT2);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `CARD (T1:real^3->bool) * CARD T1 * CARD T1 <= 125 * 125 * 125`);;
e (MATCH_MP_TAC LE_MULT2);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `CARD (T1:real^3->bool) * CARD T1 * CARD T1 * CARD T1 <= 
             125 * 125 * 125 * 125`);;
e (MATCH_MP_TAC LE_MULT2);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ARITH_TAC);;

let CARD_MCELL_CONTAINS_POINT_klemma = top_thm();;




g `!u0 V r. &0 <= &r /\ packing V ==> 
             CARD (V INTER ball (u0, &r)) <= (r + 1) * (r + 1) * (r + 1)`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `sum (V INTER ball (u0,&r)) (\x. vol (ball (x:real^3, &1)))
           = & (CARD (V INTER ball (u0,&r))) * (&4 / &3 * pi)`);;
e (NEW_GOAL `&0 <= &1`);;
e (REAL_ARITH_TAC);;
e (REWRITE_WITH `(\x. vol (ball (x,&1))) = (\x. &4 / &3 * pi)`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (ASM_SIMP_TAC[VOLUME_BALL] THEN REAL_ARITH_TAC);;
e (MATCH_MP_TAC SUM_CONST);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA]);;
e (UP_ASM_TAC);;
e (ABBREV_TAC `f = (\x:real^3. ball (x, &1))`);;
e (REWRITE_WITH `(\x. vol (ball (x:real^3,&1))) = (\x. vol (f x))`);;
e (REWRITE_TAC[FUN_EQ_THM] THEN STRIP_TAC);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[]);;
e (REWRITE_WITH `sum (V INTER ball (u0:real^3,&r)) (\x. vol (f x)) = 
                 vol (UNIONS (IMAGE f (V INTER ball (u0,&r))))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC MEASURE_DISJOINT_UNIONS_IMAGE);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[] THEN REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA]);;
e (REWRITE_TAC[MEASURABLE_BALL]);;
e (REWRITE_TAC[DISJOINT; SET_RULE `a = {} <=> ~(?s. s IN a)`]);;
e (REWRITE_TAC[IN_INTER; IN_BALL]);;
e (STRIP_TAC);;
e (UNDISCH_TAC `packing V` THEN REWRITE_TAC[packing]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&2 <= dist (x,y:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `dist (x,y) <= dist (x,s) + dist (y,s:real^3)`);;
e (NORM_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (STRIP_TAC);;
e (NEW_GOAL `vol (UNIONS (IMAGE f (V INTER ball (u0:real^3,&r))))
             <= vol (ball (u0, &r + &1))`);;
e (MATCH_MP_TAC MEASURE_SUBSET);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[IMAGE; MEASURABLE_BALL]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC MEASURABLE_UNIONS);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA]);;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[MEASURABLE_BALL]);;
e (REWRITE_TAC[UNIONS_SUBSET; IN_INTER; IN_BALL; IN_ELIM_THM; SUBSET]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (u0, x') <= dist (u0,x:real^3) + dist (x, x')`);;
e (NORM_ARITH_TAC);;
e (NEW_GOAL `dist (x,x':real^3) < &1`);;
e (REWRITE_TAC[GSYM IN_BALL] THEN ASM_MESON_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `&(CARD (V INTER ball (u0,&r))) * &4 / &3 * pi <= 
             vol (ball (u0,&r + &1))`);;
e (ASM_REAL_ARITH_TAC);;

e (UP_ASM_TAC THEN REWRITE_WITH 
  `vol (ball (u0, &r + &1)) = &4 / &3 * pi * (&r + &1) pow 3`);;
e (NEW_GOAL `&0 <= &r + &1`);;
e (ASM_REAL_ARITH_TAC);;
e (SIMP_TAC[VOLUME_BALL; ASSUME `&0 <= &r + &1`]);;

e (REWRITE_TAC[REAL_ARITH `a * &4 / &3 * pi <= &4 / &3 * pi * b <=> 
                           &0 <= pi * (b - a)`]);;
e (STRIP_TAC);;
e (NEW_GOAL `&0 <= (&r + &1) pow 3 - &(CARD (V INTER ball (u0:real^3,&r)))`);;
e (MATCH_MP_TAC Real_ext.REAL_PROP_NN_LCANCEL);;
e (EXISTS_TAC `pi`);;
e (ASM_REWRITE_TAC[PI_POS]);;
e (REWRITE_TAC[GSYM REAL_OF_NUM_LE]);;
e (REWRITE_TAC[GSYM REAL_OF_NUM_MUL; GSYM REAL_OF_NUM_ADD]);;
e (ASM_REAL_ARITH_TAC);;

let BOUNDS_V4_klemma = top_thm();;

