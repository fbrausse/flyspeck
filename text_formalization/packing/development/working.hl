(* checkpointed *)
needs "/home/ky/flyspeck/working/marchal_cells_3.hl";; 
#use "/home/ky/flyspeck/working/GRUTOTI.hl";;
(* checkpointed *)

let KY_CHEAT_TAC = MP_TAC (mk_fthm([],`F`)) THEN MESON_TAC[];;

(* Continue GRUTOTI *)

e (NEW_GOAL `C = conic_cap (u0:real^3) u1 r c`);;
e (EXPAND_TAC "C" THEN REWRITE_TAC[conic_cap; NORMBALL_BALL]);;

e (NEW_GOAL `!X. mcell_set V X /\ ~NULLSET (X INTER C) ==>
   vol (X INTER C) = vol (C) * (dihX V X (u0,u1)) / (&2 * pi)`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?k vl.
                   2 <= k /\
                   barV V 3 vl /\
                   X = mcell k V vl /\
                   truncate_simplex 1 vl = [u0; u1]`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REPEAT STRIP_TAC);;

(* ========================================================================= *)
(* ========================================================================= *)
(* ========================================================================= *)

e (ASM_CASES_TAC `k = 2`);;
e (ABBREV_TAC `m = mxi V vl`);;
e (ABBREV_TAC `s3 = omega_list_n V vl 3`);;
e (ABBREV_TAC `L = aff_ge{u0, u1} {m, s3:real^3}`);;

e (REWRITE_WITH `vol (X INTER C) = vol (L INTER C)`);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell2]);;
e (LET_TAC);;
e (COND_CASES_TAC);;
e (NEW_GOAL `?v0 v1 v2 v3. vl = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (REWRITE_WITH `HD vl = u0 /\ HD (TL vl) = u1:real^3`);;
e (REWRITE_WITH `(HD vl):real^3 = HD (truncate_simplex 1 vl)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH] THEN ARITH_TAC);;
e (ASM_REWRITE_TAC[HD; TL]);;
e (NEW_GOAL `HD (TL(truncate_simplex 1 vl)) = u1:real^3`);;
e (ASM_REWRITE_TAC[HD; TL]);;
e (NEW_GOAL `HD (TL(truncate_simplex 1 vl)) = v1:real^3`);;
e (REWRITE_TAC[ASSUME `vl = [v0; v1; v2; v3:real^3]`;  
   TRUNCATE_SIMPLEX_EXPLICIT_1; HD; TL]);;
e (ASM_MESON_TAC[]);;

e (EXPAND_TAC "L");;
e (REWRITE_TAC [SET_RULE `(A INTER B INTER C) INTER D = C INTER D 
                       <=> (!x. x IN C INTER D ==> x IN A /\ x IN B)`]);;

e (REPEAT GEN_TAC THEN STRIP_TAC);;
e (NEW_GOAL `x:real^3 IN C`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN EXPAND_TAC "C" THEN STRIP_TAC);;
e (NEW_GOAL `x:real^3 IN rcone_gt u0 u1 a'`);;
e (ASM_SET_TAC[]);;
e (STRIP_TAC);;
e (UP_ASM_TAC THEN SET_TAC[RCONE_GT_SUBSET_RCONE_GE]);;
e (KY_CHEAT_TAC);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~NULLSET (X INTER C)`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell2; SET_RULE `{} INTER s = {}`]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `~coplanar {u0, u1:real^3, m, s3}`);;
e (ONCE_REWRITE_TAC[GSYM COPLANAR_AFFINE_HULL_COPLANAR]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1, m, s3:real^3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC COPLANAR_IMP_NEGLIGIBLE);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell2]);;
e (COND_CASES_TAC);;
e (LET_TAC);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> M INTER N INTER A SUBSET B`));;

e (NEW_GOAL `?v0 v1 v2 v3. vl = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `HD vl = u0 /\ HD (TL vl) = u1:real^3`);;
e (REWRITE_WITH `(HD vl):real^3 = HD (truncate_simplex 1 vl)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (ASM_REWRITE_TAC[LENGTH] THEN ARITH_TAC);;
e (ASM_REWRITE_TAC[HD; TL]);;
e (NEW_GOAL `HD (TL(truncate_simplex 1 vl)) = u1:real^3`);;
e (ASM_REWRITE_TAC[HD; TL]);;
e (NEW_GOAL `HD (TL(truncate_simplex 1 vl)) = v1:real^3`);;
e (REWRITE_TAC[ASSUME `vl = [v0; v1; v2; v3:real^3]`;  
   TRUNCATE_SIMPLEX_EXPLICIT_1; HD; TL]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `{u0, u1, m, s3} = {u0, u1} UNION {m:real^3, s3}`);;
e (SET_TAC[]);;
e (REWRITE_TAC[AFF_GE_SUBSET_AFFINE_HULL]);;
e (SET_TAC[]);;
e (UNDISCH_TAC `~NULLSET (X INTER C)`);;
e (REWRITE_TAC[] THEN MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `X:real^3->bool`);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;

(* ========================================================================= *)

e (ASM_CASES_TAC `azim u0 u1 m (s3:real^3) < pi`);;
e (REWRITE_WITH `vol (L INTER C) = vol (C INTER wedge u0 u1 m s3)`);;
e (ASM_SIMP_TAC[WEDGE_LUNE]);;
e (REWRITE_WITH `L INTER conic_cap (u0:real^3) u1 r c = 
                 conic_cap u0 u1 r c INTER L`);;
e (SET_TAC[]);;
e (MATCH_MP_TAC MEASURE_NEGLIGIBLE_SYMDIFF);;
e (REWRITE_WITH `conic_cap (u0:real^3) u1 r c INTER 
   aff_gt {u0, u1} {m, s3} DIFF conic_cap u0 u1 r c INTER L = {}`);;
e (EXPAND_TAC "L");;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> C INTER A DIFF C INTER B = {}`));;
e (REWRITE_TAC[AFF_GT_SUBSET_AFF_GE]);;
e (REWRITE_TAC[SET_RULE `A UNION {} = A`]);;
e (EXPAND_TAC "L");;

e (REWRITE_WITH `aff_ge {u0, u1:real^3} {m, s3} =
                 aff_gt {u0, u1} {m, s3} UNION 
   UNIONS {aff_ge {u0, u1} ({m, s3} DELETE a) | a | a IN  {m, s3}}`);;
e (MATCH_MP_TAC AFF_GE_AFF_GT_DECOMP);;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (REWRITE_TAC[DISJOINT]);;

e (ASM_CASES_TAC `m IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, m, s3:real^3}`);;
e (REWRITE_WITH `{u0, u1, m, s3} = {u0, u1, s3:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `s3 IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, m, s3:real^3}`);;
e (REWRITE_WITH `{u0, u1, m, s3} = {u0, u1, m:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;

e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC 
  `UNIONS {aff_ge {u0, u1:real^3} ({m, s3} DELETE a) | a | a IN {m, s3}}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC 
  `aff_ge {u0, u1:real^3} {m} UNION aff_ge {u0, u1:real^3} {s3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_UNION);;
e (STRIP_TAC);;

e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1:real^3, m}`);;
e (STRIP_TAC);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (REWRITE_WITH `{u0,u1,m:real^3} = {u0,u1} UNION {m}`);;
e (SET_TAC[]);;
e (REWRITE_TAC[AFF_GE_SUBSET_AFFINE_HULL]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1:real^3, s3}`);;
e (STRIP_TAC);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (REWRITE_WITH `{u0,u1,s3:real^3} = {u0,u1} UNION {s3}`);;
e (SET_TAC[]);;
e (REWRITE_TAC[AFF_GE_SUBSET_AFFINE_HULL]);;
e (REWRITE_TAC[SET_RULE 
  `UNIONS {aff_ge {u0, u1} ({m, s3} DELETE a) | a | a IN {m, s3}} = 
         aff_ge {u0, u1} ({m, s3} DELETE s3) 
   UNION aff_ge {u0, u1} ({m, s3} DELETE m)`]);;
e (MATCH_MP_TAC (SET_RULE 
  `A SUBSET B /\ C SUBSET D ==> A UNION C SUBSET B UNION D`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC AFF_GE_MONO_RIGHT);;
e (STRIP_TAC);;
e (SET_TAC[]);;

e (REWRITE_TAC[DISJOINT]);;
e (ASM_CASES_TAC `m IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, m, s3:real^3}`);;
e (REWRITE_WITH `{u0, u1, m, s3} = {u0, u1, s3:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;

e (MATCH_MP_TAC AFF_GE_MONO_RIGHT);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[DISJOINT]);;
e (ASM_CASES_TAC `s3 IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, m, s3:real^3}`);;
e (REWRITE_WITH `{u0, u1, m, s3} = {u0, u1, m:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;

e (SET_TAC[]);;

e (REWRITE_TAC[ASSUME `C = conic_cap (u0:real^3) u1 r c`]);;
e (REWRITE_WITH `vol (conic_cap u0 u1 r c INTER wedge u0 u1 m s3) =
             (if &1 < c \/ r < &0
              then &0
              else azim u0 u1 m s3 / &3 * (&1 - max c (-- &1)) * r pow 3)`);;
e (NEW_GOAL `~collinear {u0:real^3, u1, m} /\ ~collinear {u0, u1, s3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `s3:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `m:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_SIMP_TAC[VOLUME_CONIC_CAP_WEDGE]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (REWRITE_WITH `azim (u0:real^3) u1 m s3 = dihV u0 u1 m s3`);;
e (MATCH_MP_TAC AZIM_DIHV_SAME);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `s3:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `m:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`]);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[dihX]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~NULLSET (X INTER C)`);;
e (REWRITE_TAC[]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `X:real^3->bool`);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (LET_TAC);;

e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u0; u1] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(2, vl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (REWRITE_TAC[IN; ARITH_RULE `2 <= 4`] THEN ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `initial_sublist [u0;u1:real^3] vl /\ LENGTH [u0;u1] = 1 + 1`);;
e (REWRITE_TAC[GSYM Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `?v0 v1 v2 v3. vl = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[LENGTH] THEN ARITH_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN] THEN REPEAT STRIP_TAC);;

e (NEW_GOAL `k' = 2 /\ mcell k' V ul = mcell 2 V vl`);;
e (MATCH_MP_TAC Ajripqn.AJRIPQN);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `mcell k' V ul INTER mcell 2 V vl = X`);;
e (ASM_SET_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UNDISCH_TAC `k' <= 4` THEN REWRITE_TAC[ARITH_RULE 
   `a <= 4 <=> a = 0 \/a = 1 \/ a = 2 \/ a = 3 \/ a = 4`] THEN SET_TAC[]);;
e (SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu2]);;
e (KY_CHEAT_TAC);;  (* Use the well-defined of dihu2 ~==> difficult *)
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

(* ========================================================================= *)

e (ASM_CASES_TAC `azim u0 u1 s3 (m:real^3) < pi`);;
e (UNDISCH_TAC `~coplanar {u0, u1, m, s3:real^3}`);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`]);;
e (STRIP_TAC);;
e (REWRITE_WITH `vol (L INTER C) = vol (C INTER wedge u0 u1 s3 m)`);;
e (ASM_SIMP_TAC[WEDGE_LUNE]);;
e (REWRITE_WITH `L INTER conic_cap (u0:real^3) u1 r c = 
                 conic_cap u0 u1 r c INTER L`);;
e (SET_TAC[]);;
e (MATCH_MP_TAC MEASURE_NEGLIGIBLE_SYMDIFF);;

e (REWRITE_WITH `conic_cap (u0:real^3) u1 r c INTER 
   aff_gt {u0, u1} {s3, m} DIFF conic_cap u0 u1 r c INTER L = {}`);;
e (EXPAND_TAC "L");;
e (REWRITE_TAC[SET_RULE `{a,b} = {b, a}`]);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> C INTER A DIFF C INTER B = {}`));;
e (REWRITE_TAC[AFF_GT_SUBSET_AFF_GE]);;
e (REWRITE_TAC[SET_RULE `A UNION {} = A`]);;
e (EXPAND_TAC "L");;
e (REWRITE_TAC[SET_RULE `{a,b} = {b, a}`]);;

e (REWRITE_WITH `aff_ge {u0, u1:real^3} {m, s3} =
                 aff_gt {u0, u1} {m, s3} UNION 
   UNIONS {aff_ge {u0, u1} ({m, s3} DELETE a) | a | a IN  {m, s3}}`);;
e (MATCH_MP_TAC AFF_GE_AFF_GT_DECOMP);;
e (REWRITE_TAC[Geomdetail.FINITE6]);;
e (REWRITE_TAC[DISJOINT]);;

e (ASM_CASES_TAC `m IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, s3, m:real^3}`);;
e (REWRITE_WITH `{u0, u1, s3, m} = {u0, u1, s3:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `s3 IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, s3, m:real^3}`);;
e (REWRITE_WITH `{u0, u1, s3, m} = {u0, u1, m:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;

e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC 
  `UNIONS {aff_ge {u0, u1:real^3} ({m, s3} DELETE a) | a | a IN {m, s3}}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC 
  `aff_ge {u0, u1:real^3} {m} UNION aff_ge {u0, u1:real^3} {s3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NEGLIGIBLE_UNION);;
e (STRIP_TAC);;

e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1:real^3, m}`);;
e (STRIP_TAC);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (REWRITE_WITH `{u0,u1,m:real^3} = {u0,u1} UNION {m}`);;
e (SET_TAC[]);;
e (REWRITE_TAC[AFF_GE_SUBSET_AFFINE_HULL]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1:real^3, s3}`);;
e (STRIP_TAC);;
e (REWRITE_TAC[NEGLIGIBLE_AFFINE_HULL_3]);;
e (REWRITE_WITH `{u0,u1,s3:real^3} = {u0,u1} UNION {s3}`);;
e (SET_TAC[]);;
e (REWRITE_TAC[AFF_GE_SUBSET_AFFINE_HULL]);;
e (REWRITE_TAC[SET_RULE 
  `UNIONS {aff_ge {u0, u1} ({m, s3} DELETE a) | a | a IN {m, s3}} = 
         aff_ge {u0, u1} ({m, s3} DELETE s3) 
   UNION aff_ge {u0, u1} ({m, s3} DELETE m)`]);;
e (MATCH_MP_TAC (SET_RULE 
  `A SUBSET B /\ C SUBSET D ==> A UNION C SUBSET B UNION D`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC AFF_GE_MONO_RIGHT);;
e (STRIP_TAC);;
e (SET_TAC[]);;

e (REWRITE_TAC[DISJOINT]);;
e (ASM_CASES_TAC `m IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, s3, m:real^3}`);;
e (REWRITE_WITH `{u0, u1, s3, m} = {u0, u1, s3:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;

e (MATCH_MP_TAC AFF_GE_MONO_RIGHT);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[DISJOINT]);;
e (ASM_CASES_TAC `s3 IN {u0, u1:real^3}`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~coplanar {u0, u1, s3, m:real^3}`);;
e (REWRITE_WITH `{u0, u1, s3, m} = {u0, u1, m:real^3}`);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[COPLANAR_3]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;

e (SET_TAC[]);;

e (REWRITE_TAC[ASSUME `C = conic_cap (u0:real^3) u1 r c`]);;
e (REWRITE_WITH `vol (conic_cap u0 u1 r c INTER wedge u0 u1 s3 m) =
             (if &1 < c \/ r < &0
              then &0
              else azim u0 u1 s3 m / &3 * (&1 - max c (-- &1)) * r pow 3)`);;
e (NEW_GOAL `~collinear {u0:real^3, u1, m} /\ ~collinear {u0, u1, s3}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `s3:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`]);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `m:real^3`);;
e (ASM_REWRITE_TAC[]);;

e (ASM_SIMP_TAC[VOLUME_CONIC_CAP_WEDGE]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (REWRITE_WITH `azim (u0:real^3) u1 s3 m = dihV u0 u1 s3 m`);;
e (MATCH_MP_TAC AZIM_DIHV_SAME);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;

e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `m:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC NOT_COPLANAR_NOT_COLLINEAR);;
e (EXISTS_TAC `s3:real^3`);;
e (ONCE_REWRITE_TAC[SET_RULE `{a,b,c,d} = {a,b,d,c}`]);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[dihX]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~NULLSET (X INTER C)`);;
e (REWRITE_TAC[]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `X:real^3->bool`);;
e (ASM_REWRITE_TAC[] THEN SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (LET_TAC);;

(* Co the copy lai hoan toan doan ma o tren *)
(* Chu y can chung minh them dihV a b c d = dihV a b d c *)


e (UP_ASM_TAC THEN REWRITE_TAC[cell_params_d]);;
e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
           ul IN barV V 3 /\
           X = mcell k V ul /\
           initial_sublist [u0; u1] ul)`);;
e (STRIP_TAC);;
e (NEW_GOAL `(P:num#(real^3)list->bool) ((@) P)`);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(2, vl:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (REWRITE_TAC[IN; ARITH_RULE `2 <= 4`] THEN ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `initial_sublist [u0;u1:real^3] vl /\ LENGTH [u0;u1] = 1 + 1`);;
e (REWRITE_TAC[GSYM Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `?v0 v1 v2 v3. vl = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC Marchal_cells.BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[LENGTH] THEN ARITH_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "P" THEN REWRITE_TAC[IN] THEN REPEAT STRIP_TAC);;

e (NEW_GOAL `k' = 2 /\ mcell k' V ul = mcell 2 V vl`);;
e (MATCH_MP_TAC Ajripqn.AJRIPQN);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `mcell k' V ul INTER mcell 2 V vl = X`);;
e (ASM_SET_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UNDISCH_TAC `k' <= 4` THEN REWRITE_TAC[ARITH_RULE 
   `a <= 4 <=> a = 0 \/a = 1 \/ a = 2 \/ a = 3 \/ a = 4`] THEN SET_TAC[]);;
e (SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (COND_CASES_TAC);;
e (REWRITE_TAC[dihu2]);;
e (KY_CHEAT_TAC);;  (* Use the well-defined of dihu2 ~==> difficult *)
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;




(* Ket thuc truong hop k = 2 *)
e (NEW_GOAL `F`);;
e (KY_CHEAT_TAC);; 
 (* easy, using theorem AZIM_COMPL to imply that azim u0 u1 m s3 = pi,
    next, apply AZIM_EQ_0_PI_IMP_COPLANAR to imply that coplanar {u0, u1, m, s3}
    This is a contradiction *)
e (ASM_MESON_TAC[]);;

(* ========================================================================= *)
(* ========================================================================= *)
(* ========================================================================= *)
(* ========================================================================= *)


(* ========================================================================= *)


search 
p();;
b();;
dihu2;;
dihX;;


mcell2;;
mcell3;;
mcell4;;

dihV;;

arcV;;

aff_ge [``]
p();;
b();;
mxi;;

search [`mxi`];;
Packing3.CONVEX_HULL_EQ_EQ_SET_EQ;;

search [`mcell i V ul`];;
b();;
Qzksykg.QZKSYKG2;;
p();;

search [`rogers V ul = rogers V vl`];;
Njiutiu.NJIUTIU;;


search [`omega_list_n V ul i = t `];;

dihu2;;
dihX;;
p();;

search [`rogers V ul = rogers V vl`];;

e (KY_CHEAT_TAC);;
e (KY_CHEAT_TAC);;

p();;
dihu2;;
dihu3;;
dihu4;;

mcell3;;
mcell4;;


cell_params_d;;
SELECT_EXISTS;;
p();;

search [`?y. P y `; `(@x. P x)`];;

VOLUME_CONIC_CAP;;


p();;
p();;

seans_fn();;
search [` vol (conic_cap u0 u1 r c)`];;

b();;
AZIM_DIVH;;
p();;

 ``


b();;



dihu2;;
AZIM_EQ_0_PI_IMP_COPLANAR;;
VOLUME_CONIC_CAP_WEDGE;;
AZIM_DIVH;;
AZIM_DIHV_SAME;;
AZIM_DIHV_EQ_PI;;
AZIM_EQ_PI_SYM;;
Trigonometry.YVREJIS;;
VOLUME_CONIC_CAP_COMPL;;
VOLUME_CONIC_CAP_WEDGE_WEAK;;
AZIM_COMPL;;
vol_conic_cap_wedge;;

sol;;
dihV;;
conic_cap;;
p();;

b();;


















let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;

open Upfzbzm_support_lemmas;;
#use "/home/vu/flyspeck/working/marchal_cells_3;;
#use "/home/vu/flyspeck/working/KIZHLTL;;
#use "/home/vu/flyspeck/working/UPFZBZM_2011;;

(* ========================================================================== *)

g KIZHLTL3_new_concl;;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `saturated V /\ packing V`);;

(* ------------------------------------------------------------------------- *)
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (KY_CHEAT_TAC);;

edgeX;;
lmfun;;

(* ------------------------------------------------------------------------- *)
e (EXISTS_TAC `&0` THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

let KIZHLTL3 = top_thm();;






(*      The following lemma is to be proved by computer calculations         *)

let TSKAJXY_concl = 
`!V X. saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X  = {} 
   ==> gammaX V X lmfun >= &0`;;

let KY_CHEAT_TAC = MP_TAC (mk_thm([],`F`)) THEN SET_TAC[];;
let TSKAJXY = prove (TSKAJXY_concl, KY_CHEAT_TAC);;

(* ========================================================================== *)
(*               Continue back up of complementary lemmas                     *)
(* ========================================================================== *)

let SUM_GAMMAX_LMFUN_ESTIMATE_concl = 
  `!V. ?c. !r. saturated V /\ packing V /\ &1 <= r /\ 
               cell_cluster_estimate V /\ marchal_inequality /\
               lmfun_inequality V ==> 
    c * r pow 2 <=  sum {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X} 
    (\X. gammaX V X lmfun)`;;

(* ----------------------  We prove it below ------------------------------- *)

g SUM_GAMMAX_LMFUN_ESTIMATE_concl;;
e (GEN_TAC);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `!X. mcell_set V X /\ critical_edgeX V X  = {} ==> 
                 gammaX V X lmfun >= &0`);;
e (ASM_MESON_TAC[TSKAJXY]);;

(* ------------------------------------------------------------------------ *)

e (ABBREV_TAC `B = {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X}`);;
e (ABBREV_TAC `B0 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         critical_edgeX V X = {}}`);;
e (ABBREV_TAC `B1 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         ~(critical_edgeX V X = {})}`);;
e (REWRITE_WITH `B = B0 UNION B1:(real^3->bool)->bool`);;
e (EXPAND_TAC "B" THEN EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (REWRITE_WITH `sum (B0 UNION B1) (\X. gammaX V X lmfun) = 
   sum B0 (\X. gammaX V X lmfun) + sum B1 (\X. gammaX V X lmfun)`);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (EXPAND_TAC "B1");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= b /\ a <= c ==> a <= b + c`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_POS_LE);;
e (STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (REWRITE_TAC[BETA_THM; REAL_ARITH `&0 <= a <=> a >= &0`]);;
e (EXPAND_TAC "B0" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;


e (REWRITE_WITH 
  `sum B1 (\X. gammaX V X lmfun) = 
   sum B1 (\X. (gammaX V X lmfun) * 
                sum (critical_edgeX V X) (\e. critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[critical_weight]);;
e (REWRITE_WITH 
  `sum (critical_edgeX V x) (\e. &1 / &(CARD (critical_edgeX V x))) = 
   &(CARD (critical_edgeX V x)) * (&1 / &(CARD (critical_edgeX V x)))`);;
e (MATCH_MP_TAC SUM_CONST);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (REWRITE_TAC[REAL_ARITH `a * &1 / a = a / a`]);;
e (REWRITE_WITH `&(CARD (critical_edgeX V x)) / &(CARD (critical_edgeX V x)) = &1`);;
e (MATCH_MP_TAC REAL_DIV_REFL);;
e (REWRITE_TAC[REAL_OF_NUM_EQ]);;
e (REWRITE_WITH `CARD (critical_edgeX V x) = 0 <=> critical_edgeX V x = {}`);;
e (MATCH_MP_TAC CARD_EQ_0);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (ASM_REWRITE_TAC[]);;
e (REAL_ARITH_TAC);;


















