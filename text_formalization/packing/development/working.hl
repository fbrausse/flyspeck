
let SUM_PAIR_2_SET = prove
(`!f s:real^N->bool d.
 FINITE s
==> sum {(m,n) | m IN s /\ n IN s /\ ~(m = n) /\ dist(m,n) <= d}
 (\(m,n). f {m, n}) = &2 *
 sum {{m, n} | m IN s /\ n IN s /\ ~(m = n) /\ dist(m,n) <= d} f`,
REPEAT STRIP_TAC THEN MP_TAC(ISPECL
 [`\(m:real^N,n). {m,n}`;`(\(m,n). f {m,n}):real^N#real^N->real`;
  `{(m,n) | m IN s /\ n IN s /\ ~(m:real^N = n) /\ dist(m,n) <= d}`;
  `{{m,n} | m IN s /\ n IN s /\ ~(m:real^N = n) /\ dist(m,n) <= d}`]
  SUM_GROUP) THEN
  ANTS_TAC THENL
 [CONJ_TAC THENL
 [ONCE_REWRITE_TAC[SET_RULE
 `m IN s /\ n IN s /\ P m n <=>
  m IN s /\ n IN {n | n IN s /\ P m n}`] THEN
  MATCH_MP_TAC FINITE_PRODUCT_DEPENDENT THEN
  ASM_SIMP_TAC[FINITE_RESTRICT];
  REWRITE_TAC[SUBSET; FORALL_IN_IMAGE; FORALL_IN_GSPEC] THEN SET_TAC[]];
  DISCH_THEN(SUBST1_TAC o SYM) THEN REWRITE_TAC[GSYM SUM_LMUL] THEN
  MATCH_MP_TAC SUM_EQ THEN REWRITE_TAC[FORALL_IN_GSPEC] THEN
  MAP_EVERY X_GEN_TAC [`m:real^N`; `n:real^N`] THEN STRIP_TAC THEN
  MATCH_MP_TAC EQ_TRANS THEN
  EXISTS_TAC `sum {(m:real^N,n), (n,m)} (\(m,n). f {m,n})` THEN
  CONJ_TAC THENL
  [AP_THM_TAC THEN AP_TERM_TAC THEN GEN_REWRITE_TAC I [EXTENSION] THEN
  REWRITE_TAC[FORALL_PAIR_THM] THEN
  REWRITE_TAC[IN_ELIM_THM; PAIR_EQ; IN_INSERT; NOT_IN_EMPTY;
  SET_RULE `{a,b} = {c,d} <=> a = c /\ b = d \/ a = d /\ b = c`] THEN
  ASM_MESON_TAC[DIST_SYM];
  SIMP_TAC[SUM_CLAUSES; FINITE_INSERT; FINITE_EMPTY] THEN
  ASM_REWRITE_TAC[IN_SING; NOT_IN_EMPTY; PAIR_EQ; REAL_ADD_RID] THEN
  REWRITE_TAC[INSERT_AC] THEN REAL_ARITH_TAC]]);;
(* ========================================================================= *)
#use "/home/vu/flyspeck/working/marchal_cells_3.hl";;
#use "/home/vu/flyspeck/working/KIZHLTL.hl";;
(* ========================================================================= *)
let KY_CHEAT_TAC = MP_TAC (mk_fthm([],`F`)) THEN MESON_TAC[];;
(* ========================================================================= *)
let SUM_GAMMAX_LMFUN_ESTIMATE_concl = 
  `!V. ?c. !r. saturated V /\ packing V /\ &1 <= r /\ 
               cell_cluster_estimate V /\ marchal_inequality /\
               lmfun_inequality V ==> 
    c * r pow 2 <=  sum {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X} 
    (\X. gammaX V X lmfun)`;;

let TSKAJXY_concl = 
`!V X. saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X  = {} 
   ==> gammaX V X lmfun >= &0`;;

let SUM_BETA_BUMP_LEMMA = prove_by_refinement (
 `!V X. saturated V /\ packing V /\ mcell_set V X ==> 
         sum {e | e IN critical_edgeX V X } (\e. beta_bump V e X) = &0`,
[KY_CHEAT_TAC]);;

(* ========================================================================= *)
(* Two axioms *)
let TSKAJXY = prove (TSKAJXY_concl, KY_CHEAT_TAC);;
let OXLZLEZ = prove (OXLZLEZ_concl, KY_CHEAT_TAC);;

(*      The above lemmas are to be proved by computer calculations           *)
(* ========================================================================= *)
(*               Continue back up of complementary lemmas                    *)
(* ========================================================================= *)

g SUM_GAMMAX_LMFUN_ESTIMATE_concl;;
e (GEN_TAC);;
e (ASM_CASES_TAC `saturated V /\ packing V`);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `!X. mcell_set V X /\ critical_edgeX V X  = {} ==> 
                 gammaX V X lmfun >= &0`);;
e (ASM_MESON_TAC[TSKAJXY]);;

(* ------------------------------------------------------------------------ *)

e (ABBREV_TAC `B = {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X}`);;
e (ABBREV_TAC `B0 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         critical_edgeX V X = {}}`);;
e (ABBREV_TAC `B1 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         ~(critical_edgeX V X = {})}`);;
e (NEW_GOAL `FINITE (B1:(real^3->bool)->bool)`);;
e (EXPAND_TAC "B1");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;

e (REWRITE_WITH `B = B0 UNION B1:(real^3->bool)->bool`);;
e (EXPAND_TAC "B" THEN EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (REWRITE_WITH `sum (B0 UNION B1) (\X. gammaX V X lmfun) = 
   sum B0 (\X. gammaX V X lmfun) + sum B1 (\X. gammaX V X lmfun)`);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= b /\ a <= c ==> a <= b + c`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_POS_LE);;
e (STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (REWRITE_TAC[BETA_THM; REAL_ARITH `&0 <= a <=> a >= &0`]);;
e (EXPAND_TAC "B0" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;

e (REWRITE_WITH 
  `sum B1 (\X. gammaX V X lmfun) = 
   sum B1 (\X. (gammaX V X lmfun) * 
                sum (critical_edgeX V X) (\e. critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[critical_weight]);;
e (REWRITE_WITH 
  `sum (critical_edgeX V x) (\e. &1 / &(CARD (critical_edgeX V x))) = 
   &(CARD (critical_edgeX V x)) * (&1 / &(CARD (critical_edgeX V x)))`);;
e (MATCH_MP_TAC SUM_CONST);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (REWRITE_TAC[REAL_ARITH `a * &1 / a = a / a`]);;
e (REWRITE_WITH `&(CARD (critical_edgeX V x)) / &(CARD (critical_edgeX V x)) = &1`);;
e (MATCH_MP_TAC REAL_DIV_REFL);;
e (REWRITE_TAC[REAL_OF_NUM_EQ]);;
e (REWRITE_WITH `CARD (critical_edgeX V x) = 0 <=> critical_edgeX V x = {}`);;
e (MATCH_MP_TAC CARD_EQ_0);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (ASM_REWRITE_TAC[]);;
e (REAL_ARITH_TAC);;

(* ------------------------------------------------------------------------- *)
(* Hint:      - See proofs of KIZHLTL1; KIZHLTL2 to adapt                    *)
(* ------------------------------------------------------------------------- *)

e (REWRITE_TAC[GSYM SUM_LMUL]);;

e (ABBREV_TAC `T1:real^3->bool = V INTER ball (vec 0, r)`);;
e (ABBREV_TAC `T2 = {{u0, u1:real^3} | u0 IN T1 /\ u1 IN T1 /\ ~(u0 = u1) /\   
                                       hl [u0; u1] <= hplus}`);;
e (NEW_GOAL `FINITE (T2:(real^3->bool)->bool)`);;
e (EXPAND_TAC "T2" THEN MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{{u0, u1:real^3} | u0 IN T1 /\ u1 IN T1}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_SET_PRODUCT_KY_LEMMA);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC Pack2.KIUMVTC);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;

e (REWRITE_WITH 
 `sum B1 (\X. sum (critical_edgeX V X) 
                   (\x. gammaX V X lmfun * critical_weight V X)) =
  sum B1 (\X. sum {y:real^3->bool| y IN T2 /\ critical_edgeX V X y} 
                   (\x. gammaX V X lmfun * critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (AP_THM_TAC THEN AP_TERM_TAC);;
e (REWRITE_TAC[SET_RULE `a = b <=> b SUBSET a /\ a SUBSET b`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SET_RULE `A SUBSET {y | T2 y /\ A y} <=> A SUBSET T2`]);;
e (EXPAND_TAC "T2" THEN REWRITE_TAC[SUBSET; critical_edgeX; IN; IN_ELIM_THM; edgeX]);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "T1" THEN REWRITE_TAC[IN_ELIM_THM]);;
e (EXISTS_TAC `u':real^3` THEN EXISTS_TAC `v':real^3`);;
e (REWRITE_TAC[ASSUME `~(u' = v':real^3)`]);;

e (REWRITE_TAC[ASSUME `x' = {u, v:real^3}`; MESON[IN] `V (x:real^3) <=> x IN V`;
               GSYM (ASSUME `{u, v} = {u', v':real^3}`); IN_INTER]);;

e (NEW_GOAL `VX V x = V INTER x`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (UNDISCH_TAC `mcell_set V x` THEN REWRITE_TAC[mcell_set; IN; IN_ELIM_THM]);;
e (STRIP_TAC);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (NEW_GOAL `VX V x = {}`);;
e (REWRITE_TAC[VX]);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `VX V x u'` THEN ASM_REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`]);;
e (SET_TAC[]);;

e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (REWRITE_WITH `hl [u'; v':real^3] = hl [u; v:real^3]`);;
e (ASM_REWRITE_TAC[HL; set_of_list]);;
e (ASM_REWRITE_TAC[]);;

e (ABBREV_TAC `f = (\X. (\x:real^3->bool. 
                            gammaX V X lmfun * critical_weight V X))`);;
e (REWRITE_WITH 
 `sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y}
                  (\x:real^3->bool. gammaX V X lmfun * critical_weight V X)) = 
  sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y}
                  (\x:real^3->bool. f X x))`);;
e (EXPAND_TAC "f" THEN REFL_TAC);;
e (REWRITE_WITH 
  `sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y} (\x. f X x)) = 
   sum T2 (\x. sum {X | X IN B1 /\ critical_edgeX V X x} (\X. f X x))`);;
e (ASM_SIMP_TAC[SUM_SUM_RESTRICT]);;

e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REWRITE_TAC[MESON[] `(A/\B/\C)/\D <=> A/\B/\C/\D`]);;





SUM_BETA_BUMP_LEMMA;;

cell_cluster_estimate;;
cell_cluster;;
cluster_gammaX;;

beta_bump;;
bump;;




e (REWRITE_WITH 
`sum T2 (\x. sum
               {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                   ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
        (\X. f X x)) = 
sum T2  (\x. sum {X | mcell_set V X /\
                     ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) - 
sum T2  (\x. sum {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
                      ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x))`);;
e (REWRITE_TAC[REAL_ARITH `a = b - c <=> b = a + c`]);;
e (REWRITE_WITH 
` sum T2
 (\x. sum
      {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) +
 sum T2
 (\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) = 
 sum T2 
 (\x. (\x. sum
      {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) x + 
(\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}
      (\X. f X x)) x)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC SUM_ADD);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SUM_EQ);;
e (REWRITE_TAC[BETA_THM] THEN REPEAT STRIP_TAC);;

e (REWRITE_WITH 
`sum
 {X | X SUBSET ball (vec 0,r) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x}
 (\X. f X x) +
 sum
 {X | ~(X SUBSET ball (vec 0,r)) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x}
 (\X. f X x) = 
 sum ({X | X SUBSET ball (vec 0,r) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x} UNION 
      {X | ~(X SUBSET ball (vec 0,r)) /\
      mcell_set V X /\
      ~(critical_edgeX V X = {}) /\
      critical_edgeX V X x}) 
 (\X. f X x)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;

e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `B1:(real^3->bool)->bool`);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN SET_TAC[]);;

e (UP_ASM_TAC THEN EXPAND_TAC "T2");;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r + &8) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[Marchal_cells_3.FINITE_MCELL_SET_LEMMA]);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `x SUBSET VX V x'`);;
e (UNDISCH_TAC `critical_edgeX V x' x` THEN REWRITE_TAC[critical_edgeX;edgeX]);;
e (REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[ASSUME `x = {u, v:real^3}`; ASSUME `{u, v:real^3} = {u', v'}`]);;
e (SET_TAC[ASSUME `VX V x' u'`; ASSUME `VX V x' v'`]);;
e (NEW_GOAL `VX V x' = V INTER x'`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (UNDISCH_TAC `mcell_set V x'` THEN REWRITE_TAC[mcell_set; IN_ELIM_THM; IN]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (NEW_GOAL `VX V x' = {}`);;
e (ASM_REWRITE_TAC[VX]);;
e (UNDISCH_TAC `x SUBSET VX V x'` THEN REWRITE_TAC[ASSUME `VX V x' = {}`]);;
e (REWRITE_TAC[ASSUME `x = {u0, u1:real^3}`] THEN SET_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) x <=> x IN A`; IN_BALL]);;
e (NEW_GOAL `dist (vec 0, x'') <= dist (vec 0, u0:real^3) + dist (u0, x'')`);;
e (NORM_ARITH_TAC);;
e (NEW_GOAL `dist (vec 0, u0:real^3) < r`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (UNDISCH_TAC `(T1:real^3->bool) u0` THEN EXPAND_TAC "T1");;
e (REWRITE_TAC[MESON[IN] `(A:real^3->bool) x <=> x IN A`] THEN SET_TAC[]);;
e (NEW_GOAL `dist (u0, x'':real^3) < &8`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (NEW_GOAL `x' SUBSET ball (u0:real^3,&8)`);;
e (UNDISCH_TAC `mcell_set V x'` THEN REWRITE_TAC[mcell_set; IN_ELIM_THM; IN]);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC MCELL_SUBSET_BALL8);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `x' = mcell i V ul`)]);;
e (UNDISCH_TAC `x SUBSET VX V x'` THEN UNDISCH_TAC `VX V x' = V INTER x'`);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (SUBGOAL_THEN `(x'':real^3) IN x'` MP_TAC);;
e (UNDISCH_TAC `(x':real^3->bool) x''` THEN SET_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;

e (REWRITE_WITH ` ({X | X SUBSET ball (vec 0,r) /\
       mcell_set V X /\
       ~(critical_edgeX V X = {}) /\
       critical_edgeX V X x} UNION
  {X | ~(X SUBSET ball (vec 0,r)) /\
       mcell_set V X /\
       ~(critical_edgeX V X = {}) /\
       critical_edgeX V X x}) = 
 {X | mcell_set V X /\ ~(critical_edgeX V X = {}) /\ critical_edgeX V X x}`);;
e (SET_TAC[]);;
e (REWRITE_WITH 
  `(\x. sum
      {X | mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x} (\X. f X x)) = 
    (\x. sum
      {X | mcell_set V X /\ critical_edgeX V X x} (\X. f X x))`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (STRIP_TAC);;
e (REWRITE_WITH 
`{X | mcell_set V X /\
      ~(!x. critical_edgeX V X x <=> {} x) /\ critical_edgeX V X x} = 
 {X | mcell_set V X /\ critical_edgeX V X x}`);;
e (REWRITE_TAC[SET_RULE `A = B <=> A SUBSET B /\ B SUBSET A`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:(real^3->bool)->bool) x <=> x IN A`]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  ` (\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           ~(critical_edgeX V X = {}) /\ critical_edgeX V X x} (\X. f X x)) = 
     (\x. sum
      {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
           critical_edgeX V X x} (\X. f X x))`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (STRIP_TAC);;
e (REWRITE_WITH 
`{X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\
      ~(!x. critical_edgeX V X x <=> {} x) /\ critical_edgeX V X x} = 
 {X | ~(X SUBSET ball (vec 0,r)) /\ mcell_set V X /\ critical_edgeX V X x}`);;
e (REWRITE_TAC[SET_RULE `A = B <=> A SUBSET B /\ B SUBSET A`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUBSET; IN; IN_ELIM_THM]);;
e (GEN_TAC THEN DISCH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REPEAT STRIP_TAC);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[MESON[IN] `(A:(real^3->bool)->bool) x <=> x IN A`]);;
e (SET_TAC[]);;

(* OK here *)

e (EXPAND_TAC "T2");;
e (EXPAND_TAC "T1");;

b();;




e (MATCH_MP_TAC (REAL_ARITH `&0 <= a /\ b + c <= &0 ==> c <= a - b`));;
e (STRIP_TAC);;
e (EXPAND_TAC "f");;
e (REWRITE_WITH 
 `sum T2
  (\x. sum {X | mcell_set V X /\ critical_edgeX V X x}
      (\X. gammaX V X lmfun * critical_weight V X)) = 
  sum T2 (\x. cluster_gammaX V x (cell_cluster V x))`);;
e (REWRITE_TAC[cell_cluster; IN; cluster_gammaX]);;


beta_bump;;
p();;


SUM_BETA_BUMP_THM;;

cluster_gammaX;;
b();;

cell_cluster_estimate;;

search [`f = g <=> (!x. f x = g x)`];;


VX;;

b();;


b();;
;;

search [`FINITE {X | X SUBSET ball (a,b) /\ mcell_set V X}`];;


e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN SET_TAC[]);;



b();;

seans_fn();;

search [`mcell`];;

search [`sum s1 f + sum s2 f`];;

seans_fn();;

SUM_ADD;;


b();;


search [`sum s f + sum s t`];;











e (EXPAND_TAC "T2");;
e (ABBREV_TAC 
  `g = (\x. sum {X | X IN B1 /\ critical_edgeX V X x} (\X. f X x))`);;
e (REWRITE_WITH 
   `sum {{u0:real^3, u1} | u0 IN T1 /\ u1 IN T1 /\ 
                          ~(u0 = u1) /\ hl [u0; u1] <= hplus} g =
    &1 / &2 * 
    sum {m,(n:real^3) | m IN T1 /\ n IN T1 /\ 
                       ~(m = n) /\ hl [m; n] <= hplus} (\(m,n). g {m, n})`);;
e (REWRITE_TAC[REAL_ARITH `a = &1 / &2 * b <=> b = &2 * a`]);;
e (REWRITE_TAC[HL_2; REAL_ARITH `inv (&2) * a <= b <=> a <= &2 * b`]);;
e (MATCH_MP_TAC SUM_PAIR_2_SET);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;

e (ABBREV_TAC `t = (\m:real^3. 
                       {n | n IN T1 /\ ~(m = n) /\ hl [m; n] <= hplus})`);;
e (REWRITE_WITH 
  `sum {m:real^3,n | m IN T1 /\ n IN T1 /\ ~(m = n) /\ hl [m; n] <= hplus}
   (\(m,n). g {m, n}) =  
   sum {m,n | m IN T1 /\ n IN t m} (\(m,n). g {m, n})`);;
e (EXPAND_TAC "t" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (ABBREV_TAC `h = (\m n:real^3. (g:(real^3->bool)->real) {m,n})`);;
e (REWRITE_WITH `sum {m,n:real^3 | m IN T1 /\ n IN t m} (\(m,n). g {m, n}) = 
                 sum {m,n | m IN T1 /\ n IN t m} (\(m,n). h m n)`);;
e (EXPAND_TAC "h");;
e (REWRITE_TAC[]);;

e (REWRITE_WITH 
   `sum {m:real^3,n:real^3 | m IN T1 /\ n IN t m} (\(m,n). h m n) = 
    sum T1 (\m. sum (t m) (h m))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC SUM_SUM_PRODUCT);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "t");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `T1:real^3->bool`);;
e (STRIP_TAC);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC FINITE_PACK_LEMMA);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;

e (EXPAND_TAC "h" THEN EXPAND_TAC "g" THEN EXPAND_TAC "B1");;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;




(* ========================================================================= *)





















g `?c. !V X e.
         saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X e
         ==> beta_bump V e X <= c`;;
e (EXISTS_TAC `&614400`);;
e (REWRITE_TAC[mcell_set_2; IN_ELIM_THM; IN; beta_bump]);;
e (REPEAT STRIP_TAC THEN LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params]);;

e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (STRIP_TAC);;
e (ABBREV_TAC `P = (\(k,ul'). k <= 4 /\ ul' IN barV V 3 /\ 
                              mcell i V ul = mcell k V ul')`);;
e (NEW_GOAL `(P:(num#(real^3)list->bool)) (k,ul')`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(i:num,ul:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (UP_ASM_TAC THEN EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM; IN] THEN STRIP_TAC);;

e (ABBREV_TAC `S = {e',e'',p,vl | 4 = k /\
                {e', e''} = critical_edgeX V X /\
                e' = e /\
                p permutes 0..3 /\
                left_action_list p ul' = vl /\
                {EL 0 vl, EL 1 vl} = e' /\
                {EL 2 vl, EL 3 vl} = e''}`);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ABBREV_TAC `K1 = {us:real^3->bool | us SUBSET set_of_list ul}`);;
e (NEW_GOAL `FINITE (K1:(real^3->bool)->bool)`);;
e (EXPAND_TAC "K1" THEN MATCH_MP_TAC FINITE_POWERSET);;
e (ASM_REWRITE_TAC[set_of_list; Geomdetail.FINITE6]);;

e (NEW_GOAL `critical_edgeX V X SUBSET K1`);;
e (EXPAND_TAC "K1" THEN 
   REWRITE_TAC[critical_edgeX; edgeX; SUBSET; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;

e (NEW_GOAL `(x:real^3->bool) SUBSET set_of_list ul`);;
e (REWRITE_TAC[ASSUME `x = {u, v:real^3}`; ASSUME `{u, v} = {u', v':real^3}`]);;
e (NEW_GOAL `VX V X = V INTER X`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (NEW_GOAL `VX V X = {}`);;
e (ASM_REWRITE_TAC[VX]);;
e (UNDISCH_TAC `VX V X u'` THEN 
   ASM_REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`] THEN SET_TAC[]);;
e (NEW_GOAL 
  `V INTER (X:real^3->bool) = set_of_list (truncate_simplex (i - 1) ul)`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_CASES_TAC `i = 0`);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `VX V X = {}`);;
e (REWRITE_TAC[ASSUME `VX V X = V INTER X`; ASSUME `X = mcell i V ul`; 
   ASSUME `i = 0`]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `VX V X u'` THEN REWRITE_TAC[ASSUME `VX V X = {}`; 
   MESON[IN] `{} x <=> x IN {}`] THEN SET_TAC[]);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;
e (REWRITE_TAC[GSYM (ASSUME `mcell i V ul = mcell k V ul'`); 
   GSYM (ASSUME `X = mcell i V ul`)]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY; ASSUME `X = {}:real^3->bool`]);;
e (NEW_GOAL `VX V X = {}`);;
e (REWRITE_TAC[VX; ASSUME `NULLSET X`]);;
e (UNDISCH_TAC `VX V X u'` THEN REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`; 
   ASSUME `VX V X = {}`] THEN SET_TAC[]);;
e (NEW_GOAL `set_of_list (truncate_simplex (i - 1) ul) SUBSET 
             set_of_list (ul:(real^3)list)`);;
e (MATCH_MP_TAC Rogers.SET_OF_LIST_TRUNCATE_SIMPLEX_SUBSET);;
e (ASM_REWRITE_TAC[LENGTH] THEN ASM_ARITH_TAC);;
e (ASM_SET_TAC[]);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL 
   `FINITE  
      (S:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->bool)`);;
e (EXPAND_TAC "S");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{e',e'',p,vl | {e', e''} = critical_edgeX V X /\
                               p permutes 0..3 /\
                               left_action_list p ul' = vl:(real^3)list}`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{e',e'',p,vl | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                               p permutes 0..3 /\
                               left_action_list p ul' = vl:(real^3)list}`);;
e (STRIP_TAC);;
e (ABBREV_TAC `S_temp = {e',e'',p | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                         p permutes 0..3}`);;
e (ABBREV_TAC 
  `f_temp = (\(e':real^3->bool,e'':real^3->bool,p). 
              e',e'',p, (left_action_list p (ul':(real^3)list)))`);;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `IMAGE  (f_temp:(real^3->bool)#(real^3->bool)#(num->num)->(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list) S_temp`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_IMAGE);;

e (REWRITE_WITH `S_temp = {e':real^3->bool,u | e' IN K1 /\ 
                           u IN {e'', p | e'' IN K1 /\p permutes 0..3}}`);;
e (EXPAND_TAC "S_temp");;
e (SET_TAC[]);;
e (ABBREV_TAC `K2 = {e'':real^3->bool, p | e'' IN K1 /\p permutes 0..3}`);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;
e (EXPAND_TAC "f_temp" THEN EXPAND_TAC "S_temp" THEN REWRITE_TAC[IMAGE]);;
e (REWRITE_TAC[IN; SUBSET; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool,e'':real^3->bool,p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `e':real^3->bool` THEN 
   EXISTS_TAC `e'':real^3->bool` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (SET_TAC[]);;


(* ------------------------------------------------------------------------ *)
(* Finish proving S is FINITE *)
(* ------------------------------------------------------------------------ *)

e (MATCH_MP_TAC (REAL_ARITH `(?x. a <= x /\ x <= b) ==> a <= b`));;
e (EXISTS_TAC 
   `sum (S:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->bool) 
        (\x. &100)`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_LE);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S" THEN REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `4 = k`); REAL_ARITH `a / &4 <= &100 <=> a <= &400`]);;
e (REWRITE_TAC[bump]);;
e (REWRITE_TAC[REAL_ARITH 
   `#0.005 * (&1 - a) - #0.005 * (&1 - b) <= &400 <=>
    b - a <= &80000`]);;
e (MATCH_MP_TAC (REAL_ARITH `(&0 <= a /\ b <= c ==> b - a <= c)`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC REAL_LE_DIV);;
e (REWRITE_TAC[Real_ext.REAL_LE_POW_2]);;
e (REWRITE_TAC[hplus; h0; REAL_ARITH 
   `a / (#1.3254 - #1.26) pow 2 <= &80000 <=> a <= #342.1728`]);;
e (NEW_GOAL `barV V 3 vl`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul':(real^3)list`);;
e (EXISTS_TAC `4` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[ARITH_RULE `4 - 1 = 3`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `mcell i V ul = mcell k V ul'`); 
               GSYM (ASSUME `X = mcell i V ul`)]);;
e (STRIP_TAC);;
e (NEW_GOAL `critical_edgeX V X = {}`);;
e (REWRITE_TAC[critical_edgeX ; edgeX; IN; IN_ELIM_THM; 
               SET_RULE `X = {} <=> ~(?s. s IN X)`]);;
e (STRIP_TAC);;
e (NEW_GOAL `NULLSET X`);;
e (ASM_MESON_TAC[NEGLIGIBLE_EMPTY]);;
e (UNDISCH_TAC `VX V X v'` THEN REWRITE_TAC[VX; ASSUME `NULLSET X`]);;
e (REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`] THEN SET_TAC[]);;
e (UNDISCH_TAC `critical_edgeX V X e`);;
e (REWRITE_TAC[ASSUME `critical_edgeX V X = {}`; MESON[IN] `{} x <=> x IN {}`]
   THEN SET_TAC[]);;


e (NEW_GOAL `?v0 v1 v2 v3. vl = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[EL; ARITH_RULE `3 = SUC 2 /\ 2 = SUC 1 /\ 1 = SUC 0`; HD; TL]);;
e (REWRITE_TAC[ARITH_RULE `SUC (SUC 0) = 2`]);;
e (NEW_GOAL `(hl [v2; v3:real^3] - #1.26) pow 2 <= (&10) pow 2`);;
e (REWRITE_TAC[GSYM REAL_LE_SQUARE_ABS; REAL_ARITH `abs (&10) = &10`]);;
e (ASM_CASES_TAC `&0 <= hl [v2; v3:real^3] - #1.26`);;
e (REWRITE_WITH `abs (hl [v2; v3:real^3] - #1.26) = hl [v2; v3] - #1.26`);;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_TAC[HL_2; 
   REAL_ARITH `inv (&2) * a - #1.26 <= &10 <=> a <= #22.52`]);;
e (NEW_GOAL `set_of_list vl SUBSET ball (v2:real^3,&4)`);;
e (MATCH_MP_TAC Qzyzmjc.BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[set_of_list]);;
e (SET_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN STRIP_TAC);;
e (SUBGOAL_THEN `v3:real^3 IN ball (v2, &k)` MP_TAC);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[IN_BALL; GSYM (ASSUME `4 = k`)]);;
e (REAL_ARITH_TAC);;
e (REWRITE_WITH `abs (hl [v2; v3] - #1.26) = #1.26 - hl [v2; v3:real^3]`);;
e (ASM_REAL_ARITH_TAC);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= a ==> #1.26 - a <= &10`));;
e (REWRITE_TAC[HL_2] THEN NORM_ARITH_TAC);;
e (UP_ASM_TAC THEN REAL_ARITH_TAC);;
e (ASM_SIMP_TAC[SUM_CONST]);;


e (EXPAND_TAC "S");;
e (MATCH_MP_TAC (REAL_ARITH `(?s. x <= s /\ s <= b) ==> x <= b`));;
e (EXISTS_TAC `& (CARD {e',e'',p,vl | {e', e''} = critical_edgeX V X /\
                         p permutes 0..3 /\
                         left_action_list p ul' = vl:(real^3)list}) * &100 `);;
e (STRIP_TAC);;
e (REWRITE_TAC[REAL_ARITH `a * &100 <= b * &100 <=> a <= b`]);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (MATCH_MP_TAC FINITE_SUBSET);;

(*****)
e (EXISTS_TAC `{e',e'',p,vl | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                               p permutes 0..3 /\
                               left_action_list p ul' = vl:(real^3)list}`);;
e (STRIP_TAC);;
e (ABBREV_TAC `S_temp = {e',e'',p | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                         p permutes 0..3}`);;
e (ABBREV_TAC 
  `f_temp = (\(e':real^3->bool,e'':real^3->bool,p). 
              e',e'',p, (left_action_list p (ul':(real^3)list)))`);;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `IMAGE  (f_temp:(real^3->bool)#(real^3->bool)#(num->num)->(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list) S_temp`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_IMAGE);;

e (REWRITE_WITH `S_temp = {e':real^3->bool,u | e' IN K1 /\ 
                           u IN {e'', p | e'' IN K1 /\p permutes 0..3}}`);;
e (EXPAND_TAC "S_temp");;
e (SET_TAC[]);;
e (ABBREV_TAC `K2 = {e'':real^3->bool, p | e'' IN K1 /\p permutes 0..3}`);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;
e (EXPAND_TAC "f_temp" THEN EXPAND_TAC "S_temp" THEN REWRITE_TAC[IMAGE]);;
e (REWRITE_TAC[IN; SUBSET; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool,e'':real^3->bool,p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `e':real^3->bool` THEN 
   EXISTS_TAC `e'':real^3->bool` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;

e (MATCH_MP_TAC (REAL_ARITH `(?s. x <= s /\ s <= b) ==> x <= b`));;
e (EXISTS_TAC `& (CARD {e',e'',p,vl | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                          p permutes 0..3 /\
                          left_action_list p ul' = vl:(real^3)list}) * &100 `);;
e (STRIP_TAC);;
e (REWRITE_TAC[REAL_ARITH `a * &100 <= b * &100 <=> a <= b`]);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (STRIP_TAC);;
e (SWITCH_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;

(* **** *)
e (ABBREV_TAC `S_temp = {e',e'',p | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                         p permutes 0..3}`);;
e (ABBREV_TAC 
  `f_temp = (\(e':real^3->bool,e'':real^3->bool,p). 
              e',e'',p, (left_action_list p (ul':(real^3)list)))`);;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `IMAGE  (f_temp:(real^3->bool)#(real^3->bool)#(num->num)->(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list) S_temp`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC FINITE_IMAGE);;

e (REWRITE_WITH `S_temp = {e':real^3->bool,u | e' IN K1 /\ 
                           u IN {e'', p | e'' IN K1 /\p permutes 0..3}}`);;
e (EXPAND_TAC "S_temp");;
e (SET_TAC[]);;
e (ABBREV_TAC `K2 = {e'':real^3->bool, p | e'' IN K1 /\p permutes 0..3}`);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;
e (EXPAND_TAC "f_temp" THEN EXPAND_TAC "S_temp" THEN REWRITE_TAC[IMAGE]);;
e (REWRITE_TAC[IN; SUBSET; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool,e'':real^3->bool,p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `e':real^3->bool` THEN 
   EXISTS_TAC `e'':real^3->bool` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;


e (MATCH_MP_TAC (REAL_ARITH `(?s. x <= s /\ s <= b) ==> x <= b`));;
e (ABBREV_TAC `S_temp = {e',e'',p | (e':real^3->bool) IN K1 /\ e'' IN K1 /\
                         p permutes 0..3}`);;
e (ABBREV_TAC 
  `f_temp = (\(e':real^3->bool,e'':real^3->bool,p). 
              e',e'',p, (left_action_list p (ul':(real^3)list)))`);;
e (EXISTS_TAC `& (CARD (IMAGE  (f_temp:(real^3->bool)#(real^3->bool)#(num->num)->(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list) S_temp)) * &100`);;

e (STRIP_TAC);;
e (REWRITE_TAC[REAL_ARITH `a * &100 <= b * &100 <=> a <= b`]);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (STRIP_TAC);;
e (EXPAND_TAC "f_temp" THEN EXPAND_TAC "S_temp" THEN REWRITE_TAC[IMAGE]);;
e (REWRITE_TAC[IN; SUBSET; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool,e'':real^3->bool,p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (EXISTS_TAC `e':real^3->bool` THEN 
   EXISTS_TAC `e'':real^3->bool` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC FINITE_IMAGE);;
e (REWRITE_WITH `S_temp = {e':real^3->bool,u | e' IN K1 /\ 
                           u IN {e'', p | e'' IN K1 /\p permutes 0..3}}`);;
e (EXPAND_TAC "S_temp");;
e (SET_TAC[]);;
e (ABBREV_TAC `K2 = {e'':real^3->bool, p | e'' IN K1 /\p permutes 0..3}`);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;

e (MATCH_MP_TAC (REAL_ARITH `(?s. x <= s /\ s <= b) ==> x <= b`));;
e (EXISTS_TAC 
  `& (CARD (S_temp:(real^3->bool)#(real^3->bool)#(num->num)->bool)) * &100`);;
e (STRIP_TAC);;
e (REWRITE_TAC[REAL_ARITH `a * &100 <= b * &100 <=> a <= b`]);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_IMAGE_LE);;
e (REWRITE_WITH `S_temp = {e':real^3->bool,u | e' IN K1 /\ 
                           u IN {e'', p | e'' IN K1 /\p permutes 0..3}}`);;
e (EXPAND_TAC "S_temp");;
e (SET_TAC[]);;
e (ABBREV_TAC `K2 = {e'':real^3->bool, p | e'' IN K1 /\p permutes 0..3}`);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;

e (REWRITE_WITH `S_temp = {e':real^3->bool,u | e' IN K1 /\ 
                           u IN {e'', p | e'' IN K1 /\p permutes 0..3}}`);;
e (EXPAND_TAC "S_temp");;
e (SET_TAC[]);;
e (ABBREV_TAC `K2 = {e'':real^3->bool, p | e'' IN K1 /\p permutes 0..3}`);;
e (REWRITE_WITH `CARD {e':real^3->bool,u:(real^3->bool)#(num->num) | 
                            e' IN K1 /\ u IN K2} = CARD K1 * CARD K2`);;
e (MATCH_MP_TAC CARD_PRODUCT);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;

e (REWRITE_WITH `CARD (K2:(real^3->bool)#(num->num)->bool) = 
                 CARD (K1:(real^3->bool)->bool) * CARD {p | p permutes 0..3}`);;
e (REWRITE_WITH 
  `K2 = {e'':real^3->bool,p | e'' IN K1 /\ p IN {p | p permutes 0..3}}`);;
e (EXPAND_TAC "K2" THEN SET_TAC[]);;
e (MATCH_MP_TAC CARD_PRODUCT);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM NUMSEG_LE; ARITH_RULE `a <= 3 <=> a < 4`;
   Marchal_cells_2_new.SET_OF_0_TO_3;  
   Upfzbzm_support_lemmas.FINITE_PERMUTE_4]);;
e (REWRITE_WITH `CARD (K1:(real^3->bool)->bool) = 16`);;

e (REWRITE_WITH `16 = 2 EXP (CARD (set_of_list (ul:(real^3)list)))`);;
e (REWRITE_WITH `CARD (set_of_list (ul:(real^3)list)) = 3 + 1`);;
e (MATCH_MP_TAC BARV_CARD_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (EXPAND_TAC "K1");;
e (MATCH_MP_TAC CARD_POWERSET);;
e (ASM_REWRITE_TAC[set_of_list; Geomdetail.FINITE6]);;
e (REWRITE_WITH `CARD {p | p permutes 0..3} = FACT (CARD (0..3))`);;
e (MATCH_MP_TAC CARD_PERMUTATIONS);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (REWRITE_TAC[CARD_NUMSEG; ARITH_RULE `16 * 16 * FACT ((3 + 1) - 0) = 6144`]);;

e (REAL_ARITH_TAC);;

let BOUND_BETA_BUMP = top_thm();;

search [``]
p();;
;;

CARD_IMAGE_LE

search [`CARD (IMAGE f_temp S_temp)`];;

 ;;

search [`&0 <= a pow 2`];;


p();;
b();;

hplus = #1.3254;;
hplus;;
h0;;

search [`hplus`];;

();;

seans_fn();;
b();;



e (ASM_REWRITE_TAC[EL; HD]);;

e (ASM_CASES_TAC `i = 0`);;
e (NEW_GOAL `V INTER mcell i V ul  = {} `);;
e (REWRITE_TAC[ASSUME `i = 0`]);;
e (MATCH_MP_TAC LEPJBDJ_0);;
e (ASM_REWRITE_TAC[] THEN ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 0`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `V INTER mcell k V ul' 
           = set_of_list (truncate_simplex (k - 1) ul')`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `k = 1`);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 2`);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`; TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 3`);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`; TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 4`);;
e (ASM_REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; TRUNCATE_SIMPLEX_EXPLICIT_3; set_of_list]);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;  (* Finish the case i = 0 *)

e (NEW_GOAL `V INTER mcell i V ul
           = set_of_list (truncate_simplex (i - 1) ul)`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 0`);;
e (NEW_GOAL `V INTER mcell k V ul' = {}`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC LEPJBDJ_0);;
e (ASM_REWRITE_TAC[] THEN ASM_SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL 
  `~(set_of_list (truncate_simplex (i - 1) (ul:(real^3)list)) = {})`);;
e (ASM_CASES_TAC `i = 1`);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list]);;
e (SET_TAC[]);;
e (ASM_CASES_TAC `i = 2`);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`; TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list]);;
e (SET_TAC[]);;
e (ASM_CASES_TAC `i = 3`);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`; TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list]);;
e (SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `V INTER mcell k V ul'
           = set_of_list (truncate_simplex (k - 1) ul')`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `CARD (set_of_list (truncate_simplex (i - 1) (ul:(real^3)list))) 
            = i:num`);;
e (REWRITE_WITH 
  `LENGTH (truncate_simplex (i - 1) (ul:(real^3)list)) = (i - 1) + 1 /\ 
   CARD (set_of_list (truncate_simplex (i - 1) ul)) = (i - 1) + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3`);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `CARD (set_of_list (truncate_simplex (k - 1) (ul':(real^3)list))) 
            = k:num`);;
e (REWRITE_WITH 
  `LENGTH (truncate_simplex (k - 1) (ul':(real^3)list)) = (k - 1) + 1 /\ 
   CARD (set_of_list (truncate_simplex (k - 1) ul')) = (k - 1) + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3`);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REWRITE_TAC[REAL_ARITH `&0 = a <=> a = &0`]);;
e (ASM_REWRITE_TAC[]);;

e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;

e (REWRITE_WITH `sum
      {e',e'',p,vl | k = 4 /\  critical_edgeX V (mcell k V ul') = {e', e''} /\
                     e = e' /\ p permutes 0..3 /\ vl = left_action_list p ul' /\
                     e' = {EL 0 vl, EL 1 vl} /\ e'' = {EL 2 vl, EL 3 vl}}
      (\(e',e'',p,vl). 
           (bump (hl [EL 0 vl; EL 1 vl]) - bump (hl [EL 2 vl; EL 3 vl])) / &4) 
            = &0`);;
e (ABBREV_TAC `SET1 = {e',e'',p,vl | k = 4 /\
                    critical_edgeX V (mcell k V ul') = {e', e''} /\
                    e = e' /\ p permutes 0..3 /\
                    vl = left_action_list p ul' /\
                    e' = {EL 0 vl, EL 1 vl} /\
                    e'' = {EL 2 vl, EL 3 vl}}`);;
e (NEW_GOAL 
  `SET1:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->bool = {}`);;
e (EXPAND_TAC "SET1");;
e (NEW_GOAL `~(k = 4)`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[SUM_CLAUSES]);;

e (KY_CHEAT_TAC);;   (* CHON C PHU HOP LA OK THOI *)

(* Finish the case where i < 4 *)
(* ========================================================================= *)
(* begin with the case i >= 4  *)

e (ASM_REWRITE_TAC[beta_bump]);;
e (REPEAT LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (STRIP_TAC);;
e (ABBREV_TAC `P = (\(k,ul'). k <= 4 /\ ul' IN barV V 3 /\ 
                              mcell i V ul = mcell k V ul')`);;
e (NEW_GOAL `(P:(num#(real^3)list->bool)) (k,ul')`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(4,ul:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `~(i < 4) ==> i >= 4`; 
   ARITH_RULE `4 >= 4`; mcell4]);;
e (UP_ASM_TAC THEN EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM] THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 ul'`);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `mcell i V ul = mcell 4 V ul`);;
e (UNDISCH_TAC `mcell i V ul = mcell k V ul'` THEN DISCH_TAC THEN DEL_TAC);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `~(i < 4) ==> i >= 4`; 
   ARITH_RULE `4 >= 4`; mcell4]);;

e (NEW_GOAL `k = 4:num`);;
e (NEW_GOAL `V INTER mcell 4 V ul  = 
             set_of_list (truncate_simplex 3 ul)`);;
e (REWRITE_TAC[ARITH_RULE `3 = 4 - 1`]);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 0`);;
e (NEW_GOAL `V INTER mcell k V ul'  = {}`);;
e (REWRITE_TAC[ASSUME `k = 0`]);;
e (MATCH_MP_TAC LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `V INTER mcell 4 V ul = set_of_list (truncate_simplex 3 ul)`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `V INTER mcell k V ul'  = 
             set_of_list (truncate_simplex (k - 1) ul')`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
             set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `CARD {u0,u1,u2,u3:real^3} = 4`);;
e (REWRITE_WITH `{u0,u1,u2,u3:real^3} = set_of_list ul`);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (ASM_CASES_TAC `k = 1`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
                set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; ARITH_RULE `1 - 1 = 0`;   
                   TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list]);;
e (STRIP_TAC);;
e (NEW_GOAL `CARD {v0:real^3} = 4`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[Geomdetail.CARD_SING]);;
e (ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 2`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
                set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; ARITH_RULE `2 - 1 = 1`;   
                   TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list]);;
e (STRIP_TAC);;
e (NEW_GOAL `CARD {v0, v1:real^3} = 4`);;
e (ASM_MESON_TAC[]);;
e (NEW_GOAL `CARD {v0, v1:real^3} <= 2`);;
e (MESON_TAC[Geomdetail.CARD2]);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 3`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
                set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; ARITH_RULE `3 - 1 = 2`;   
                   TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list]);;
e (STRIP_TAC);;
e (NEW_GOAL `CARD {v0, v1, v2:real^3} = 4`);;
e (ASM_MESON_TAC[]);;
e (NEW_GOAL `CARD {v0, v1, v2:real^3} <= 3`);;
e (MESON_TAC[Geomdetail.CARD3]);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_ARITH_TAC);;  (* concluded that k = 4 now *)


g `!V X. saturated V /\ packing V /\ mcell_set V X ==> 
         sum {e | e IN critical_edgeX V X } (\e. beta_bump V e X) = &0`;;

e (REPEAT STRIP_TAC THEN UP_ASM_TAC);;
e (ASM_CASES_TAC `~(X:real^3->bool = {})`);;
e (REWRITE_TAC[mcell_set; IN_ELIM_THM]);;
e (STRIP_TAC);;
e (NEW_GOAL `barV V 3 ul`);;
e (ASM_SET_TAC[IN]);;

e (ASM_CASES_TAC `i < 4`);;  (* consider case i < 4 va i >= 4 *)
e (NEW_GOAL `~(i = 4)`);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `i <= 4`);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[beta_bump]);;
e (REPEAT LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (STRIP_TAC);;
e (ABBREV_TAC `P = (\(k,ul'). k <= 4 /\ ul' IN barV V 3 /\ 
                              mcell i V ul = mcell k V ul')`);;
e (NEW_GOAL `(P:(num#(real^3)list->bool)) (k,ul')`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(i:num,ul:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN]);;
e (UP_ASM_TAC THEN EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM] THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 ul'`);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `i = k:num`);;
e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN REPEAT STRIP_TAC);;

e (ASM_CASES_TAC `i = 0`);;
e (NEW_GOAL `V INTER mcell i V ul  = {} `);;
e (REWRITE_TAC[ASSUME `i = 0`]);;
e (MATCH_MP_TAC LEPJBDJ_0);;
e (ASM_REWRITE_TAC[] THEN ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 0`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `V INTER mcell k V ul' 
           = set_of_list (truncate_simplex (k - 1) ul')`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `k = 1`);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 2`);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`; TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 3`);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`; TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_CASES_TAC `k = 4`);;
e (ASM_REWRITE_TAC[ARITH_RULE `4 - 1 = 3`; TRUNCATE_SIMPLEX_EXPLICIT_3; set_of_list]);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;  (* Finish the case i = 0 *)

e (NEW_GOAL `V INTER mcell i V ul
           = set_of_list (truncate_simplex (i - 1) ul)`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 0`);;
e (NEW_GOAL `V INTER mcell k V ul' = {}`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC LEPJBDJ_0);;
e (ASM_REWRITE_TAC[] THEN ASM_SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL 
  `~(set_of_list (truncate_simplex (i - 1) (ul:(real^3)list)) = {})`);;
e (ASM_CASES_TAC `i = 1`);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list]);;
e (SET_TAC[]);;
e (ASM_CASES_TAC `i = 2`);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`; TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list]);;
e (SET_TAC[]);;
e (ASM_CASES_TAC `i = 3`);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`; TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list]);;
e (SET_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `V INTER mcell k V ul'
           = set_of_list (truncate_simplex (k - 1) ul')`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `CARD (set_of_list (truncate_simplex (i - 1) (ul:(real^3)list))) 
            = i:num`);;
e (REWRITE_WITH 
  `LENGTH (truncate_simplex (i - 1) (ul:(real^3)list)) = (i - 1) + 1 /\ 
   CARD (set_of_list (truncate_simplex (i - 1) ul)) = (i - 1) + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3`);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `CARD (set_of_list (truncate_simplex (k - 1) (ul':(real^3)list))) 
            = k:num`);;
e (REWRITE_WITH 
  `LENGTH (truncate_simplex (k - 1) (ul':(real^3)list)) = (k - 1) + 1 /\ 
   CARD (set_of_list (truncate_simplex (k - 1) ul')) = (k - 1) + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3`);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REWRITE_TAC[REAL_ARITH `&0 = a <=> a = &0`]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!e. sum
      {e',e'',p,vl | k = 4 /\  critical_edgeX V (mcell k V ul') = {e', e''} /\
                     e = e' /\ p permutes 0..3 /\ vl = left_action_list p ul' /\
                     e' = {EL 0 vl, EL 1 vl} /\ e'' = {EL 2 vl, EL 3 vl}}
      (\(e',e'',p,vl). 
           (bump (hl [EL 0 vl; EL 1 vl]) - bump (hl [EL 2 vl; EL 3 vl])) / &4) 
            = &0`);;
e GEN_TAC;;
e (ABBREV_TAC `SET1 = {e',e'',p,vl | k = 4 /\
                    critical_edgeX V (mcell k V ul') = {e', e''} /\
                    e = e' /\ p permutes 0..3 /\
                    vl = left_action_list p ul' /\
                    e' = {EL 0 vl, EL 1 vl} /\
                    e'' = {EL 2 vl, EL 3 vl}}`);;
e (NEW_GOAL 
  `SET1:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->bool = {}`);;
e (EXPAND_TAC "SET1");;
e (NEW_GOAL `~(k = 4)`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[SUM_CLAUSES]);;

e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[SUM_0]);;

(* Finish the case where i < 4 *)
(* ========================================================================= *)
(* begin with the case i >= 4  *)

e (ASM_REWRITE_TAC[beta_bump]);;
e (REPEAT LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[cell_params]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (STRIP_TAC);;
e (ABBREV_TAC `P = (\(k,ul'). k <= 4 /\ ul' IN barV V 3 /\ 
                              mcell i V ul = mcell k V ul')`);;
e (NEW_GOAL `(P:(num#(real^3)list->bool)) (k,ul')`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SELECT_AX);;
e (EXISTS_TAC `(4,ul:(real^3)list)`);;
e (EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM]);;
e (ASM_REWRITE_TAC[IN; ARITH_RULE `4 <= 4`]);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `~(i < 4) ==> i >= 4`; 
   ARITH_RULE `4 >= 4`; mcell4]);;
e (UP_ASM_TAC THEN EXPAND_TAC "P");;
e (REWRITE_TAC[BETA_THM] THEN STRIP_TAC);;
e (NEW_GOAL `barV V 3 ul'`);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[REAL_ARITH `&0 = a <=> a = &0`]);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `?v0 v1 v2 v3. ul' = [v0;v1;v2;v3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `mcell i V ul = mcell 4 V ul`);;
e (UNDISCH_TAC `mcell i V ul = mcell k V ul'` THEN DISCH_TAC THEN DEL_TAC);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `~(i < 4) ==> i >= 4`; 
   ARITH_RULE `4 >= 4`; mcell4]);;

e (NEW_GOAL `k = 4:num`);;

e (NEW_GOAL `V INTER mcell 4 V ul  = 
             set_of_list (truncate_simplex 3 ul)`);;
e (REWRITE_TAC[ARITH_RULE `3 = 4 - 1`]);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 <= 4 /\ 4 <= 4`]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 0`);;
e (NEW_GOAL `V INTER mcell k V ul'  = {}`);;
e (REWRITE_TAC[ASSUME `k = 0`]);;
e (MATCH_MP_TAC LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `V INTER mcell 4 V ul = set_of_list (truncate_simplex 3 ul)`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; set_of_list]);;
e (ASM_SET_TAC[]);;
e (ASM_MESON_TAC[]);;

(* ============================= *)

e (NEW_GOAL `V INTER mcell k V ul'  = 
             set_of_list (truncate_simplex (k - 1) ul')`);;
e (MATCH_MP_TAC LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
             set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `CARD {u0,u1,u2,u3:real^3} = 4`);;
e (REWRITE_WITH `{u0,u1,u2,u3:real^3} = set_of_list ul`);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (ASM_CASES_TAC `k = 1`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
                set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; ARITH_RULE `1 - 1 = 0`;   
                   TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list]);;
e (STRIP_TAC);;
e (NEW_GOAL `CARD {v0:real^3} = 4`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[Geomdetail.CARD_SING]);;
e (ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 2`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
                set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; ARITH_RULE `2 - 1 = 1`;   
                   TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list]);;
e (STRIP_TAC);;
e (NEW_GOAL `CARD {v0, v1:real^3} = 4`);;
e (ASM_MESON_TAC[]);;
e (NEW_GOAL `CARD {v0, v1:real^3} <= 2`);;
e (MESON_TAC[Geomdetail.CARD2]);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `k = 3`);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex 3 (ul:(real^3)list)) = 
                set_of_list (truncate_simplex (k - 1) ul')`);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_3; ARITH_RULE `3 - 1 = 2`;   
                   TRUNCATE_SIMPLEX_EXPLICIT_2; set_of_list]);;
e (STRIP_TAC);;
e (NEW_GOAL `CARD {v0, v1, v2:real^3} = 4`);;
e (ASM_MESON_TAC[]);;
e (NEW_GOAL `CARD {v0, v1, v2:real^3} <= 3`);;
e (MESON_TAC[Geomdetail.CARD3]);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (ASM_ARITH_TAC);;  (* concluded that k = 4 now *)

(* ======================================================================== *)


e (REWRITE_TAC[ASSUME `mcell i V ul = mcell k V ul'`; ASSUME `k = 4`]);;
e (ASM_CASES_TAC `~(CARD (critical_edgeX V (mcell 4 V ul'))  = 2)`);;
e (MATCH_MP_TAC SUM_EQ_0);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `y = {v0,v1,v2,v3:real^3} DIFF x`);;
e (ASM_CASES_TAC `~(critical_edgeX V (mcell 4 V ul') = {x, y})`);;
e (REWRITE_WITH 
 `{e',e'',p,vl | critical_edgeX V (mcell 4 V ul') = {e', e''} /\
                x = e' /\
                p permutes 0..3 /\
                vl = left_action_list p ul' /\
                e' = {EL 0 vl, EL 1 vl} /\
                e'' = {EL 2 vl, EL 3 vl}} = {}`);;
e (REWRITE_TAC[SET_RULE `a = {} <=> (!t. t IN a ==> F)`]);;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `y = e'':real^3->bool`);;
e (ONCE_ASM_REWRITE_TAC[] THEN EXPAND_TAC "y");;
e (REWRITE_TAC[ASSUME `x = e':real^3->bool`; 
               ASSUME `e':real^3->bool = {EL 0 vl, EL 1 vl}`]);;
e (REWRITE_WITH `{v0, v1, v2, v3:real^3} = set_of_list (ul')`);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (REWRITE_WITH `set_of_list (ul':(real^3)list) = set_of_list vl`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ] THEN REWRITE_TAC[ASSUME 
  `vl:(real^3)list = left_action_list p ul'`]);;
e (MATCH_MP_TAC Packing3.SET_OF_LIST_LEFT_ACTION_LIST);;
e (ASM_REWRITE_TAC[LENGTH;ARITH_RULE `SUC (SUC (SUC (SUC 0))) - 1 = 3`]);;

e (NEW_GOAL `vl:(real^3)list = [EL 0 vl; EL 1 vl; EL 2 vl; EL 3 vl]`);;
e (ASM_REWRITE_TAC[TABLE_4; left_action_list; LENGTH; EL; HD; TL;
   ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4 /\ 1 = SUC 0 /\ 2 = SUC 1/\ 3 = SUC 2`]);;
e (ABBREV_TAC `w0:real^3 = EL 0 vl`);;
e (ABBREV_TAC `w1:real^3 = EL 1 vl`);;
e (ABBREV_TAC `w2:real^3 = EL 2 vl`);;
e (ABBREV_TAC `w3:real^3 = EL 3 vl`);;
e (REWRITE_TAC[ASSUME `vl = [w0;w1;w2;w3:real^3]`; set_of_list]);;
e (REWRITE_WITH `{w0,w1,w2,w3} = {w0,w1} UNION {w2,w3:real^3}`);;
e (SET_TAC[]);;
e (MATCH_MP_TAC (SET_RULE `DISJOINT a b ==> ((a UNION b) DIFF a = b)`));;

e (REWRITE_TAC[DISJOINT; INTER]);;
e (NEW_GOAL `CARD {w0, w1, w2 , w3:real^3} = 4`);;
e (REWRITE_WITH `{w0, w1, w2 , w3:real^3} = set_of_list vl`);;
e (REWRITE_TAC[ASSUME `vl = [w0; w1; w2; w3:real^3]`; set_of_list]);;
e (ONCE_ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `set_of_list (left_action_list p ul') 
               = set_of_list (ul':(real^3)list)`);;
e (MATCH_MP_TAC Packing3.SET_OF_LIST_LEFT_ACTION_LIST);;
e (ASM_REWRITE_TAC[LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) - 1 = 3`]);;
e (REWRITE_WITH `LENGTH (ul':(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul') = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (REWRITE_TAC[SET_RULE `x IN {a,b} <=> x = a \/ x = b`]);;
e (REWRITE_TAC[SET_RULE `x = {} <=> (!z. z IN x ==> F)`]);;
e (REWRITE_TAC[IN;IN_ELIM_THM] THEN STRIP_TAC);;
e (REPEAT STRIP_TAC);;

e (NEW_GOAL `CARD {w0, w1, w2, w3:real^3} <= 3`);;
e (REWRITE_WITH `{w0, w1, w2, w3:real^3} = {w1, w2, w3}`);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[Geomdetail.CARD3]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {w0, w1, w2, w3:real^3} <= 3`);;
e (REWRITE_WITH `{w0, w1, w2, w3:real^3} = {w1, w2, w3}`);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[Geomdetail.CARD3]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {w0, w1, w2, w3:real^3} <= 3`);;
e (REWRITE_WITH `{w0, w1, w2, w3:real^3} = {w0, w2, w3}`);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[Geomdetail.CARD3]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `CARD {w0, w1, w2, w3:real^3} <= 3`);;
e (REWRITE_WITH `{w0, w1, w2, w3:real^3} = {w0, w2, w3}`);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (REWRITE_TAC[Geomdetail.CARD3]);;
e (ASM_ARITH_TAC);;

e (UNDISCH_TAC `~(critical_edgeX V (mcell 4 V ul') = {x, y})`);;
e (REWRITE_TAC[ASSUME `x = e':real^3->bool`; ASSUME `y = e'':real^3->bool`]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[SUM_CLAUSES]);;
e (UP_ASM_TAC THEN REWRITE_TAC[MESON[] `~ ~ a <=> a`] THEN STRIP_TAC);;
e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~(CARD (critical_edgeX V (mcell 4 V ul')) = 2)`);;
e (REWRITE_TAC[ASSUME `critical_edgeX V (mcell 4 V ul') = {x, y}`]);;
e (REWRITE_TAC[Geomdetail.CARD_SET2]);;
e (EXPAND_TAC "y");;
e (STRIP_TAC);;
e (NEW_GOAL `{v0, v1,v2,v3:real^3} = {}`);;
e (MATCH_MP_TAC (SET_RULE `!s:real^3->bool. x = s DIFF x ==> s = {}`));;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (ASM_MESON_TAC[]);;

e (UP_ASM_TAC THEN REWRITE_TAC[MESON[] `~ ~ a <=> a`] THEN STRIP_TAC);;
e (NEW_GOAL `?x y. critical_edgeX V (mcell 4 V ul') = {x, y} /\ ~(x = y)`);;
e (MATCH_MP_TAC Rogers.CARD_2_IMP_DOUBLE);;
e (ASM_REWRITE_TAC[ _critical_edgeX]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_TAC[SET_RULE `{x | x IN s} = s`; 
               ASSUME `critical_edgeX V (mcell 4 V ul') = {x, y}`]);;
e (ASM_SIMP_TAC[Collect_geom.SUM_DIS2]);;


e (REWRITE_WITH 
 `{e',e'',p,vl | {x, y} = {e', e''} /\
                x = e' /\
                p permutes 0..3 /\
                vl = left_action_list p [v0; v1; v2; v3:real^3] /\
                e' = {EL 0 vl, EL 1 vl} /\
                e'' = {EL 2 vl, EL 3 vl}} =
 {e',e'',p,vl | e' = x /\ e'' = y /\
                p permutes 0..3 /\
                vl = left_action_list p [v0; v1; v2; v3] /\
                x = {EL 0 vl, EL 1 vl} /\
                y = {EL 2 vl, EL 3 vl}}`);;
e (ONCE_REWRITE_TAC[SET_RULE `a = b <=> b SUBSET a /\ a SUBSET b`]);;
e (STRIP_TAC);;

e (REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool` THEN EXISTS_TAC `e'':real^3->bool`);;
e (EXISTS_TAC `p:num->num` THEN EXISTS_TAC `vl:(real^3)list`);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `e':real^3->bool = x`; 
   ASSUME `x:real^3->bool = {EL 0 vl, EL 1 vl}`]);;
e (REWRITE_TAC[ASSUME `e'':real^3->bool = y`; 
   ASSUME `y:real^3->bool = {EL 2 vl, EL 3 vl}`]);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool` THEN EXISTS_TAC `e'':real^3->bool`);;
e (EXISTS_TAC `p:num->num` THEN EXISTS_TAC `vl:(real^3)list`);;
e (NEW_GOAL `y = e'':(real^3->bool)`);;
e (ASM_SET_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `x:real^3->bool = e'`; 
   ASSUME `e':real^3->bool = {EL 0 vl, EL 1 vl}`]);;
e (REWRITE_TAC[ASSUME `y:real^3->bool = e''`; 
   ASSUME `e'':real^3->bool = {EL 2 vl, EL 3 vl}`]);;
e (ASM_REWRITE_TAC[]);;


e (REWRITE_WITH 
 `{e',e'',p,vl | {x, y} = {e', e''} /\
                y = e' /\
                p permutes 0..3 /\
                vl = left_action_list p [v0; v1; v2; v3:real^3] /\
                e' = {EL 0 vl, EL 1 vl} /\
                e'' = {EL 2 vl, EL 3 vl}} =
 {e',e'',p,vl | e' = y /\ e'' = x /\
                p permutes 0..3 /\
                vl = left_action_list p [v0; v1; v2; v3] /\
                y = {EL 0 vl, EL 1 vl} /\
                x = {EL 2 vl, EL 3 vl}}`);;
e (ONCE_REWRITE_TAC[SET_RULE `a = b <=> b SUBSET a /\ a SUBSET b`]);;
e (STRIP_TAC);;

e (REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool` THEN EXISTS_TAC `e'':real^3->bool`);;
e (EXISTS_TAC `p:num->num` THEN EXISTS_TAC `vl:(real^3)list`);;
e (REPEAT STRIP_TAC);;

e (REWRITE_TAC[ASSUME `e' = y:real^3->bool`; ASSUME `e'' = x:real^3->bool`]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `e':real^3->bool = y`; 
   ASSUME `y:real^3->bool = {EL 0 vl, EL 1 vl}`]);;
e (REWRITE_TAC[ASSUME `e'':real^3->bool = x`; 
   ASSUME `x:real^3->bool = {EL 2 vl, EL 3 vl}`]);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `e':real^3->bool` THEN EXISTS_TAC `e'':real^3->bool`);;
e (EXISTS_TAC `p:num->num` THEN EXISTS_TAC `vl:(real^3)list`);;
e (NEW_GOAL `x = e'':(real^3->bool)`);;
e (ASM_SET_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ASSUME `y:real^3->bool = e'`; 
   ASSUME `e':real^3->bool = {EL 0 vl, EL 1 vl}`]);;
e (REWRITE_TAC[ASSUME `x:real^3->bool = e''`; 
   ASSUME `e'':real^3->bool = {EL 2 vl, EL 3 vl}`]);;
e (ASM_REWRITE_TAC[]);;

e (ABBREV_TAC `S1 = {e',e'',p,vl | e' = x /\
                e'' = y /\
                p permutes 0..3 /\
                vl = left_action_list p [v0; v1; v2; v3:real^3] /\
                x = {EL 0 vl, EL 1 vl} /\
                y = {EL 2 vl, EL 3 vl}}`);;
e (ABBREV_TAC `S2 =  {e',e'',p,vl | e' = y /\
                e'' = x /\
                p permutes 0..3 /\
                vl = left_action_list p [v0; v1; v2; v3:real^3] /\
                y = {EL 0 vl, EL 1 vl} /\
                x = {EL 2 vl, EL 3 vl}}`);;
e (REWRITE_WITH
  `sum (S2:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->bool)   
          (\(e',e'',p,vl). (bump (hl [EL 0 vl; EL 1 vl]) -
                   bump (hl [EL 2 vl; EL 3 vl])) / &4) =  
   sum S2 (\(e',e'',p,vl). -- ((bump (hl [EL 2 vl; EL 3 vl]) -
                   bump (hl [EL 0 vl; EL 1 vl])) / &4))`);;
e (ONCE_REWRITE_TAC[REAL_ARITH `(bump (hl [EL 0 vl; EL 1 vl]) -
                   bump (hl [EL 2 vl; EL 3 vl])) /
                  &4 = -- ((bump (hl [EL 2 vl; EL 3 vl]) -
                      bump (hl [EL 0 vl; EL 1 vl])) /
                     &4)`]);;
e (ASM_REWRITE_TAC[]);;
e (ONCE_REWRITE_TAC[SUM_NEG]);;
e (ABBREV_TAC `f =  (\(e':real^3->bool,e'':real^3->bool,p:num->num,vl:(real^3)list). 
 ((bump (hl [EL 2 vl; EL 3 vl]) - bump (hl [EL 0 vl; EL 1 vl])) / &4))`);;
e (REWRITE_WITH 
`(\(e',e'',p,vl). 
   --((bump (hl [EL 2 vl; EL 3 vl]) -bump (hl [EL 0 vl; EL 1 vl])) / &4)) 
  = (\(e':real^3->bool,e'':real^3->bool,p:num->num,vl:(real^3)list). 
   -- f (e',e'',p,vl))`);;
e (EXPAND_TAC "f");;
e (REWRITE_TAC[BETA_THM]);;

e (REWRITE_WITH 
`sum (S2:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->bool) (\(e':real^3->bool,e'':real^3->bool,p:num->num,vl:(real^3)list).
 -- f (e',e'',p,vl)) =
sum S2 (\x. -- f x)`);;
e (AP_TERM_TAC);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (EXPAND_TAC "f");;
e (REWRITE_TAC[BETA_THM]);;
e (REPEAT STRIP_TAC);;

e (ABBREV_TAC `e' = FST (x': (real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)`);;
e (ABBREV_TAC `e'' = FST (SND (x': (real^3->bool)#(real^3->bool)#(num->num)#(real^3)list))`);;
e (ABBREV_TAC `p = FST (SND (SND (x': (real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)))`);;
e (ABBREV_TAC `vl = SND (SND (SND (x': (real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)))`);;

e (REWRITE_WITH `x':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list = 
  (e',e'',p, vl)`);;
e (EXPAND_TAC "e'" THEN EXPAND_TAC "e''" THEN EXPAND_TAC "p" THEN EXPAND_TAC "vl");;
e (REWRITE_TAC[PAIR]);;
e (REWRITE_TAC[SUM_NEG]);;
e (REWRITE_TAC[REAL_ARITH `a + -- b = &0 <=> a = b`]);;

(* --------------------------------------------------------------------------- *)
(* Begin new part *)

e (EXPAND_TAC "f");;
e (ABBREV_TAC 
`g = (\x. let (e':real^3->bool,e'':real^3->bool,p:num->num,vl:(real^3)list) = x 
          in 
           (e'', e', (\i. 
                          if p i = 0 then 2 else
                          if p i = 1 then 3 else
                          if p i = 2 then 0 else
                          if p i = 3 then 1 else i), 
           [EL 2 vl;EL 3 vl;EL 0 vl;EL 1 vl]))`);;
e (REWRITE_WITH 
`S1 = IMAGE    
 (g:(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list->(real^3->bool)#
   (real^3->bool)#(num->num)#(real^3)list) S2 /\  
 (\(e',e'',p,vl). (bump (hl [EL 2 vl; EL 3 vl]) -
                   bump (hl [EL 0 vl; EL 1 vl])) / &4) =  
 (\(e',e'',p,vl). (bump (hl [EL 0 vl; EL 1 vl]) -
                   bump (hl [EL 2 vl; EL 3 vl])) / &4) o g `);;

(* ======================================================================= *)

e (REPEAT STRIP_TAC);;
  (* New goal 1: to prove S1 = IMAGE g S2 *)
 
e (EXPAND_TAC "S1" THEN EXPAND_TAC "S2");;
e (REWRITE_TAC[IMAGE]);;
e (ONCE_REWRITE_TAC[SET_EQ_LEMMA] THEN ONCE_REWRITE_TAC[IN] THEN  
   REWRITE_TAC[IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (EXISTS_TAC 
   `(e'':real^3->bool,
     e':real^3->bool,
     (\i. if p i = 0
             then 2
             else if p i = 1
                  then 3
                  else if p i = 2 then 0 else if p i = 3 then 1 else i),
     [EL 2 (vl:(real^3)list); EL 3 vl; EL 0 vl; EL 1 vl])`);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `e'':real^3->bool` THEN EXISTS_TAC `e':real^3->bool`);;
e (ABBREV_TAC `p' =  (\i. if p i = 0
             then 2
             else if p i = 1
                  then 3
                  else if p i = 2 then 0 else if p i = 3 then 1 else i)`);;
e (EXISTS_TAC `p':num->num`);;
e (EXISTS_TAC `[EL 2 (vl:(real^3)list); EL 3 vl; EL 0 vl; EL 1 vl]`);;
e (REWRITE_WITH 
`EL 0 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl] = EL 2 (vl:(real^3)list) /\ 
 EL 1 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl] = EL 3 vl /\
 EL 2 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl] = EL 0 vl /\
 EL 3 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl] = EL 1 vl`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_TAC[ASSUME `e'' = y:real^3->bool`; ASSUME `e' = x:real^3->bool`;
   ASSUME `y:real^3->bool = {EL 2 vl, EL 3 vl}`; 
   ASSUME `x:real^3->bool = {EL 0 vl, EL 1 vl}`;left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;

e (NEW_GOAL `!u:num. p u = 0 ==> p' u = 2`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 1 ==> p' u = 3`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 2 ==> p' u = 0`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 3 ==> p' u = 1`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u > 3 ==> p' u = u`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p u > 3 ==> p u = u`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `s = (p:num->num) u`);;
e (NEW_GOAL `(p:num->num) s = s`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (UNDISCH_TAC `s > 3` THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (NEW_GOAL `?x. (p:num->num) x = s /\ (!y'. p y' = s ==> y' = x)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `s = x'':num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `u = x'':num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!u:num. p' u = 0 ==> p u = 2`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 1 ==> p u = 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 2 ==> p u = 0`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 3 ==> p u = 1`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u > 3 ==> p u > 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

(* ------------------------------------------------------------------------- *)
(* begin to prove that p' permutes 0..3 *)

e (NEW_GOAL `p' permutes 0..3`);;
e (REWRITE_TAC[permutes]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `x'' > 3`);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (EXPAND_TAC "p'");;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN REPEAT STRIP_TAC);;
e (NEW_GOAL `(p:num->num) x'' = x''`);;
e (ASM_SIMP_TAC[]);;
e (COND_CASES_TAC);;
e (ASM_ARITH_TAC);;
e (COND_CASES_TAC);;
e (ASM_ARITH_TAC);;
e (COND_CASES_TAC);;
e (ASM_ARITH_TAC);;
e (COND_CASES_TAC);;
e (ASM_ARITH_TAC);;
e (REFL_TAC);;

e (REWRITE_TAC[EXISTS_UNIQUE] THEN REPEAT STRIP_TAC);;

e (ASM_CASES_TAC `y' = 0`);;
e (NEW_GOAL `?z. (p:num->num) z = 2`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 2`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 2 /\ (!y'. p y' = 2 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `y' = 1`);;
e (NEW_GOAL `?z. (p:num->num) z = 3`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 3`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 3 /\ (!y'. p y' = 3 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `y' = 2`);;
e (NEW_GOAL `?z. (p:num->num) z = 0`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 0`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 0 /\ (!y'. p y' = 0 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `y' = 3`);;
e (NEW_GOAL `?z. (p:num->num) z = 1`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 1`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 1 /\ (!y'. p y' = 1 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `y' > 3`);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `?z. (p:num->num) z = y'`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `(p:num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `(p':num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `(p:num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `(p':num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `(p:num->num) y'' > 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `(p:num->num) y'' = y''`);;
e (MATCH_MP_TAC (ASSUME `!u:num. p u > 3 ==> p u = u`));;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p':num->num) y'' = y''`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `?s:num. p s = (y':num) /\ (!z'. p z' = y' ==> z' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_MESON_TAC[]);;


(* finish proving that p' permutes 0..3 *)

e (REWRITE_TAC[ASSUME `p' permutes 0..3`]);;

(* --------------------------------------------------------------------- *)

e (REWRITE_WITH `EL (inverse p' 0) [v0; v1; v2; v3:real^3] = EL 2 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 2
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 2) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 0 = inverse (p:num->num) 2`);;
e (ABBREV_TAC `j = inverse (p:num->num) 2`);;
e (NEW_GOAL `(p:num->num) j = 2`);;
e (REWRITE_WITH `(p j = 2) <=> inverse (p:num->num) 2 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 0 = j <=> p' j = 0`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;


e (REWRITE_WITH `EL (inverse p' 1) [v0; v1; v2; v3:real^3] = EL 3 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 3
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 3) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 1 = inverse (p:num->num) 3`);;
e (ABBREV_TAC `j = inverse (p:num->num) 3`);;
e (NEW_GOAL `(p:num->num) j = 3`);;
e (REWRITE_WITH `(p j = 3) <=> inverse (p:num->num) 3 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 1 = j <=> p' j = 1`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (REWRITE_WITH `EL (inverse p' 2) [v0; v1; v2; v3:real^3] = EL 0 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 0
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 0) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 2 = inverse (p:num->num) 0`);;
e (ABBREV_TAC `j = inverse (p:num->num) 0`);;
e (NEW_GOAL `(p:num->num) j = 0`);;
e (REWRITE_WITH `(p j = 0) <=> inverse (p:num->num) 0 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 2 = j <=> p' j = 2`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;


e (REWRITE_WITH `EL (inverse p' 3) [v0; v1; v2; v3:real^3] = EL 1 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 1
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 1) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 3 = inverse (p:num->num) 1`);;
e (ABBREV_TAC `j = inverse (p:num->num) 1`);;
e (NEW_GOAL `(p:num->num) j = 1`);;
e (REWRITE_WITH `(p j = 1) <=> inverse (p:num->num) 1 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 3 = j <=> p' j = 3`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;


(* ======================================================================= *)

e (EXPAND_TAC "g");;
e (LET_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[PAIR_EQ; 
   ASSUME `x': (real^3->bool)#(real^3->bool)#(num->num)#(real^3)list =
   e',e'',p,vl`]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[ASSUME `e':real^3->bool = e''''`]);;
e (REWRITE_TAC[ASSUME `e'':real^3->bool = e'''`]);;
e (REWRITE_TAC[FUN_EQ_THM]);;

e (NEW_GOAL `!u:num. p u = 0 ==> p' u = 2`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 1 ==> p' u = 3`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 2 ==> p' u = 0`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 3 ==> p' u = 1`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u > 3 ==> p' u = u`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p u > 3 ==> p u = u`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `s = (p:num->num) u`);;
e (NEW_GOAL `(p:num->num) s = s`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (UNDISCH_TAC `s > 3` THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (NEW_GOAL `?x. (p:num->num) x = s /\ (!y'. p y' = s ==> y' = x)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `s = x'':num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `u = x'':num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!u:num. p' u = 0 ==> p u = 2`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 1 ==> p u = 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 2 ==> p u = 0`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 3 ==> p u = 1`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u > 3 ==> p u > 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (GEN_TAC);;
e (COND_CASES_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) x'' > 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;

(* ------------------------------------------------------------------------- *)

e (EXPAND_TAC "vl'");;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;  
e (REWRITE_TAC[ASSUME `vl = left_action_list p [v0; v1; v2; v3:real^3]`;                        left_action_list; TABLE_4; LENGTH;EL; HD;TL;
               ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`]);;
(* ======================================================================= *)

e (EXISTS_TAC `e'':real^3->bool` THEN EXISTS_TAC `e':real^3->bool`);;
e (ABBREV_TAC `p' =  (\i. if p i = 0
             then 2
             else if p i = 1
                  then 3
                  else if p i = 2 then 0 else if p i = 3 then 1 else i)`);;
e (EXISTS_TAC `p':num->num`);;
e (EXISTS_TAC `[EL 2 (vl:(real^3)list); EL 3 vl; EL 0 vl; EL 1 vl]`);;
e (REWRITE_WITH 
  `{EL 2 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl], 
    EL 3 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl]} 
   = {EL 0 vl, EL 1 (vl:(real^3)list)}`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;  
e (REWRITE_WITH 
  `{EL 0 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl], 
    EL 1 [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl]} 
   = {EL 2 vl, EL 3 (vl:(real^3)list)}`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;  
e (REWRITE_TAC[ASSUME `e'' = x:real^3->bool`; ASSUME `e' = y:real^3->bool`;
   ASSUME `y:real^3->bool = {EL 0 vl, EL 1 vl}`; 
   ASSUME `x:real^3->bool = {EL 2 vl, EL 3 vl}`;left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;

e (NEW_GOAL `!u:num. p u = 0 ==> p' u = 2`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 1 ==> p' u = 3`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 2 ==> p' u = 0`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u = 3 ==> p' u = 1`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p u > 3 ==> p' u = u`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p u > 3 ==> p u = u`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `s = (p:num->num) u`);;
e (NEW_GOAL `(p:num->num) s = s`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (UNDISCH_TAC `s > 3` THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (NEW_GOAL `?x. (p:num->num) x = s /\ (!y'. p y' = s ==> y' = x)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `s = x''':num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `u = x''':num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;

(* OK to here *)

e (NEW_GOAL `!u:num. p' u = 0 ==> p u = 2`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 1 ==> p u = 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 2 ==> p u = 0`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u = 3 ==> p u = 1`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u > 3`);;
e (NEW_GOAL `(p':num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. p' u > 3 ==> p u > 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p:num->num) u = 0`);;
e (NEW_GOAL `(p':num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 1`);;
e (NEW_GOAL `(p':num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 2`);;
e (NEW_GOAL `(p':num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p:num->num) u = 3`);;
e (NEW_GOAL `(p':num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

(* ------------------------------------------------------------------------- *)
(* begin to prove that p' permutes 0..3 *)

e (NEW_GOAL `p' permutes 0..3`);;
e (REWRITE_TAC[permutes]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `x''' > 3`);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (EXPAND_TAC "p'");;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN REPEAT STRIP_TAC);;

e (NEW_GOAL `(p:num->num) x''' = x'''`);;
e (ASM_SIMP_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (REWRITE_TAC[EXISTS_UNIQUE] THEN REPEAT STRIP_TAC);;

e (ASM_CASES_TAC `y' = 0`);;
e (NEW_GOAL `?z. (p:num->num) z = 2`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 2`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 2 /\ (!y'. p y' = 2 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `y' = 1`);;
e (NEW_GOAL `?z. (p:num->num) z = 3`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 3`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 3 /\ (!y'. p y' = 3 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `y' = 2`);;
e (NEW_GOAL `?z. (p:num->num) z = 0`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 0`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 0 /\ (!y'. p y' = 0 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `y' = 3`);;
e (NEW_GOAL `?z. (p:num->num) z = 1`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p:num->num) y'' = 1`);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?s:num. p s = 1 /\ (!y'. p y' = 1 ==> y' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `y' > 3`);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `?z. (p:num->num) z = y'`);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes] THEN MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `z:num`);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `(p:num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `(p':num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `(p:num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `(p':num->num) z = z`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `p permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `(p:num->num) y'' > 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `(p:num->num) y'' = y''`);;
e (MATCH_MP_TAC (ASSUME `!u:num. p u > 3 ==> p u = u`));;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p':num->num) y'' = y''`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `?s:num. p s = (y':num) /\ (!z'. p z' = y' ==> z' = s)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (REWRITE_WITH `y'' = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `z = s:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_MESON_TAC[]);;


(* finish proving that p' permutes 0..3 *)

e (REWRITE_TAC[ASSUME `p' permutes 0..3`]);;

(* --------------------------------------------------------------------- *)

e (REWRITE_WITH `EL (inverse p' 0) [v0; v1; v2; v3:real^3] = EL 2 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 2
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 2) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 0 = inverse (p:num->num) 2`);;
e (ABBREV_TAC `j = inverse (p:num->num) 2`);;
e (NEW_GOAL `(p:num->num) j = 2`);;
e (REWRITE_WITH `(p j = 2) <=> inverse (p:num->num) 2 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 0 = j <=> p' j = 0`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;


e (REWRITE_WITH `EL (inverse p' 1) [v0; v1; v2; v3:real^3] = EL 3 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 3
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 3) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 1 = inverse (p:num->num) 3`);;
e (ABBREV_TAC `j = inverse (p:num->num) 3`);;
e (NEW_GOAL `(p:num->num) j = 3`);;
e (REWRITE_WITH `(p j = 3) <=> inverse (p:num->num) 3 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 1 = j <=> p' j = 1`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (REWRITE_WITH `EL (inverse p' 2) [v0; v1; v2; v3:real^3] = EL 0 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 0
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 0) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 2 = inverse (p:num->num) 0`);;
e (ABBREV_TAC `j = inverse (p:num->num) 0`);;
e (NEW_GOAL `(p:num->num) j = 0`);;
e (REWRITE_WITH `(p j = 0) <=> inverse (p:num->num) 0 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 2 = j <=> p' j = 2`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;


e (REWRITE_WITH `EL (inverse p' 3) [v0; v1; v2; v3:real^3] = EL 1 vl`);;
e (ASM_REWRITE_TAC[left_action_list; 
   LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`; TABLE_4]);;
e (REWRITE_WITH  `EL 1
 [EL (inverse p 0) [v0; v1; v2; v3]; EL (inverse p 1) [v0; v1; v2; v3]; 
  EL (inverse p 2) [v0; v1; v2; v3]; EL (inverse p 3) [v0; v1; v2; v3]] 
 = EL (inverse p 1) [v0; v1; v2; v3:real^3]`);;
e (REWRITE_TAC[EL; HD;TL;ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (REWRITE_WITH `inverse p' 3 = inverse (p:num->num) 1`);;
e (ABBREV_TAC `j = inverse (p:num->num) 1`);;
e (NEW_GOAL `(p:num->num) j = 1`);;
e (REWRITE_WITH `(p j = 1) <=> inverse (p:num->num) 1 = j`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (UNDISCH_TAC `p permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `inverse (p':num->num) 3 = j <=> p' j = 3`);;
e (UNDISCH_TAC `p' permutes 0..3` THEN MESON_TAC[PERMUTES_INVERSE_EQ]);;
e (EXPAND_TAC "p'");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;


(* ======================================================================= *)

e (ONCE_REWRITE_TAC[ASSUME  
   `x':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list 
 = g (x'':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)`]);;
e (REWRITE_TAC[ASSUME
  `x'':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list = e',e'',p,vl`]  
   THEN EXPAND_TAC "g");;
e (LET_TAC);;
e (REWRITE_TAC[PAIR_EQ]);;
e (EXPAND_TAC "p'" THEN REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;

(*  --------------------------------------------------- *)
(* It is left to prove only 3 subgoals *)


(*         Phan tiep theo du dinh dung dinh ly SUM_IMAGE                    *)

e (EXPAND_TAC "g");;
e (DEL_TAC THEN DEL_TAC THEN DEL_TAC THEN DEL_TAC);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (GEN_TAC);;
e (NEW_GOAL `?e1 e2 p1 vl1. 
   x' = (e1:real^3->bool,e2:real^3->bool,p1:num->num, vl1:(real^3)list)`);;
e (EXISTS_TAC `FST  
  (x':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)`);;
e (EXISTS_TAC `FST (SND
  (x':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list))`);;
e (EXISTS_TAC `FST (SND (SND  
  (x':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)))`);;
e (EXISTS_TAC `SND (SND (SND  
  (x':(real^3->bool)#(real^3->bool)#(num->num)#(real^3)list)))`);;
e (REWRITE_TAC[PAIR]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH 
 `(\x. let e',e'',p,vl = x in
       e'', e', (\i. if p i = 0 then 2
                else if p i = 1 then 3
                else if p i = 2 then 0 
                else if p i = 3 then 1 else i),
       [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl])
  = (\(e':real^3->bool,e'':real^3->bool,p:num->num,vl:(real^3)list). 
      e'', e', (\i. if p i = 0 then 2
                else if p i = 1 then 3
                else if p i = 2 then 0 
                else if p i = 3 then 1 else i),
       [EL 2 vl; EL 3 vl; EL 0 vl; EL 1 vl])`);;
e (REWRITE_TAC[FUN_EQ_THM]);;
e (GEN_TAC);;
e (LET_TAC);;
e (REWRITE_TAC[BETA_THM]);;
e (REWRITE_TAC[o_THM]);;
e (REWRITE_WITH 
 `EL 0 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 vl1] = EL 2 (vl1:(real^3)list) /\
  EL 1 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 vl1] = EL 3 (vl1:(real^3)list) /\
  EL 2 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 vl1] = EL 0 (vl1:(real^3)list) /\
  EL 3 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 vl1] = EL 1 (vl1:(real^3)list)`);;
e (REWRITE_TAC[EL;HD;TL; LENGTH; ARITH_RULE `1=SUC 0/\2=SUC 1/\3=SUC 2`]);;

e (MATCH_MP_TAC SUM_IMAGE);;
e (EXPAND_TAC "S1" THEN EXPAND_TAC "S2");;
e (ONCE_REWRITE_TAC[IN]);;
e (REWRITE_TAC[IN_ELIM_THM]);;
e (EXPAND_TAC "g");;
e (REPEAT STRIP_TAC);;

e (NEW_GOAL `(let e1:real^3->bool,e2:real^3->bool,p1:num->num,vl1 = x' in
       e2,
       e1,
       (\i. if p1 i = 0
            then 2
            else if p1 i = 1
                 then 3
                 else if p1 i = 2 then 0 else if p1 i = 3 then 1 else i),
       [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 vl1]) =
      (let f1,f2,p2,vl2 = y' in
       f2,
       f1,
       (\i. if p2 i = 0
            then 2
            else if p2 i = 1
                 then 3
                 else if p2 i = 2 then 0 else if p2 i = 3 then 1 else i),
       [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 (vl2:(real^3)list)])`);;
e (ASM_REWRITE_TAC[ETA_AX]);;
e (UP_ASM_TAC THEN DEL_TAC THEN REPEAT LET_TAC THEN REWRITE_TAC[PAIR_EQ] THEN 
   REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[FUN_EQ_THM] THEN GEN_TAC);;
e (ABBREV_TAC 
  `q = (\i. if p1 i = 0
           then 2
           else if p1 i = 1
                then 3
                else if p1 i = 2 then 0 else if p1 i = 3 then 1 else i)`);;

e (NEW_GOAL `!u:num. p1 u = 0 ==> q u = 2`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "q");;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p1 u = 1 ==> q u = 3`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "q");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p1 u = 2 ==> q u = 0`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "q");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p1 u = 3 ==> q u = 1`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "q");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `!u:num. p1 u > 3 ==> q u = u`);;
e (REPEAT STRIP_TAC THEN EXPAND_TAC "q");;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p1 u > 3 ==> p1 u = u`);;
e (NEW_GOAL `p1 permutes 0..3`);;
e (REWRITE_WITH `p1:num->num = p`);;
e (UNDISCH_TAC `e1:real^3->bool,e2:real^3->bool,p1:num->num,vl1:(real^3)list = e',e'',p,vl` THEN REWRITE_TAC[PAIR_EQ]);;
e (MESON_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p1 permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `s = (p1:num->num) u`);;
e (NEW_GOAL `(p1:num->num) s = s`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (UNDISCH_TAC `s > 3` THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (NEW_GOAL `?z. (p1:num->num) z = s /\ (!y'. p1 y' = s ==> y' = z)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `s = z:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `u = z:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!u:num. q u = 0 ==> p1 u = 2`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p1:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p1:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u = 1 ==> p1 u = 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p1:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p1:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u = 2 ==> p1 u = 0`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p1:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p1:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u = 3 ==> p1 u = 1`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p1:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p1:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u > 3 ==> p1 u > 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p1:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p1:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;


e (NEW_GOAL `!u:num. p2 u = 0 ==> q u = 2`);;
e (REPEAT STRIP_TAC THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `!u:num. p2 u = 1 ==> q u = 3`);;
e (REPEAT STRIP_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p2 u = 2 ==> q u = 0`);;
e (REPEAT STRIP_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p2 u = 3 ==> q u = 1`);;
e (REPEAT STRIP_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p2 u > 3 ==> q u = u`);;
e (REPEAT STRIP_TAC THEN ASM_REWRITE_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;

e (NEW_GOAL `!u:num. p2 u > 3 ==> p2 u = u`);;
e (NEW_GOAL `p2 permutes 0..3`);;
e (REWRITE_WITH `p2:num->num = p'`);;
e (UNDISCH_TAC `f1:real^3->bool,f2:real^3->bool,p2:num->num,vl2:(real^3)list = e''',e'''',p',vl'` THEN REWRITE_TAC[PAIR_EQ]);;
e (MESON_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `p2 permutes 0..3` THEN REWRITE_TAC[permutes; EXISTS_UNIQUE]);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `s = (p2:num->num) u`);;
e (NEW_GOAL `(p2:num->num) s = s`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (UNDISCH_TAC `s > 3` THEN REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (NEW_GOAL `?z. (p2:num->num) z = s /\ (!y'. p2 y' = s ==> y' = z)`);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `s = z:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `u = z:num`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!u:num. q u = 0 ==> p2 u = 2`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p2:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p2:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u = 1 ==> p2 u = 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p2:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p2:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u = 2 ==> p2 u = 0`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p2:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p2:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u = 3 ==> p2 u = 1`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p2:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u > 3`);;
e (NEW_GOAL `(q:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(p2:num->num) u = u`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `!u:num. q u > 3 ==> p2 u > 3`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `(p2:num->num) u = 0`);;
e (NEW_GOAL `(q:num->num) u = 2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 1`);;
e (NEW_GOAL `(q:num->num) u = 3`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 2`);;
e (NEW_GOAL `(q:num->num) u = 0`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_CASES_TAC `(p2:num->num) u = 3`);;
e (NEW_GOAL `(q:num->num) u = 1`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_ARITH_TAC);;

e (ASM_CASES_TAC `(q:num->num) x'' = 0`);;
e (NEW_GOAL `(p1:num->num) x'' = 2`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `(p2:num->num) x'' = 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `(q:num->num) x'' = 1`);;
e (NEW_GOAL `(p1:num->num) x'' = 3`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `(p2:num->num) x'' = 3`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `(q:num->num) x'' = 2`);;
e (NEW_GOAL `(p1:num->num) x'' = 0`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `(p2:num->num) x'' = 0`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `(q:num->num) x'' = 3`);;
e (NEW_GOAL `(p1:num->num) x'' = 1`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `(p2:num->num) x'' = 1`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `(q:num->num) x'' > 3`);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `(p1:num->num) x'' > 3`);;
e (ASM_SIMP_TAC[]);;
e (ASM_SIMP_TAC[]);;

e (REWRITE_TAC[Packing3.LIST_EL_EQ]);;

(* ------------------------------------------------------------------------- *)

e (REWRITE_WITH `LENGTH (vl1:(real^3)list) = 4`);;
e (REWRITE_WITH `(vl1:(real^3)list) = vl`);;
e (UNDISCH_TAC `e1:real^3->bool,e2:real^3->bool,p1:num->num,vl1:(real^3)list 
   =  e',e'',p,vl` THEN REWRITE_TAC[PAIR_EQ]);;
e (MESON_TAC[]);;
e (ASM_REWRITE_TAC[left_action_list; TABLE_4; LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`]);;
e (REWRITE_WITH `LENGTH (vl2:(real^3)list) = 4`);;
e (REWRITE_WITH `(vl2:(real^3)list) = vl'`);;
e (UNDISCH_TAC `f1:real^3->bool,f2:real^3->bool,p2:num->num,vl2:(real^3)list 
   =  e''',e'''',p',vl'` THEN REWRITE_TAC[PAIR_EQ]);;
e (MESON_TAC[]);;
e (ASM_REWRITE_TAC[left_action_list; TABLE_4; LENGTH; ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`]);;
e (REPEAT STRIP_TAC);;

e (ASM_CASES_TAC `j = 0`);;
e (NEW_GOAL `EL 2 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] =
             EL 2 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 vl2]`);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH 
  `EL 2 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] = EL 0 vl1 /\
   EL 2 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 (vl2:(real^3)list)] = EL 0 vl2`);;
e (REWRITE_TAC[EL;HD;TL;ARITH_RULE`1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `j = 1`);;
e (NEW_GOAL `EL 3 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] =
             EL 3 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 vl2]`);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH 
  `EL 3 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] = EL 1 vl1 /\
   EL 3 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 (vl2:(real^3)list)] = EL 1 vl2`);;
e (REWRITE_TAC[EL;HD;TL;ARITH_RULE`1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `j = 2`);;
e (NEW_GOAL `EL 0 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] =
             EL 0 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 vl2]`);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH 
  `EL 0 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] = EL 2 vl1 /\
   EL 0 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 (vl2:(real^3)list)] = EL 2 vl2`);;
e (REWRITE_TAC[EL;HD;TL;ARITH_RULE`1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `j = 3`);;
e (NEW_GOAL `EL 1 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] =
             EL 1 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 vl2]`);;
e (AP_TERM_TAC);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_WITH 
  `EL 1 [EL 2 vl1; EL 3 vl1; EL 0 vl1; EL 1 (vl1:(real^3)list)] = EL 3 vl1 /\
   EL 1 [EL 2 vl2; EL 3 vl2; EL 0 vl2; EL 1 (vl2:(real^3)list)] = EL 3 vl2`);;
e (REWRITE_TAC[EL;HD;TL;ARITH_RULE`1=SUC 0/\2=SUC 1/\3=SUC 2`]);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `X:real^3->bool = {}`);;
e (ASM_MESON_TAC[]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_WITH `{e | e IN critical_edgeX V X} = {}`);;
e (REWRITE_TAC[SET_RULE `{x| x IN s} = s`]);;
e (ASM_REWRITE_TAC[critical_edgeX; edgeX]);;
e (REWRITE_WITH `VX V {} = {}`);;
e (REWRITE_TAC [VX]);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `F`);;
e (UP_ASM_TAC THEN REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_WITH `{{u:real^3, v:real^3} | {} u /\ {} v /\ ~(u = v)} = 
                 {{u, v} | u IN {} /\ v IN {} /\ ~(u = v)}`);;
e (REWRITE_TAC[IN]);;
e (REWRITE_TAC[MESON[NOT_IN_EMPTY] `x IN {} <=> F`]);;
e (REWRITE_WITH `{{u:real^3, v:real^3} | F} = {}`);;
e (REWRITE_TAC[SET_EQ_LEMMA; IN; IN_ELIM_THM]);;
e (GEN_TAC);;
e (REWRITE_WITH `{} (x:real^3->bool) <=> x IN {}`);;
e (REWRITE_TAC[IN]);;
e (SET_TAC[]);;
e (REWRITE_TAC[MESON[NOT_IN_EMPTY] `x IN {} <=> F`]);;
e (REWRITE_TAC[SET_EQ_LEMMA; IN; IN_ELIM_THM]);;
e (GEN_TAC);;
e (REWRITE_WITH `{} (x:real^3->bool) <=> x IN {}`);;
e (REWRITE_TAC[IN]);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUM_CLAUSES]);;

let SUM_BETA_BUMP_LEMMA = top_thm();;



