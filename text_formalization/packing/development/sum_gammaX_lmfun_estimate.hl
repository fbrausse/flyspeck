(* ========================================================================= *)
(*                   The working file of KIZHLTL3 lemma                      *)
(* ========================================================================= *)
(*                   Axioms and loads                                        *)
(* ========================================================================= *)
  (* Viet rieng thanh 1 bo de DIHX_SYM: 



g `!V X u v.
     packing V /\ saturated V /\ mcell_set V X /\ {u, v} IN edgeX V X
     ==> dihX V X (u,v) = dihX V X (v,u)`;;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[dihX]);;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REFL_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (DEL_TAC THEN REWRITE_TAC[cell_params_d] THEN REPEAT LET_TAC);;

e (UNDISCH_TAC `{u, v} IN edgeX V X` THEN REWRITE_TAC[edgeX; IN;IN_ELIM_THM]);;
e (REWRITE_WITH `VX V X = V INTER X`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `mcell_set V X` THEN REWRITE_TAC[mcell_set;IN_ELIM_THM;IN]);;
e (MESON_TAC[]);;
e (STRIP_TAC);;
e (MP_TAC (ASSUME `(V INTER X) (u':real^3)`) THEN 
   MP_TAC (ASSUME `(V INTER X) (v':real^3)`));;
e (UNDISCH_TAC `mcell_set V X` THEN REWRITE_TAC[mcell_set_2;IN_ELIM_THM;IN]);;
e (STRIP_TAC);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul''`]);;
e (REWRITE_WITH `(V INTER mcell i V ul'') = set_of_list (truncate_simplex (i-1) ul'')`);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `X = mcell i V ul''`)]);;
e (STRIP_TAC);;
e (REWRITE_TAC[ARITH_RULE `1 <= i <=> ~(i = 0)`]);;
e (STRIP_TAC);;
e (MP_TAC (ASSUME `(V INTER X) (u':real^3)`));;
e (REWRITE_WITH `V INTER X:real^3->bool = {}`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ_0);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`]);;
e (SET_TAC[]);;
e (UNDISCH_TAC `~NULLSET X` THEN MESON_TAC[NEGLIGIBLE_EMPTY]);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `i <= 1`);;
e (NEW_GOAL `?w0 w1 w2 w3. ul'' = [w0;w1;w2;w3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (UNDISCH_TAC `set_of_list (truncate_simplex (i - 1) ul'') (v':real^3)` THEN
   UNDISCH_TAC `set_of_list (truncate_simplex (i - 1) ul'') (u':real^3)`);;
e (NEW_GOAL `i - 1 = 0`);;
e (UNDISCH_TAC `i <= 1` THEN ARITH_TAC);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_0; set_of_list; 
   MESON[IN] `(A:real^3->bool) b <=> b IN A`]);;
e (REWRITE_TAC[SET_RULE `a IN {b} <=> a = b`]);;
e (UNDISCH_TAC `~(u' = v':real^3)`);;
e (SET_TAC[]);; 
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `~(i <= 1) <=> 2 <= i`] 
   THEN STRIP_TAC);;

e (NEW_GOAL `?p. p permutes 0..i - 1 /\ 
                 initial_sublist [u:real^3; v] (left_action_list p ul'')`);;
e (NEW_GOAL `?w0 w1 w2 w3. ul'' = [w0;w1;w2;w3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (ASM_CASES_TAC `i = 2`);;
e (UNDISCH_TAC `set_of_list (truncate_simplex (i - 1) ul'') (v':real^3)` THEN
   UNDISCH_TAC `set_of_list (truncate_simplex (i - 1) ul'') (u':real^3)`);;
e (NEW_GOAL `i - 1 = 1`);;
e (UNDISCH_TAC `i = 2` THEN ARITH_TAC);;
e (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_1; set_of_list; 
   MESON[IN] `(A:real^3->bool) b <=> b IN A`]);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `u = w0:real^3`);;
e (NEW_GOAL `v = w1:real^3`);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN UP_ASM_TAC THEN UNDISCH_TAC 
  `~(u' = v':real^3)` THEN UNDISCH_TAC `{u,v} = {u',v':real^3}` 
   THEN SET_TAC[]);;
e (EXISTS_TAC `I:num->num`);;
e (ASM_REWRITE_TAC[PERMUTES_I; Packing3.LEFT_ACTION_LIST_I]);;
e (REWRITE_WITH `initial_sublist [w0; w1] [w0; w1; w2; w3] /\ 
                 LENGTH [w0;w1:real^3] = 1 + 1`);;
e (REWRITE_TAC[GSYM Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);;
e (REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_1; LENGTH] THEN ARITH_TAC);;
e (NEW_GOAL `v = w0:real^3 /\ u = w1:real^3`);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN UP_ASM_TAC THEN UNDISCH_TAC 
  `~(u' = v':real^3)` THEN UNDISCH_TAC `{u,v} = {u',v':real^3}` 
   THEN SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `?p. p permutes 0..1 /\ 
                 [w1; w0; w2; w3:real^3] = left_action_list p ul''`);;
e (MATCH_MP_TAC Qzksykg.TWO_REARRANGEMENT_LEMMA);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN ASM_REWRITE_TAC[] THEN STRIP_TAC);;
e (EXISTS_TAC `p:num->num` THEN ASM_REWRITE_TAC[] THEN REWRITE_TAC[GSYM 
   (ASSUME `[w1; w0; w2; w3] = left_action_list p [w0; w1; w2; w3:real^3]`)]);;
e (REWRITE_WITH `initial_sublist [w1; w0] [w1; w0; w2; w3] /\ 
                 LENGTH [w1;w0:real^3] = 1 + 1`);;
e (REWRITE_TAC[GSYM Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);;
e (REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_1; LENGTH] THEN ARITH_TAC);;



search [`initial_sublist`; `truncate_simplex`];;

b();;

b();;

search [`left_action_list I u`];;


e (REWRITE_TAC[SET_RULE `a IN {b} <=> a = b`]);;
e (UNDISCH_TAC `~(u' = v':real^3)`);;
e (SET_TAC[]);; 
e (UP_ASM_TAC THEN REWRITE_TAC[ARITH_RULE `~(i <= 1) <=> 2 <= i`] 
   THEN STRIP_TAC);;



b();;

e (ASM_REWRITE_TAC[left_action_list; TABLE_4; LENGTH; 
   ARITH_RULE `SUC (SUC (SUC (SUC 0))) = 4`]);;


p();;

b();;







search [`?p. P p /\  p permutes s`];;


b();;

e (REPEAT STRIP_TAC);;


b();;

e (ABBREV_TAC `P = (\(k, ul). k <= 4 /\
                              ul IN barV V 3 /\
                              X = mcell k V ul /\
                              initial_sublist [v; u] ul)`);;
e (NEW_GOAL `(P:num#(real^3)list->bool) (k, ul)`);;
e (REWRITE_TAC[GSYM (ASSUME `(@) (P:num#(real^3)list->bool) = k,ul`)]);;
e (MATCH_MP_TAC SELECT_AX);;


search [`set_of_list ul = set_of_list vl`];;


search [`?p:num->num. P`];;


b();;
p();;


seans_fn();;

b();;

p();;


edgeX;;
search [`VX V X`];;
search [`V INTER X = set_of_list ul`];;

V INTER mcell k V ul =
               set_of_list (truncate_simplex (k - 1) ul));;

search [`mcell i V ul = mcell j V vl`];;
Rvfxzbu.RVFXZBU;;
p permutes 0..i - 1
           ==> mcell i V (left_action_list p ul) = mcell i V ul)


cell_params_d;;

 
          when x is mcell and {u,v} IN edgeX V x  *)




let gammaY = new_definition 
 `!V X f.
         gammaY V X f =
         (\({u, v}). if {u, v} IN edgeX V X
                     then dihX V X (u,v) * f (hl [u; v])
                     else &0)`;;
g `!V. packing V /\ saturated V
     ==> (?d. !X e. mcell_set V X /\ edgeX V X e ==> gammaY V X lmfun e <= d)`;;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `d:real`);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `f = (\u v. if {u, v} IN edgeX V X
                             then dihX V X (u,v) * lmfun (hl [u; v])
                          else &0)`);;
e (REWRITE_WITH `gammaY V X lmfun = (\({u, v}). f u v)`);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[gammaY]);;
e (NEW_GOAL `!u v. (f:real^3->real^3->real) u v = f v u`);;




e (EXPAND_TAC "f" THEN REWRITE_TAC[BETA_THM]);;
e (REWRITE_TAC[HL; set_of_list; SET_RULE `{a,b} = {b,a}`]);;
e (REPEAT GEN_TAC THEN COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_WITH `dihX V X (u,v) = dihX V X (v,u)`);;
e (KY_CHEAT_TAC);;


e (UP_ASM_TAC THEN MESON_TAC[]);;
e (COND_CASES_TAC);;
e (UP_ASM_TAC THEN MESON_TAC[]);;
e (REFL_TAC);;


e (REWRITE_WITH `(\({u, v}). f u v) {u, v} = 
                             (f:real^3->real^3->real) u v`);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH `(g:(real^3->bool)->(real^3->bool)->real) x = 
                 (\({u, v}). f_temp u v)`);;
e (EXPAND_TAC "f_temp" THEN EXPAND_TAC "g" THEN REWRITE_TAC[IN]);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC BETA_PAIR_THM);;
e (ASM_REWRITE_TAC[]);;

b();;
 
let gammaX_2 = prove (`!V X f.
         gammaX V X f =
         vol X - (&2 * mm1 / pi) * total_solid V X +
         (&8 * mm2 / pi) * sum (edgeX V X) (gammaY V X f)`, 
           KY_CHEAT_TAC);;

open Upfzbzm_support_lemmas;;
#use "/home/vu/flyspeck/working/marchal_cells_3.hl";;
#use "/home/vu/flyspeck/working/KIZHLTL.hl";;
#use "/home/ky/flyspeck/working/UPFZBZM_2011.hl";;

let SUM_GAMMAX_LMFUN_ESTIMATE_concl = 
  `!V. ?c. !r. saturated V /\ packing V /\ &1 <= r /\ 
               cell_cluster_estimate V /\ marchal_inequality /\
               lmfun_inequality V ==> 
    c * r pow 2 <=  sum {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X} 
    (\X. gammaX V X lmfun)`;;

let TSKAJXY_concl = 
`!V X. saturated V /\ packing V /\ mcell_set V X /\ critical_edgeX V X  = {} 
   ==> gammaX V X lmfun >= &0`;;

let TSKAJXY = prove (TSKAJXY_concl, KY_CHEAT_TAC);;
let OXLZLEZ = prove (OXLZLEZ_concl, KY_CHEAT_TAC);;

(* ========================================================================= *)
(*      The above lemmas are to be proved by computer calculations           *)
(* ========================================================================= *)
(*               Continue back up of complementary lemmas                    *)
(* ========================================================================= *)

g SUM_GAMMAX_LMFUN_ESTIMATE_concl;;
e (GEN_TAC);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `!X. mcell_set V X /\ critical_edgeX V X  = {} ==> 
                 gammaX V X lmfun >= &0`);;
e (ASM_MESON_TAC[TSKAJXY]);;

(* ------------------------------------------------------------------------ *)

e (ABBREV_TAC `B = {X | X SUBSET ball (vec 0, r)  /\ mcell_set V X}`);;
e (ABBREV_TAC `B0 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         critical_edgeX V X = {}}`);;
e (ABBREV_TAC `B1 = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\
                         ~(critical_edgeX V X = {})}`);;
e (NEW_GOAL `FINITE (B1:(real^3->bool)->bool)`);;
e (EXPAND_TAC "B1");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;

e (REWRITE_WITH `B = B0 UNION B1:(real^3->bool)->bool`);;
e (EXPAND_TAC "B" THEN EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (REWRITE_WITH `sum (B0 UNION B1) (\X. gammaX V X lmfun) = 
   sum B0 (\X. gammaX V X lmfun) + sum B1 (\X. gammaX V X lmfun)`);;
e (MATCH_MP_TAC SUM_UNION);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "B1" THEN EXPAND_TAC "B0");;
e (SET_TAC[]);;
e (MATCH_MP_TAC (REAL_ARITH `&0 <= b /\ a <= c ==> a <= b + c`));;
e (STRIP_TAC);;
e (MATCH_MP_TAC SUM_POS_LE);;
e (STRIP_TAC);;
e (EXPAND_TAC "B0");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[FINITE_MCELL_SET_LEMMA]);;
e (SET_TAC[]);;
e (REWRITE_TAC[BETA_THM; REAL_ARITH `&0 <= a <=> a >= &0`]);;
e (EXPAND_TAC "B0" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;

e (REWRITE_WITH 
  `sum B1 (\X. gammaX V X lmfun) = 
   sum B1 (\X. (gammaX V X lmfun) * 
                sum (critical_edgeX V X) (\e. critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[critical_weight]);;
e (REWRITE_WITH 
  `sum (critical_edgeX V x) (\e. &1 / &(CARD (critical_edgeX V x))) = 
   &(CARD (critical_edgeX V x)) * (&1 / &(CARD (critical_edgeX V x)))`);;
e (MATCH_MP_TAC SUM_CONST);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (REWRITE_TAC[REAL_ARITH `a * &1 / a = a / a`]);;
e (REWRITE_WITH `&(CARD (critical_edgeX V x)) / &(CARD (critical_edgeX V x)) = &1`);;
e (MATCH_MP_TAC REAL_DIV_REFL);;
e (REWRITE_TAC[REAL_OF_NUM_EQ]);;
e (REWRITE_WITH `CARD (critical_edgeX V x) = 0 <=> critical_edgeX V x = {}`);;
e (MATCH_MP_TAC CARD_EQ_0);;
e (REWRITE_TAC[FINITE_critical_edgeX]);;
e (ASM_REWRITE_TAC[]);;
e (REAL_ARITH_TAC);;

(* ------------------------------------------------------------------------- *)
(* Hint:      - See proofs of KIZHLTL1; KIZHLTL2 to adapt                    *)
(* ------------------------------------------------------------------------- *)

e (REWRITE_TAC[GSYM SUM_LMUL]);;
e (ABBREV_TAC `T1:real^3->bool = V INTER ball (vec 0, r)`);;
e (ABBREV_TAC `T2 = {{u0, u1:real^3} | u0 IN T1 /\ u1 IN T1}`);;
e (NEW_GOAL `FINITE (T2:(real^3->bool)->bool)`);;
e (EXPAND_TAC "T2" THEN MATCH_MP_TAC FINITE_SET_PRODUCT_KY_LEMMA);;
e (EXPAND_TAC "T1" THEN MATCH_MP_TAC Pack2.KIUMVTC);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH 
 `sum B1 (\X. sum (critical_edgeX V X) 
                   (\x. gammaX V X lmfun * critical_weight V X)) =
  sum B1 (\X. sum {y:real^3->bool| y IN T2 /\ critical_edgeX V X y} 
                   (\x. gammaX V X lmfun * critical_weight V X))`);;
e (MATCH_MP_TAC SUM_EQ);;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (AP_THM_TAC THEN AP_TERM_TAC);;
e (REWRITE_TAC[SET_RULE `a = b <=> b SUBSET a /\ a SUBSET b`]);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[SET_RULE `A SUBSET {y | T2 y /\ A y} <=> A SUBSET T2`]);;
e (EXPAND_TAC "T2" THEN REWRITE_TAC[SUBSET; critical_edgeX; IN; IN_ELIM_THM; edgeX]);;
e (REPEAT STRIP_TAC);;
e (EXPAND_TAC "T1" THEN REWRITE_TAC[IN_ELIM_THM]);;
e (EXISTS_TAC `u':real^3` THEN EXISTS_TAC `v':real^3`);;
e (REWRITE_TAC[ASSUME `x' = {u, v:real^3}`; MESON[IN] `V (x:real^3) <=> x IN V`;
               GSYM (ASSUME `{u, v} = {u', v':real^3}`); IN_INTER]);;
e (NEW_GOAL `VX V x = V INTER x`);;
e (MATCH_MP_TAC Hdtfnfz.HDTFNFZ);;
e (UNDISCH_TAC `mcell_set V x` THEN REWRITE_TAC[mcell_set; IN; IN_ELIM_THM]);;
e (STRIP_TAC);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (NEW_GOAL `VX V x = {}`);;
e (REWRITE_TAC[VX]);;
e (ASM_REWRITE_TAC[]);;
e (UNDISCH_TAC `VX V x u'` THEN ASM_REWRITE_TAC[MESON[IN] `{} x <=> x IN {}`]);;
e (SET_TAC[]);;
e (ASM_SET_TAC[]);;

e (ABBREV_TAC `f = (\X. (\x:real^3->bool. 
                            gammaX V X lmfun * critical_weight V X))`);;
e (REWRITE_WITH 
 `sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y}
                  (\x:real^3->bool. gammaX V X lmfun * critical_weight V X)) = 
  sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y}
                  (\x:real^3->bool. f X x))`);;
e (EXPAND_TAC "f" THEN REFL_TAC);;
e (REWRITE_WITH 
  `sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y} (\x. f X x)) = 
   sum T2 (\x. sum {X | X IN B1 /\ critical_edgeX V X x} (\X. f X x))`);;
e (ASM_SIMP_TAC[SUM_SUM_RESTRICT]);;

e (EXPAND_TAC "f");;
e (EXPAND_TAC "B1" THEN REWRITE_TAC[IN; IN_ELIM_THM]);;





seans_fn();;



search [`ball (a, b) DIFF ball (c, d)`];;

search []
gammaX;;
edgeX;;



VOLUME_BALL;;

b();;

seans_fn();;

search [`mcell`; `ball`];;


b();;


g `!V. ?c. (!X.
           saturated V /\
           packing V /\
           mcell_set V X /\
           critical_edgeX V X = {}
           ==> gammaX V X lmfun <= c)`;;
e (GEN_TAC);;
e (ASM_CASES_TAC `saturated V /\ packing V`);;
e (EXISTS_TAC `c:real`);;
e (REPEAT STRIP_TAC);;

e (REWRITE_TAC[gammaX]);;



p();;


total_solid;;

type_of `packing`;;
sol;;
p();;
edgeX;;

search [`sol`];;

search [``]
search [`gammaX`];;

critical_edgeX;;
critical_weight;;




search [`&0 <= dihX a b (c,d)`];;

search [`dihV a b c d <= e`];;

b();;

e (NEW_GOAL ``
gammaX;;


p();;

search [`CARD {}`];;
gammaX;;


search [`gammaX`];;
p();;
b();;

arcV;;
acs;;
search [`acs x <= t`];;

critical_weight;;
critical_edgeX;;
gammaX;;
dihX;;
dihu3;;
dihV;;
search [`dihV`];;

lmfun;;
p();;

g `[a;b] = list_of_set {a,b}`;;
e (REWRITE_TAC[list_of_set]);;

seans_fn();;
b();;

=sum B1 (\X. sum {y | y IN T2 /\ critical_edgeX V X y} (\x. f X x))
seans_fn();;

SUM_SUM_RESTRICT;;

search [`sum s (\x. f x * g x)`];;


search [``]

SUM_LMUL;;



mk_thm;;
p();;


cell_cluster;;

cell_cluster_estimate;;

cluster_gammaX;;





