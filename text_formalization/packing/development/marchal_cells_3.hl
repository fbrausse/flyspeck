(* ========================================================================= *)
(*                FLYSPECK - BOOK FORMALIZATION                              *)
(*                                                                           *)
(*      Authour   : VU KHAC KY                                               *)
(*      Book lemma:                                                          *)
(*      Chaper    : Packing (Marchal Cells 3)                                *)
(*                                                                           *)
(* ========================================================================= *)
let TAKE_TAC = UP_ASM_TAC THEN REPEAT STRIP_TAC;;

let HD_IN_ROGERS = prove (
 `!V ul. saturated V /\ packing V /\ barV V 3 ul ==> HD ul IN rogers V ul`,
REPEAT STRIP_TAC THEN 
ASM_SIMP_TAC[ROGERS_EXPLICIT] THEN 
MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET THEN SET_TAC[]);; 

(* ==================================================================== *)
g `!V ul. saturated V /\ packing V /\ barV V 3 ul ==> 
          rogers V ul SUBSET voronoi_closed V (HD ul)`;;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[ROGERS_EXPLICIT]);;
e (NEW_GOAL `voronoi_closed V (HD ul) = 
   convex hull (voronoi_closed V ((HD ul):real^3))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (REWRITE_TAC[CONVEX_HULL_EQ]);;
e (REWRITE_TAC[Packing3.CONVEX_VORONOI_CLOSED]);;
e (ONCE_ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Marchal_cells.CONVEX_HULL_SUBSET);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (REWRITE_TAC[GSYM OMEGA_LIST_N]);;
e (REWRITE_WITH `voronoi_closed V (omega_list_n V ul 0) = 
                 voronoi_list V (truncate_simplex 0 ul)`);;
e (ASM_REWRITE_TAC[OMEGA_LIST_N; TRUNCATE_SIMPLEX_EXPLICIT_0; VORONOI_LIST; 
   VORONOI_SET; set_of_list; HD] THEN SET_TAC[]);;

e (NEW_GOAL `omega_list_n V ul 0 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (NEW_GOAL `omega_list_n V ul 1 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (NEW_GOAL `omega_list_n V ul 2 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (NEW_GOAL `omega_list_n V ul 3 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (ASM_SET_TAC[]);;

let ROGERS_SUBSET_VORONOI_CLOSED = top_thm ();;

(* ==================================================================== *)

g `!V ul i r X . 
      packing V /\ 
      saturated V /\ 
      barV V 3 ul /\ 
      X = mcell i V ul /\ 
     ~(X = {}) /\ ~(i = 0)
     ==> (HD ul IN X)`;;
e (REPEAT STRIP_TAC);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (ASM_REWRITE_TAC[HD]);;
e (ASM_CASES_TAC `i = 1`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell1]);;
e (COND_CASES_TAC);;
e (ASM_SIMP_TAC[IN_DIFF;IN_INTER; HD; TL; IN_CBALL; DIST_REFL;  
   TRUNCATE_SIMPLEX_EXPLICIT_1; rcone_gt; rconesgn]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_WITH `u0 = HD ul /\ [u0; u1; u2; u3:real^3] = ul`);;
e (ASM_REWRITE_TAC[HD]);;
e (MATCH_MP_TAC HD_IN_ROGERS);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SQRT_POS_LE);;
e (REAL_ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN; IN_ELIM_THM; VECTOR_ARITH 
  `(u0 - u0) dot (u1 - u0) = &0`; DIST_REFL]);;
e (REAL_ARITH_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`; ASSUME `i = 1`; MCELL_EXPLICIT; mcell1]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `i = 2`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell2]);;
e (COND_CASES_TAC);;
e (LET_TAC);;
e (ASM_SIMP_TAC[IN_INTER; HD; TL; DIST_REFL;  
   TRUNCATE_SIMPLEX_EXPLICIT_1; rcone_ge; rconesgn; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[VECTOR_ARITH `(u0 - u0) dot (u1 - u0) = &0`]);;
e (REAL_ARITH_TAC);;
e (REWRITE_TAC[GSYM NORM_POW_2; GSYM dist; REAL_POW_2]);;
e (REWRITE_TAC[REAL_ARITH `a * a >= a * a * b <=> &0 <= a * a * (&1 - b)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[DIST_POS_LE]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[DIST_POS_LE]);;
e (ABBREV_TAC `s = hl (truncate_simplex 1 [u0; u1; u2; u3:real^3])`);;
e (EXPAND_TAC "a");;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - b <=> b <= a`]);;
e (REWRITE_WITH `s / sqrt (&2) <= &1 <=> s <= &1 * sqrt (&2)`);;
e (MATCH_MP_TAC REAL_LE_LDIV_EQ);;
e (MATCH_MP_TAC SQRT_POS_LT THEN REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_WITH `[u0; u1; u2; u3:real^3] = ul`);;
e (ASM_REWRITE_TAC[]);;
e (ABBREV_TAC `m = mxi V ul`);;
e (ABBREV_TAC `s3 = omega_list_n V ul 3`);;
e (REWRITE_WITH `aff_ge {u0, u1:real^3} {m, s3} u0 <=>
                 u0 IN aff_ge {u0, u1} {m, s3}`);;
e (REWRITE_TAC[IN]);;
e (NEW_GOAL `u0 IN convex hull {u0,u1,m,s3:real^3}`);;
e (MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET);;
e (SET_TAC[]);;
e (NEW_GOAL `convex hull {u0,u1,m,s3:real^3} SUBSET aff_ge {u0, u1} {m, s3}`);;
e (REWRITE_TAC[Marchal_cells_2_new.CONVEX_HULL_4_SUBSET_AFF_GE_2_2]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`; ASSUME `i = 2`; MCELL_EXPLICIT; mcell2]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `i = 3`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell3]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[set_of_list;TRUNCATE_SIMPLEX_EXPLICIT_2]);;
e (MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET);;
e (SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`; ASSUME `i = 3`; MCELL_EXPLICIT; mcell3]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `i >= 4`);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; mcell4]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[set_of_list]);;
e (MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET);;
e (SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (SIMP_TAC[ASSUME `X = mcell i V ul`; ASSUME `i >= 4`; MCELL_EXPLICIT; mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

let HD_IN_MCELL = top_thm();;

(* ==================================================================== *)
g `!V ul i r X . 
      packing V /\ 
      saturated V /\ 
      barV V 3 ul /\ 
      X = mcell i V ul /\ 
      X SUBSET ball (vec 0, r) /\ 
     ~(X = {}) 
     ==> (!u. u IN set_of_list ul ==> u IN ball (vec 0, r + &6))`;;
e (REPEAT STRIP_TAC);;

(* Case i = 0 *)
e (ASM_CASES_TAC `i = 0`);;
e (UNDISCH_TAC `X = mcell i V ul`THEN ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell0]);;
e (STRIP_TAC);;
e (NEW_GOAL `!s. s IN rogers V ul ==> dist (HD ul, s) < &2`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `rogers V ul SUBSET voronoi_closed V (HD ul)`);;
e (ASM_SIMP_TAC[ROGERS_SUBSET_VORONOI_CLOSED]);;
e (NEW_GOAL `s:real^3 IN voronoi_closed V (HD ul)`);;
e (ASM_SET_TAC[]);;
e (UNDISCH_TAC `saturated (V:real^3->bool)`);;
e (REWRITE_TAC[saturated]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?y. y IN V /\ dist (s, y:real^3) < &2`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (UNDISCH_TAC `s:real^3 IN voronoi_closed V (HD ul)` THEN REWRITE_TAC[voronoi_closed; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (s,HD ul) <= dist (s,y:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (ONCE_REWRITE_TAC[DIST_SYM] THEN ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `?s. s:real^3 IN X`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `dist (HD ul, s:real^3) < &2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `set_of_list (ul:(real^3)list) SUBSET ball (HD ul,&4)`);;
e (MATCH_MP_TAC BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_IN_SET_OF_LIST);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (NEW_GOAL `u:real^3 IN ball (HD ul, &4)`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_BALL]);;
e (STRIP_TAC);;
e (NEW_GOAL `dist (vec 0,u) <= dist (vec 0, s) + dist (s, u:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (s, u) <= dist (s, HD ul) + dist (HD ul, u:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (vec 0,u) <=  
   dist (vec 0,s) + dist (s,HD ul) + dist (HD ul,u:real^3)`);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `dist (s:real^3, HD ul) < &2`);;
e (ONCE_REWRITE_TAC[DIST_SYM] THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `dist (vec 0,s:real^3) < r`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (ASM_SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

(* Case i != 0 *)

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `(HD ul):real^3 IN X`);;
e (MATCH_MP_TAC HD_IN_MCELL);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(HD ul):real^3 IN ball (vec 0, r)`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_BALL] THEN STRIP_TAC);;
e (NEW_GOAL `dist (vec 0,u) <= dist (vec 0,HD ul) + dist (HD ul, u:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `set_of_list (ul:(real^3)list) SUBSET ball (HD ul,&4)`);;
e (MATCH_MP_TAC BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[HD; set_of_list]);;
e (SET_TAC[]);;
e (NEW_GOAL `u:real^3 IN ball (HD ul, &4)`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_BALL]);;
e (STRIP_TAC);;
e (ASM_REAL_ARITH_TAC);;

let FINITE_MCELL_SET_lemma1 = top_thm();;

(* ==================================================================== *)

let FINITE_MCELL_SET_LEMMA_concl = 
   `!V r. packing V /\ saturated V ==> 
          FINITE {X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`;;

g FINITE_MCELL_SET_LEMMA_concl;;
e (REPEAT STRIP_TAC);;

e (REWRITE_WITH `FINITE {X | X SUBSET ball (vec 0,r) /\ mcell_set V X} <=>
   FINITE {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ASM_CASES_TAC `{} IN {X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (REWRITE_WITH `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X} = 
   {} INSERT {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ONCE_REWRITE_TAC[SET_RULE `A = B <=> B SUBSET A /\ A SUBSET B`]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[INSERT_SUBSET]);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUBSET_INSERT_DELETE]);;
e (ONCE_REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN_DELETE] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (SET_TAC[]);;
e (REWRITE_TAC[FINITE_INSERT]);;
e (REWRITE_WITH `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X} = 
  {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ONCE_REWRITE_TAC[SET_RULE `A = B <=> B SUBSET A /\ A SUBSET B`]);;
e (REPEAT STRIP_TAC);;
e (SET_TAC[]);;
e (ONCE_REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] 
   THEN REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `{} IN {X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (ONCE_REWRITE_TAC[IN] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ABBREV_TAC 
  `S = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ABBREV_TAC `s1:(real^3->bool) = V INTER ball (vec 0, r + &6)`);;
e (ABBREV_TAC `s2 = {ul:(real^3)list |  ?u0 u1 u2 u3.
               u0 IN s1 /\
               u1 IN s1 /\
               u2 IN s1 /\
               u3 IN s1 /\
               ul = [u0; u1; u2; u3]}`);;
e (ABBREV_TAC `s3 = {(i:num, ul:(real^3)list) | i IN 0..4 /\ ul IN s2}`);;
e (NEW_GOAL`S SUBSET {X| ?t. t IN s3 /\ X = (\t. mcell (FST t) V (SND t)) t}`);;
e (EXPAND_TAC "S" THEN EXPAND_TAC "s3");;
e (ONCE_REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] THEN  
   REWRITE_TAC[IN_ELIM_THM; FST; SND; mcell_set]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `((if i <= 4 then i else 4), ul:(real^3)list)`);;
e (ASM_REWRITE_TAC[FST;SND]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `(if i <= 4 then i else 4)` THEN EXISTS_TAC `ul:(real^3)list`);;
e (REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[IN_NUMSEG_0]);;
e (ASM_REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (EXPAND_TAC "s2");;
e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC THEN ONCE_REWRITE_TAC[IN]);;
e (REWRITE_TAC[IN_ELIM_THM]);;
e (EXISTS_TAC `u0:real^3` THEN EXISTS_TAC `u1:real^3`);;
e (EXISTS_TAC `u2:real^3` THEN EXISTS_TAC `u3:real^3`);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!u:real^3. u IN set_of_list ul ==> u IN s1`);;
e (EXPAND_TAC "s1" THEN REPEAT STRIP_TAC);;
e (REWRITE_TAC[IN_INTER]);;
e (STRIP_TAC);;
e (NEW_GOAL `set_of_list ul SUBSET (V:real^3->bool)`);;
e (MATCH_MP_TAC Packing3.BARV_SUBSET);;
e (EXISTS_TAC `3` THEN ASM_MESON_TAC[IN]);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `!u:real^3. u IN set_of_list ul ==> u IN ball (vec 0,r + &6)`);;
e (MATCH_MP_TAC FINITE_MCELL_SET_lemma1);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `i:num` THEN 
   EXISTS_TAC `x:real^3->bool`);;
e (ASM_MESON_TAC[IN]);;
e (ASM_SIMP_TAC[]);;
e (REPEAT STRIP_TAC);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;

e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `i >= 4`);;
e (ASM_ARITH_TAC);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`]);;
e (MATCH_MP_TAC FINITE_SUBSET);;

e (EXISTS_TAC `{X | ?t. t IN s3 /\ X = (\t. mcell (FST t) V (SND t)) t}`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (EXPAND_TAC "s3");;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (EXPAND_TAC "s2");;
e (MATCH_MP_TAC FINITE_SET_LIST_LEMMA);;
e (EXPAND_TAC "s1");;
e (MATCH_MP_TAC Packing3.KIUMVTC);;
e (ASM_REWRITE_TAC[]);;

let FINITE_MCELL_SET_LEMMA = top_thm();;

(* =========================================================================== *)

g `!x k1 k2. &0 < k1 /\ &0 < k2 ==>
  (?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= C * r pow 2)`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?C. !r. k2 + sqrt (&3) <= r
                      ==> &(CARD
                           (int_ball x (r + k1) DIFF int_ball x (r - k2))) <=
                          C * r pow 2`);;
e (MATCH_MP_TAC Vol1.bdt5_finiteness);;
e (ASM_REWRITE_TAC[]);;
e (TAKE_TAC);;
e (ABBREV_TAC `D = &(CARD (int_ball x ((k2 + sqrt (&3)) + k1)))`);;
e (EXISTS_TAC `max C D`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `k2 + sqrt (&3) <= r`);;
e (NEW_GOAL 
  `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `C * r pow 2 <= max C D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * b <= c * b <=> &0 <= (c - a) * b`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_LE_POW_2]);;
e (REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
   &(CARD (int_ball x (r + k1)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[Vol1.finite_int_ball]);;

e (NEW_GOAL `&(CARD (int_ball x (r + k1))) <= D * r pow 2`);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1))) <= D`);;
e (EXPAND_TAC "D");;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (REWRITE_TAC[Vol1.finite_int_ball; int_ball; Pack1.hinhcau_ball; SUBSET;    
   IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `r + k1 <= (k2 + sqrt (&3)) + k1`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `D <= D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a <= a * b <=> &0 <= a * (b - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (STRIP_TAC);;
e (EXPAND_TAC "D" THEN REWRITE_TAC[REAL_OF_NUM_LE; LE_0]);;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - b <=> b <= a`]);;
e (ONCE_REWRITE_TAC[REAL_ARITH `&1 = (&1) pow 2`]);;
e (REWRITE_WITH `(&1) pow 2 <= r pow 2 <=> &1 <= r`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ] THEN MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `D * r pow 2 <= max C D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * b <= c * b <=> &0 <= (c - a) * b`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_LE_POW_2]);;
e (REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

let CARD_BOUNDARY_INT_BALL_BOUND_1 = top_thm();;

(* The following is a simplified version of Vol1.bdt5_finiteness, Vol1.bdt7_finiteness *)

g `!x k1 k2. 
  (?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= C * r pow 2)`;;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `&0 < k1 /\ &0 < k2`);;
e (ASM_MESON_TAC[CARD_BOUNDARY_INT_BALL_BOUND_1]);;
e (ASM_CASES_TAC `&0 < k2`);;
e (NEW_GOAL 
  `(?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + &1) DIFF int_ball x (r - k2))) <= C * r pow 2)`);;
e (MATCH_MP_TAC CARD_BOUNDARY_INT_BALL_BOUND_1);;
e (ASM_REAL_ARITH_TAC);;
e (TAKE_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
  &(CARD (int_ball x (r + &1) DIFF int_ball x (r - k2)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (SIMP_TAC[FINITE_DIFF; Vol1.finite_int_ball]);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> A DIFF C SUBSET B DIFF C`));;
e (REWRITE_TAC[int_ball; Pack1.hinhcau_ball; SUBSET; IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `r + k1 <= r + &1`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + &1) DIFF int_ball x (r - k2))) <=
              C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

e (ASM_CASES_TAC `&0 < k1`);;
e (NEW_GOAL 
  `(?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + k1) DIFF int_ball x (r - &1))) <= C * r pow 2)`);;
e (MATCH_MP_TAC CARD_BOUNDARY_INT_BALL_BOUND_1);;
e (ASM_REAL_ARITH_TAC);;
e (TAKE_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
  &(CARD (int_ball x (r + k1) DIFF int_ball x (r - &1)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (SIMP_TAC[FINITE_DIFF; Vol1.finite_int_ball]);;
e (MATCH_MP_TAC (SET_RULE `B SUBSET A ==> C DIFF A SUBSET C DIFF B`));;
e (REWRITE_TAC[int_ball; Pack1.hinhcau_ball; SUBSET; IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `r - &1 <= r - k2`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - &1))) <=
              C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL 
  `(?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + &1) DIFF int_ball x (r - &1))) <= C * r pow 2)`);;
e (MATCH_MP_TAC CARD_BOUNDARY_INT_BALL_BOUND_1);;
e (ASM_REAL_ARITH_TAC);;
e (TAKE_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
  &(CARD (int_ball x (r + &1) DIFF int_ball x (r - &1)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (SIMP_TAC[FINITE_DIFF; Vol1.finite_int_ball]);;
e (REWRITE_TAC[IN_DIFF; int_ball; Pack1.hinhcau_ball; SUBSET; IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `(!i. 1 <= i /\i <= 3 ==>integer (x'$i)) /\ 
                 dist (x:real^3,x') < r - k2`);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (NEW_GOAL `&(CARD (int_ball x (r + &1) DIFF int_ball x (r - &1))) <=
              C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

let CARD_BOUNDARY_INT_BALL_BOUND = top_thm();;

(* ============================================================ *)

g `!s t f. FINITE s /\ FINITE t /\ INJ (f:A->B) s t ==>
            CARD s <= CARD t`;;
e (REWRITE_TAC[INJ] THEN REPEAT STRIP_TAC);;
e (REWRITE_WITH `CARD s = CARD (IMAGE (f:A->B) s)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ] THEN MATCH_MP_TAC CARD_IMAGE_INJ);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (ASM_REWRITE_TAC[IMAGE; SUBSET]);;
e (UNDISCH_TAC `!x. x IN s ==> (f:A->B) x IN t`);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (SET_TAC[]);;

let CARD_INJ_LE = top_thm();;

(* ============================================================ *)

g `!p:real^3 k1 k2. 
       ?C. (!r. &1 <= r ==> 
        vol (ball (p:real^3,r + k1) DIFF ball (p,r - k2)) <= C * r pow 2)`;;
e (REPEAT STRIP_TAC);;

e (ABBREV_TAC 
  `C = &4 / &3 * pi * (&3 * abs (k1 + k2) + &3 * k1 pow 2 + abs (k1 pow 3 + k2 pow 3))`);;
e (ABBREV_TAC `D = vol (ball (p:real^3, abs (k1 + k2)))`);;
e (ABBREV_TAC `E = max C (D:real)`);;
e (EXISTS_TAC `max (E:real) (&0)`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `r + k1 <= r - k2`);;
e (REWRITE_WITH `ball (p,r + k1) DIFF ball (p:real^3,r - k2) = {}`);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> A DIFF B = {}`));;
e (REWRITE_TAC[SUBSET; IN_BALL] THEN REPEAT STRIP_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (REWRITE_TAC[MEASURE_EMPTY]);;
e (NEW_GOAL `&0 * r pow 2 <= max E (&0) * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * x <= b * x <=> &0 <= (b - a) * x`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_REWRITE_TAC[REAL_LE_POW_2] THEN REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_WITH `vol (ball (p,r + k1) DIFF ball (p,r - k2)) = 
                 vol (ball (p,r + k1)) - vol (ball (p,r - k2))`);;
e (MATCH_MP_TAC MEASURE_DIFF_SUBSET);;
e (REWRITE_TAC[MEASURABLE_BALL; SUBSET; IN_BALL] THEN ASM_REAL_ARITH_TAC);;
e (REWRITE_TAC[VOLUME_BALL]);;
e (ASM_CASES_TAC `&0 <= r - k2`);;
e (NEW_GOAL `&0 <= r + k1`);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `vol (ball (p,r + k1)) - vol (ball (p,r - k2)) <= C * r pow 2`);;
e (ASM_SIMP_TAC [VOLUME_BALL]);;
e (EXPAND_TAC "C");;
e (REWRITE_TAC[REAL_ARITH 
   `x * pi * a - x * pi * b <=  (x *  pi *  c) * d <=> 
    &0 <= (x * pi) * (c * d - (a - b))`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_SIMP_TAC[REAL_LE_MUL; REAL_LE_DIV; PI_POS_LE; REAL_ARITH `&0 <= &3 /\ &0 <= &4`]);;
e (REWRITE_TAC[REAL_ARITH `(r + k1) pow 3 - (r - k2) pow 3 = &3 * (k1 + k2) * 
   r pow 2 + &3 * (k1 pow 2  - k2 pow 2) * r + (k1 pow 3 + k2 pow 3)`]);;
e (REWRITE_TAC[REAL_ADD_RDISTRIB]);;
e (NEW_GOAL `(&3 * abs (k1 + k2)) * r pow 2 >= 
             &3 * (k1 * r pow 2 + k2 * r pow 2)`);;
e (REWRITE_TAC[REAL_ARITH
  `(&3 * abs (k1 + k2)) * r pow 2 >= &3 * (k1 * r pow 2 + k2 * r pow 2) <=> 
   &0 <= &3 * r pow 2 * (abs (k1 + k2) - (k1 + k2))`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_ARITH `&0 <= &3`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_LE_POW_2]);;
e (REAL_ARITH_TAC);;

e (NEW_GOAL `(&3 * k1 pow 2) * r pow 2 >= &3 * (k1 pow 2 - k2 pow 2) * r`);;
e (NEW_GOAL `(&3 * k1 pow 2) * r pow 2 >= (&3 * k1 pow 2) * r`);;
e (REWRITE_TAC[REAL_ARITH `x * y pow 2 >= x * y <=> &0 <= x * y * (y - &1)`]);;
e (ASM_SIMP_TAC[REAL_LE_MUL; REAL_LE_POW_2; REAL_ARITH `&1 <= a ==> &0 <= a`;
   REAL_ARITH `&1 <= a ==> &0 <= (a - &1)`; REAL_ARITH `&0 <= &3`]);;
e (NEW_GOAL `(&3 * k1 pow 2) * r >= &3 * (k1 pow 2 - k2 pow 2) * r`);;
e (REWRITE_TAC[REAL_ARITH `(&3 * x) * r >= &3 * (x - y) * r <=> &0 <= y * r`]);;
e (ASM_SIMP_TAC[REAL_LE_MUL; REAL_LE_POW_2; REAL_ARITH `&1 <= a ==> &0 <= a`]);;
e (ASM_REAL_ARITH_TAC);;


e (NEW_GOAL `abs (k1 pow 3 + k2 pow 3) * r pow 2 >= k1 pow 3 + k2 pow 3`);;
e (NEW_GOAL `abs (k1 pow 3 + k2 pow 3) * r pow 2 >= 
             abs (k1 pow 3 + k2 pow 3)`);;
e (REWRITE_TAC[REAL_ARITH `x * y pow 2 >= x <=> &0 <= x * (y pow 2 - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_ABS_POS]);;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - &1 <=> &1 pow 2 <= a`]);;
e (REWRITE_WITH `&1 pow 2 <= r pow 2 <=> &1 <= r`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;


e (NEW_GOAL `C * r pow 2 <= max E (&0) * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * x <= b * x <=> &0 <= (b - a) * x`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_REWRITE_TAC[REAL_LE_POW_2] THEN ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `r < k2`);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `vol (ball (p,r + k1)) - vol (ball (p,r - k2)) <= D * r pow 2`);;
e (REWRITE_WITH `ball (p:real^3,r - k2) = {}`);;
e (REWRITE_TAC[SET_RULE `s = {} <=> (!x. x IN s ==> F)`]);;
e (REWRITE_TAC[IN_BALL] THEN GEN_TAC);;
e (MP_TAC (MESON[DIST_POS_LE] `&0 <= dist (p, x:real^3)`));;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_TAC[MEASURE_EMPTY; REAL_ARITH `a - &0 = a`]);;
e (NEW_GOAL `vol (ball (p,r + k1)) <= D`);;
e (EXPAND_TAC "D" THEN MATCH_MP_TAC MEASURE_SUBSET);;
e (REWRITE_TAC[MEASURABLE_BALL; SUBSET; IN_BALL]);;
e (REPEAT STRIP_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `D <= D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `x <= x * y pow 2 <=> &0 <= x * (y pow 2 - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (EXPAND_TAC "D");;
e (STRIP_TAC);;
e (MATCH_MP_TAC MEASURE_POS_LE);;
e (REWRITE_TAC[MEASURABLE_BALL]);;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - &1 <=> &1 pow 2 <= a`]);;
e (REWRITE_WITH `&1 pow 2 <= r pow 2 <=> &1 <= r`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `D * r pow 2 <= max E (&0) * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * x <= b * x <=> &0 <= (b - a) * x`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_REWRITE_TAC[REAL_LE_POW_2] THEN ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

let BOUNDARY_VOLUME = top_thm();;

(* ===================================================================== *)


g `!V p:real^3 k1 k2. packing V ==>
      ?C. !r. &1 <= r
       ==> &(CARD (V INTER ball (p,r + k1) DIFF V INTER ball (p,r - k2))) 
           <= C * r pow 2`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?C. (!r. &1 <= r  ==> 
             vol (ball (p:real^3,r + k1 + &1) DIFF ball (p,r - (k2 + &1))) <= 
             C * r pow 2)`);;
e (REWRITE_TAC[BOUNDARY_VOLUME]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC
  `B = V INTER ball (p,r + k1) DIFF V INTER ball (p:real^3,r - k2)`);;
e (ABBREV_TAC `f = (\u:real^3. ball (u, &1))`);;
e (NEW_GOAL `FINITE (B:real^3->bool)`);;
e (EXPAND_TAC "B");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `V INTER ball (p:real^3,r + k1)`);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA] THEN ASM_SET_TAC[]);;

e (NEW_GOAL `sum B (\u:real^3. vol (f u)) = &(CARD B) * &4 / &3 * pi`);;
e (EXPAND_TAC "f");;
e (SIMP_TAC[VOLUME_BALL; REAL_ARITH `&0 <= &1`]);;
e (ASM_SIMP_TAC [SUM_CONST]);;
e (REAL_ARITH_TAC);;

e (NEW_GOAL `sum B (\u:real^3. vol (f u)) = vol (UNIONS (IMAGE f B))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC MEASURE_DISJOINT_UNIONS_IMAGE);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[MEASURABLE_BALL] THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[SET_RULE `DISJOINT s t <=> !x. ~(x IN s /\ x IN t)`]);;
e (REWRITE_TAC[IN_BALL]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[] THEN ONCE_REWRITE_TAC[DIST_SYM] THEN STRIP_TAC);;
e (NEW_GOAL `dist (u, y) <= dist (u, x) + dist (x, y:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `&2 <= dist (u, y:real^3)`);;
e (UNDISCH_TAC `packing V` THEN REWRITE_TAC[packing] THEN STRIP_TAC);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `vol (UNIONS (IMAGE f (B:real^3->bool))) <= 
             vol (ball (p,r + k1 + &1) DIFF ball (p,r - (k2 + &1)))`);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[IMAGE]);;
e (MATCH_MP_TAC MEASURE_SUBSET);;
e (REPEAT STRIP_TAC);;
e (MATCH_MP_TAC MEASURABLE_UNIONS);;
e (STRIP_TAC);;

e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[MEASURABLE_BALL]);;

e (ASM_SIMP_TAC[MEASURABLE_DIFF; MEASURABLE_BALL]);;
e (EXPAND_TAC "B");;
e (REWRITE_TAC[SUBSET; IN_UNIONS; IN_BALL; IN_DIFF; IN_INTER]);;
e (REWRITE_TAC[IN_ELIM_THM; IN]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (p, x) <= dist (p, x') + dist (x', x:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (x',x:real^3) < &1`);;
e (UNDISCH_TAC `(t:real^3->bool) x`);;
e (ASM_REWRITE_TAC[ball; IN_ELIM_THM]);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `dist (p, x':real^3) < r - k2`);;
e (NEW_GOAL `dist (p, x') <= dist (p, x) + dist (x, x':real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (x,x':real^3) < &1`);;
e (ONCE_REWRITE_TAC[DIST_SYM]);;
e (UNDISCH_TAC `(t:real^3->bool) x`);;
e (ASM_REWRITE_TAC[ball; IN_ELIM_THM]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `&(CARD (B:real^3->bool)) <= &(CARD B) * &4 / &3 * pi`);;
e (REWRITE_TAC [REAL_ARITH `a <= a * b <=> &0 <= a * (b - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_OF_NUM_LE; LE_0]);;
e (NEW_GOAL `#3.14159 < pi`);;
e (REWRITE_TAC[Flyspeck_constants.bounds]);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `vol (ball (p:real^3,r + k1 + &1) DIFF ball (p,r - (k2 + &1))) <= 
   C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

let PACKING_BALL_BOUNDARY = top_thm();;



