
(* ========================================================================= *)
(*                FLYSPECK - BOOK FORMALIZATION                              *)
(*                                                                           *)
(*      Authour   : VU KHAC KY                                               *)
(*      Book lemma:                                                          *)
(*      Chaper    : Packing (Marchal Cells 3)                                *)
(*                                                                           *)
(* ========================================================================= *)

open Sphere;;
open Euler_main_theorem;;
open Pack_defs;;
open Pack_concl;; 
open Pack1;;
open Pack2;;
open Packing3;;
open Rogers;; 
open Vukhacky_tactics;;
open Marchal_cells;;
open Emnwuus;;
open Marchal_cells_2;;
open Marchal_cells_2_new;;
open Urrphbz1;;
open Lepjbdj;;
open Hdtfnfz;;
open Rvfxzbu;;
open Sltstlo;;
open Urrphbz2;;
open Urrphbz3;;
open Ynhyjit;;
open Njiutiu;;
open Tezffsk;;
open Qzksykg;;
open Ddzuphj;;
open Ajripqn;;
open Qzyzmjc;;
open Upfzbzm_support_lemmas;;


let TAKE_TAC = UP_ASM_TAC THEN REPEAT STRIP_TAC;;

let HD_IN_ROGERS = prove (
 `!V ul. saturated V /\ packing V /\ barV V 3 ul ==> HD ul IN rogers V ul`,
REPEAT STRIP_TAC THEN 
ASM_SIMP_TAC[ROGERS_EXPLICIT] THEN 
MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET THEN SET_TAC[]);; 

(* ==================================================================== *)
g `!V ul. saturated V /\ packing V /\ barV V 3 ul ==> 
          rogers V ul SUBSET voronoi_closed V (HD ul)`;;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[ROGERS_EXPLICIT]);;
e (NEW_GOAL `voronoi_closed V (HD ul) = 
   convex hull (voronoi_closed V ((HD ul):real^3))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (REWRITE_TAC[CONVEX_HULL_EQ]);;
e (REWRITE_TAC[Packing3.CONVEX_VORONOI_CLOSED]);;
e (ONCE_ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Marchal_cells.CONVEX_HULL_SUBSET);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (REWRITE_TAC[GSYM OMEGA_LIST_N]);;
e (REWRITE_WITH `voronoi_closed V (omega_list_n V ul 0) = 
                 voronoi_list V (truncate_simplex 0 ul)`);;
e (ASM_REWRITE_TAC[OMEGA_LIST_N; TRUNCATE_SIMPLEX_EXPLICIT_0; VORONOI_LIST; 
   VORONOI_SET; set_of_list; HD] THEN SET_TAC[]);;

e (NEW_GOAL `omega_list_n V ul 0 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (NEW_GOAL `omega_list_n V ul 1 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (NEW_GOAL `omega_list_n V ul 2 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (NEW_GOAL `omega_list_n V ul 3 IN 
   voronoi_list V (truncate_simplex 0 ul)`);;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[] THEN ARITH_TAC);;
e (ASM_SET_TAC[]);;

let ROGERS_SUBSET_VORONOI_CLOSED = top_thm ();;

(* ==================================================================== *)

g `!V ul i r X . 
      packing V /\ 
      saturated V /\ 
      barV V 3 ul /\ 
      X = mcell i V ul /\ 
     ~(X = {}) /\ ~(i = 0)
     ==> (HD ul IN X)`;;
e (REPEAT STRIP_TAC);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (ASM_REWRITE_TAC[HD]);;
e (ASM_CASES_TAC `i = 1`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell1]);;
e (COND_CASES_TAC);;
e (ASM_SIMP_TAC[IN_DIFF;IN_INTER; HD; TL; IN_CBALL; DIST_REFL;  
   TRUNCATE_SIMPLEX_EXPLICIT_1; rcone_gt; rconesgn]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_WITH `u0 = HD ul /\ [u0; u1; u2; u3:real^3] = ul`);;
e (ASM_REWRITE_TAC[HD]);;
e (MATCH_MP_TAC HD_IN_ROGERS);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC SQRT_POS_LE);;
e (REAL_ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN; IN_ELIM_THM; VECTOR_ARITH 
  `(u0 - u0) dot (u1 - u0) = &0`; DIST_REFL]);;
e (REAL_ARITH_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`; ASSUME `i = 1`; MCELL_EXPLICIT; mcell1]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `i = 2`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell2]);;
e (COND_CASES_TAC);;
e (LET_TAC);;
e (ASM_SIMP_TAC[IN_INTER; HD; TL; DIST_REFL;  
   TRUNCATE_SIMPLEX_EXPLICIT_1; rcone_ge; rconesgn; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[VECTOR_ARITH `(u0 - u0) dot (u1 - u0) = &0`]);;
e (REAL_ARITH_TAC);;
e (REWRITE_TAC[GSYM NORM_POW_2; GSYM dist; REAL_POW_2]);;
e (REWRITE_TAC[REAL_ARITH `a * a >= a * a * b <=> &0 <= a * a * (&1 - b)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[DIST_POS_LE]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[DIST_POS_LE]);;
e (ABBREV_TAC `s = hl (truncate_simplex 1 [u0; u1; u2; u3:real^3])`);;
e (EXPAND_TAC "a");;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - b <=> b <= a`]);;
e (REWRITE_WITH `s / sqrt (&2) <= &1 <=> s <= &1 * sqrt (&2)`);;
e (MATCH_MP_TAC REAL_LE_LDIV_EQ);;
e (MATCH_MP_TAC SQRT_POS_LT THEN REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_WITH `[u0; u1; u2; u3:real^3] = ul`);;
e (ASM_REWRITE_TAC[]);;
e (ABBREV_TAC `m = mxi V ul`);;
e (ABBREV_TAC `s3 = omega_list_n V ul 3`);;
e (REWRITE_WITH `aff_ge {u0, u1:real^3} {m, s3} u0 <=>
                 u0 IN aff_ge {u0, u1} {m, s3}`);;
e (REWRITE_TAC[IN]);;
e (NEW_GOAL `u0 IN convex hull {u0,u1,m,s3:real^3}`);;
e (MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET);;
e (SET_TAC[]);;
e (NEW_GOAL `convex hull {u0,u1,m,s3:real^3} SUBSET aff_ge {u0, u1} {m, s3}`);;
e (REWRITE_TAC[Marchal_cells_2_new.CONVEX_HULL_4_SUBSET_AFF_GE_2_2]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`; ASSUME `i = 2`; MCELL_EXPLICIT; mcell2]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `i = 3`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell3]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[set_of_list;TRUNCATE_SIMPLEX_EXPLICIT_2]);;
e (MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET);;
e (SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (REWRITE_TAC[ASSUME `X = mcell i V ul`; ASSUME `i = 3`; MCELL_EXPLICIT; mcell3]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ASM_CASES_TAC `i >= 4`);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; mcell4]);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[set_of_list]);;
e (MATCH_MP_TAC IN_SET_IMP_IN_CONVEX_HULL_SET);;
e (SET_TAC[]);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `X:real^3->bool = {}`);;
e (SIMP_TAC[ASSUME `X = mcell i V ul`; ASSUME `i >= 4`; MCELL_EXPLICIT; mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REFL_TAC);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

let HD_IN_MCELL = top_thm();;

(* ==================================================================== *)
g `!V ul i r X . 
      packing V /\ 
      saturated V /\ 
      barV V 3 ul /\ 
      X = mcell i V ul /\ 
      X SUBSET ball (vec 0, r) /\ 
     ~(X = {}) 
     ==> (!u. u IN set_of_list ul ==> u IN ball (vec 0, r + &6))`;;
e (REPEAT STRIP_TAC);;

(* Case i = 0 *)
e (ASM_CASES_TAC `i = 0`);;
e (UNDISCH_TAC `X = mcell i V ul`THEN ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell0]);;
e (STRIP_TAC);;
e (NEW_GOAL `!s. s IN rogers V ul ==> dist (HD ul, s) < &2`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `rogers V ul SUBSET voronoi_closed V (HD ul)`);;
e (ASM_SIMP_TAC[ROGERS_SUBSET_VORONOI_CLOSED]);;
e (NEW_GOAL `s:real^3 IN voronoi_closed V (HD ul)`);;
e (ASM_SET_TAC[]);;
e (UNDISCH_TAC `saturated (V:real^3->bool)`);;
e (REWRITE_TAC[saturated]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?y. y IN V /\ dist (s, y:real^3) < &2`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (UNDISCH_TAC `s:real^3 IN voronoi_closed V (HD ul)` THEN REWRITE_TAC[voronoi_closed; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (s,HD ul) <= dist (s,y:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (ONCE_REWRITE_TAC[DIST_SYM] THEN ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `?s. s:real^3 IN X`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `dist (HD ul, s:real^3) < &2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `set_of_list (ul:(real^3)list) SUBSET ball (HD ul,&4)`);;
e (MATCH_MP_TAC BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Packing3.HD_IN_SET_OF_LIST);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (NEW_GOAL `u:real^3 IN ball (HD ul, &4)`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_BALL]);;
e (STRIP_TAC);;
e (NEW_GOAL `dist (vec 0,u) <= dist (vec 0, s) + dist (s, u:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (s, u) <= dist (s, HD ul) + dist (HD ul, u:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (vec 0,u) <=  
   dist (vec 0,s) + dist (s,HD ul) + dist (HD ul,u:real^3)`);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `dist (s:real^3, HD ul) < &2`);;
e (ONCE_REWRITE_TAC[DIST_SYM] THEN ASM_REWRITE_TAC[]);;
e (NEW_GOAL `dist (vec 0,s:real^3) < r`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (ASM_SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

(* Case i != 0 *)

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (NEW_GOAL `(HD ul):real^3 IN X`);;
e (MATCH_MP_TAC HD_IN_MCELL);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `i:num`);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `(HD ul):real^3 IN ball (vec 0, r)`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_BALL] THEN STRIP_TAC);;
e (NEW_GOAL `dist (vec 0,u) <= dist (vec 0,HD ul) + dist (HD ul, u:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `set_of_list (ul:(real^3)list) SUBSET ball (HD ul,&4)`);;
e (MATCH_MP_TAC BARV_3_IMP_FINITE_lemma2);;
e (EXISTS_TAC `V:real^3->bool`);;
e (ASM_REWRITE_TAC[HD; set_of_list]);;
e (SET_TAC[]);;
e (NEW_GOAL `u:real^3 IN ball (HD ul, &4)`);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[IN_BALL]);;
e (STRIP_TAC);;
e (ASM_REAL_ARITH_TAC);;

let FINITE_MCELL_SET_lemma1 = top_thm();;

(* ==================================================================== *)

let FINITE_MCELL_SET_LEMMA_concl = 
   `!V r. packing V /\ saturated V ==> 
          FINITE {X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`;;

g FINITE_MCELL_SET_LEMMA_concl;;
e (REPEAT STRIP_TAC);;

e (REWRITE_WITH `FINITE {X | X SUBSET ball (vec 0,r) /\ mcell_set V X} <=>
   FINITE {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ASM_CASES_TAC `{} IN {X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (REWRITE_WITH `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X} = 
   {} INSERT {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ONCE_REWRITE_TAC[SET_RULE `A = B <=> B SUBSET A /\ A SUBSET B`]);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[INSERT_SUBSET]);;
e (ASM_REWRITE_TAC[]);;
e (SET_TAC[]);;
e (REWRITE_TAC[SUBSET_INSERT_DELETE]);;
e (ONCE_REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN_DELETE] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (SET_TAC[]);;
e (REWRITE_TAC[FINITE_INSERT]);;
e (REWRITE_WITH `{X | X SUBSET ball (vec 0,r) /\ mcell_set V X} = 
  {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ONCE_REWRITE_TAC[SET_RULE `A = B <=> B SUBSET A /\ A SUBSET B`]);;
e (REPEAT STRIP_TAC);;
e (SET_TAC[]);;
e (ONCE_REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] 
   THEN REWRITE_TAC[IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `{} IN {X | X SUBSET ball (vec 0,r) /\ mcell_set V X}`);;
e (ONCE_REWRITE_TAC[IN] THEN REWRITE_TAC[IN_ELIM_THM]);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (ABBREV_TAC 
  `S = {X | X SUBSET ball (vec 0,r) /\ mcell_set V X /\ ~(X = {})}`);;
e (ABBREV_TAC `s1:(real^3->bool) = V INTER ball (vec 0, r + &6)`);;
e (ABBREV_TAC `s2 = {ul:(real^3)list |  ?u0 u1 u2 u3.
               u0 IN s1 /\
               u1 IN s1 /\
               u2 IN s1 /\
               u3 IN s1 /\
               ul = [u0; u1; u2; u3]}`);;
e (ABBREV_TAC `s3 = {(i:num, ul:(real^3)list) | i IN 0..4 /\ ul IN s2}`);;
e (NEW_GOAL`S SUBSET {X| ?t. t IN s3 /\ X = (\t. mcell (FST t) V (SND t)) t}`);;
e (EXPAND_TAC "S" THEN EXPAND_TAC "s3");;
e (ONCE_REWRITE_TAC[SUBSET] THEN ONCE_REWRITE_TAC[IN] THEN  
   REWRITE_TAC[IN_ELIM_THM; FST; SND; mcell_set]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `((if i <= 4 then i else 4), ul:(real^3)list)`);;
e (ASM_REWRITE_TAC[FST;SND]);;
e (REPEAT STRIP_TAC);;
e (EXISTS_TAC `(if i <= 4 then i else 4)` THEN EXISTS_TAC `ul:(real^3)list`);;
e (REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[IN_NUMSEG_0]);;
e (ASM_REWRITE_TAC[IN_NUMSEG_0] THEN ARITH_TAC);;
e (EXPAND_TAC "s2");;
e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC THEN ONCE_REWRITE_TAC[IN]);;
e (REWRITE_TAC[IN_ELIM_THM]);;
e (EXISTS_TAC `u0:real^3` THEN EXISTS_TAC `u1:real^3`);;
e (EXISTS_TAC `u2:real^3` THEN EXISTS_TAC `u3:real^3`);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!u:real^3. u IN set_of_list ul ==> u IN s1`);;
e (EXPAND_TAC "s1" THEN REPEAT STRIP_TAC);;
e (REWRITE_TAC[IN_INTER]);;
e (STRIP_TAC);;
e (NEW_GOAL `set_of_list ul SUBSET (V:real^3->bool)`);;
e (MATCH_MP_TAC Packing3.BARV_SUBSET);;
e (EXISTS_TAC `3` THEN ASM_MESON_TAC[IN]);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `!u:real^3. u IN set_of_list ul ==> u IN ball (vec 0,r + &6)`);;
e (MATCH_MP_TAC FINITE_MCELL_SET_lemma1);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `i:num` THEN 
   EXISTS_TAC `x:real^3->bool`);;
e (ASM_MESON_TAC[IN]);;
e (ASM_SIMP_TAC[]);;
e (REPEAT STRIP_TAC);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC THEN ASM_REWRITE_TAC[set_of_list] THEN SET_TAC[]);;

e (COND_CASES_TAC);;
e (REFL_TAC);;
e (NEW_GOAL `i >= 4`);;
e (ASM_ARITH_TAC);;
e (ASM_SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`]);;
e (MATCH_MP_TAC FINITE_SUBSET);;

e (EXISTS_TAC `{X | ?t. t IN s3 /\ X = (\t. mcell (FST t) V (SND t)) t}`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (EXPAND_TAC "s3");;
e (MATCH_MP_TAC FINITE_PRODUCT);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (EXPAND_TAC "s2");;
e (MATCH_MP_TAC FINITE_SET_LIST_LEMMA);;
e (EXPAND_TAC "s1");;
e (MATCH_MP_TAC Packing3.KIUMVTC);;
e (ASM_REWRITE_TAC[]);;

let FINITE_MCELL_SET_LEMMA = top_thm();;

(* =========================================================================== *)

g `!x k1 k2. &0 < k1 /\ &0 < k2 ==>
  (?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= C * r pow 2)`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?C. !r. k2 + sqrt (&3) <= r
                      ==> &(CARD
                           (int_ball x (r + k1) DIFF int_ball x (r - k2))) <=
                          C * r pow 2`);;
e (MATCH_MP_TAC Vol1.bdt5_finiteness);;
e (ASM_REWRITE_TAC[]);;
e (TAKE_TAC);;
e (ABBREV_TAC `D = &(CARD (int_ball x ((k2 + sqrt (&3)) + k1)))`);;
e (EXISTS_TAC `max C D`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `k2 + sqrt (&3) <= r`);;
e (NEW_GOAL 
  `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `C * r pow 2 <= max C D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * b <= c * b <=> &0 <= (c - a) * b`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_LE_POW_2]);;
e (REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
   &(CARD (int_ball x (r + k1)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (STRIP_TAC);;
e (SET_TAC[]);;
e (REWRITE_TAC[Vol1.finite_int_ball]);;

e (NEW_GOAL `&(CARD (int_ball x (r + k1))) <= D * r pow 2`);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1))) <= D`);;
e (EXPAND_TAC "D");;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (REWRITE_TAC[Vol1.finite_int_ball; int_ball; Pack1.hinhcau_ball; SUBSET;    
   IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `r + k1 <= (k2 + sqrt (&3)) + k1`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `D <= D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a <= a * b <=> &0 <= a * (b - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (STRIP_TAC);;
e (EXPAND_TAC "D" THEN REWRITE_TAC[REAL_OF_NUM_LE; LE_0]);;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - b <=> b <= a`]);;
e (ONCE_REWRITE_TAC[REAL_ARITH `&1 = (&1) pow 2`]);;
e (REWRITE_WITH `(&1) pow 2 <= r pow 2 <=> &1 <= r`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ] THEN MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `D * r pow 2 <= max C D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * b <= c * b <=> &0 <= (c - a) * b`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_LE_POW_2]);;
e (REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

let CARD_BOUNDARY_INT_BALL_BOUND_1 = top_thm();;

(* The following is a simplified version of Vol1.bdt5_finiteness, Vol1.bdt7_finiteness *)

g `!x k1 k2. 
  (?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= C * r pow 2)`;;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `&0 < k1 /\ &0 < k2`);;
e (ASM_MESON_TAC[CARD_BOUNDARY_INT_BALL_BOUND_1]);;
e (ASM_CASES_TAC `&0 < k2`);;
e (NEW_GOAL 
  `(?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + &1) DIFF int_ball x (r - k2))) <= C * r pow 2)`);;
e (MATCH_MP_TAC CARD_BOUNDARY_INT_BALL_BOUND_1);;
e (ASM_REAL_ARITH_TAC);;
e (TAKE_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
  &(CARD (int_ball x (r + &1) DIFF int_ball x (r - k2)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (SIMP_TAC[FINITE_DIFF; Vol1.finite_int_ball]);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> A DIFF C SUBSET B DIFF C`));;
e (REWRITE_TAC[int_ball; Pack1.hinhcau_ball; SUBSET; IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `r + k1 <= r + &1`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + &1) DIFF int_ball x (r - k2))) <=
              C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

e (ASM_CASES_TAC `&0 < k1`);;
e (NEW_GOAL 
  `(?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + k1) DIFF int_ball x (r - &1))) <= C * r pow 2)`);;
e (MATCH_MP_TAC CARD_BOUNDARY_INT_BALL_BOUND_1);;
e (ASM_REAL_ARITH_TAC);;
e (TAKE_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
  &(CARD (int_ball x (r + k1) DIFF int_ball x (r - &1)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (SIMP_TAC[FINITE_DIFF; Vol1.finite_int_ball]);;
e (MATCH_MP_TAC (SET_RULE `B SUBSET A ==> C DIFF A SUBSET C DIFF B`));;
e (REWRITE_TAC[int_ball; Pack1.hinhcau_ball; SUBSET; IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `r - &1 <= r - k2`);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - &1))) <=
              C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL 
  `(?C. !r. &1 <= r ==>
      &(CARD (int_ball x (r + &1) DIFF int_ball x (r - &1))) <= C * r pow 2)`);;
e (MATCH_MP_TAC CARD_BOUNDARY_INT_BALL_BOUND_1);;
e (ASM_REAL_ARITH_TAC);;
e (TAKE_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `&(CARD (int_ball x (r + k1) DIFF int_ball x (r - k2))) <= 
  &(CARD (int_ball x (r + &1) DIFF int_ball x (r - &1)))`);;
e (REWRITE_TAC[REAL_OF_NUM_LE]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (SIMP_TAC[FINITE_DIFF; Vol1.finite_int_ball]);;
e (REWRITE_TAC[IN_DIFF; int_ball; Pack1.hinhcau_ball; SUBSET; IN_INTER; IN_BALL]);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `(!i. 1 <= i /\i <= 3 ==>integer (x'$i)) /\ 
                 dist (x:real^3,x') < r - k2`);;
e (REPEAT STRIP_TAC);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (NEW_GOAL `&(CARD (int_ball x (r + &1) DIFF int_ball x (r - &1))) <=
              C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

let CARD_BOUNDARY_INT_BALL_BOUND = top_thm();;

(* ============================================================ *)

g `!s t f. FINITE s /\ FINITE t /\ INJ (f:A->B) s t ==>
            CARD s <= CARD t`;;
e (REWRITE_TAC[INJ] THEN REPEAT STRIP_TAC);;
e (REWRITE_WITH `CARD s = CARD (IMAGE (f:A->B) s)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ] THEN MATCH_MP_TAC CARD_IMAGE_INJ);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC CARD_SUBSET);;
e (ASM_REWRITE_TAC[IMAGE; SUBSET]);;
e (UNDISCH_TAC `!x. x IN s ==> (f:A->B) x IN t`);;
e (REWRITE_TAC[IN; IN_ELIM_THM]);;
e (SET_TAC[]);;

let CARD_INJ_LE = top_thm();;

(* ============================================================ *)

g `!p:real^3 k1 k2. 
       ?C. (!r. &1 <= r ==> 
        vol (ball (p:real^3,r + k1) DIFF ball (p,r - k2)) <= C * r pow 2)`;;
e (REPEAT STRIP_TAC);;

e (ABBREV_TAC 
  `C = &4 / &3 * pi * (&3 * abs (k1 + k2) + &3 * k1 pow 2 + abs (k1 pow 3 + k2 pow 3))`);;
e (ABBREV_TAC `D = vol (ball (p:real^3, abs (k1 + k2)))`);;
e (ABBREV_TAC `E = max C (D:real)`);;
e (EXISTS_TAC `max (E:real) (&0)`);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `r + k1 <= r - k2`);;
e (REWRITE_WITH `ball (p,r + k1) DIFF ball (p:real^3,r - k2) = {}`);;
e (MATCH_MP_TAC (SET_RULE `A SUBSET B ==> A DIFF B = {}`));;
e (REWRITE_TAC[SUBSET; IN_BALL] THEN REPEAT STRIP_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (REWRITE_TAC[MEASURE_EMPTY]);;
e (NEW_GOAL `&0 * r pow 2 <= max E (&0) * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * x <= b * x <=> &0 <= (b - a) * x`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_REWRITE_TAC[REAL_LE_POW_2] THEN REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_WITH `vol (ball (p,r + k1) DIFF ball (p,r - k2)) = 
                 vol (ball (p,r + k1)) - vol (ball (p,r - k2))`);;
e (MATCH_MP_TAC MEASURE_DIFF_SUBSET);;
e (REWRITE_TAC[MEASURABLE_BALL; SUBSET; IN_BALL] THEN ASM_REAL_ARITH_TAC);;
e (REWRITE_TAC[VOLUME_BALL]);;
e (ASM_CASES_TAC `&0 <= r - k2`);;
e (NEW_GOAL `&0 <= r + k1`);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `vol (ball (p,r + k1)) - vol (ball (p,r - k2)) <= C * r pow 2`);;
e (ASM_SIMP_TAC [VOLUME_BALL]);;
e (EXPAND_TAC "C");;
e (REWRITE_TAC[REAL_ARITH 
   `x * pi * a - x * pi * b <=  (x *  pi *  c) * d <=> 
    &0 <= (x * pi) * (c * d - (a - b))`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_SIMP_TAC[REAL_LE_MUL; REAL_LE_DIV; PI_POS_LE; REAL_ARITH `&0 <= &3 /\ &0 <= &4`]);;
e (REWRITE_TAC[REAL_ARITH `(r + k1) pow 3 - (r - k2) pow 3 = &3 * (k1 + k2) * 
   r pow 2 + &3 * (k1 pow 2  - k2 pow 2) * r + (k1 pow 3 + k2 pow 3)`]);;
e (REWRITE_TAC[REAL_ADD_RDISTRIB]);;
e (NEW_GOAL `(&3 * abs (k1 + k2)) * r pow 2 >= 
             &3 * (k1 * r pow 2 + k2 * r pow 2)`);;
e (REWRITE_TAC[REAL_ARITH
  `(&3 * abs (k1 + k2)) * r pow 2 >= &3 * (k1 * r pow 2 + k2 * r pow 2) <=> 
   &0 <= &3 * r pow 2 * (abs (k1 + k2) - (k1 + k2))`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_ARITH `&0 <= &3`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_LE_POW_2]);;
e (REAL_ARITH_TAC);;

e (NEW_GOAL `(&3 * k1 pow 2) * r pow 2 >= &3 * (k1 pow 2 - k2 pow 2) * r`);;
e (NEW_GOAL `(&3 * k1 pow 2) * r pow 2 >= (&3 * k1 pow 2) * r`);;
e (REWRITE_TAC[REAL_ARITH `x * y pow 2 >= x * y <=> &0 <= x * y * (y - &1)`]);;
e (ASM_SIMP_TAC[REAL_LE_MUL; REAL_LE_POW_2; REAL_ARITH `&1 <= a ==> &0 <= a`;
   REAL_ARITH `&1 <= a ==> &0 <= (a - &1)`; REAL_ARITH `&0 <= &3`]);;
e (NEW_GOAL `(&3 * k1 pow 2) * r >= &3 * (k1 pow 2 - k2 pow 2) * r`);;
e (REWRITE_TAC[REAL_ARITH `(&3 * x) * r >= &3 * (x - y) * r <=> &0 <= y * r`]);;
e (ASM_SIMP_TAC[REAL_LE_MUL; REAL_LE_POW_2; REAL_ARITH `&1 <= a ==> &0 <= a`]);;
e (ASM_REAL_ARITH_TAC);;


e (NEW_GOAL `abs (k1 pow 3 + k2 pow 3) * r pow 2 >= k1 pow 3 + k2 pow 3`);;
e (NEW_GOAL `abs (k1 pow 3 + k2 pow 3) * r pow 2 >= 
             abs (k1 pow 3 + k2 pow 3)`);;
e (REWRITE_TAC[REAL_ARITH `x * y pow 2 >= x <=> &0 <= x * (y pow 2 - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_ABS_POS]);;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - &1 <=> &1 pow 2 <= a`]);;
e (REWRITE_WITH `&1 pow 2 <= r pow 2 <=> &1 <= r`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;


e (NEW_GOAL `C * r pow 2 <= max E (&0) * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * x <= b * x <=> &0 <= (b - a) * x`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_REWRITE_TAC[REAL_LE_POW_2] THEN ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `r < k2`);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `vol (ball (p,r + k1)) - vol (ball (p,r - k2)) <= D * r pow 2`);;
e (REWRITE_WITH `ball (p:real^3,r - k2) = {}`);;
e (REWRITE_TAC[SET_RULE `s = {} <=> (!x. x IN s ==> F)`]);;
e (REWRITE_TAC[IN_BALL] THEN GEN_TAC);;
e (MP_TAC (MESON[DIST_POS_LE] `&0 <= dist (p, x:real^3)`));;
e (ASM_REAL_ARITH_TAC);;

e (REWRITE_TAC[MEASURE_EMPTY; REAL_ARITH `a - &0 = a`]);;
e (NEW_GOAL `vol (ball (p,r + k1)) <= D`);;
e (EXPAND_TAC "D" THEN MATCH_MP_TAC MEASURE_SUBSET);;
e (REWRITE_TAC[MEASURABLE_BALL; SUBSET; IN_BALL]);;
e (REPEAT STRIP_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `D <= D * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `x <= x * y pow 2 <=> &0 <= x * (y pow 2 - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (EXPAND_TAC "D");;
e (STRIP_TAC);;
e (MATCH_MP_TAC MEASURE_POS_LE);;
e (REWRITE_TAC[MEASURABLE_BALL]);;
e (REWRITE_TAC[REAL_ARITH `&0 <= a - &1 <=> &1 pow 2 <= a`]);;
e (REWRITE_WITH `&1 pow 2 <= r pow 2 <=> &1 <= r`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `D * r pow 2 <= max E (&0) * r pow 2`);;
e (REWRITE_TAC[REAL_ARITH `a * x <= b * x <=> &0 <= (b - a) * x`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (ASM_REWRITE_TAC[REAL_LE_POW_2] THEN ASM_REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;

let BOUNDARY_VOLUME = top_thm();;

(* ===================================================================== *)


g `!V p:real^3 k1 k2. packing V ==>
      ?C. !r. &1 <= r
       ==> &(CARD (V INTER ball (p,r + k1) DIFF V INTER ball (p,r - k2))) 
           <= C * r pow 2`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?C. (!r. &1 <= r  ==> 
             vol (ball (p:real^3,r + k1 + &1) DIFF ball (p,r - (k2 + &1))) <= 
             C * r pow 2)`);;
e (REWRITE_TAC[BOUNDARY_VOLUME]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `C:real`);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC
  `B = V INTER ball (p,r + k1) DIFF V INTER ball (p:real^3,r - k2)`);;
e (ABBREV_TAC `f = (\u:real^3. ball (u, &1))`);;
e (NEW_GOAL `FINITE (B:real^3->bool)`);;
e (EXPAND_TAC "B");;
e (MATCH_MP_TAC FINITE_SUBSET);;
e (EXISTS_TAC `V INTER ball (p:real^3,r + k1)`);;
e (ASM_SIMP_TAC[FINITE_PACK_LEMMA] THEN ASM_SET_TAC[]);;

e (NEW_GOAL `sum B (\u:real^3. vol (f u)) = &(CARD B) * &4 / &3 * pi`);;
e (EXPAND_TAC "f");;
e (SIMP_TAC[VOLUME_BALL; REAL_ARITH `&0 <= &1`]);;
e (ASM_SIMP_TAC [SUM_CONST]);;
e (REAL_ARITH_TAC);;

e (NEW_GOAL `sum B (\u:real^3. vol (f u)) = vol (UNIONS (IMAGE f B))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC MEASURE_DISJOINT_UNIONS_IMAGE);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[MEASURABLE_BALL] THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[SET_RULE `DISJOINT s t <=> !x. ~(x IN s /\ x IN t)`]);;
e (REWRITE_TAC[IN_BALL]);;
e (REPEAT STRIP_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[] THEN ONCE_REWRITE_TAC[DIST_SYM] THEN STRIP_TAC);;
e (NEW_GOAL `dist (u, y) <= dist (u, x) + dist (x, y:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `&2 <= dist (u, y:real^3)`);;
e (UNDISCH_TAC `packing V` THEN REWRITE_TAC[packing] THEN STRIP_TAC);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `vol (UNIONS (IMAGE f (B:real^3->bool))) <= 
             vol (ball (p,r + k1 + &1) DIFF ball (p,r - (k2 + &1)))`);;
e (EXPAND_TAC "f" THEN REWRITE_TAC[IMAGE]);;
e (MATCH_MP_TAC MEASURE_SUBSET);;
e (REPEAT STRIP_TAC);;
e (MATCH_MP_TAC MEASURABLE_UNIONS);;
e (STRIP_TAC);;

e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[IN; IN_ELIM_THM] THEN REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[MEASURABLE_BALL]);;

e (ASM_SIMP_TAC[MEASURABLE_DIFF; MEASURABLE_BALL]);;
e (EXPAND_TAC "B");;
e (REWRITE_TAC[SUBSET; IN_UNIONS; IN_BALL; IN_DIFF; IN_INTER]);;
e (REWRITE_TAC[IN_ELIM_THM; IN]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (p, x) <= dist (p, x') + dist (x', x:real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (x',x:real^3) < &1`);;
e (UNDISCH_TAC `(t:real^3->bool) x`);;
e (ASM_REWRITE_TAC[ball; IN_ELIM_THM]);;
e (ASM_REAL_ARITH_TAC);;

e (NEW_GOAL `dist (p, x':real^3) < r - k2`);;
e (NEW_GOAL `dist (p, x') <= dist (p, x) + dist (x, x':real^3)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (x,x':real^3) < &1`);;
e (ONCE_REWRITE_TAC[DIST_SYM]);;
e (UNDISCH_TAC `(t:real^3->bool) x`);;
e (ASM_REWRITE_TAC[ball; IN_ELIM_THM]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `&(CARD (B:real^3->bool)) <= &(CARD B) * &4 / &3 * pi`);;
e (REWRITE_TAC [REAL_ARITH `a <= a * b <=> &0 <= a * (b - &1)`]);;
e (MATCH_MP_TAC REAL_LE_MUL);;
e (REWRITE_TAC[REAL_OF_NUM_LE; LE_0]);;
e (NEW_GOAL `#3.14159 < pi`);;
e (REWRITE_TAC[Flyspeck_constants.bounds]);;
e (ASM_REAL_ARITH_TAC);;
e (NEW_GOAL `vol (ball (p:real^3,r + k1 + &1) DIFF ball (p,r - (k2 + &1))) <= 
   C * r pow 2`);;
e (ASM_SIMP_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

let PACKING_BALL_BOUNDARY = top_thm();;


(* ===================================================================== *)

g `!V X . 
      packing V /\ 
      saturated V /\ mcell_set V X
     ==> (?p. X SUBSET ball (p, &4))`;;
e (REWRITE_TAC[mcell_set_2; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (ASM_CASES_TAC `X:real^3->bool = {}`);;
e (EXISTS_TAC `(vec 0):real^3`);;
e (ASM_MESON_TAC[EMPTY_SUBSET]);;

(* Case i = 0 *)
e (ASM_CASES_TAC `i = 0`);;
e (UNDISCH_TAC `X = mcell i V ul`THEN ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell0]);;
e (STRIP_TAC);;
e (NEW_GOAL `!s. s IN rogers V ul ==> dist (HD ul, s) < &2`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `rogers V ul SUBSET voronoi_closed V (HD ul)`);;
e (ASM_SIMP_TAC[ROGERS_SUBSET_VORONOI_CLOSED]);;
e (NEW_GOAL `s:real^3 IN voronoi_closed V (HD ul)`);;
e (ASM_SET_TAC[]);;
e (UNDISCH_TAC `saturated (V:real^3->bool)`);;
e (REWRITE_TAC[saturated]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `?y. y IN V /\ dist (s, y:real^3) < &2`);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (UNDISCH_TAC `s:real^3 IN voronoi_closed V (HD ul)` THEN REWRITE_TAC[voronoi_closed; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (s,HD ul) <= dist (s,y:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (ONCE_REWRITE_TAC[DIST_SYM] THEN ASM_REAL_ARITH_TAC);;
e (EXISTS_TAC `HD (ul:(real^3)list)`);;
e (REWRITE_TAC[SUBSET; IN_BALL]);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `dist (HD ul, x:real^3) < &2`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

(* Case i = 4 *)
e (ASM_CASES_TAC `i = 4`);;
e (UNDISCH_TAC `X = mcell i V ul` THEN 
   ASM_SIMP_TAC[MCELL_EXPLICIT; mcell4; ARITH_RULE `4 >= 4`]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (EXISTS_TAC `omega_list V ul`);;
e (NEW_GOAL `ball (omega_list V ul,&4) = convex hull (ball (omega_list V ul,&4))`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ] THEN REWRITE_TAC[CONVEX_HULL_EQ; CONVEX_BALL]);;
e (ONCE_ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC CONVEX_HULL_SUBSET);;
e (REWRITE_TAC[SUBSET; IN_BALL] THEN REPEAT STRIP_TAC);;
e (REWRITE_WITH `omega_list V ul = circumcenter (set_of_list ul)`);;
e (MATCH_MP_TAC Rogers.XNHPWAB1);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[IN]);;
e (REWRITE_WITH `dist (circumcenter (set_of_list ul),x:real^3) = hl ul`);;
e (NEW_GOAL `(!x:real^3. x IN set_of_list ul
                  ==> dist (circumcenter (set_of_list ul),x) = hl ul)`);;
e (MATCH_MP_TAC Rogers.HL_PROPERTIES);;
e (EXISTS_TAC `V:real^3->bool` THEN EXISTS_TAC `3` THEN ASM_REWRITE_TAC[]);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `sqrt (&2) <= &2`);;
e (REWRITE_WITH `sqrt (&2) <= &2 <=> sqrt (&2) pow 2 <= &2 pow 2`);;
e (MATCH_MP_TAC Collect_geom.POW2_COND_LT);;
e (ASM_SIMP_TAC[SQRT_POS_LT; REAL_ARITH `&0 < &2`]);;
e (REWRITE_WITH `sqrt (&2) pow 2 = (&2)`);;
e (MATCH_MP_TAC SQRT_POW_2);;
e (REAL_ARITH_TAC);;
e (REAL_ARITH_TAC);;
e (ASM_REAL_ARITH_TAC);;
e (STRIP_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

(* Case i = 1 and i = 2 and i = 3 *)

e (ABBREV_TAC `s = omega_list_n V ul (i - 1)`);;
e (EXISTS_TAC `s:real^3`);;
e (MATCH_MP_TAC (SET_RULE `(?x. A SUBSET x /\ x SUBSET B) ==> A SUBSET B`));;
e (EXISTS_TAC `UNIONS
               {rogers V (left_action_list p ul) | p permutes 0..i - 1}`);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG2);;
e (ASM_REWRITE_TAC[SET_RULE `i IN {0,1,2,3,4} <=> i=0\/i=1\/i=2\/i=3\/i=4`]);;
e (ASM_ARITH_TAC);;
e (REWRITE_TAC[SUBSET; IN_UNIONS; IN; IN_ELIM_THM; IN_BALL]);;
e (REPEAT STRIP_TAC);;
e (ABBREV_TAC `vl:(real^3)list = left_action_list p ul`);;
e (NEW_GOAL `rogers V vl SUBSET voronoi_closed V (HD vl)`);;
e (MATCH_MP_TAC ROGERS_SUBSET_VORONOI_CLOSED);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num` THEN EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[SET_RULE `i IN {0,1,2,3,4} <=> i=0\/i=1\/i=2\/i=3\/i=4`]);;
e (ASM_ARITH_TAC);;
e (ASM_SET_TAC[]);;

(* -------------------------------------------------------------------------- *)

e (NEW_GOAL `barV V 3 vl /\
             (!j. i - 1 <= j /\ j <= 3
                  ==> omega_list_n V vl j = omega_list_n V ul j)`);;
e (ASM_CASES_TAC `i <= 1`);;
e (UNDISCH_TAC `p permutes 0..i - 1`);;
e (REWRITE_WITH `i - 1 = 0`);;
e (ASM_ARITH_TAC);;
e (REWRITE_TAC[Packing3.PERMUTES_TRIVIAL]);;
e (STRIP_TAC THEN EXPAND_TAC "vl" THEN REWRITE_TAC[ASSUME `p = I:num->num`; 
   Packing3.LEFT_ACTION_LIST_I]);;
e (ASM_REWRITE_TAC[]);;

e (MATCH_MP_TAC Ynhyjit.YNHYJIT);;
e (EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;

e (REWRITE_TAC[SET_RULE `i IN {2,3,4} <=> i = 2 \/ i = 3 \/ i = 4`]);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `~(X = {}:real^3->bool)` THEN ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `i = 2`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell2; ARITH_RULE `2 - 1 = 1`]);;
e (COND_CASES_TAC);;
e (MESON_TAC[]);;
e (MESON_TAC[]);;
e (ASM_CASES_TAC `i = 3`);;
e (ASM_REWRITE_TAC[MCELL_EXPLICIT; mcell3; ARITH_RULE `3 - 1 = 2`]);;
e (COND_CASES_TAC);;
e (MESON_TAC[]);;
e (MESON_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `s IN voronoi_list V (truncate_simplex (i - 1) vl)`);;
e (REWRITE_WITH `s = omega_list_n V vl (i - 1)`);;
e (EXPAND_TAC "s");;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_ARITH_TAC);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_N_IN_VORONOI_LIST);;
e (EXISTS_TAC `3`);;
e (ASM_REWRITE_TAC[] THEN ASM_ARITH_TAC);;

e (NEW_GOAL `s:real^3 IN voronoi_closed V (HD vl)`);;
e (NEW_GOAL `voronoi_list V (truncate_simplex (i - 1) vl) SUBSET 
             voronoi_closed V (HD vl)`);;
e (REWRITE_TAC[VORONOI_LIST; VORONOI_SET]);;
e (NEW_GOAL `HD (vl:(real^3)list) IN 
   set_of_list (truncate_simplex (i - 1) vl)`);;
e (NEW_GOAL `LENGTH (vl:(real^3)list) = 3 + 1 /\ CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `HD (vl:(real^3)list) = HD (truncate_simplex (i - 1) vl)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (ASM_ARITH_TAC);;
e (MATCH_MP_TAC Packing3.HD_IN_SET_OF_LIST);;
e (NEW_GOAL `?u0 u1 u2 u3. vl = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (ASM_CASES_TAC `i = 1`);;
e (ASM_REWRITE_TAC[ARITH_RULE `1 - 1 = 0`; 
  TRUNCATE_SIMPLEX_EXPLICIT_0; LENGTH] THEN ARITH_TAC);;
e (ASM_CASES_TAC `i = 2`);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`; 
  TRUNCATE_SIMPLEX_EXPLICIT_1; LENGTH] THEN ARITH_TAC);;
e (ASM_CASES_TAC `i = 3`);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`; 
  TRUNCATE_SIMPLEX_EXPLICIT_2; LENGTH] THEN ARITH_TAC);;
e (NEW_GOAL `F`);;
e (ASM_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN SET_TAC[]);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `dist (s, x:real^3) <= dist (s, HD vl) + dist (HD vl, x)`);;
e (REWRITE_TAC[DIST_TRIANGLE]);;
e (NEW_GOAL `dist (s:real^3, HD vl) < &2`);;
e (ONCE_REWRITE_TAC[DIST_SYM] THEN REWRITE_TAC[GSYM IN_BALL]);;
e (NEW_GOAL `voronoi_closed V ((HD vl):real^3) SUBSET ball (HD vl,&2)`);;
e (ASM_SIMP_TAC[Packing3.VORONOI_BALL2]);;
e (ASM_SET_TAC[]);;

e (NEW_GOAL `dist (HD vl, x:real^3) < &2`);;
e (REWRITE_TAC[GSYM IN_BALL]);;
e (NEW_GOAL `voronoi_closed V ((HD vl):real^3) SUBSET ball (HD vl,&2)`);;
e (ASM_SIMP_TAC[Packing3.VORONOI_BALL2]);;
e (ASM_SET_TAC[]);;
e (ASM_REAL_ARITH_TAC);;

let MCELL_SUBSET_BALL_4 = top_thm();;

(* ===================================================================== *)

(* ===================================================================== *)

g `!u v:real^3. hl [u; v] = inv (&2) * dist (u, v)`;;
e (REWRITE_TAC[HL; set_of_list; radV] THEN REPEAT GEN_TAC THEN 
   MATCH_MP_TAC SELECT_UNIQUE THEN REPEAT STRIP_TAC THEN 
   REWRITE_TAC[BETA_THM; CIRCUMCENTER_2; midpoint] THEN EQ_TAC);;
e (REPEAT STRIP_TAC);;
e (REWRITE_WITH `y = dist (inv (&2) % (u + v),v:real^3)`);;
e (FIRST_ASSUM MATCH_MP_TAC THEN 
   REWRITE_TAC[MESON [IN] `{a, b} s <=> s IN {a, b}`] THEN SET_TAC[]);;
e (NORM_ARITH_TAC);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `w = u \/ w = v:real^3`);;
e (UP_ASM_TAC THEN REWRITE_TAC[MESON [IN] `{a, b} s <=> s IN {a, b}`] THEN SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[] THEN NORM_ARITH_TAC);;
e (ASM_REWRITE_TAC[] THEN NORM_ARITH_TAC);;

let HL_2 = top_thm();;

(* ===================================================================== *)

let HL_LE_SQRT2_IMP_BARV_1 = prove_by_refinement (
 `!V u0 u1.
     saturated V /\
     packing V /\
     u0 IN V /\
     u1 IN V /\
     ~(u0 = u1) /\
     hl [u0;u1] < sqrt (&2) ==> barV V 1 [u0;u1:real^3]`,
[(REPEAT STRIP_TAC);
 (REWRITE_TAC[BARV; LENGTH; ARITH_RULE `SUC (SUC 0) = 1 + 1`]);
 (REPEAT STRIP_TAC);
 (ASM_CASES_TAC `LENGTH (vl:(real^3)list) = 1`);
 (NEW_GOAL `initial_sublist vl [u0; u1:real^3] /\ LENGTH vl = 0 + 1`);
 (ASM_REWRITE_TAC[] THEN ARITH_TAC);
 (UP_ASM_TAC THEN REWRITE_WITH 
   `initial_sublist vl [u0; u1:real^3] /\ LENGTH vl = 0 + 1 <=>
    truncate_simplex 0 [u0;u1] = vl /\ 0 + 1 <= LENGTH [u0;u1:real^3]`);
 (ONCE_REWRITE_TAC[EQ_SYM_EQ]);
 (REWRITE_TAC[Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);
 (ONCE_REWRITE_TAC[EQ_SYM_EQ]);
 (REPEAT STRIP_TAC);
 (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_0]);
 (REWRITE_TAC[VORONOI_NONDG; VORONOI_LIST; VORONOI_SET; set_of_list; LENGTH;
   SET_RULE `INTERS {voronoi_closed V v | v IN {u0}} = voronoi_closed V u0`]);
 (ASM_SIMP_TAC[Packing3.AFF_DIM_VORONOI_CLOSED]);
 (REPEAT STRIP_TAC);
 (ARITH_TAC);
 (ASM_SET_TAC[]);
 (ARITH_TAC);

 (ASM_CASES_TAC `LENGTH (vl:(real^3)list) = 2`);
 (NEW_GOAL `initial_sublist vl [u0; u1:real^3] /\ LENGTH vl = 1 + 1`);
 (ASM_REWRITE_TAC[] THEN ARITH_TAC);
 (UP_ASM_TAC THEN REWRITE_WITH 
   `initial_sublist vl [u0; u1:real^3] /\ LENGTH vl = 1 + 1 <=>
    truncate_simplex 1 [u0;u1] = vl /\ 1 + 1 <= LENGTH [u0;u1:real^3]`);
 (ONCE_REWRITE_TAC[EQ_SYM_EQ]);
 (REWRITE_TAC[Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);
 (ONCE_REWRITE_TAC[EQ_SYM_EQ]);
 (REPEAT STRIP_TAC);
 (ASM_REWRITE_TAC[TRUNCATE_SIMPLEX_EXPLICIT_1]);
 (REWRITE_TAC[VORONOI_NONDG]);
 (REWRITE_TAC[set_of_list; LENGTH]);
 (REPEAT STRIP_TAC);
 (ARITH_TAC);
 (ASM_SET_TAC[]);

 (REWRITE_WITH 
  `aff_dim (voronoi_list V [u0; u1:real^3]) =
   aff_dim (INTERS {bis (HD [u0; u1]) v | v | v IN set_of_list [u0; u1]})`);
 (MATCH_MP_TAC Rogers.YIFVQDV_lemma_aff_dim);
 (ASM_REWRITE_TAC[set_of_list; AFFINE_INDEPENDENT_2] THEN ASM_SET_TAC[]);
 (REWRITE_TAC[set_of_list; SET_RULE `a IN {b,c} <=> a =b \/ a = c`; HD]);
 (REWRITE_TAC[SET_RULE `INTERS {bis u0 v | v | v = u0 \/ v = u1} = 
   bis u0 u0 INTER bis u0 u1`]);
 (REWRITE_WITH `!a:real^3. bis a a = (:real^3)`);
 (REWRITE_TAC[bis] THEN SET_TAC[]);
 (REWRITE_TAC[SET_RULE `(:real^3) INTER s = s`]);
 (MATCH_MP_TAC (ARITH_RULE `a = &2 ==> a + &(SUC(SUC 0)) = (&4):int`));
 (REWRITE_WITH `&2 = &(dimindex (:3)) - &1:int`);
 (REWRITE_TAC[DIMINDEX_3]);
 (ARITH_TAC);
 (REWRITE_TAC[Packing3.BIS_EQ_HYPERPLANE]);
 (MATCH_MP_TAC AFF_DIM_HYPERPLANE);
 (ASM_NORM_ARITH_TAC);

 (NEW_GOAL `F`);
 (NEW_GOAL `initial_sublist vl [u0; u1:real^3] /\ 
             LENGTH vl = (LENGTH vl - 1) + 1`);
 (ASM_REWRITE_TAC[] THEN ASM_ARITH_TAC);
 (UP_ASM_TAC THEN REWRITE_WITH 
   `initial_sublist vl [u0; u1:real^3] /\ LENGTH vl = (LENGTH vl - 1) + 1 <=>
    truncate_simplex (LENGTH vl - 1) [u0;u1] = vl /\ 
    (LENGTH vl - 1) + 1 <= LENGTH [u0;u1:real^3]`);
 (ONCE_REWRITE_TAC[EQ_SYM_EQ]);
 (REWRITE_TAC[Packing3.TRUNCATE_SIMPLEX_INITIAL_SUBLIST]);
 (REWRITE_TAC[LENGTH]);
 (REPEAT STRIP_TAC);
 (ASM_ARITH_TAC);
 (ASM_MESON_TAC[])]);;

(* ===================================================================== *)
let RCONE_GE_SUBSET = prove_by_refinement (
  `!a b u0:real^N u1. a <= b ==> rcone_ge u0 u1 b SUBSET rcone_ge u0 u1 a`,
[(REPEAT STRIP_TAC);
 (REWRITE_TAC[rcone_ge; rconesgn; SUBSET; IN; IN_ELIM_THM]);
 (REPEAT STRIP_TAC);
 (NEW_GOAL 
`&0 <= dist (x,u0:real^N) * dist (u1,u0) * b - dist (x,u0) * dist (u1,u0) * a`);
 (REWRITE_TAC[REAL_ARITH `x * y * b - x * y * a = x * y * (b - a)`]);
 (MATCH_MP_TAC REAL_LE_MUL);
 (REWRITE_TAC[DIST_POS_LE]);
 (MATCH_MP_TAC REAL_LE_MUL);
 (REWRITE_TAC[DIST_POS_LE]);
 (ASM_REAL_ARITH_TAC);
 (ASM_REAL_ARITH_TAC)]);;

(* ===================================================================== *)
let RCONE_GT_SUBSET = prove_by_refinement (
  `!a b u0:real^N u1. a <= b ==> rcone_gt u0 u1 b SUBSET rcone_gt u0 u1 a`,
[(REPEAT STRIP_TAC);
 (REWRITE_TAC[rcone_gt; rconesgn; SUBSET; IN; IN_ELIM_THM]);
 (REPEAT STRIP_TAC);
 (NEW_GOAL 
`&0 <= dist (x,u0:real^N) * dist (u1,u0) * b - dist (x,u0) * dist (u1,u0) * a`);
 (REWRITE_TAC[REAL_ARITH `x * y * b - x * y * a = x * y * (b - a)`]);
 (MATCH_MP_TAC REAL_LE_MUL);
 (REWRITE_TAC[DIST_POS_LE]);
 (MATCH_MP_TAC REAL_LE_MUL);
 (REWRITE_TAC[DIST_POS_LE]);
 (ASM_REAL_ARITH_TAC);
 (ASM_REAL_ARITH_TAC)]);;

(* ===================================================================== *)
(*     The following lemmas are in the svn 126 of HOL                    *)
(*     To be done by John Harrison                                       *)
(* ===================================================================== *)
let BOUNDED_SING = prove 
 (`!a. bounded {a}`, 
    REWRITE_TAC[BOUNDED_INSERT; BOUNDED_EMPTY]);;

let SUBSPACE_BOUNDED_EQ_TRIVIAL = prove
  (`!s:real^N->bool. subspace s ==> (bounded s <=> s = {vec 0})`,
   REPEAT STRIP_TAC THEN EQ_TAC THEN SIMP_TAC[BOUNDED_SING] THEN
   ONCE_REWRITE_TAC[GSYM CONTRAPOS_THM] THEN
   DISCH_THEN(MP_TAC o MATCH_MP (SET_RULE
    `~(s = {a}) ==> a IN s ==> ?b. b IN s /\ ~(b = a)`)) THEN
   ASM_SIMP_TAC[SUBSPACE_0] THEN
   DISCH_THEN(X_CHOOSE_THEN `v:real^N` STRIP_ASSUME_TAC) THEN
   REWRITE_TAC[bounded; NOT_EXISTS_THM] THEN X_GEN_TAC `B:real` THEN
   DISCH_THEN(MP_TAC o SPEC `(B + &1) / norm v % v:real^N`) THEN
   ASM_SIMP_TAC[SUBSPACE_MUL; NORM_MUL; REAL_ABS_DIV; REAL_ABS_NORM] THEN
   ASM_SIMP_TAC[REAL_DIV_RMUL; NORM_EQ_0] THEN REAL_ARITH_TAC);;

 let AFFINE_BOUNDED_EQ_TRIVIAL = prove
  (`!s:real^N->bool.
         affine s ==> (bounded s <=> s = {} \/ ?a. s = {a})`,
   GEN_TAC THEN ASM_CASES_TAC `s:real^N->bool = {}` THEN
   ASM_REWRITE_TAC[BOUNDED_EMPTY] THEN
   FIRST_X_ASSUM(MP_TAC o GEN_REWRITE_RULE I [GSYM MEMBER_NOT_EMPTY]) THEN
   DISCH_THEN(X_CHOOSE_THEN `b:real^N` MP_TAC) THEN
   GEOM_ORIGIN_TAC `b:real^N` THEN SIMP_TAC[AFFINE_EQ_SUBSPACE] THEN
   REPEAT STRIP_TAC THEN ASM_SIMP_TAC[SUBSPACE_BOUNDED_EQ_TRIVIAL] THEN
   FIRST_ASSUM(MP_TAC o MATCH_MP SUBSPACE_0) THEN SET_TAC[]);;

 let AFFINE_BOUNDED_EQ_LOWDIM = prove
  (`!s:real^N->bool.
         affine s ==> (bounded s <=> aff_dim s <= &0)`,
   SIMP_TAC[AFF_DIM_GE; INT_ARITH
    `--(&1):int <= x ==> (x <= &0 <=> x = --(&1) \/ x = &0)`] THEN
   SIMP_TAC[AFF_DIM_EQ_0; AFF_DIM_EQ_MINUS1; AFFINE_BOUNDED_EQ_TRIVIAL]);;

 let BOUNDED_HYPERPLANE_EQ_TRIVIAL = prove
  (`!a b. bounded {x:real^N | a dot x = b} <=>
          if a = vec 0 then ~(b = &0) else dimindex(:N) = 1`,
   REPEAT GEN_TAC THEN ASM_CASES_TAC `a:real^N = vec 0` THEN
   ASM_REWRITE_TAC[DOT_LZERO] THENL
    [ASM_CASES_TAC `b = &0` THEN
     ASM_REWRITE_TAC[EMPTY_GSPEC; BOUNDED_EMPTY] THEN
     REWRITE_TAC[NOT_BOUNDED_UNIV; SET_RULE `{x | T} = UNIV`];
     ASM_SIMP_TAC[AFFINE_BOUNDED_EQ_LOWDIM; AFF_DIM_HYPERPLANE;
                  AFFINE_HYPERPLANE] THEN
     REWRITE_TAC[INT_ARITH `a - &1:int <= &0 <=> a <= &1`; INT_OF_NUM_LE] THEN
     MATCH_MP_TAC(ARITH_RULE `1 <= n ==> (n <= 1 <=> n = 1)`) THEN
     REWRITE_TAC[DIMINDEX_GE_1]]);;

 let UNBOUNDED_HYPERPLANE = prove
  (`!a b. ~(a = vec 0) ==> ~(bounded {x:real^3 | a dot x = b})`,
   SIMP_TAC[BOUNDED_HYPERPLANE_EQ_TRIVIAL; DIMINDEX_3; ARITH]);;
(* ===================================================================== *)

let DIHV_SYM_2 = prove 
 (`!x y z t:real^3. dihV x y z t = dihV x y t z`, 
   REWRITE_TAC[dihV] THEN 
   REPEAT STRIP_TAC THEN REPEAT LET_TAC THEN 
   ASM_REWRITE_TAC[arcV; DOT_SYM; REAL_ARITH `a * b = b * a`]);;

(* ===================================================================== *)
let REAL_DIV_LE_1_TACTICS = prove_by_refinement (
  `!m n. &0 < n /\ m <= n ==> m / n <= &1`,
[(REPEAT STRIP_TAC);
 (REWRITE_WITH `m / n <= &1 <=> m <= &1 * n`);
 (MATCH_MP_TAC REAL_LE_LDIV_EQ);
 (ASM_REWRITE_TAC[]);
 (ASM_REAL_ARITH_TAC)]);;

let REAL_DIV_GE_1_TACTICS = prove_by_refinement (
  `!m n. &0 < n /\ n <= m ==> &1 <= m / n`,
[(REPEAT STRIP_TAC);
 (REWRITE_WITH `&1 <= m / n <=> &1 * n <= m`);
 (MATCH_MP_TAC REAL_LE_RDIV_EQ);
 (ASM_REWRITE_TAC[]);
 (ASM_REAL_ARITH_TAC)]);;

let REAL_DIV_LT_1_TACTICS = prove_by_refinement (
  `!m n. &0 < n /\ m < n ==> m / n < &1`,
[(REPEAT STRIP_TAC);
 (REWRITE_WITH `m / n < &1 <=> m < &1 * n`);
 (MATCH_MP_TAC REAL_LT_LDIV_EQ);
 (ASM_REWRITE_TAC[]);
 (ASM_REAL_ARITH_TAC)]);;

let REAL_DIV_GT_1_TACTICS = prove_by_refinement (
  `!m n. &0 < n /\ n < m ==> &1 < m / n`,
[(REPEAT STRIP_TAC);
 (REWRITE_WITH `&1 < m / n <=> &1 * n < m`);
 (MATCH_MP_TAC REAL_LT_RDIV_EQ);
 (ASM_REWRITE_TAC[]);
 (ASM_REAL_ARITH_TAC)]);;


(* ==================================================================== *)
(* The following lemmas help to prove that the                          *)
(*         definition of dihX is well-defined                           *)
(* ==================================================================== *)

g `!V i j ul vl. packing V /\ saturated V /\ barV V 3 ul /\ barV V 3 vl /\
               (mcell i V ul = mcell j V vl) /\ 
               ~(negligible (mcell i V ul)) /\ 
                i IN {2, 3, 4} /\
                j IN {2, 3, 4} ==>
               (i = j) /\ (!k. i - 1 <= k /\ k <= 3
                  ==> omega_list_n V ul k = omega_list_n V vl k)`;;
e (REPEAT GEN_TAC THEN STRIP_TAC);;
e (NEW_GOAL `i = j /\ mcell i V ul = mcell j V vl`);;
e (MATCH_MP_TAC Ajripqn.AJRIPQN);;
e (ASM_REWRITE_TAC[SET_RULE `a INTER a = a` ]);;
e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `i = 4`);;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `k = 3`);;
e (ASM_ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;

e (REWRITE_WITH `omega_list_n V ul 3 = omega_list V ul`);;
e (REWRITE_TAC[OMEGA_LIST]);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `(3 + 1) - 1 = 3`]);;

e (REWRITE_WITH `omega_list_n V vl 3 = omega_list V vl`);;
e (REWRITE_TAC[OMEGA_LIST]);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `(3 + 1) - 1 = 3`]);;

e (REWRITE_WITH `omega_list V ul = circumcenter (set_of_list ul)`);;
e (MATCH_MP_TAC Rogers.XNHPWAB1);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[IN]);;
e (MATCH_MP_TAC (MESON[] `(~A ==> F) ==> A`));;
e (STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (SIMP_TAC[ASSUME `i = 4`; MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (REWRITE_WITH `omega_list V vl = circumcenter (set_of_list vl)`);;
e (MATCH_MP_TAC Rogers.XNHPWAB1);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[IN]);;
e (MATCH_MP_TAC (MESON[] `(~A ==> F) ==> A`));;
e (STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `j = 4`);;
e (ASM_ARITH_TAC);;
e (SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (AP_TERM_TAC);;

e (REWRITE_WITH `set_of_list ul = set_of_list (vl:(real^3)list) <=> 
                 convex hull (set_of_list ul) = convex hull (set_of_list vl)`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.CONVEX_HULL_EQ_EQ_SET_EQ);;
e (STRIP_TAC);;

e (NEW_GOAL `?u0 u1 u2 u3. ul = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[set_of_list] THEN STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (REWRITE_TAC[ASSUME `i = 4`]);;
e (SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (MATCH_MP_TAC COPLANAR_IMP_NEGLIGIBLE);;
e (MATCH_MP_TAC COPLANAR_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1, u2, u3:real^3}`);;
e (REWRITE_TAC[CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (REWRITE_TAC[COPLANAR_AFFINE_HULL_COPLANAR]);;
e (MATCH_MP_TAC Rogers.AFF_DIM_LE_2_IMP_COPLANAR);;
e (MATCH_MP_TAC Njiutiu.AFF_DEPENDENT_AFF_DIM_4);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (NEW_GOAL `?u0 u1 u2 u3. vl = [u0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[set_of_list] THEN STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (REWRITE_TAC[ASSUME `mcell i V ul = mcell j V vl`]);;
e (REWRITE_WITH `j = 4`);;
e (ASM_ARITH_TAC);;
e (SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (ASM_REWRITE_TAC[set_of_list]);;
e (MATCH_MP_TAC COPLANAR_IMP_NEGLIGIBLE);;
e (MATCH_MP_TAC COPLANAR_SUBSET);;
e (EXISTS_TAC `affine hull {u0, u1, u2, u3:real^3}`);;
e (REWRITE_TAC[CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (REWRITE_TAC[COPLANAR_AFFINE_HULL_COPLANAR]);;
e (MATCH_MP_TAC Rogers.AFF_DIM_LE_2_IMP_COPLANAR);;
e (MATCH_MP_TAC Njiutiu.AFF_DEPENDENT_AFF_DIM_4);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (MP_TAC (ASSUME `mcell i V ul = mcell j V vl`));;
e (REWRITE_WITH `j = 4 /\ i = 4`);;
e (ASM_ARITH_TAC);;
e (SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (COND_CASES_TAC);;
e (REWRITE_TAC[]);;

e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `j = 4 /\ i = 4`);;
e (ASM_ARITH_TAC);;
e (SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (REWRITE_WITH `j = 4 /\ i = 4`);;
e (ASM_ARITH_TAC);;
e (SIMP_TAC[MCELL_EXPLICIT; ARITH_RULE `4 >= 4`;mcell4]);;
e (COND_CASES_TAC);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (ASM_MESON_TAC[]);;

(* Finish the case i = 4 *)
(* ========================================================================= *)
e (NEW_GOAL `mcell i V ul SUBSET 
             UNIONS {rogers V (left_action_list p ul) | p permutes 0..i - 1}`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG2);;
e (ASM_REWRITE_TAC[] THEN ASM_SET_TAC[]);;

e (ABBREV_TAC `X = mcell i V ul`);;
e (NEW_GOAL `X INTER 
   UNIONS {rogers V (left_action_list p ul) | p permutes 0..i - 1} = X`);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `~negligible (X INTER 
   UNIONS {rogers V (left_action_list p ul) | p permutes 0..i - 1})`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[INTER_UNIONS]);;
e (NEW_GOAL `!s:(real^3->bool)->bool. 
  ~negligible (UNIONS s) /\ FINITE s ==> (?t. t IN s /\ ~negligible t)`);;
e (MESON_TAC[NEGLIGIBLE_UNIONS]);;
e (REWRITE_TAC[SET_RULE 
  `{X INTER x | x IN {rogers V (left_action_list p ul) | p permutes 0..i - 1}} =
   {X INTER rogers V (left_action_list p ul) | p permutes 0..i - 1}`]);;
e (ABBREV_TAC 
  `S = {X INTER rogers V (left_action_list p ul) | p permutes 0..i - 1}`);;
e (STRIP_TAC);;

e (NEW_GOAL `(?t. t IN (S:(real^3->bool)->bool) /\ ~negligible t)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "S");;
e (ABBREV_TAC `f = (\p. X INTER rogers V (left_action_list p ul))`);;
e (REWRITE_WITH 
  `{X INTER rogers V (left_action_list p ul) | p permutes 0..i - 1} = 
   {f p | p permutes 0..i-1}`);;
e (EXPAND_TAC "f" THEN REFL_TAC);;
e (ONCE_REWRITE_TAC[SET_RULE `{f x | P x} = {f x | x IN {x | P x}}`]);;

e (REWRITE_TAC[SET_RULE `{f p | p IN {x | x permutes 0..i - 1} } = 
                        {y | ?p. p IN {x | x permutes 0..i - 1} /\ y = f p}`]);;
e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (MATCH_MP_TAC FINITE_PERMUTATIONS);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (UP_ASM_TAC THEN EXPAND_TAC "S" THEN REWRITE_TAC[IN; IN_ELIM_THM] 
   THEN STRIP_TAC);;



e (NEW_GOAL `mcell j V vl SUBSET 
             UNIONS {rogers V (left_action_list q vl) | q permutes 0..j - 1}`);;
e (MATCH_MP_TAC Qzksykg.QZKSYKG2);;
e (ASM_REWRITE_TAC[] THEN ASM_SET_TAC[]);;
e (NEW_GOAL `t SUBSET 
             UNIONS {rogers V (left_action_list q vl) | q permutes 0..j - 1}`);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `t INTER 
   UNIONS {rogers V (left_action_list q vl) | q permutes 0..j - 1} = t`);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `~negligible (t INTER 
   UNIONS {rogers V (left_action_list q vl) | q permutes 0..j - 1})`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[INTER_UNIONS]);;
e (REWRITE_TAC[SET_RULE 
  `{t INTER x | x IN {rogers V (left_action_list q vl) | q permutes 0..j - 1}} =
   {t INTER rogers V (left_action_list q vl) | q permutes 0..j - 1}`]);;

e (NEW_GOAL `!s:(real^3->bool)->bool. 
  ~negligible (UNIONS s) /\ FINITE s ==> (?t. t IN s /\ ~negligible t)`);;
e (MESON_TAC[NEGLIGIBLE_UNIONS]);;
e (ABBREV_TAC 
  `R = {t INTER rogers V (left_action_list q vl) | q permutes 0..j - 1}`);;
e (STRIP_TAC);;

e (NEW_GOAL `(?r. r IN (R:(real^3->bool)->bool) /\ ~negligible r)`);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "R");;
e (ABBREV_TAC `f = (\q. t INTER rogers V (left_action_list q vl))`);;
e (REWRITE_WITH 
  `{t INTER rogers V (left_action_list q vl) | q permutes 0..j - 1} = 
   {f q | q permutes 0..j - 1}`);;
e (EXPAND_TAC "f" THEN REFL_TAC);;
e (ONCE_REWRITE_TAC[SET_RULE `{f x | P x} = {f x | x IN {x | P x}}`]);;

e (REWRITE_TAC[SET_RULE `{f q | q IN {x | x permutes 0..j - 1} } = 
                        {y | ?q. q IN {x | x permutes 0..j - 1} /\ y = f q}`]);;
e (MATCH_MP_TAC FINITE_IMAGE_EXPAND);;
e (MATCH_MP_TAC FINITE_PERMUTATIONS);;
e (REWRITE_TAC[FINITE_NUMSEG]);;
e (UP_ASM_TAC THEN EXPAND_TAC "R" THEN REWRITE_TAC[IN; IN_ELIM_THM] 
   THEN STRIP_TAC);;
e (NEW_GOAL 
  `rogers V (left_action_list p ul) = rogers V (left_action_list q vl)`);;
e (MATCH_MP_TAC (MESON[] `(~A ==> F) ==> A`));;
e (STRIP_TAC);;
e (NEW_GOAL `coplanar (rogers V (left_action_list p ul) INTER 
                       rogers V (left_action_list q vl))`);;
e (MATCH_MP_TAC Rogers.DUUNHOR);;
e (ASM_REWRITE_TAC[IN]);;
e (STRIP_TAC);;

e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `ul:(real^3)list` THEN EXISTS_TAC `i:num`);;
e (EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `X = mcell j V vl`)]);;
e (STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET X`);;
e (REWRITE_TAC[ASSUME `X:real^3->bool = {}`; NEGLIGIBLE_EMPTY]);;

e (MATCH_MP_TAC Qzksykg.QZKSYKG1);;
e (EXISTS_TAC `vl:(real^3)list` THEN EXISTS_TAC `j:num`);;
e (EXISTS_TAC `q:num->num`);;
e (ASM_REWRITE_TAC[]);;
e (STRIP_TAC);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[GSYM (ASSUME `X = mcell j V vl`)]);;
e (STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET X`);;
e (REWRITE_TAC[ASSUME `X:real^3->bool = {}`; NEGLIGIBLE_EMPTY]);;
e (UNDISCH_TAC `~NULLSET r`);;
e (REWRITE_TAC[]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `rogers V (left_action_list p ul) INTER
       rogers V (left_action_list q vl)`);;
e (STRIP_TAC);;
e (ASM_SIMP_TAC[COPLANAR_IMP_NEGLIGIBLE]);;
e (ASM_SET_TAC[]);;
e (ABBREV_TAC `xl:(real^3)list = (left_action_list p ul)`);;
e (ABBREV_TAC `yl:(real^3)list = (left_action_list q vl)`);;


e (NEW_GOAL `barV V 3 xl /\
             (!k. i - 1 <= k /\ k <= 3
                  ==> omega_list_n V xl k = omega_list_n V ul k)`);;
e (MATCH_MP_TAC Ynhyjit.YNHYJIT);;
e (EXISTS_TAC `p:num->num`);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `j = 2`);;
e (UNDISCH_TAC `~NULLSET X`);;
e (REWRITE_TAC[GSYM (ASSUME `mcell i V ul = X`); ASSUME `i = j:num`; 
   MCELL_EXPLICIT; mcell2; ASSUME `j = 2`]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (NEW_GOAL `j = 3`);;
e (ASM_SET_TAC[]);;
e (UNDISCH_TAC `~NULLSET X`);;
e (REWRITE_TAC[GSYM (ASSUME `mcell i V ul = X`); ASSUME `i = j:num`; 
   MCELL_EXPLICIT; mcell3; ASSUME `j = 3`]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;


e (NEW_GOAL `barV V 3 yl /\
             (!k. j - 1 <= k /\ k <= 3
                  ==> omega_list_n V yl k = omega_list_n V vl k)`);;
e (MATCH_MP_TAC Ynhyjit.YNHYJIT);;
e (EXISTS_TAC `q:num->num`);;
e (ASM_REWRITE_TAC[]);;

e (ASM_CASES_TAC `j = 2`);;
e (UNDISCH_TAC `~NULLSET X`);;
e (REWRITE_TAC[ASSUME `X = mcell j V vl`; MCELL_EXPLICIT; mcell2; ASSUME `j = 2`]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[ARITH_RULE `2 - 1 = 1`]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (NEW_GOAL `j = 3`);;
e (ASM_SET_TAC[]);;
e (UNDISCH_TAC `~NULLSET X`);;
e (REWRITE_TAC[ASSUME `X = mcell j V vl`; MCELL_EXPLICIT; mcell3; ASSUME `j = 3`]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[ARITH_RULE `3 - 1 = 2`]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;


e (NEW_GOAL `!k. 0 <= k /\ k <= 3
                  ==> omega_list_n V xl k = omega_list_n V yl k`);;
e (MATCH_MP_TAC Njiutiu.NJIUTIU);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `aff_dim (rogers V yl) <= &(dimindex (:3))`);;
e (REWRITE_TAC[AFF_DIM_LE_UNIV]);;
e (UP_ASM_TAC THEN REWRITE_TAC[DIMINDEX_3]);;
e (STRIP_TAC);;
e (NEW_GOAL `~(aff_dim (rogers V yl) <= &2)`);;
e (STRIP_TAC);;
e (UNDISCH_TAC `~NULLSET r` THEN REWRITE_TAC[]);;
e (MATCH_MP_TAC NEGLIGIBLE_SUBSET);;
e (EXISTS_TAC `rogers V yl`);;
e (STRIP_TAC);;
e (MATCH_MP_TAC COPLANAR_IMP_NEGLIGIBLE);;
e (ASM_SIMP_TAC[Rogers.AFF_DIM_LE_2_IMP_COPLANAR]);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN ARITH_TAC);;
e (NEW_GOAL 
  `(!k. j - 1 <= k /\ k <= 3 ==> omega_list_n V xl k = omega_list_n V yl k)`);;
e (REPEAT STRIP_TAC);;
e (FIRST_ASSUM MATCH_MP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `j = 2 \/ j = 3 \/ j = 4`);;
e (ASM_SET_TAC[]);;

e (UP_ASM_TAC THEN UP_ASM_TAC THEN UP_ASM_TAC THEN ARITH_TAC);;
e (ASM_MESON_TAC[]);;

let MCELL_ID_OMEGA_LIST_N = top_thm();;

(* ========================================================================== *)

g `!V i j ul vl.
         packing V /\
         saturated V /\
         barV V 3 ul /\
         barV V 3 vl /\
         HD ul = HD vl /\
         mcell i V ul = mcell j V vl /\
         ~NULLSET (mcell i V ul) /\
         i IN {2, 3} /\
         j IN {2, 3}
         ==> mxi V ul = mxi V vl`;;
e (REPEAT STRIP_TAC);;
e (NEW_GOAL `i = j /\
             (!k. i - 1 <= k /\ k <= 3
                  ==> omega_list_n V ul k = omega_list_n V vl k)`);;
e (MATCH_MP_TAC MCELL_ID_OMEGA_LIST_N);;
e (ASM_REWRITE_TAC[]);;
e (ASM_SET_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (ASM_CASES_TAC `hl (truncate_simplex 2 (ul:(real^3)list)) >= sqrt (&2)`);;
e (ASM_CASES_TAC `hl (truncate_simplex 2 (vl:(real^3)list)) >= sqrt (&2)`);;

e (REWRITE_WITH `mxi V ul = omega_list_n V ul 2`);;
e (REWRITE_TAC[mxi] THEN COND_CASES_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (REWRITE_WITH `mxi V vl = omega_list_n V vl 2`);;
e (REWRITE_TAC[mxi] THEN COND_CASES_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `F`);;
e (ASM_MESON_TAC[]);;
e (ASM_MESON_TAC[]);;

e (FIRST_ASSUM MATCH_MP_TAC);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_ARITH_TAC);;

e (UP_ASM_TAC THEN REWRITE_TAC[REAL_ARITH `~(a >= b) <=> a < b`]);;
e (STRIP_TAC);;

e (ABBREV_TAC `xl = truncate_simplex 2 (ul:(real^3)list)`);;
e (ABBREV_TAC `yl = truncate_simplex 2 (vl:(real^3)list)`);;

e (NEW_GOAL `set_of_list (truncate_simplex (i - 1) (ul:(real^3)list)) = 
             set_of_list (truncate_simplex (i - 1) vl)`);;
e (NEW_GOAL `V INTER mcell i V ul = set_of_list (truncate_simplex (i - 1) ul)`);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (NEW_GOAL `V INTER mcell j V vl = set_of_list (truncate_simplex (j - 1) vl)`);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `hl (xl:(real^3)list) <= dist (omega_list V xl, HD xl)`);;
e (MATCH_MP_TAC Rogers.WAUFCHE1);;
e (EXISTS_TAC `2` THEN ASM_REWRITE_TAC[IN] THEN EXPAND_TAC "xl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;

e (NEW_GOAL `hl yl = dist (omega_list V yl, HD yl)`);;
e (MATCH_MP_TAC Rogers.WAUFCHE2);;
e (EXISTS_TAC `2` THEN ASM_REWRITE_TAC[IN]);;
e (EXPAND_TAC "yl" THEN MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;

e (NEW_GOAL `omega_list V xl = omega_list V yl`);;
e (REWRITE_TAC[OMEGA_LIST]);;
e (REWRITE_WITH `LENGTH (xl:(real^3)list) = 3 /\ LENGTH (yl:(real^3)list) = 3`);;
e (EXPAND_TAC "xl" THEN EXPAND_TAC "yl");;
e (REWRITE_TAC[ARITH_RULE `3 = 2 + 1`]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Packing3.LENGTH_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (MATCH_MP_TAC Packing3.LENGTH_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (REWRITE_TAC[ARITH_RULE `3 - 1 = 2`]);;
e (EXPAND_TAC "xl" THEN EXPAND_TAC "yl");;
e (REWRITE_WITH 
  `truncate_simplex 2 ul = truncate_simplex (2 + 0) (ul:(real^3)list) /\
   truncate_simplex 2 vl = truncate_simplex (2 + 0) (vl:(real^3)list)`);;
e (REWRITE_TAC[ARITH_RULE `2 + 0 = 2`]);;
e (REWRITE_WITH 
  `omega_list_n V (truncate_simplex (2 + 0) ul) 2 = omega_list_n V ul 2`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_N_LEMMA);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (REWRITE_WITH 
  `omega_list_n V (truncate_simplex (2 + 0) vl) 2 = omega_list_n V vl 2`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_N_LEMMA);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (FIRST_ASSUM MATCH_MP_TAC);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `HD (xl:(real^3)list) = HD yl`);;
e (EXPAND_TAC "xl" THEN EXPAND_TAC "yl");;
e (REWRITE_WITH `HD (truncate_simplex 2 ul) = (HD ul):real^3`);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (REWRITE_WITH `HD (truncate_simplex 2 vl) = (HD vl):real^3`);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;
e (NEW_GOAL `hl (yl:(real^3)list) = dist (omega_list V xl, HD xl)`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

(* ======================================================================= *)

e (UP_ASM_TAC THEN REWRITE_TAC[REAL_ARITH `~(a >= b) <=> a < b`]);;
e (STRIP_TAC);;
e (ASM_CASES_TAC `hl (truncate_simplex 2 (vl:(real^3)list)) >= sqrt (&2)`);;

e (ABBREV_TAC `xl = truncate_simplex 2 (ul:(real^3)list)`);;
e (ABBREV_TAC `yl = truncate_simplex 2 (vl:(real^3)list)`);;

e (NEW_GOAL `set_of_list (truncate_simplex (i - 1) (ul:(real^3)list)) = 
             set_of_list (truncate_simplex (i - 1) vl)`);;
e (NEW_GOAL `V INTER mcell i V ul = set_of_list (truncate_simplex (i - 1) ul)`);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (NEW_GOAL `V INTER mcell j V vl = set_of_list (truncate_simplex (j - 1) vl)`);;
e (MATCH_MP_TAC Lepjbdj.LEPJBDJ);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_REWRITE_TAC[]);;
e (REPEAT STRIP_TAC);;
e (ASM_ARITH_TAC);;
e (ASM_ARITH_TAC);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (ASM_MESON_TAC[]);;

e (NEW_GOAL `F`);;
e (NEW_GOAL `hl (yl:(real^3)list) <= dist (omega_list V yl, HD yl)`);;
e (MATCH_MP_TAC Rogers.WAUFCHE1);;
e (EXISTS_TAC `2` THEN ASM_REWRITE_TAC[IN] THEN EXPAND_TAC "yl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;

e (NEW_GOAL `hl xl = dist (omega_list V xl, HD xl)`);;
e (MATCH_MP_TAC Rogers.WAUFCHE2);;
e (EXISTS_TAC `2` THEN ASM_REWRITE_TAC[IN]);;
e (EXPAND_TAC "xl" THEN MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;

e (NEW_GOAL `omega_list V xl = omega_list V yl`);;
e (REWRITE_TAC[OMEGA_LIST]);;
e (REWRITE_WITH `LENGTH (xl:(real^3)list) = 3 /\ LENGTH (yl:(real^3)list) = 3`);;
e (EXPAND_TAC "xl" THEN EXPAND_TAC "yl");;
e (REWRITE_TAC[ARITH_RULE `3 = 2 + 1`]);;
e (STRIP_TAC);;
e (MATCH_MP_TAC Packing3.LENGTH_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (MATCH_MP_TAC Packing3.LENGTH_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (REWRITE_TAC[ARITH_RULE `3 - 1 = 2`]);;
e (EXPAND_TAC "xl" THEN EXPAND_TAC "yl");;
e (REWRITE_WITH 
  `truncate_simplex 2 ul = truncate_simplex (2 + 0) (ul:(real^3)list) /\
   truncate_simplex 2 vl = truncate_simplex (2 + 0) (vl:(real^3)list)`);;
e (REWRITE_TAC[ARITH_RULE `2 + 0 = 2`]);;
e (REWRITE_WITH 
  `omega_list_n V (truncate_simplex (2 + 0) ul) 2 = omega_list_n V ul 2`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_N_LEMMA);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (REWRITE_WITH 
  `omega_list_n V (truncate_simplex (2 + 0) vl) 2 = omega_list_n V vl 2`);;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_N_LEMMA);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (FIRST_ASSUM MATCH_MP_TAC);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_ARITH_TAC);;

e (NEW_GOAL `HD (xl:(real^3)list) = HD yl`);;
e (EXPAND_TAC "xl" THEN EXPAND_TAC "yl");;
e (REWRITE_WITH `HD (truncate_simplex 2 ul) = (HD ul):real^3`);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (REWRITE_WITH `HD (truncate_simplex 2 vl) = (HD vl):real^3`);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (vl:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list vl) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `hl (xl:(real^3)list) = dist (omega_list V yl, HD yl)`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;
e (UP_ASM_TAC THEN REWRITE_TAC[REAL_ARITH `~(a >= b) <=> a < b`]);;
e (STRIP_TAC);;

(* ======================================================================= *)

e (NEW_GOAL `sqrt (&2) <= hl (ul:(real^3)list)`);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_CASES_TAC `i = 2`);;
e (REWRITE_TAC[MCELL_EXPLICIT; ASSUME `i = 2`; mcell2]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (NEW_GOAL `i = 3`);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[MCELL_EXPLICIT; ASSUME `i = 3`; mcell3]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (NEW_GOAL `sqrt (&2) <= hl (vl:(real^3)list)`);;
e (UNDISCH_TAC `~NULLSET (mcell i V ul)`);;
e (ASM_REWRITE_TAC[]);;
e (ASM_CASES_TAC `j = 2`);;
e (REWRITE_TAC[MCELL_EXPLICIT; ASSUME `j = 2`; mcell2]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;
e (NEW_GOAL `j = 3`);;
e (ASM_SET_TAC[]);;
e (REWRITE_TAC[MCELL_EXPLICIT; ASSUME `j = 3`; mcell3]);;
e (COND_CASES_TAC);;
e (STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[NEGLIGIBLE_EMPTY]);;

e (ABBREV_TAC `s2 = omega_list_n V ul 2`);;
e (ABBREV_TAC `s3 = omega_list_n V ul 3`);;
e (NEW_GOAL `s2 = omega_list_n V vl 2`);;
e (EXPAND_TAC "s2" THEN FIRST_ASSUM MATCH_MP_TAC);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_ARITH_TAC);;
e (NEW_GOAL `s3 = omega_list_n V vl 3`);;
e (EXPAND_TAC "s3" THEN FIRST_ASSUM MATCH_MP_TAC);;
e (NEW_GOAL `i = 2 \/ i = 3`);;
e (ASM_SET_TAC[]);;
e (ASM_ARITH_TAC);;
e (ABBREV_TAC `u0:real^3 = HD ul`);;

e (NEW_GOAL `?s. between s (s2,s3) /\
                  dist (u0,s) = sqrt (&2) /\
                  mxi V ul = s`);;
e (EXPAND_TAC "s2" THEN EXPAND_TAC "s3");;
e (MATCH_MP_TAC MXI_EXPLICIT);;
e (NEW_GOAL `?v0 u1 u2 u3. ul = [v0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `u1:real^3` THEN EXISTS_TAC `u2:real^3` THEN 
   EXISTS_TAC `u3:real^3`);;
e (ASM_REWRITE_TAC[]);;
e (REWRITE_WITH `v0:real^3 = HD ul`);;
e (REWRITE_TAC[ASSUME `ul = [v0;u1;u2;u3:real^3]`; HD]);;
e (ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;

e (NEW_GOAL `?t. between t (s2,s3) /\
                  dist (u0,t) = sqrt (&2) /\
                  mxi V vl = t`);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC MXI_EXPLICIT);;
e (NEW_GOAL `?v0 u1 u2 u3. vl = [v0;u1;u2;u3:real^3]`);;
e (MATCH_MP_TAC BARV_3_EXPLICIT);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (EXISTS_TAC `u1:real^3` THEN EXISTS_TAC `u2:real^3` THEN 
   EXISTS_TAC `u3:real^3`);;
e (ASM_REWRITE_TAC[HD]);;
e (UP_ASM_TAC THEN STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;

e (NEW_GOAL `!n. between n (s2, s3:real^3) ==> 
             dist (u0, n) pow 2 = dist (s2, n) pow 2 + dist (u0, s2) pow 2`);;
e (REPEAT STRIP_TAC);;
e (REWRITE_TAC[dist]);;
e (MATCH_MP_TAC PYTHAGORAS);;
e (REWRITE_TAC[orthogonal]);;
e (ABBREV_TAC `zl = truncate_simplex 2 (ul:(real^3)list)`);;
e (REWRITE_WITH `s2:real^3 = circumcenter (set_of_list zl)`);;
e (REWRITE_WITH `s2 = omega_list V zl`);;
e (EXPAND_TAC "s2" THEN EXPAND_TAC "zl");;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_LEMMA);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (MATCH_MP_TAC Rogers.XNHPWAB1);;
e (EXISTS_TAC `2` THEN ASM_REWRITE_TAC[IN]);;
e (EXPAND_TAC "zl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;
e (MATCH_MP_TAC Rogers.MHFTTZN4);;
e (EXISTS_TAC `V:real^3->bool`);;
e (EXISTS_TAC `2`);;
e (REPEAT STRIP_TAC);;
e (ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "zl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;

e (NEW_GOAL `s2 IN voronoi_list V zl`);;
e (REWRITE_WITH `s2 = omega_list V zl`);;
e (EXPAND_TAC "s2" THEN EXPAND_TAC "zl");;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_LEMMA);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_IN_VORONOI_LIST);;
e (EXISTS_TAC `2`);;
e (EXPAND_TAC "zl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;

e (NEW_GOAL `s3 IN voronoi_list V zl`);;
e (EXPAND_TAC "s3" THEN EXPAND_TAC "zl");;
e (MATCH_MP_TAC Rogers.OMEGA_LIST_N_IN_VORONOI_LIST_GEN);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3 /\ 3 <= 3`]);;
e (NEW_GOAL `affine hull {s2, s3} SUBSET affine hull voronoi_list V zl`);;
e (MATCH_MP_TAC Marchal_cells_2_new.AFFINE_SUBSET_KY_LEMMA);;
e (ASM_SET_TAC[]);;
e (NEW_GOAL `n IN affine hull {s2, s3:real^3}`);;
e (NEW_GOAL `convex hull {s2,s3} SUBSET affine hull {s2,s3:real^3}`);;
e (REWRITE_TAC[CONVEX_HULL_SUBSET_AFFINE_HULL]);;
e (NEW_GOAL `n IN convex hull {s2, s3:real^3}`);;
e (REWRITE_TAC[GSYM BETWEEN_IN_CONVEX_HULL]);;
e (ASM_REWRITE_TAC[]);;
e (ASM_SET_TAC[]);;
e (ASM_SET_TAC[]);;

e (MATCH_MP_TAC Marchal_cells_2_new.IN_AFFINE_KY_LEMMA1);;
e (REWRITE_WITH `u0:real^3 = HD zl`);;
e (EXPAND_TAC "zl" THEN EXPAND_TAC "u0");;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (MATCH_MP_TAC Packing3.HD_IN_SET_OF_LIST);;

e (REWRITE_WITH `LENGTH (zl:(real^3)list) = 2 + 1 /\ 
                 CARD (set_of_list zl) = 2 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "zl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;
e (ARITH_TAC);;

e (NEW_GOAL `dist (u0,s) pow 2 = dist (s2,s:real^3) pow 2 + dist (u0,s2) pow 2`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `dist (u0,t) pow 2 = dist (s2,t:real^3) pow 2 + dist (u0,s2) pow 2`);;
e (ASM_SIMP_TAC[]);;
e (NEW_GOAL `dist (s2, s:real^3) = dist (s2, t)`);;
e (REWRITE_TAC[DIST_EQ]);;
e (UP_ASM_TAC THEN UP_ASM_TAC THEN ASM_REWRITE_TAC[] THEN REAL_ARITH_TAC);;

e (UNDISCH_TAC `between s (s2, s3:real^3)` THEN 
   UNDISCH_TAC `between t (s2, s3:real^3)`);;
e (REWRITE_TAC[BETWEEN_IN_CONVEX_HULL; CONVEX_HULL_2; IN; IN_ELIM_THM]);;
e (REPEAT STRIP_TAC);;
e (UNDISCH_TAC `dist (s2,s) = dist (s2,t:real^3)`);;
e (REWRITE_TAC[dist;ASSUME `s = u' % s2 + v' % s3:real^3`; 
   ASSUME `t = u % s2 + v % s3:real^3` ]);;
e (REWRITE_WITH `s2 - (u' % s2 + v' % s3) =
  (u' + v') % s2 - (u' % s2 + v' % s3:real^3)`);;
e (ASM_REWRITE_TAC[] THEN VECTOR_ARITH_TAC);;
e (REWRITE_WITH `s2 - (u % s2 + v % s3) =
  (u + v) % s2 - (u % s2 + v % s3:real^3)`);;
e (ASM_REWRITE_TAC[] THEN VECTOR_ARITH_TAC);;
e (REWRITE_TAC[VECTOR_ARITH `(u + v) % s - (u % s + v % t) = v % (s - t)`]);;
e (REWRITE_TAC[NORM_MUL]);;
e (REWRITE_WITH `abs v = v /\ abs v' = v'`);;
e (ASM_SIMP_TAC[REAL_ABS_REFL]);;
e (REWRITE_TAC[REAL_ARITH `a * b = c * b <=> (a - c) * b = &0`;REAL_ENTIRE]);;
e (STRIP_TAC);;
e (REWRITE_WITH `v = v':real /\ u = u':real`);;
e (ASM_REAL_ARITH_TAC);;
e (UP_ASM_TAC THEN REWRITE_TAC[NORM_EQ_0]);;
e (REWRITE_TAC[VECTOR_ARITH `a - b = vec 0 <=> a = b`] THEN STRIP_TAC);;
e (NEW_GOAL `F`);;
e (NEW_GOAL `hl (ul:(real^3)list) <= dist (s3,u0:real^3)`);;
e (REWRITE_WITH `s3 = omega_list V ul /\ u0 = HD ul`);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM (ASSUME `omega_list_n V ul 3 = s3`); OMEGA_LIST]);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (REWRITE_TAC[ARITH_RULE `(3 + 1) - 1 = 3`]);;
e (ASM_REWRITE_TAC[]);;
e (MATCH_MP_TAC Rogers.WAUFCHE1);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[IN]);;
e (ABBREV_TAC `zl:(real^3)list = truncate_simplex 2 ul`);;
e (NEW_GOAL `hl (zl:(real^3)list) = dist (s3, u0:real^3)`);;


e (REWRITE_WITH `s3 = omega_list V zl /\ u0 = HD zl`);;
e (STRIP_TAC);;
e (REWRITE_TAC[GSYM (ASSUME `s2:real^3 = s3`); OMEGA_LIST]);;
e (EXPAND_TAC "s2");;

e (REWRITE_WITH `LENGTH (zl:(real^3)list) = 2 + 1 /\ 
                 CARD (set_of_list zl) = 2 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (EXPAND_TAC "zl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;
e (REWRITE_TAC[ARITH_RULE `(2 + 1) - 1 = 2`]);;
e (EXPAND_TAC "zl");;

e (REWRITE_WITH `truncate_simplex 2 (ul:(real^3)list) = 
                 truncate_simplex (2 + 0) (ul:(real^3)list)`);;
e (REWRITE_TAC[ARITH_RULE `2 + 0 = 2`]);;
e (MATCH_MP_TAC Packing3.OMEGA_LIST_N_LEMMA);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;

e (EXPAND_TAC "zl" THEN EXPAND_TAC "u0");;
e (ONCE_REWRITE_TAC[EQ_SYM_EQ]);;
e (MATCH_MP_TAC Packing3.HD_TRUNCATE_SIMPLEX);;
e (REWRITE_WITH `LENGTH (ul:(real^3)list) = 3 + 1 /\ 
                 CARD (set_of_list ul) = 3 + 1`);;
e (MATCH_MP_TAC Rogers.BARV_IMP_LENGTH_EQ_CARD);;
e (EXISTS_TAC `V:real^3->bool` THEN ASM_REWRITE_TAC[]);;
e (ARITH_TAC);;
e (MATCH_MP_TAC Rogers.WAUFCHE2);;
e (EXISTS_TAC `2` THEN ASM_REWRITE_TAC[IN]);;
e (EXPAND_TAC "zl");;
e (MATCH_MP_TAC Packing3.TRUNCATE_SIMPLEX_BARV);;
e (EXISTS_TAC `3` THEN ASM_REWRITE_TAC[ARITH_RULE `2 <= 3`]);;
e (ASM_REAL_ARITH_TAC);;
e (ASM_MESON_TAC[]);;

let MCELL_ID_MXI = top_thm();;

(* ========================================================================== *)
let AFFINE_HULL_3_INSERT = prove_by_refinement (
`!a:real^3 S.
    a IN affine hull S ==> affine hull (a INSERT S) = affine hull S`,
[(REPEAT STRIP_TAC);
 (MATCH_MP_TAC AFFINE_HULLS_EQ);
 (ASM_REWRITE_TAC[SET_SUBSET_AFFINE_HULL; INSERT_SUBSET]);
 (MATCH_MP_TAC (SET_RULE `a:real^3 INSERT s SUBSET t ==> s SUBSET t`));
 (REWRITE_TAC[SET_SUBSET_AFFINE_HULL])]);;
(* ========================================================================== *)
(* ========================================================================== *)

