(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(* Section: Counting Spheres                                                             *)
(* Chapter: packing                                                           *)
(* Author: Thomas C. Hales                                  *)
(* Date: 2011-06-18                                                           *)
(* ========================================================================== *)

flyspeck_needs "packing/YSSKQOY.hl";;

let lemma = prove_by_refinement(
  `!a2 b c. (&0 < a2)  /\ (&0 < c) /\ (!t. &0 <= t /\ t < c ==> a2*t <= b) ==> (!t. &0 <= t /\ t <= c ==> a2*t <= b)`,
  (* {{{ proof *)
[
REPEAT STRIP_TAC ;
DISJ_CASES_TAC (REAL_ARITH `t < c \/  ~(t <= c) \/ t=c `);
BY(ASM_MESON_TAC []);
HASH_UNDISCH_TAC 9516 ;
ASM_REWRITE_TAC [];
  DISCH_THEN SUBST1_TAC;
HASH_UNDISCH_TAC 6171  ;
  DISCH_THEN (fun t -> ASSUME_TAC t THEN ASSUME_TAC t);
HASH_RULE_TAC 6171   (SPEC `(b/(&2 * a2) + c/(&2))`);
HASH_RULE_TAC 6171  (SPEC `&0`);
ANTS_TAC;
ASM_REAL_ARITH_TAC;
REWRITE_TAC [REAL_ARITH`x* &0= &0`];
DISCH_TAC ;
SUBGOAL_THEN  `(&0 <= b / (&2 * a2) + c / &2)=T` SUBST1_TAC;
ASM_REWRITE_TAC [];
MATCH_MP_TAC (REAL_ARITH `&0 <= x /\( &0 < y) ==> &0 <= x + y/ &2`);
ASM_REWRITE_TAC [];
MATCH_MP_TAC REAL_LE_DIV;
ASM_REAL_ARITH_TAC;
REWRITE_TAC [];
ONCE_REWRITE_TAC [REAL_ARITH `((x < y) = (x - y < &0)) /\((x <= y) = (x - y <= &0))`];
MP_TAC (Calc_derivative.rational_identity `(b / (&2 * a2) + c / &2) - c = -- (a2*c - b)/(&2 * a2)`);
MP_TAC (Calc_derivative.rational_identity `(a2 * (b/ (&2 * a2) + c / &2) - b) = (a2 * c - b) /(&2)`);
ASM_SIMP_TAC [REAL_ARITH `~(&2 = &0) /\( &0 < a2 ==> ~(a2 = &0))`];
  DISCH_THEN SUBST1_TAC;
  DISCH_THEN SUBST1_TAC;
ABBREV_TAC `u = a2 * c - b `;
HASH_UNDISCH_TAC 3659 ;
REWRITE_TAC[REAL_ARITH `--x / a < &0 <=> &0 < x / a`];
SIMP_TAC [REAL_ARITH`&0 < x ==> &0 < &2 * x`;Trigonometry2.REAL_LT_DIV_0];
REAL_ARITH_TAC 
]
);;
  (* }}} *)

(* REMOVE:
let eus1 = prove_by_refinement(
  `!(P:real^2 -> bool) c r. (&0 < r) /\ polyhedron P /\ c facet_of P /\  
  (!p. norm p < r ==> P p) ==>
     (?a b.  (norm a = &1) /\ 
      (r <= b) /\
                    P SUBSET {x | a dot x <= b} /\
                    c = P INTER {x | a dot x = b})`,
  (* {{{ proof *)
[
REPEAT STRIP_TAC ;
MP_TAC (SPECL[`P:real^2->bool`;`c:real^2->bool`] (INST_TYPE [(`:2`,`:N`)] FACET_OF_POLYHEDRON));
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
EXISTS_TAC  `&1/ norm a % (a:real^2)`;
EXISTS_TAC  `&1/ norm (a:real^2) * (b:real)`;
ASM_REWRITE_TAC [GSYM Trigonometry2.NOT_VEC0_UNITABLE];
SUBGOAL_THEN  `&0 < norm (a:real^2)` ASSUME_TAC;
ASM_REWRITE_TAC [NORM_POS_LT];
SUBGOAL_THEN `&0 < &1/ norm (a:real^2)` ASSUME_TAC;
MATCH_MP_TAC  REAL_LT_DIV THEN CONJ_TAC THEN TRY REAL_ARITH_TAC THEN ASM_REWRITE_TAC[];
HASH_UNDISCH_TAC 7978 ;
REWRITE_TAC  [DOT_LMUL];
ASM_SIMP_TAC [REAL_LE_LMUL_EQ];
REWRITE_TAC [REAL_EQ_MUL_LCANCEL];
SIMP_TAC [REAL_ARITH `&0 < d==> ~(d= &0)`];
DISCH_TAC ;
SUBGOAL_THEN `!p. norm (p:real^2) < r ==> (a:real^2) dot p <= b` ASSUME_TAC;
REPEAT STRIP_TAC ;
HASH_UNDISCH_TAC 5889 ;
REWRITE_TAC [SUBSET;IN;IN_ELIM_THM];
DISCH_THEN MATCH_MP_TAC;
FIRST_X_ASSUM MATCH_MP_TAC;
ASM_REWRITE_TAC [];
SUBGOAL_THEN  `(&0 < norm (a:real^2) pow 2) /\(&0 < r/ norm a) /\(!t. &0 <= t /\( t < r/ norm a) ==> (norm a pow 2 )*t <= b)` (fun t -> MP_TAC (MATCH_MP lemma t));
CONJ_TAC ;
HASH_UNDISCH_TAC 7435 ;
REWRITE_TAC [GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
REAL_ARITH_TAC ;
CONJ_TAC ;
MATCH_MP_TAC REAL_LT_DIV;
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
HASH_RULE_TAC 4896 (SPEC `t % (a:real^2)`);
ASM_SIMP_TAC [NORM_MUL;REAL_ARITH `&0 <= t ==> (abs t = t)`];
REWRITE_TAC [DOT_RMUL];
REWRITE_TAC [DOT_SQUARE_NORM];
ANTS_TAC;
HASH_RULE_TAC 7310 (Calc_derivative.rational_ineq_rule);
HASH_UNDISCH_TAC 7435 ;
SIMP_TAC [REAL_LT_MUL_EQ];
MP_TAC (REAL_ARITH `&0 < x ==> ~(x = &0)`);
REAL_ARITH_TAC ;
REAL_ARITH_TAC ;
DISCH_THEN (fun t-> MP_TAC (SPEC `r/ norm (a:real^2)` t));
ANTS_TAC;
REWRITE_TAC [REAL_ARITH `x <= x`];
REWRITE_TAC [invert_den_le];
MATCH_MP_TAC REAL_LE_MUL;
ASM_REAL_ARITH_TAC;
DISCH_THEN (MP_TAC o Calc_derivative.rational_ineq_rule);
DISCH_TAC ;
MATCH_MP_TAC (REAL_ARITH `((x < y) ==> F) ==> (y <= x)`);
DISCH_THEN (MP_TAC o Calc_derivative.rational_ineq_rule);
HASH_UNDISCH_TAC 5880 ;
SUBGOAL_THEN `~(norm (a:real^2) = &0)` ASSUME_TAC;
ASM_REAL_ARITH_TAC;
ASM_REWRITE_TAC [];
REWRITE_TAC [REAL_ARITH `~(&0 < (x - y) * b) <=> (&0 <= (y - x)*b)`];
REWRITE_TAC [REAL_RING `(b * norm (a:real^2) - norm a pow 2 * r) = (b - r * norm a) * norm a`];
HASH_UNDISCH_TAC 7435 ;
REWRITE_TAC [REAL_MUL_POS_LE;REAL_MUL_POS_LT;REAL_ENTIRE;REAL_ARITH `a * b < &0 <=> ~(&0 <= a * b)`];
REAL_ARITH_TAC
]);;
  (* }}} *)
*)

let eus1 = prove_by_refinement(
  `!(P:real^2 -> bool) c. polyhedron P /\ c facet_of P  ==>  
     (?a b.  (norm a = &1) /\
        (!r. (&0 < r) /\ (!p. norm p < r ==> P p) ==> (r <= b)) /\
                    P SUBSET {x | a dot x <= b} /\
                    c = P INTER {x | a dot x = b})`,
  (* {{{ proof *)
[
REPEAT STRIP_TAC ;
MP_TAC (SPECL[`P:real^2->bool`;`c:real^2->bool`] (INST_TYPE [(`:2`,`:N`)] FACET_OF_POLYHEDRON));
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
EXISTS_TAC  `&1/ norm a % (a:real^2)`;
EXISTS_TAC  `&1/ norm (a:real^2) * (b:real)`;
ASM_REWRITE_TAC [GSYM Trigonometry2.NOT_VEC0_UNITABLE];
SUBGOAL_THEN  `&0 < norm (a:real^2)` ASSUME_TAC;
ASM_REWRITE_TAC [NORM_POS_LT];
SUBGOAL_THEN `&0 < &1/ norm (a:real^2)` ASSUME_TAC;
MATCH_MP_TAC  REAL_LT_DIV THEN CONJ_TAC THEN TRY REAL_ARITH_TAC THEN ASM_REWRITE_TAC[];
HASH_UNDISCH_TAC 7978 ;
REWRITE_TAC  [DOT_LMUL];
ASM_SIMP_TAC [REAL_LE_LMUL_EQ];
REWRITE_TAC [REAL_EQ_MUL_LCANCEL];
SIMP_TAC [REAL_ARITH `&0 < d==> ~(d= &0)`];
DISCH_TAC ;
REPEAT STRIP_TAC;
SUBGOAL_THEN `!p. norm (p:real^2) < r ==> (a:real^2) dot p <= b` ASSUME_TAC;
REPEAT STRIP_TAC ;
HASH_UNDISCH_TAC 5889 ;
REWRITE_TAC [SUBSET;IN;IN_ELIM_THM];
DISCH_THEN MATCH_MP_TAC;
FIRST_X_ASSUM MATCH_MP_TAC;
ASM_REWRITE_TAC [];
SUBGOAL_THEN  `(&0 < norm (a:real^2) pow 2) /\(&0 < r/ norm a) /\(!t. &0 <= t /\( t < r/ norm a) ==> (norm a pow 2 )*t <= b)` (fun t -> MP_TAC (MATCH_MP lemma t));
CONJ_TAC ;
HASH_UNDISCH_TAC 7435 ;
REWRITE_TAC [GSYM Trigonometry2.NOT_ZERO_EQ_POW2_LT];
REAL_ARITH_TAC ;
CONJ_TAC ;
MATCH_MP_TAC REAL_LT_DIV;
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
HASH_RULE_TAC 4896 (SPEC `t % (a:real^2)`);
ASM_SIMP_TAC [NORM_MUL;REAL_ARITH `&0 <= t ==> (abs t = t)`];
REWRITE_TAC [DOT_RMUL];
REWRITE_TAC [DOT_SQUARE_NORM];
ANTS_TAC;
HASH_RULE_TAC 7310 (Calc_derivative.rational_ineq_rule);
HASH_UNDISCH_TAC 7435 ;
SIMP_TAC [REAL_LT_MUL_EQ];
MP_TAC (REAL_ARITH `&0 < x ==> ~(x = &0)`);
REAL_ARITH_TAC ;
REAL_ARITH_TAC ;
DISCH_THEN (fun t-> MP_TAC (SPEC `r/ norm (a:real^2)` t));
ANTS_TAC;
REWRITE_TAC [REAL_ARITH `x <= x`];
REWRITE_TAC [Calc_derivative.invert_den_le];
MATCH_MP_TAC REAL_LE_MUL;
ASM_REAL_ARITH_TAC;
DISCH_THEN (MP_TAC o Calc_derivative.rational_ineq_rule);
DISCH_TAC ;
MATCH_MP_TAC (REAL_ARITH `((x < y) ==> F) ==> (y <= x)`);
DISCH_THEN (MP_TAC o Calc_derivative.rational_ineq_rule);
HASH_UNDISCH_TAC 5880 ;
SUBGOAL_THEN `~(norm (a:real^2) = &0)` ASSUME_TAC;
ASM_REAL_ARITH_TAC;
ASM_REWRITE_TAC [];
REWRITE_TAC [REAL_ARITH `~(&0 < (x - y) * b) <=> (&0 <= (y - x)*b)`];
REWRITE_TAC [REAL_RING `(b * norm (a:real^2) - norm a pow 2 * r) = (b - r * norm a) * norm a`];
HASH_UNDISCH_TAC 7435 ;
REWRITE_TAC [REAL_MUL_POS_LE;REAL_MUL_POS_LT;REAL_ENTIRE;REAL_ARITH `a * b < &0 <=> ~(&0 <= a * b)`];
REAL_ARITH_TAC
]);;
  (* }}} *)


let facet_rep_uniq = prove_by_refinement(
  `!(P:real^2 -> bool) a b1 b2. polyhedron P /\ 
    c1 facet_of P  /\ c2 facet_of P /\
    P SUBSET {x | a dot x <= b1} /\
    P SUBSET {x | a dot x <= b2} /\
    c1 = P INTER {x | a dot x = b1} /\
    c2 = P INTER {x | a dot x = b2} ==>
    (b1 = b2) /\ (c1 = c2)`,
  (* {{{ proof *)
[
REPEAT GEN_TAC ;
REWRITE_TAC [facet_of;face_of;SUBSET;GSYM MEMBER_NOT_EMPTY;IN;IN_ELIM_THM;INTER];
STRIP_TAC ;
SUBGOAL_THEN `a dot x = b1 /\ (a:real^2) dot x' = b2` ASSUME_TAC;
HASH_UNDISCH_TAC 4776 ;
HASH_UNDISCH_TAC 6239 ;
ASM_REWRITE_TAC [IN_ELIM_THM];
MESON_TAC [];
ASM_MESON_TAC [REAL_ARITH `b1 <= b2 /\ b2 <= b1 ==> (b1 = b2)`]
]
);;
  (* }}} *)

let facet_rep_spec = prove_by_refinement(
  `?a b. !(P:real^2 -> bool) c. polyhedron P /\ c facet_of P
   ==>
     (  (norm (a P c) = &1) /\ 
     (!r. (&0 < r) /\ (!p. norm p < r ==> P p) ==> (r <= (b P c))) /\
     P SUBSET {x | (a P c) dot x <= (b P c)} /\
     c = P INTER {x | (a P c) dot x = (b P c)})`,
  (* {{{ proof *)
  [
REWRITE_TAC [GSYM SKOLEM_THM;RIGHT_EXISTS_IMP_THM];
MESON_TAC [eus1]
  ]);;
  (* }}} *)

let facet_rep_def = new_specification ["facet_rep_a";"facet_rep_b"] facet_rep_spec;;

let facet_rep_uniq_c = prove_by_refinement(
  `!(P:real^2 -> bool) c1 c2. polyhedron P /\ c1 facet_of P /\ c2 facet_of P /\
    (facet_rep_a P c1 = facet_rep_a P c2) ==> (c1 = c2)`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
MP_TAC (SPECL[`P:real^2->bool`;`facet_rep_a P c1`;`facet_rep_b P c1`;`facet_rep_b P c2`] facet_rep_uniq);
ASM_REWRITE_TAC [];
MP_TAC (SPECL[`P:real^2->bool`;`c1:real^2->bool`] facet_rep_def);
MP_TAC (SPECL[`P:real^2->bool`;`c2:real^2->bool`] facet_rep_def);
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
ASM_MESON_TAC []
  ]);;
  (* }}} *)

let norm1_cauchy_eq = prove_by_refinement(
  `!(x:real^N) y. norm x = &1 /\ norm y = &1 /\ x dot y = &1 ==> (x = y)`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
MP_TAC (SPECL [`x:real^N`;`y:real^N`] NORM_CAUCHY_SCHWARZ_EQ);
ASM_REWRITE_TAC [REAL_ARITH `&1 * &1 = &1`;VECTOR_MUL_LID];
MESON_TAC []
  ]);;
  (* }}} *)

let facet_rep_in_facet = prove_by_refinement(
  `!(P:real^2->bool) c1 c2 r. polyhedron P /\ c1 facet_of P /\ c2 facet_of P /\ 
  (&0 < r) /\ (!p. norm p < r ==> P p) /\ 
  (facet_rep_b P c1 <= facet_rep_a P c1 dot (r % facet_rep_a P c2)) ==>
   (c1 = c2)`,
  (* {{{ proof *)
  [
REWRITE_TAC [DOT_RMUL];
REPEAT STRIP_TAC ;
MATCH_MP_TAC facet_rep_uniq_c;
EXISTS_TAC `P:real^2->bool`;
ASM_REWRITE_TAC [];
MATCH_MP_TAC (norm1_cauchy_eq);
SUBGOAL_THEN `norm (facet_rep_a (P:real^2->bool) c1) = &1 /\  norm (facet_rep_a P c2) = &1 /\  facet_rep_a P c1 dot facet_rep_a P c2 <= &1` (MP_TAC);
ASM_MESON_TAC [facet_rep_def;REAL_ARITH `&1 * &1 = &1`;NORM_CAUCHY_SCHWARZ];
REPEAT STRIP_TAC  THEN ASM_REWRITE_TAC[];
SUBGOAL_THEN `r <= facet_rep_b P c1` MP_TAC;
ASM_MESON_TAC [facet_rep_def];
DISCH_TAC ;
HASH_UNDISCH_TAC 4642 ;
REWRITE_TAC [REAL_ARITH `x <= &1 <=> (x = &1) \/ (x < &1)`];
DISCH_THEN DISJ_CASES_TAC THEN ASM_REWRITE_TAC[];
ABBREV_TAC `d = facet_rep_a P c1 dot facet_rep_a P c2 `;
SUBGOAL_THEN `&0 < (r * (&1 - d))` ASSUME_TAC;
MATCH_MP_TAC REAL_LT_MUL;
ASM_REAL_ARITH_TAC ;
ASM_REAL_ARITH_TAC 
  ]);;
  (* }}} *)

let facet_rep_refl = prove_by_refinement(
  `!(P:real^2->bool) c r. polyhedron P /\ c facet_of P /\ 
  (&0 < r) /\ (!p. norm p < r ==> P p)  ==>
   (facet_rep_a P c dot (r % facet_rep_a P c) <= facet_rep_b P c)`,
  (* {{{ proof *)
  [
REWRITE_TAC [DOT_RMUL;Collect_geom.X_DOT_X_EQ];
REPEAT STRIP_TAC ;
MP_TAC (SPECL[`P:real^2->bool`;`c:real^2->bool`] facet_rep_def);
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
ASM_REWRITE_TAC [Trigonometry2.POW2_1;REAL_ARITH ` r * &1 = r`];
ASM_MESON_TAC []
  ]);;
  (* }}} *)


let NORM1_NZ = prove_by_refinement(
  `!(a:real^N). norm a = &1 ==> ~(a = vec 0)`,
  (* {{{ proof *)
  [
MESON_TAC [NORM_0;REAL_ARITH `~(&1 = &0)`]
  ]);;
  (* }}} *)

let norm_normalize = prove_by_refinement(
 `! (v:real^N). ~(v = vec 0) ==> norm (normalize v) = &1 `,
[
(GEN_TAC THEN STRIP_TAC);
(PURE_REWRITE_TAC[normalize;NORM_MUL;REAL_ABS_INV;REAL_ABS_NORM]);
(MATCH_MP_TAC REAL_MUL_LINV);
(ASM_MESON_TAC[NORM_EQ_0]);
]);;

let NZ_IMP_NORM1 = prove_by_refinement(
  `!(a:real^N) b. ~(a = vec 0) ==> 
   (?a' b'. (norm a' = &1) /\ 
      (!x. (a dot x <= b) <=>  (a' dot x <= b') ) /\
      (!x. (a dot x = b) <=> (a' dot x = b') ))`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
EXISTS_TAC `normalize (a:real^N)`;
EXISTS_TAC `inv(norm (a:real^N)) * b`;
ASM_SIMP_TAC [norm_normalize];
ASM_SIMP_TAC [norm_normalize];
REWRITE_TAC [normalize;DOT_LMUL];
FIRST_X_ASSUM (ASSUME_TAC o (REWRITE_RULE[GSYM NORM_POS_LT]));
FIRST_X_ASSUM (ASSUME_TAC o (ONCE_REWRITE_RULE[GSYM REAL_LT_INV_EQ]));
ASM_SIMP_TAC [REAL_LE_LMUL_EQ];
ASM_MESON_TAC [REAL_EQ_MUL_LCANCEL;REAL_ARITH `&0 < u ==> ~(u= &0)`]
  ]);;
  (* }}} *)

let DOT_EQ_IMP_INEQ_LEMMA = prove_by_refinement(
  `!(a:real^N) b a' b'.
    (!x. a dot x = b <=> a' dot x = b') /\ (&0 <  b) /\ (&0 < b') ==>
   (!x. ~(a dot x = &0) ==> (a dot x <= b <=> a' dot x <= b'))`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
HASH_RULE_TAC 2720 (SPEC `((b/(a dot x)) % (x:real^N))`);
REWRITE_TAC [DOT_RMUL];
SUBGOAL_THEN `b / (a dot x) * (a dot (x:real^N)) = b` SUBST1_TAC;
HASH_UNDISCH_TAC 5506 ;
BY(CONV_TAC REAL_FIELD);
REWRITE_TAC [REAL_FIELD `b/ (a dot x) * (a' dot x) = b * ((a' dot x) / (a dot (x:real^N)))`];
  DISCH_THEN (fun t-> ASSUME_TAC(GSYM t));
ASM_REWRITE_TAC [];
SUBGOAL_THEN `&0 < (a' dot (x:real^N)) / (a dot x) ` ASSUME_TAC;
HASH_UNDISCH_TAC 9752 ;
ASM_REWRITE_TAC [REAL_MUL_POS_LT];
ASM_REAL_ARITH_TAC;
SUBGOAL_THEN `a dot (x:real^N) <= b <=> (a dot x) * ((a' dot x)/(a dot x)) <= b * (a' dot x)/(a dot x)` SUBST1_TAC;
ASM_SIMP_TAC [REAL_LE_RMUL_EQ];
SUBGOAL_THEN  `(a dot (x:real^N)) * (a' dot x)/ (a dot x) = a' dot x` SUBST1_TAC;
HASH_UNDISCH_TAC 5506 ;
BY (CONV_TAC REAL_FIELD);
BY(REWRITE_TAC[])
  ]);;
  (* }}} *)


let DOT_EQ_IMP_INEQ = prove_by_refinement(
  `!(a:real^N) b a' b'.
    (!x. a dot x = b <=> a' dot x = b') /\ (&0 <= b) /\ (&0 < b') ==>
   (!x. (a dot x <= b) <=> a' dot x <= b')`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
SUBGOAL_THEN `&0 < b` ASSUME_TAC;
HASH_RULE_TAC 2720 (fun t -> (REWRITE_RULE[DOT_RZERO] (SPEC `(vec 0):real^N` t)));
ASM_REAL_ARITH_TAC ;
ASM_CASES_TAC `~(a dot (x:real^N) = &0)`;
ASM_MESON_TAC [DOT_EQ_IMP_INEQ_LEMMA];
ASM_CASES_TAC `~(a' dot (x:real^N) = &0)`;
ASM_MESON_TAC [DOT_EQ_IMP_INEQ_LEMMA];
ASM_REAL_ARITH_TAC 
  ]);;
  (* }}} *)

(*
let POLYHEDRON_INTER_AFFINE_MINIMAL_NORM = prove_by_refinement(
  `!(s:real^N->bool). polyhedron s <=>
         (?f. FINITE f /\
              s = affine hull s INTER INTERS f /\
              (!h. h IN f ==> (?a b. (norm a = &1) /\ h = {x | a dot x <= b})) /\
              (!f'. f' PSUBSET f ==> s PSUBSET affine hull s INTER INTERS f'))`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
MP_TAC (SPECL[`(s:real^N->bool)`] POLYHEDRON_INTER_AFFINE_MINIMAL);
DISCH_TAC ;
ASM_REWRITE_TAC [];
ONCE_REWRITE_TAC[MESON [] `(x = y) <=> (y = x)`];
MATCH_MP_TAC (MESON[] `(!(f:A). (P f <=> Q f)) ==> ((?f. P f) <=> (?f. Q f))`);
GEN_TAC ;
REWRITE_TAC [TAUT `(x /\ y <=> x /\ z) <=> (~x \/ (y <=> z))`;TAUT `(x /\ y <=> z /\ y) <=> (~y \/ (x <=>z))`];
REPEAT DISJ2_TAC;
MATCH_MP_TAC (MESON[] `(!h:A. (P h <=> Q h)) ==> ((!h. P h) <=> (!h. Q h))`);
GEN_TAC ;
MATCH_MP_TAC (TAUT  ` (q = r) ==> ((p ==> q) <=> (p ==> r))`);
EQ_TAC;
MESON_TAC [NORM1_NZ];
ONCE_REWRITE_TAC[FUN_EQ_THM];
REWRITE_TAC [IN_ELIM_THM];
REPEAT STRIP_TAC ;
HASH_KILL_TAC 230 ;
MP_TAC (SPECL [`a:real^N`;`b:real`] NZ_IMP_NORM1);
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
HASH_KILL_TAC 6572 ;
ASM_MESON_TAC []
  ]);;
  (* }}} *)
*)


FACET_OF_POLYHEDRON_EXPLICIT;;
FACET_OF_POLYHEDRON;;
POLYHEDRON_INTER_AFFINE_MINIMAL;;
suggest();;

search [`facet_of`];;

let facet_rep_in_poly = prove_by_refinement(
  `!(P:real^2->bool) c r. polyhedron P /\ (c facet_of P) /\ 
  (&0 < r) /\ (!p. norm p < r ==> P p) ==>
  P (r % facet_ref_a P c)
`,
  (* {{{ proof *)
  [
  #
  ]);;
  (* }}} *)

let facet_rep_a_uniq = prove_by_refinement(
  `!(P:real^2->bool) c1 c2. polyhedron P /\ c1 facet_of P /\ c2 facet_of P /\
    (?s. (&0 < s) /\ facet_rep_a P c1 = s % facet_rep_a P c2) ==> (c1 = c2)
      `,
  (* {{{ proof *)
  [
st/r,
  ]);;
  (* }}} *)




let REAL_SORT  = prove_by_refinement(
  `!n s. s HAS_SIZE n /\ (1 <= n) ==>
    (?(f:num->real). (s = IMAGE f (0..(n-1)) /\ ( (!j k.
                                     j < n /\ k < n /\ j < k
                                     ==> ~(f j < f k)))))`,
  (* {{{ proof *)
[
REPEAT STRIP_TAC ;
MP_TAC (SPEC `((>):real->real->bool)` (INST_TYPE [(`:real`,`:A`)] TOPOLOGICAL_SORT));
ANTS_TAC ;
ARITH_TAC ;
DISCH_THEN (fun t -> MP_TAC (SPECL[`n:num`;`s:real->bool`] t));
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
EXISTS_TAC `\ (i:num). (f:num->real) (SUC i)`;
CONJ_TAC ;
ASM_REWRITE_TAC [IMAGE];
ONCE_REWRITE_TAC[FUN_EQ_THM] ;
REWRITE_TAC [IN_ELIM_THM;IN;X_IN IN_NUMSEG];
X_GEN_TAC `t:real`;
HASH_UNDISCH_TAC 6963 ;
MESON_TAC [ARITH_RULE `(1 <= x /\ x <= n ==> (0 <= PRE x /\ PRE x <= n-1 /\ SUC (PRE x) = x)) /\ (0 <= x /\ x <= (n-1) /\ (1 <= n) ==> 1 <= SUC x /\ SUC x <= n)`];
BETA_TAC ;
HASH_UNDISCH_TAC 4230 ;
REWRITE_TAC [IN_ELIM_THM;IN;X_IN IN_NUMSEG];
REPEAT STRIP_TAC ;
HASH_RULE_TAC 4713 (SPECL [`SUC j`;`SUC k`]);
ASM_REWRITE_TAC [REAL_ARITH `(x > y) = (y<x)`];
REPEAT (POP_ASSUM MP_TAC);
ARITH_TAC
]
);;
  (* }}} *)

(* ------------------------------------------------------------ *)
(* later *)

let eus_cos  = prove_by_refinement(
  `!phi psi. &0 <= psi /\ psi <= phi /\ phi <= &2 * pi - psi ==> 
    cos phi <= cos psi`,
  (* {{{ proof *)
[
REPEAT STRIP_TAC ;
DISJ_CASES_TAC (REAL_ARITH `phi <= pi \/ (pi <= phi)`);
MATCH_MP_TAC COS_MONO_LE;
ASM_REWRITE_TAC [];
ABBREV_TAC `phi' = &2 * pi - phi`;
HASH_UNDISCH_TAC 6556 ;
    DISCH_THEN (fun t -> (REPEAT (POP_ASSUM MP_TAC) THEN REWRITE_TAC[REWRITE_RULE[REAL_ARITH `x - y = u <=> (y = x - u)`] t]));
REWRITE_TAC [REAL_ARITH `pi <= &2 * pi - phi' <=> phi' <= pi`;GSYM Trigonometry2.COS_SUM_2PI];
REPEAT STRIP_TAC ;
MATCH_MP_TAC COS_MONO_LE;
ASM_REAL_ARITH_TAC
]);;
  (* }}} *)

(*
let EUSOTYP = prove_by_refinement(
  `!(P:real^2 -> bool) k r. polyhedron P /\ bounded P /\
    (CARD { f | f facet_of P } = k) /\
  (!p. norm p < r ==> P p) ==>
     (?w sigma .
	(!i. w (i + 2 * k) = w i) /\
	polar_cycle_on sigma (IMAGE w (:num)) /\
	(!i. sigma (w i) = w (i+1)) /\
	(!i. (arg_diff (w (2 * i )) (w (2 * i + 1)) = arg_diff (w (2 * i + 1)) (w (2 * i + 2)))) /\
	(!i. arg_diff (w i) (w (i+1)) < pi / &2) /\
	(!i. norm (w (2 * i)) = r) /\
	(!i. norm (w (2 * i+1)) = r / cos (arg_diff (w(2 * i)) (w(2 * i+1)))) /\
	(!i. (w (2 * i) dot (w (2* i + 1) - w (2 * i)) = &0)))
	`,
  (* {{{ proof *)
  [
  #
  ]);;
  (* }}} *)
*)


(*
let convex_fn_ineq = prove_by_refinement(
  `!f f' f'' a b t.
    (a <= b) /\ 
    (!x. x IN real_interval [a,b]
              ==> (f has_real_derivative f' x)
                  (atreal x within real_interval [a,b])) /\
    (!x. x IN real_interval [a,b]
              ==> (f' has_real_derivative f'' x)
                  (atreal x within real_interval [a,b])) /\
    (!x. x IN real_interval [a,b]
       ==> (&0 <= f'' x))
    ==> (!x. x IN real_interval [a,b] ==> f t + f' t * (x - t) <= f x)
    `,
  (* {{{ proof *)
  [
  REPEAT STRIP_TAC;
  (* REAL_MVT_VERY_SIMPLE *)
  ]);;
  (* }}} *)
*)

def_of_regexp "wedge";;
def_of_regexp "cyclic_set";;
search [`wedge_ge`;];;
search [`azim v1 v2 x y + azim v1 v2 y z`;name "sum"];;
search [`wedge_ge`];;
search [`cwedge`];;
search [`cw_dart_fan`];;
search [`cwedge`];;
search [`fan`];;
search [`FAN`];;


(* a polyhedral bound *)


let _ = [`ball`;`half_spaces`;`weakly_saturated`;`lmfun_ineq_center`];;

let _ = [ball;Tarjjuw.half_spaces;Tarjjuw.weakly_saturated;Pack_defs.lmfun_ineq_center];;

let _ = [Tarjjuw.TARJJUW;Ysskqoy.YSSKQOY];;

(* statement of hypotheses *)

let pack_ineq_tml = 
  let has_packid = (fun t -> not(intersect ["UKBRPFE";"WAZLDCD";"BIEFJHU"] (Ineq.flypaper_ids t) = [])) in
  let idl = (filter has_packid !Ineq.ineqs) in
  let tml = map (fun t -> t.ineq) idl in
    end_itlist (curry mk_conj) tml;;

let pack_ineq_def_a = 
  new_definition (mk_eq (`pack_ineq_def_a:bool`,pack_ineq_tml));;

let cos_acs_pi6 = prove_by_refinement(
  `!h. &1 <= h /\ h <= h0 ==>
    cos (acs (h/ &2) - pi/ &6) = h * sqrt3 / #4.0 + sqrt(&1- (h/ &2) pow 2) / &2`,
  (* {{{ proof *)
  [
REWRITE_TAC[COS_SUB;COS_PI6;SIN_PI6;Sphere.h0;Sphere.sqrt3];
REPEAT STRIP_TAC;
  SUBGOAL_THEN `-- &1 <= h/ &2 /\ h/ &2 <= &1` MP_TAC;
ASM_REAL_ARITH_TAC;
REPEAT STRIP_TAC;
ASM_SIMP_TAC[SIN_ACS;COS_ACS];
REAL_ARITH_TAC
  ]);;
  (* }}} *)

let regular_spherical_polygon_area_asnFnhk = prove_by_refinement(
  `!h k . (3 <= k /\ &1 <= h /\ h <= h0) ==>
  (regular_spherical_polygon_area (h * sqrt3 / #4.0 + sqrt (&1 - (h/ &2) pow 2) / &2) (&k) = 
     &2 * pi - &2 * asnFnhk h (&k) (&1) (&1) (&1) (&1))`,
  (* {{{ proof *)
  [
REWRITE_TAC[Sphere.regular_spherical_polygon_area;Sphere.asnFnhk;Sphere.h0]
  ]);;
  (* }}} *)

let regular_spherical_polygon_area_797 = prove_by_refinement(
  `!h k . (3 <= k) ==>
  (regular_spherical_polygon_area (cos #0.797) (&k) = 
     &2 * pi - &2 * (&k) * asn (cos #0.797 * sin (pi / &k)))`,
  (* {{{ proof *)
  [
REWRITE_TAC[Sphere.regular_spherical_polygon_area;Sphere.asnFnhk;Sphere.h0]
  ]);;
  (* }}} *)

(*
[Sphere.regular_spherical_polygon_area;Sphere.asnFnhk;Sphere.h0];;
suggest();;
search[`cos`;`acs`];;
searcht 15 [`cos x = cos y`];; (* COS_INJ_PI *)
searcht 15 [`cos (x + y) = t`];;
searcht 15 [`sin (acs x)`];;
COS_ACS;
*)

let BIEFJHU_explicit = prove_by_refinement(
  `!h k. (pack_ineq_def_a /\ &1 <= h /\ h <= h0 /\ 3 <= k) ==>
   (#0.591 - #0.0331 * (&k) + #0.506 * lfun h) <= 
    max (&0) (regular_spherical_polygon_area
     (h * sqrt3 / #4.0 + sqrt (&1 - (h/ &2) pow 2) / &2) (&k))
   `,
  (* {{{ proof *)
  [
REWRITE_TAC[pack_ineq_def_a;Sphere.ineq;Sphere.lfun_y1;Sphere.h0];
REPEAT STRIP_TAC;
ASM_CASES_TAC `&34 <= &k`;
HASH_UNDISCH_TAC 4600 ;
    DISCH_THEN (MP_TAC o (SPECL [`h:real`;`&1`;`&1`;`&1`;`&1`;`&1`]));
MP_TAC (REAL_MAX_MAX);
BY(ASM_REAL_ARITH_TAC);
HASH_UNDISCH_TAC 3073 ;
    DISCH_THEN (MP_TAC o (SPECL [`h:real`;`(&k)`;`&1`;`&1`;`&1`;`&1`]));
ASM_SIMP_TAC[regular_spherical_polygon_area_asnFnhk;Sphere.h0;REAL_ARITH `&1 <= &1 /\ #3.0 = &3`];
MP_TAC (REAL_MAX_MAX);
HASH_RULE_TAC 415 (ONCE_REWRITE_RULE[GSYM REAL_OF_NUM_LE]);
ASM_REWRITE_TAC [REAL_ARITH `#1.0 = &1`];
ASM_SIMP_TAC [REAL_ARITH `~(&34 <= &k) ==> &k <= #34.0`];
ASM_REAL_ARITH_TAC
  ]);;
  (* }}} *)

let UKBRPFE_explicit = prove_by_refinement(
  `!k. (pack_ineq_def_a /\ 3 <= k) ==>
   (#0.591 - #0.0331 * (&k) + #0.506 * lfun (&1) + &1 <=
    max (&0) (regular_spherical_polygon_area (cos #0.797) (&k)))`,
  (* {{{ proof *)
  [
REWRITE_TAC[pack_ineq_def_a;Sphere.ineq;Sphere.lfun_y1;Sphere.h0;Sphere.asn797k];
REPEAT STRIP_TAC;
ASM_SIMP_TAC [regular_spherical_polygon_area_797];
HASH_RULE_TAC 6953 (SPECL[`&k`;`&1`;`&1`;`&1`;`&1`;`&1`]);
HASH_RULE_TAC 415 (ONCE_REWRITE_RULE[GSYM REAL_OF_NUM_LE;REAL_ARITH `&3 = #3.0`]);
HASH_RULE_TAC 1319 (SPEC `&1`);
MP_TAC (REAL_MAX_MAX);
REAL_ARITH_TAC
  ]);;
  (* }}} *)

let DLWCHEM_sum = prove_by_refinement(
  `!h k n. pack_ineq_def_a /\
   (12 < n) /\ (!i. (i < n) ==> (3 <= k i) /\ (&1 <= h i) /\ (h i <= h0) ) /\ 
   (sum (0..(n-1)) (\i. &(k i)) <= (&6 * &n - &12)) /\
   (sum (0..(n-1)) 
      (\i. max (&0) (regular_spherical_polygon_area 
         ((h i * sqrt3 / #4.0 + sqrt (&1 - (h i/ &2) pow 2)/ &2) ) (&(k i)) )) 
      <= &4 * pi) /\ 
   (&12 < sum (0..(n-1)) (\i. lfun (h i))) 
 ==> (n < 16)`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC;
  SUBGOAL_THEN `sum (0..(n-1)) (\i. (#0.591 - #0.0331 * (&(k i)) + #0.506 * lfun (h i))) <= sum(0..(n-1)) (\i. max (&0) (regular_spherical_polygon_area ((h i * sqrt3 / #4.0 + sqrt (&1 - (h i/ &2) pow 2)/ &2) ) (&(k i)) ))` ASSUME_TAC;
MATCH_MP_TAC SUM_LE_NUMSEG;
ASM_SIMP_TAC [ARITH_RULE `(12 < n) ==> (0 <= i /\ i <= n-1 <=> i < n)`];
REPEAT STRIP_TAC;
MP_TAC (SPECL [`(h:num->real) i`;`(k:num->num) i`] BIEFJHU_explicit);
ASM_SIMP_TAC [];
  SUBGOAL_THEN `#0.591 * &n - #0.0331 * (&6 * &n - &12) + #0.506 * &12 <= sum (0..(n-1)) (\i. (#0.591 - #0.0331 * (&(k i)) + #0.506 * lfun (h i)))` ASSUME_TAC;
REWRITE_TAC[SUM_ADD_NUMSEG;SUM_SUB_NUMSEG;SUM_CONST_NUMSEG;SUM_LMUL];
ASM_SIMP_TAC [ARITH_RULE `12 < n ==> (n-1 + 1 ) - 0= n `];
ASM_REAL_ARITH_TAC;
SUBGOAL_THEN `#0.591 * &n - #0.0331 * (&6 * &n - &12) + #0.506 * &12 <= &4 * pi` MP_TAC;
ASM_REAL_ARITH_TAC;
SUBGOAL_THEN `pi < #3.1416` MP_TAC;
REWRITE_TAC [Flyspeck_constants.bounds];
ONCE_REWRITE_TAC[GSYM REAL_OF_NUM_LT];
REAL_ARITH_TAC
  ]);;
  (* }}} *)

let XULJEPR_sum = prove_by_refinement(
  `!h k n. ( pack_ineq_def_a /\
    (12 < n) /\ (h 0 = &1) /\
   (!i. i < n ==> 3 <= k i /\ &1 <= h i /\ h i <= h0) /\ 
sum (0..n - 1) (\i. &(k i)) <= &6 * &n - &12 /\ 
max (&0) (regular_spherical_polygon_area (cos #0.797) (&(k 0))) + sum (1..n - 1)
         (\i. max (&0)
              (regular_spherical_polygon_area
               (h i * sqrt3 / #4.0 + sqrt (&1 - (h i / &2) pow 2) / &2)
              (&(k i)))) <=
         &4 * pi /\
         &12 < sum (0..n - 1) (\i. lfun (h i)) ==> F
  )`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC;
  SUBGOAL_THEN `&1 + sum (0..(n-1)) (\i. (#0.591 - #0.0331 * (&(k i)) + #0.506 * lfun (h i))) <= max (&0) (regular_spherical_polygon_area (cos #0.797) (&(k 0))) +      sum (1..n - 1)      (\i. max (&0)           (regular_spherical_polygon_area            (h i * sqrt3 / #4.0 + sqrt (&1 - (h i / &2) pow 2) / &2)           (&(k i))))` ASSUME_TAC;
ASM_SIMP_TAC [ARITH_RULE `0 <= (n-1)/\ 0 + 1 = 1`;SUM_CLAUSES_LEFT;];
REWRITE_TAC [REAL_ARITH `&1 + u + v = (u+ &1) + v`];
MATCH_MP_TAC (REAL_ARITH `a <= b /\ c <= d ==> (a + c) <= (b + d)`);
CONJ_TAC;
MP_TAC (SPEC `(k:num->num) 0` UKBRPFE_explicit);
ANTS_TAC;
ASM_MESON_TAC[ARITH_RULE `12 < n ==> 0 < n`];
REAL_ARITH_TAC;
MATCH_MP_TAC SUM_LE_NUMSEG;
ASM_SIMP_TAC [ARITH_RULE `(12 < n) ==> (1 <= i /\ i <= n-1 <=> 1 <=i /\ i < n)`];
REPEAT STRIP_TAC;
MP_TAC (SPECL [`(h:num->real) i`;`(k:num->num) i`] BIEFJHU_explicit);
BY(ASM_SIMP_TAC []);
  SUBGOAL_THEN `&1 + #0.591 * &n - #0.0331 * (&6 * &n - &12) + #0.506 * &12 <= &1 + sum (0..(n-1)) (\i. (#0.591 - #0.0331 * (&(k i)) + #0.506 * lfun (h i)))` ASSUME_TAC;
MATCH_MP_TAC (REAL_ARITH `a <= b ==> &1 + a <= &1 + b`);
REWRITE_TAC[SUM_ADD_NUMSEG;SUM_SUB_NUMSEG;SUM_CONST_NUMSEG;SUM_LMUL];
ASM_SIMP_TAC [ARITH_RULE `12 < n ==> (n-1 + 1 ) - 0= n `];
BY(ASM_REAL_ARITH_TAC);
SUBGOAL_THEN `&1 + #0.591 * &n - #0.0331 * (&6 * &n - &12) + #0.506 * &12 <= &4 * pi` MP_TAC;
BY(ASM_REAL_ARITH_TAC);
SUBGOAL_THEN `pi < #3.1416` MP_TAC;
REWRITE_TAC [Flyspeck_constants.bounds];
SUBGOAL_THEN `&13 <= &n` MP_TAC;
UNDISCH_TAC `12 < n`;
REWRITE_TAC[ REAL_OF_NUM_LE];
ARITH_TAC;
REAL_ARITH_TAC
  ]);;
  (* }}} *)


let REAL_CONVEX_ON_SECOND_SECANT = prove_by_refinement(
  `!f f'  f'' s. 
  is_realinterval s /\
         ~(?a. s = {a}) /\
         (!x. x IN s ==> (f has_real_derivative f' x) (atreal x within s)) /\
         (!x. x IN s ==> (f' has_real_derivative f'' x) (atreal x within s)) /\
         (!x. x IN s ==> &0 <= f'' x)
    ==> (!x y. x IN s /\ y IN s ==> f y - f x <= f' y * (y - x))`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
SUBGOAL_THEN `f real_convex_on s` ASSUME_TAC;
ASM_MESON_TAC [REAL_CONVEX_ON_SECOND_DERIVATIVE];
ASM_MESON_TAC [REAL_CONVEX_ON_SECANT_DERIVATIVE]
  ]);;
  (* }}} *)

let asn_sin_t' = Calc_derivative.differentiate 
  `\x. x - asn(sin x * t)` `x:real` `real_interval [&0,  pi]`;;

let asn_sin_t'' = Calc_derivative.differentiate 
  `\x. &1 - (cos x * t) * inv (sqrt (&1 - (sin x * t) pow 2))` `x:real` `real_interval [&0,  pi]`;;

let asn_sin_t''_alt = prove_by_refinement(
  `!x t alpha. abs(sin x * t) < &1 /\ cos alpha = sin x * t ==>
    derived_form T (\x. &1 - (cos x * t) * inv (sqrt (&1 - (sin x * t) pow 2))) (t * (&1 - t pow 2) * sin x * inv (abs(sin alpha) pow 3)) (x:real) (real_interval [&0, pi])` ,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
MP_TAC asn_sin_t'';
REWRITE_TAC [Calc_derivative.derived_form];
HASH_UNDISCH_TAC 8283 ;
FIRST_X_ASSUM (fun t -> (SUBST1_TAC o GSYM) t THEN ASSUME_TAC (GSYM t));
DISCH_TAC;
SUBGOAL_THEN `~(sqrt (&1 - cos alpha pow 2) = &0) /\ &0 < &1 - cos alpha pow 2 /\  (--((cos x * t) *              (--(&2 * cos alpha pow 1 * cos x * t) *               inv (&2 * sqrt (&1 - cos alpha pow 2))) *              --inv (sqrt (&1 - cos alpha pow 2) pow 2) +              (--sin x * t) * inv (sqrt (&1 - cos alpha pow 2))) =   (t * (&1 - t pow 2) * sin x * inv (abs(sin alpha) pow 3)))` (fun t -> MP_TAC t THEN MESON_TAC[]);
SUBGOAL_THEN `&0 < &1 - cos alpha  pow 2` ASSUME_TAC;
REWRITE_TAC [REAL_ARITH `&0 < &1 - x pow 2 <=> x pow 2 < &1 pow 2`];
ASM_REWRITE_TAC[GSYM REAL_LT_SQUARE_ABS;REAL_ARITH `abs (&1) = &1`];
ASM_REWRITE_TAC [];
CONJ_TAC;
ASM_SIMP_TAC [ (SQRT_EQ_0); REAL_ARITH `&0 < u ==> &0 <= u`];
BY(ASM_REAL_ARITH_TAC);
SUBGOAL_THEN `sqrt (&1 - cos alpha pow 2) = abs(sin alpha)` SUBST1_TAC;
REWRITE_TAC[REWRITE_RULE [REAL_ARITH `(x + y = &1) <=> ( &1 - y = x)`] (SPEC`alpha:real` SIN_CIRCLE)];
REWRITE_TAC [POW_2_SQRT_ABS];
MATCH_MP_TAC (Calc_derivative.rational_identity `--((cos x * t) *    (--(&2 * cos alpha pow 1 * cos x * t) * inv (&2 * abs (sin alpha))) *    --inv (abs (sin alpha) pow 2) +    (--sin x * t) * inv (abs (sin alpha))) = t * (&1 - t pow 2) * sin x * inv (abs(sin alpha) pow 3)`);
REWRITE_TAC [REAL_ARITH `~(&2= &0) /\ ~(&1 = &0)`;REAL_ABS_ZERO];
CONJ_TAC;
HASH_UNDISCH_TAC 754 ;
REWRITE_TAC [REWRITE_RULE[REAL_ARITH `x + y = &1 <=> &1 - y = x`] (SPEC `alpha:real` SIN_CIRCLE)];
REWRITE_TAC [Trigonometry2.NOT_ZERO_EQ_POW2_LT];
MP_TAC (SPEC `x:real` SIN_CIRCLE);
MP_TAC (SPEC `alpha:real` SIN_CIRCLE);
HASH_UNDISCH_TAC 3350 ;
SUBST1_TAC (SPEC `sin(alpha)` (GSYM REAL_POW2_ABS));
ABBREV_TAC `u = abs (sin alpha)`;
CONV_TAC REAL_FIELD
  ]);;
  (* }}} *)

let real_interval_not_sing = prove_by_refinement(
  `!a b. (a < b) ==> ~(?c. real_interval [a,b] = {c})`,
  (* {{{ proof *)
  [
REWRITE_TAC [real_interval];
REPEAT STRIP_TAC ;
HASH_UNDISCH_TAC 5180 ;
REWRITE_TAC[FUN_EQ_THM;IN;IN_ELIM_THM;X_IN IN_SING];
STRIP_TAC ;
FIRST_X_ASSUM (fun t -> MP_TAC (SPEC `a:real` t) THEN MP_TAC (SPEC `b:real` t));
ASM_REAL_ARITH_TAC
  ]);;
  (* }}} *)

let g_convex  = prove_by_refinement(
  `!t. (&0 < t /\ t < &1) ==> (? s f'  f''. 
   s = real_interval [&0,  pi] /\
  is_realinterval s /\
         ~(?a. s = {a}) /\
         (!x. x IN s ==> ((\x. x - asn(sin x * t)) has_real_derivative f' x) (atreal x within s)) /\
         (!x. x IN s ==> (f' has_real_derivative f'' x) (atreal x within s)) /\
         (!x. x IN s ==> &0 <= f'' x))
  `,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC;
EXISTS_TAC `real_interval [&0, pi]`;
REWRITE_TAC [IS_REALINTERVAL_INTERVAL];
EXISTS_TAC `(\x. &1 - (cos x * t) * inv (sqrt (&1 - (sin x * t) pow 2)))`;
EXISTS_TAC `\x. (t * (&1 - t pow 2) * sin x * inv (abs(sin (acs (sin x * t))) pow 3))`;
CONJ_TAC;
MATCH_MP_TAC real_interval_not_sing;
REWRITE_TAC [PI_POS];
SUBGOAL_THEN `!x. abs(sin x * t) < &1` ASSUME_TAC;
GEN_TAC;
REWRITE_TAC [REAL_ABS_MUL];
ASM_SIMP_TAC [REAL_ARITH `&0 < t ==> abs t = t`];
MATCH_MP_TAC (REAL_ARITH `(t < &1) /\ (&0 <= t - u * t) ==> u * t < &1`);
ASM_REWRITE_TAC [REAL_ARITH `t - u * t = t * (&1 - u)`;];
MATCH_MP_TAC REAL_LE_MUL;
MP_TAC (SPEC `x:real` SIN_BOUND);
BY(ASM_REAL_ARITH_TAC);
SUBGOAL_THEN `!x. cos (acs (sin x * t)) = sin x * t` ASSUME_TAC;
GEN_TAC ;
MATCH_MP_TAC COS_ACS;
FIRST_X_ASSUM (MP_TAC o (SPEC `x:real`));
BY(REAL_ARITH_TAC);
CONJ_TAC;
REPEAT STRIP_TAC ;
MP_TAC asn_sin_t';
ASM_REWRITE_TAC [Calc_derivative.derived_form];
CONJ_TAC;
REPEAT STRIP_TAC ;
REPEAT (FIRST_X_ASSUM (ASSUME_TAC o (SPEC `x:real`)));
MP_TAC (SPECL[`x:real`;`t:real`;`acs (sin x * t)`] asn_sin_t''_alt);
ASM_REWRITE_TAC [Calc_derivative.derived_form];
REPEAT STRIP_TAC ;
BETA_TAC;
REPEAT (MATCH_MP_TAC REAL_LE_MUL THEN CONJ_TAC);
ASM_REAL_ARITH_TAC ;
REWRITE_TAC[REAL_ARITH `&1 - t pow 2 = (&1 - t) + t * (&1-t)`];
MATCH_MP_TAC (REAL_ARITH `&0 < x /\ &0 < y ==> &0 <= x + y`);
CONJ_TAC THEN (TRY (MATCH_MP_TAC REAL_LT_MUL)) THEN ASM_REAL_ARITH_TAC;
HASH_UNDISCH_TAC 2464 ;
REWRITE_TAC [IN;IN_ELIM_THM;real_interval;SIN_POS_PI_LE];
REWRITE_TAC [REAL_LE_INV_EQ;];
MATCH_MP_TAC REAL_POW_LE;
REWRITE_TAC [REAL_ABS_POS]
  ]);;
  (* }}} *)

let GOTCJAH_convex_sum = prove_by_refinement(
  `!n t bet u. 0 < n /\ u <= &n * pi /\ &0 <= u /\
  &0 < t /\ t < &1 /\  sum (0..(n-1)) bet = u /\ 
  (!i. i < n ==> &0 <= bet i /\ bet i <= pi) ==>
  (u - &n * asn (sin (u/ &n) * t)) <= sum (0..(n-1)) (\i. bet i - asn (sin (bet i) * t))`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
MP_TAC (SPEC `t:real` g_convex);
ASM_REWRITE_TAC [];
REPEAT STRIP_TAC ;
MP_TAC (SPECL [`\x. x - asn(sin x * t)`;`f':real->real`;`f'':real->real`;`s:real->bool`] REAL_CONVEX_ON_SECOND_SECANT);
ASM_REWRITE_TAC [real_interval;IN_ELIM_THM];
REWRITE_TAC [REAL_ARITH `u - v <= c * (y - x) <=> u + c * (x- y) <= v`];
DISCH_TAC ;
ABBREV_TAC `m = u / &n`;
SUBGOAL_THEN `&0 <= m /\ m <= pi` ASSUME_TAC;
EXPAND_TAC "m";
HASH_UNDISCH_TAC 5908 ;
HASH_UNDISCH_TAC 3476 ;
REWRITE_TAC[GSYM REAL_OF_NUM_LT];
HASH_UNDISCH_TAC 9033 ;
SIMP_TAC [REAL_LE_DIV;REAL_ARITH `&0 < v ==> &0 <= v`];
SIMP_TAC [REAL_LE_LDIV_EQ];
REAL_ARITH_TAC ;
SUBGOAL_THEN `sum (0..n-1) (\i. m - asn (sin m * t) + f' m * (bet i - m)) <= sum (0..n-1) (\i. bet i - asn (sin (bet i) * t))` ASSUME_TAC;
MATCH_MP_TAC SUM_LE_NUMSEG;
BETA_TAC;
ASM_SIMP_TAC [ARITH_RULE `0 < n ==> (0 <= i /\ i <= n-1 <=> i < n)`];
MATCH_MP_TAC REAL_LE_TRANS;
EXISTS_TAC `sum (0..n - 1) (\i. m - asn (sin m * t) + f' m * (bet i - m))`;
ASM_REWRITE_TAC [];
ASM_REWRITE_TAC[SUM_ADD_NUMSEG;SUM_SUB_NUMSEG;SUM_CONST_NUMSEG;SUM_LMUL];
ASM_SIMP_TAC [ARITH_RULE `0 < n ==> (n - 1 + 1) - 0 = n`];
EXPAND_TAC "m";
SUBGOAL_THEN `&n * u/ &n = u` (fun t -> SUBST1_TAC t THEN REAL_ARITH_TAC);
HASH_UNDISCH_TAC 3476 ;
REWRITE_TAC[GSYM REAL_OF_NUM_LT];
CONV_TAC REAL_FIELD
  ]);;
  (* }}} *)

let dih_dot = prove_by_refinement(
  `!(u:real^3) v w. ~(u = vec 0) /\ ((w- u) dot v = &0) /\ ((w - u) dot u = &0) ==>
   dihV (vec 0) u v w = pi / &2`,
  (* {{{ proof *)
  [
REPEAT STRIP_TAC ;
MP_TAC (SPECL [`vec 0:real^3`;`u:real^3`;`v:real^3`;`w:real^3`]  Hvihvec.HVIHVEC);
ASM_REWRITE_TAC [VECTOR_SUB_RZERO;LET_DEF;LET_END_DEF];
DISCH_THEN SUBST1_TAC;
REWRITE_TAC [GSYM ORTHOGONAL_VECTOR_ANGLE;orthogonal];
SUBGOAL_THEN `(u:real^3) cross w = u cross (w - u)` SUBST1_TAC;
REWRITE_TAC [CROSS_RADD;VECTOR_SUB;CROSS_RNEG;CROSS_REFL];
REWRITE_TAC [GSYM VECTOR_SUB;VECTOR_SUB_RZERO];
ONCE_REWRITE_TAC [DOT_SYM];
ONCE_REWRITE_TAC [GSYM CROSS_TRIPLE];
ONCE_REWRITE_TAC [CROSS_SKEW];
REWRITE_TAC [CROSS_LAGRANGE;VECTOR_SUB;DOT_LADD;DOT_LNEG;DOT_LMUL];
MATCH_MP_TAC (REAL_FIELD `a = &0 /\ b = &0 ==> -- ((c * a) + -- (d * b)) = &0`);
ONCE_REWRITE_TAC [DOT_SYM];
ASM_REWRITE_TAC [GSYM VECTOR_SUB]
  ]);;
  (* }}} *)

let vol_solid_triangle_ortho = prove_by_refinement(
  `!(u:real^3) v w. ~(coplanar {vec 0, u , v, w}) /\
  ((w- u) dot v = &0) /\ ((w - u) dot u = &0) ==>
    (let bet = dihV (vec 0) v u w in
    let t = cos (arcV (vec 0) v u) in
      (&3 * vol_solid_triangle (vec 0) u v w (&1) = bet - asn (sin bet * t)))
  `,
  (* {{{ proof *)
  [
st/r,
r,[vol_solid_triangle]
REPEAT    LET_TAC
r,[REAL_ARITH `&3 * x * &1 pow 3 / &3 = x`]
sgth,`a231 = bet:real` SUBST1_TAC
exp,"bet"
exp,"a231"
r,[DIHV_SYM]
sgth,`~((u:real^3) = vec 0)` ASSUME_TAC
st,
elu0,
r/a,[INSERT_INSERT;COPLANAR_3]
sgth,`a123 = pi / &2` SUBST1_TAC
exp,"a123"
mmp,dih_dot
r/a,[]

XXD
sgth,`asn (sin bet * t) = pi / & - acs( sin bet * t)` SUBST1_TAC
  #
  ]);;
  (* }}} *)

searcht 5 [`pi`;`acs`;`asn`];; (* ASN_ACS *)
type_of `INSERT`;;
searcht 5 [`x INSERT (x INSERT y)`];;
searcht 5 [`coplanar {a,b,c}`];;
searcht 5 [`dihV a b c d = dihV a b d c`];;
searcht 5 [`sol`;`x`];;
searcht 3 [`vol_solid_triangle`];;
(* TARJJUW *)
apropos();;
constant_of_regexp "TRI";;
def_of_regexp "sol$";;
def_of_regexp "solid_triangle";;
help "apropos_searching";;
constant_of_regexp "satur";; ["weakly_saturated"; "saturated"];;
def_of_regexp "weakly_saturated";;
def_of_regexp "max";;
constant_of_regexp "inter";;
def_of_regexp "closed_real_interval";;

search [`weakly_saturated`];; (* "Tarjjuw.TARJJUW" *)
Tarjjuw.TARJJUW;;
def_of_regexp "ball";; (* open *)
def_of_regexp "half_spaces";;
def_of_regexp "ineq_cen";;
searcht 5 [`weakly_saturated`];;
let ineq693 =  `~lmfun_ineq_center V`;;
type_of `sum`;;
searcht 5 [`..`];;
type_of `lmfun`;;

searcht 5 [`lmfn_ineq_center`];;

let DLWCHEM_concl = `!V. packing V /\ packing_ineq_def_a /\
  V SUBSET ball_annulus /\ ~(lmfun_ineq_center V) ==>
   (CARD V = 13 \/ CARD V = 14 \/ CARD V = 15)`;;


let XULJEPR_concl = `!V. packing V /\ V SUBSET ball_annulus /\ packing_ineq_def_a /\
 (?v.  v IN V /\ norm (v) = &2 /\ (!u.  (u IN V) /\ ~(u = v) ==> &2 * h0 <= dist(u,v) ))
==> (lmfun_ineq_center V)`;;


