(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Nonlinear                                                  *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2010-05-30                                                           *)
(* ========================================================================== *)



(* 
File of the nonlinear inequalities to be verified by interval arithmetic.
*)

flyspeck_needs "general/sphere.hl";;


  type tag = Lp | Clusterlp | Tablelp | Flypaper | Cfsqp | Eps of float | Further | Tex | Derived;;

type ineq_datum = 
  { 
    ineq : term;
    id : string;
    doc : string;
    tags : tag list;
  };;

module Main_ineq = struct

open Sphere;;

(*
The nonlinear inequality data has become too widely dispersed over the project directories.
This file is meant to be the authoritative central repository for inequalities.

Old sources of information (svn 1678 2010-04-26 of NonlinearInequalities.wiki)
software_guide.tex (svn 1760)
*)

(* module Main_ineq (* : Ineq_type *) = struct *)

  (* Lp means the inequality enters the main GLPK inequality list to eliminate tame hypermaps.
      Clusterlp means they enter the GLPK calcs for the cluster inequality.
      Tablelp means they enter the LP calcs for the A and B tables in the definition of Tame h.
      Flypaper means an inequality cited directly in the flypaper text.
      Cfsqp means that there is cfsqp nonlinear optimization code to test it by gradient descent.
     Eps is a small epsilon that is added to numerical testing to avoid answers neg. by machine eps.
      Further means that it is not part of the Flyspeck project, but part of one of the extension
        theorems: StrongDodec, Fejes Toth's contact conjecture, or Musin-Tarasov.
      The TeX flag means that the doc field is Tex'able code (with software_guide.tex context). 
     Derived means that it is not a primitive inequality, but rather a logical consequence of others.
*)




let ineqs = ref ([]:ineq_datum list);;

let add i  = (ineqs:= i :: !ineqs);;

let getexact id = filter (fun t -> (t.id = id)) (!ineqs);;

let getprefix id = filter (fun t -> (String.length id <= String.length t.id) &&
   (String.sub t.id 0 (String.length id) = id)) (!ineqs);;

let do_betas x = all_forall (snd(dest_eq(concl(BETAS_CONV x))));;
    
add
  {
    id= "HJKDESR4"; 
    ineq = (all_forall `ineq
		[ 
		  (#2.0,y1,sqrt8);
		  (#2.0,y2,sqrt8);
		  (#2.0,y3,sqrt8);
		  (#2.0,y4,sqrt8);
		  (#2.0,y5,sqrt8);
		  (#2.0,y6,sqrt8)
		]
		((gamma4f y1 y2 y3 y4 y5 y6 marchal_quartic >= &0) \/
                   (y_of_x rad2_x y1 y2 y3 y4 y5 y6 >= &2))`);
    doc=
	   "% Main Marchal Inequality (4 cells). Packing Chapter.
	   % old: \\guid{WJDLOCM} \\guid{XHVKJFS} \\guid{1025009205} 
	   % old: 9373340897; cc:mar; calc:marchal
    If $X$ is a $4$-cell, then $\\gamma(X,M)\\ge 0$. ";
      tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-12];
    };;

add
    {
      id= "HJKDESR3";
      ineq = (all_forall `ineq
		[ 
		  (#2.0,y1,sqrt8);
		  (#2.0,y2,sqrt8);
		  (#2.0,y3,sqrt8)
		]
		(
  (vol3r   y1 y2 y3 sqrt2 -  vol3f y1 y2 y3 sqrt2 marchal_quartic  >= &0) \/ 
  (eta_y y1 y2 y3 >= sqrt2) )`);
    doc = "%old tags 1305126631, 3564312720 Packing, Marchal 3cell 
   If $X$ is a $3$-cell, then $\\gamma(X,M)\\ge 0$. ";
    tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-7];
  };;



add
  {
  id = "HJKDESR2";
 ineq = all_forall `ineq
  [     (#2.0,y,sqrt8) ]
   (vol2r y sqrt2 - vol2f y sqrt2 marchal_quartic >= &0)`;
  doc = "%old: I_3148025108 (* Flypaper, Packing Marchal 2cell *)
   If $X$ is a $2$-cell, then $\\gamma(X,M)\\ge 0$. 
   ";
    tags = [Flypaper;Cfsqp;Eps 1.0e-7];  
  };;

add
{
  id =  "HJKDESR1";
  ineq =  all_forall `ineq
  [     (#1.246, r, sqrt2) ]
   ( &4 * pi * (r pow 3) / (&3)  -  (&2 * mm1 / pi) * &4 * pi >= &0) `;
  doc = 
   "%old: I_3148025108 Flypaper, Packing Marchal 1-cell 
   If $X$ is a $1$-cell, then $\\gamma(X,M)\\ge 0$.  (The desired inequality is the
   special case $r=\\sqrt2$ of the formal specification.)";
    tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-7];  
};;



add 
{
  id = "GLFVCVK4 2477216213";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2,sqrt8);
    (&2,y3,sqrt8);
    (&2,y4,sqrt8);
    (&2,y5,sqrt8);
    (&2,y6,sqrt8)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun > &0)\/ 
    (norm2hh y1 y2 y3 y4 y5 y6 <=  (hplus- hminus) pow 2) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
  doc = "
  \\claim{If $X$ is a $4$-cell that is not a quarter, then $\\gamma(X,L)\\ge0$.}
  Indeed, if no edge of $X$ is critical, then $\\gamma(X,L)\\ge \\gamma(X,M)\\ge 0$.
  If some edge of $X$ is critical, then we may label the edges so that it is the first, and
  this computer calculation treats it.

  If the norm condition holds, then it is a quarter.  This norm condition seems easier to
  check in practice than the conditions defining a quarter.
  ";
  tags = [Flypaper];
};;

add 
{
  id = "GLFVCVK3";
  ineq = all_forall `ineq
   [(&2 , y1, sqrt8);
    (&2,y2,sqrt8);
    (&2,y3,sqrt8)
   ]
    ((vol3r y1 y2 y3 sqrt2 - vol3f y1 y2 y3 sqrt2 lmfun > &0)\/ 
    (eta_y y1 y2 y3  > sqrt2))`;
  doc =   "
     %4869905472
     If $X$ is a $3$-cell, then $\\gamma(X,L)\\ge0$.";
  tags = [Flypaper;Cfsqp;Eps 1.0e-7];
};;

add
  {
  id = "GLFVCVK2";
 ineq = all_forall `ineq
  [     (#2.0,y,sqrt8) ]
   (vol2r y sqrt2 - vol2f y sqrt2 lmfun > &0)`;
  doc =   "If $X$ is a $3$-cell, then $\\gamma(X,L)\\ge0$.";
    tags = [Flypaper;Tex;Cfsqp];  
  };;


add
{
  id = "GLFVCVK4a 8328676778";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus );
    (&2 ,y2,&2 * hminus );
    (&2,y3,&2 * hminus);
    (&2 * hminus  ,y4,&2 * hplus );
    (&2,y5,&2 * hminus );
    (&2,y6,&2 * hminus )
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 +
    beta_bump_force_y y1 y2 y3 y4 y5 y6 > &0)\/ 
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
  doc = "
Let $\\gamma$ be given by Definition~\\ref{def:gammaL}, $\\op{wt}$ by
Definition~\\ref{def:wt}, and $\\beta$ by Definition~\\ref{def:beta}.
If $X$ is any $k$-cell with $k\\in\\{2,3,4\\}$, and if $X$ is not a quarter, then
then % gammaL is nonneg on quarters. cc:qtr
\\[ 
\\gamma(X,L) \\op{wt}(X) + \\beta(\\ee,X)\\ge 0.
\\]  
  In fact, $\\beta(\\ee,X)=0$, except possibly when $X$ is a $4$-cell with oppositely
  arranged critical edges.  Hence in most cases, it is enough to check the simpler
  inequality $\\gamma(X,L)\\ge0$. This is the verification of the case where the factor
  $\\beta$ matters and where all edges are critical or subcritical.
  If some edge is supercritical, then the circumradius is at least
  \\[
 \\op{rad}(2h_-,2,2,2h_-,2h_+,2) > \\sqrt2,
  \\]
  and the simplex is not a $4$-cell.
 ";
    tags = [Flypaper;Tex;Cfsqp];  
  };;


add
  {
    id = "FHBVYXZ";
    ineq = all_forall `ineq
      [(&2 * hminus, y1, &2 * hplus );
       (&2 ,y2,&2 * hminus );
       (&2,y3,&2 * hminus);
       (&2,y4,&2 * hminus);
       (&2,y5,&2 * hminus );
       (&2,y6,&2 * hminus )
      ]
      ((gamma4f y1 y2 y3 y4 y5 y6 lmfun  + gamma3f y1 y2 y6 sqrt2 lmfun
	> &0)\/ 
	 (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
    doc = "
%old tag 1118115412, cc:2bl
If $X$ is any quarter, and  $Y$ is a $3$-cell that flanks it, then
\\[ 
\\gamma(X,L) + \\gamma(Y,L) \\ge 0.
\\]  

\\claim{We show that the cluster inequality holds when there are at most two leaves along the critical
edge.}  Indeed, if the cluster has no quarter, then the inequality follows from \\ineq{GLFVCVK}.
Assume that a quarter exists.  Then there are two leaves, which flank the quarter.  
Next to the quarter is a three cell,
because the dihedral angle of a $4$-cell is less than $\\pi$.  
 The quarter and the $3$-cell both have weight $1$.
 The result follows from the
given inequality.
 ";
    tags = [Flypaper;Tex;Cfsqp];  
  };;


add
  {
  id = "ZTGIJCF0";
 ineq = all_forall `ineq
  [(&1,dummy,&1)]
   ( &5 * a_spine5 + b_spine5 * &2 * pi  > &0)`;
  doc =   "
% cc:5bl
Let $B$ be the set of cells in the cluster that lie between any two
consecutive leaves.  $B$ is either a singleton set containing a
$4$-cell, or a set of three cells: a $2$-cell and two adjacent
$3$-cells.  Write $\\op{azim}(B)$ for the azimuth angle formed by the
two leaves.  

 Let
 \\[ 
 a= 0.0560305, \\textand   b= -0.0445813.
 \\] 

  The constants $a$ and $b$ must satisfy $5 a + b (2\\pi) >0$, for the $5$-leaf
   case of the cluster inequality.

   The circumradius of a triangle with sides $h_-,h_-,h_-$ is greater than $\\sqrt2$, so
   in $4$-cells one edge next to the spine is subcritical.  Without loss of generality, we
   can assume it is $y_2$.   We have the inequality for all $4$-cells:
   \\[
   \\gamma(X,L) \\op{wt}(X) + \\beta(\\e,X) \\ge a + b \\azim(X).
   \\]
    This has many cases \\ineq{ZTGIJCF4 i3 i4 i5 i6}, depending on which edges $y_3,\\ldots,y_6$
    are subcritical, critical, or supercritical. 


\\begin{itemize}\\wasitemize 
\\item \\case{1821661595} A $4$-cell $X$ along a spine $e$ satisfies
\\[ 
\\gamma_L(X)\\op{wt}(X) + \\beta(e,X) \\ge a + b\\,\\op{azim}(X),
\\] 
\\item \\case{7907792228} The $2$-cell $X_2$ and two $3$-cells $X_1,X_3$
that flank it along a spine $e$ satisfy
\\[ 
\\sum_{i=1}^3 \\left(\\gamma_L(X_i)\\op{wt}(X_i) + \\beta(e,X_i)\\right)\\ge a + b\\,\\sum_{i=1}^3\\op{azim}(X_i).
\\] 
\\end{itemize}\\wasitemize 
Then 
\\[  
\\sum_{X\\in B} \\gamma(X,L)\\op{wt}(X) + \\beta(\\ee,X) \\ge a + b\\,\\op{azim}(B).
\\] 
It follows that
\\[  
\\Gamma(Z) \\ge 5 a + b\\, (2\\pi) > 0.
\\] 

    ";
    tags = [Flypaper;Tex;Cfsqp];  
  };;



let template = `\ y3m y3M y4m y4M y5m y5M y6m y6M w m. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (y4m,y4,y4M);
    (y5m,y5,y5M);
    (y6m,y6,y6M)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &w + &m *beta_bump_lb  >
       a_spine5 + b_spine5 * dih_y y1 y2 y3 y4 y5 y6) \/ 
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;;

let mk_ineq0 i3 i4 i5 i6  = 
  let x i = List.nth [`&2`; `&2 * hminus`;  `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let w = 1 + mid i3 + mid i4 + mid i5 + mid i6 in
  let m = if (w =2) && (i4 = 1) then `1` else `0` in
 do_betas(list_mk_comb (template, [x i3;X i3; x i4;X i4; x i5;X i5; x i6 ;X i6; mk_small_numeral w; m]));;

let make_F4 i3 i4 i5 i6 = 
   {
    id = Printf.sprintf "ZTGIJCF4 %d %d %d %d 1821661595" i3 i4 i5 i6;
    ineq = mk_ineq0 i3 i4 i5 i6;
    doc = "This is the 4-cell inequality for five or more leaves.";
    tags = [Cfsqp;Flypaper];
  };;

 for i3=0 to 1 do 
for i4 = 0 to 1 do
 for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add(make_F4 i3 i4 i5 i6) done done done done;;


let template23 = `\ y3m y3M y5m y5M y6m y6M w1 w2. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (&2 ,y4, sqrt8 );
    (y5m,y5,y5M);
    (y6m,y6,y6M)]
    ((gamma23f y1 y2 y3 y4 y5 y6 w1 w2 sqrt2 lmfun    >
       a_spine5 + b_spine5 * dih_y y1 y2 y3 y4 y5 y6) \/ 
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;;

let mk_ineq23 i3 i5 i6 = 
  let x i = List.nth [`&2`; `&2 * hminus` ; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let m = mk_small_numeral in
  let w1 = 1 +  mid i6 in
  let w2 = 1 + mid i3 + mid i5 in
    do_betas(list_mk_comb (template23, [x i3;X i3; x i5;X i5; x i6 ;X i6; m w1; m w2]));; 

let make_F23 i3 i5 i6 = 
   {
    id = Printf.sprintf "ZTGIJCF23 %d %d %d 7907792228" i3 i5 i6;
    ineq = mk_ineq23 i3 i5 i6;
    doc = "This is the 2&3-cell inequality for five or more leaves.";
    tags = [Cfsqp;Flypaper];
  };;

 for i3=0 to 1 do 
 for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add(make_F23 i3 i5 i6) done done done;;

add 
{
  id = "BIXPCGW 9455898160";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun > -- #0.00569) `;
  doc =   "
     If $X$ is a quarter, then $\\gamma(X,L)\\ge -0.00569$.";
  tags = [Flypaper;Cfsqp;Clusterlp];
};;


add 
{
  id = "BIXPCGW 2300537674";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun > &0) \/ (dih_y y1 y2 y3 y4 y5 y6 < #1.65))`;
  doc =   "
     If $X$ is a quarter such that $\\gamma(X,L)\\le 0$, then $\\dih(X) < 1.65$.";
  tags = [Flypaper;Cfsqp;Clusterlp];
};;

add 
{
  id = "BIXPCGW 6652007036";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #2.8)`;
  doc =   "
     If $X$ is a $4$-cell then  $\\dih(X) < 2.8$.";
  tags = [Flypaper;Cfsqp;Clusterlp];
};;

add 
{
  id = "BIXPCGW 7080972881";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2 * hminus,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #2.3)`;
  doc =   "
     If $X$ is a $4$-cell with a critical edge next to the spine, then  $\\dih(X) < 2.3$.";
  tags = [Flypaper;Cfsqp;Clusterlp];
};;

add 
{
  id = "BIXPCGW 1738910218";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, &2 * hplus);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #2.3)`;
  doc =   "
     If $X$ is a $4$-cell with a critical edge opposite spine, then  $\\dih(X) < 2.3$.";
  tags = [Flypaper;Cfsqp;Clusterlp];
};;

add 
{
  id = "BIXPCGW 7274157868";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun > #0.0057) \/
    (dih_y y1 y2 y3 y4 y5 y6 < #2.3))`;
  doc =   "
     If $X$ is a $4$-cell with a single critical edge (the spine), and if $\\dih(X)\\ge 2.3$,
      then  $\\gamma(X,L) > 0.0057$.";
  tags = [Flypaper;Cfsqp;Clusterlp];
};;

add 
{
  id = "QITNPEA 5653753305";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun + #0.0659 
      - #0.042*dih_y y1 y2 y3 y4 y5 y6 > #0.0)`;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

add 
{
  id = "QITNPEA 9939613598";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2 * hplus,y4, sqrt8);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun - #0.00457511 
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
   (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
  doc =   "
     This is an inequality for nonquarter 4-cells of weight 1 used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

add 
{
  id = "QITNPEA 4003532128";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2.1 ,y4, sqrt8);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun - #0.00457511 
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;
  doc =   "
     Note the lower bound on $y_4$ is $2.1$.
     This is an inequality for $23$-cells used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

add {
  id = "QITNPEA 3725403817";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, #2.1);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #1.56) `;
  doc =   "
     This is an inequality for $2$- and $3$-cells used to prove the cluster inequality.
      Note that $y_4\\le 2.1$.
     ";
  tags = [Cfsqp;Clusterlp];
};;


add 
{
  id = "QITNPEA 6206775865";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun + #0.0142852 - #0.00609451 *dih_y y1 y2 y3 y4 y5 y6 > #0.0) `;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

add 
{
  id = "QITNPEA 5814748276";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun - #0.00127562 + #0.00522841 * dih_y y1 y2 y3 y4 y5 y6 > #0.0) `;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;


add 
{
  id = "QITNPEA 3848804089";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun - #0.161517 + #0.119482* dih_y y1 y2 y3 y4 y5 y6 > #0.0) `;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp];
};;

let mk_ineq0 i3 i4 i5 i6  = 
  let template = `\ y3m y3M y4m y4M y5m y5M y6m y6M w m. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (y4m,y4,y4M);
    (y5m,y5,y5M);
    (y6m,y6,y6M)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &w + &m *beta_bump_lb 
        - #0.0105256 +  #0.00522841*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))` in
  let x i = List.nth [`&2`; `&2 * hminus`; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let w = 1 + mid i3 + mid i4 + mid i5 + mid i6 in
  let m = if (w =2) && (i4 = 1) then `1` else `0` in
 do_betas(list_mk_comb (template, [x i3;X i3; x i4;X i4; x i5;X i5; x i6 ;X i6; mk_small_numeral w; m]));;

let add0 i3 i4 i5 i6 = if (i3+i4+i5+i6 = 0) then () else
  add {
    id = Printf.sprintf "QITNPEA %d %d %d %d 3803737830" i3 i4 i5 i6;
    ineq = mk_ineq0 i3 i4 i5 i6;
    doc = "This is a $4$-cell (nonquarter) inequality for four blades.";
    tags = [Cfsqp;Flypaper];
  };;

 for i3=0 to 1 do 
for i4 = 0 to 1 do
 for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add0 i3 i4 i5 i6;   done done done done;;


let mk_tm0 i3 i4  = 
  let template = `\ y3m y3M y4m y4M w m. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (y4m,y4,y4M);
    (&2 ,y5,&2 *hminus);
    (&2 ,y6,&2 * hminus)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &w + &m *beta_bump_lb 
         > #0.0057) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))` in
  let x i = List.nth [`&2`; `&2 * hminus`; `&2 * hplus`; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let w = 1 + mid i3 + mid i4 in
  let m = if (w =2) && (i4 = 1) then `1` else `0` in
 do_betas(list_mk_comb (template, [x i3;X i3; x i4;X i4; mk_small_numeral w; m]));;

let add0 i3 i4 = if (i3+i4 = 0) then () else
  add {
    id = Printf.sprintf "QITNPEA %d %d 9063653052" i3 i4 ;
    ineq = mk_tm0 i3 i4 ;
    doc = "This is a $4$-cell (nonquarter) inequality.  The four cell is assumed to
    have exactly one {\\it small} face.";
    tags = [Cfsqp;Flypaper];
  };;

for i3=1 to 2 do (* start at 1 to force the triangle (y1,y3,y5) not to be small *)
for i4 = 0 to 2 do
   add0 i3 i4   done done;;

add {
    id = "QITNPEA 2134082733"  ;
    ineq =  all_forall  `ineq [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (&2 ,y3,&2 * hminus);
    (&2 * hminus,y4,sqrt8);
    (&2 ,y5,&2 * hminus);
    (&2 ,y6,&2 * hminus)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 + beta_bump_lb 
         - #0.213849 + #0.119482*dih_y y1 y2 y3 y4 y5 y6 > #0.0 ) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
    doc = "This is a $4$-cell (nonquarter) inequality.  The two edges along the
     spine are small.";
    tags = [Cfsqp;Flypaper;Clusterlp];
};;

add {
    id = "QITNPEA  5400790175"  ;
    ineq =  all_forall  `ineq [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (&2 ,y3,&2 * hminus);
    (&2 * hminus,y4,sqrt8);
    (&2 ,y5,&2 * hminus);
    (&2 ,y6,&2 * hminus)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 + beta_bump_lb 
       + gamma3f y1 y3 y5 sqrt2 lmfun > #0.0057)  \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
    doc = "This is a $4$-cell (nonquarter) and adjacent $3$-cell inequality.  
     The edges along the   spine are small.";
    tags = [Cfsqp;Flypaper;Clusterlp];
};;

end;;
