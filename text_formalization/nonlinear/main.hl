(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Nonlinear                                                  *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2010-05-30                                                           *)
(* ========================================================================== *)



(* 
File of the nonlinear inequalities to be verified by interval arithmetic.
*)

flyspeck_needs "general/sphere.hl";;
flyspeck_needs "nonlinear/ineqdata3q1h.hl" ;;


type tag = Lp | Clusterlp | Tablelp | Flypaper 
  | Cfsqp | Eps of float | Penalty of float*float
  | Further | Tex | Derived ;;

type ineq_datum = 
  { 
    ineq : term;
    id : string;
    doc : string;
    tags : tag list;
  };;

type texmarker = Section | Ineqdoc | Comment;;


module Main_ineq = struct

open Sphere;;

(*
The nonlinear inequality data has become too widely dispersed over the project directories.
This file is meant to be the authoritative central repository for inequalities.

Old sources of information (svn 1678 2010-04-26 of NonlinearInequalities.wiki)
software_guide.tex (svn 1760)
*)


let ineqdoc = ref [];;

let addtex (a,b,c) = (ineqdoc := (a,b,c)::!ineqdoc);;

  (* Lp means the inequality enters the main GLPK inequality list to eliminate tame hypermaps.
      Clusterlp means they enter the GLPK calcs for the cluster inequality.
      Tablelp means they enter the LP calcs for the A and B tables in the definition of Tame h.
      Flypaper means an inequality cited directly in the flypaper text.
      Cfsqp means that there is cfsqp nonlinear optimization code to test it by gradient descent.
     Eps is a small epsilon that is added to numerical testing to avoid answers neg. by machine eps.
  Penalty implements a penalty method in cfsqp.
     The floats (ub,wt) give the upper bound on the penalty term and its weight.
      Further means that it is not part of the Flyspeck project, but part of one of the extension
        theorems: StrongDodec, Fejes Toth's contact conjecture, or Musin-Tarasov.
      The TeX flag means that the doc field is Tex'able code (with software_guide.tex context). 
     Derived means that it is not a primitive inequality, but rather a logical consequence of others.
*)




let ineqs = ref ([]:ineq_datum list);;

let add i  = (
  ineqs:= i :: !ineqs; 
  if (List.mem Tex i.tags) then addtex (Ineqdoc,i.id,i.doc) else ()
  );;

let getexact id = filter (fun t -> (t.id = id)) (!ineqs);;

let getprefix id = filter (fun t -> (String.length id <= String.length t.id) &&
   (String.sub t.id 0 (String.length id) = id)) (!ineqs);;

let do_betas x = all_forall (snd(dest_eq(concl(BETAS_CONV x))));;

let mk_tplate template r = 
 do_betas(list_mk_comb (template, r));;
    

addtex (Section,"Packing","Marchal Inequality");;

add
  {
    id= "HJKDESR4"; 
    ineq = (all_forall `ineq
		[ 
		  (#2.0,y1,sqrt8);
		  (#2.0,y2,sqrt8);
		  (#2.0,y3,sqrt8);
		  (#2.0,y4,sqrt8);
		  (#2.0,y5,sqrt8);
		  (#2.0,y6,sqrt8)
		]
		((gamma4f y1 y2 y3 y4 y5 y6 marchal_quartic >= &0) \/
                   (y_of_x rad2_x y1 y2 y3 y4 y5 y6 >= &2))`);
    doc=
	   "% Main Marchal Inequality (4 cells). Packing Chapter.
	   % old: \\guid{WJDLOCM} \\guid{XHVKJFS} \\guid{1025009205} 
	   % old: 9373340897; cc:mar; calc:marchal
    If $X$ is a $4$-cell, then $\\gamma(X,M)\\ge 0$. ";
      tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-12];
    };;

add
    {
      id= "HJKDESR3";
      ineq = (all_forall `ineq
		[ 
		  (#2.0,y1,sqrt8);
		  (#2.0,y2,sqrt8);
		  (#2.0,y3,sqrt8)
		]
		(
  (vol3r   y1 y2 y3 sqrt2 -  vol3f y1 y2 y3 sqrt2 marchal_quartic  >= &0) \/ 
  (eta_y y1 y2 y3 >= sqrt2) )`);
    doc = "%old id 1305126631, 3564312720 Packing, Marchal 3cell 
   If $X$ is a $3$-cell, then $\\gamma(X,M)\\ge 0$. ";
    tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-7];
  };;



add
  {
  id = "HJKDESR2";
 ineq = all_forall `ineq
  [     (#2.0,y,sqrt8) ]
   (vol2r y sqrt2 - vol2f y sqrt2 marchal_quartic >= &0)`;
  doc = "%old id: I_3148025108 (* Flypaper, Packing Marchal 2cell *)
   If $X$ is a $2$-cell, then $\\gamma(X,M)\\ge 0$. 
   ";
    tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-7];  
  };;

add
{
  id =  "HJKDESR1";
  ineq =  all_forall `ineq
  [     (#1.246, r, sqrt2) ]
   ( &4 * pi * (r pow 3) / (&3)  -  (&2 * mm1 / pi) * &4 * pi >= &0) `;
  doc = 
   "%old id: I_3148025108 Flypaper, Packing Marchal 1-cell 
   If $X$ is a $1$-cell, then $\\gamma(X,M)\\ge 0$.  (The desired inequality is the
   special case $r=\\sqrt2$ of the formal specification.)";
    tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-7];  
};;


addtex (Section,"Packing","Cluster Inequality");;

add 
{
  id = "GLFVCVK4 2477216213";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2,sqrt8);
    (&2,y3,sqrt8);
    (&2,y4,sqrt8);
    (&2,y5,sqrt8);
    (&2,y6,sqrt8)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun > &0)\/ 
    (norm2hh y1 y2 y3 y4 y5 y6 <=  (hplus- hminus) pow 2) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
  doc = "
  \\claim{If $X$ is a $4$-cell that is not a quarter, then $\\gamma(X,L)\\ge0$.}
  Indeed, if no edge of $X$ is critical, then $\\gamma(X,L)\\ge \\gamma(X,M)\\ge 0$.
  If some edge of $X$ is critical, then we may label the edges so that it is the first, and
  this computer calculation treats it.

  If the norm condition holds, then it is a quarter.  This norm condition seems easier to
  check in practice than the conditions defining a quarter.
  ";
  tags = [Flypaper;Tex];
};;

add 
{
  id = "GLFVCVK3";
  ineq = all_forall `ineq
   [(&2 , y1, sqrt8);
    (&2,y2,sqrt8);
    (&2,y3,sqrt8)
   ]
    ((vol3r y1 y2 y3 sqrt2 - vol3f y1 y2 y3 sqrt2 lmfun > &0)\/ 
    (eta_y y1 y2 y3  > sqrt2))`;
  doc =   "
     %4869905472
     If $X$ is a $3$-cell, then $\\gamma(X,L)\\ge0$.";
  tags = [Flypaper;Tex;Cfsqp;Eps 1.0e-7];
};;

add
  {
  id = "GLFVCVK2";
 ineq = all_forall `ineq
  [     (#2.0,y,sqrt8) ]
   (vol2r y sqrt2 - vol2f y sqrt2 lmfun > &0)`;
  doc =   "If $X$ is a $3$-cell, then $\\gamma(X,L)\\ge0$.";
    tags = [Flypaper;Tex;Cfsqp];  
  };;


add
{
  id = "GLFVCVK4a 8328676778";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus );
    (&2 ,y2,&2 * hminus );
    (&2,y3,&2 * hminus);
    (&2 * hminus  ,y4,&2 * hplus );
    (&2,y5,&2 * hminus );
    (&2,y6,&2 * hminus )
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 +
    beta_bump_force_y y1 y2 y3 y4 y5 y6 > &0)\/ 
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
  doc = "
Let $\\gamma$ be given by Definition~\\ref{def:gammaL}, $\\op{wt}$ by
Definition~\\ref{def:wt}, and $\\beta$ by Definition~\\ref{def:beta}.
If $X$ is any $k$-cell with $k\\in\\{2,3,4\\}$, and if $X$ is not a quarter, then
then % gammaL is nonneg on quarters. cc:qtr
\\[ 
\\gamma(X,L) \\op{wt}(X) + \\beta(\\ee,X)\\ge 0.
\\]  
  In fact, $\\beta(\\ee,X)=0$, except possibly when $X$ is a $4$-cell with oppositely
  arranged critical edges.  Hence in most cases, it is enough to check the simpler
  inequality $\\gamma(X,L)\\ge0$. This is the verification of the case where the factor
  $\\beta$ matters and where all edges are critical or subcritical.
  If some edge is supercritical, then the circumradius is at least
  \\[
 \\op{rad}(2h_-,2,2,2h_-,2h_+,2) > \\sqrt2,
  \\]
  and the simplex is not a $4$-cell.
 ";
    tags = [Flypaper;Tex;Cfsqp];  
  };;


add
  {
    id = "FHBVYXZ";
    ineq = all_forall `ineq
      [(&2 * hminus, y1, &2 * hplus );
       (&2 ,y2,&2 * hminus );
       (&2,y3,&2 * hminus);
       (&2,y4,&2 * hminus);
       (&2,y5,&2 * hminus );
       (&2,y6,&2 * hminus )
      ]
      ((gamma4f y1 y2 y3 y4 y5 y6 lmfun  + gamma3f y1 y2 y6 sqrt2 lmfun
	> &0)\/ 
	 (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
    doc = "
%old id: 1118115412, cc:2bl
If $X$ is any quarter, and  $Y$ is a $3$-cell that flanks it, then
\\[ 
\\gamma(X,L) + \\gamma(Y,L) \\ge 0.
\\]  

\\claim{We show that the cluster inequality holds when there are at most two leaves along the critical
edge.}  Indeed, if the cluster has no quarter, then the inequality follows from \\ineq{GLFVCVK}.
Assume that a quarter exists.  Then there are two leaves, which flank the quarter.  
Next to the quarter is a three cell,
because the dihedral angle of a $4$-cell is less than $\\pi$.  
 The quarter and the $3$-cell both have weight $1$.
 The result follows from the
given inequality.
 ";
    tags = [Flypaper;Tex;Cfsqp];  
  };;


add
  {
  id = "ZTGIJCF0";
 ineq = all_forall `ineq
  [(&1,dummy,&1)]
   ( &5 * a_spine5 + b_spine5 * &2 * pi  > &0)`;
  doc =   "
% cc:5bl
Let $B$ be the set of cells in the cluster that lie between any two
consecutive leaves.  $B$ is either a singleton set containing a
$4$-cell, or a set of three cells: a $2$-cell and two adjacent
$3$-cells.  Write $\\op{azim}(B)$ for the azimuth angle formed by the
two leaves.  

 Let
 \\[ 
 a= 0.0560305, \\textand   b= -0.0445813.
 \\] 

  The constants $a$ and $b$ must satisfy $5 a + b (2\\pi) >0$, for the $5$-leaf
   case of the cluster inequality.

   The circumradius of a triangle with sides $h_-,h_-,h_-$ is greater than $\\sqrt2$, so
   in $4$-cells one edge next to the spine is subcritical.  Without loss of generality, we
   can assume it is $y_2$.   We have the inequality for all $4$-cells:
   \\[
   \\gamma(X,L) \\op{wt}(X) + \\beta(\\e,X) \\ge a + b \\azim(X).
   \\]
    This has many cases \\ineq{ZTGIJCF4 i3 i4 i5 i6}, depending on which edges $y_3,\\ldots,y_6$
    are subcritical, critical, or supercritical. 


\\begin{itemize}\\wasitemize 
\\item \\case{1821661595} A $4$-cell $X$ along a spine $e$ satisfies
\\[ 
\\gamma_L(X)\\op{wt}(X) + \\beta(e,X) \\ge a + b\\,\\op{azim}(X),
\\] 
\\item \\case{7907792228} The $2$-cell $X_2$ and two $3$-cells $X_1,X_3$
that flank it along a spine $e$ satisfy
\\[ 
\\sum_{i=1}^3 \\left(\\gamma_L(X_i)\\op{wt}(X_i) + \\beta(e,X_i)\\right)\\ge a + b\\,\\sum_{i=1}^3\\op{azim}(X_i).
\\] 
\\end{itemize}\\wasitemize 
Then 
\\[  
\\sum_{X\\in B} \\gamma(X,L)\\op{wt}(X) + \\beta(\\ee,X) \\ge a + b\\,\\op{azim}(B).
\\] 
It follows that
\\[  
\\Gamma(Z) \\ge 5 a + b\\, (2\\pi) > 0.
\\] 

    ";
    tags = [Flypaper;Tex;Cfsqp];  
  };;



let template = `\ y3m y3M y4m y4M y5m y5M y6m y6M w m. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (y4m,y4,y4M);
    (y5m,y5,y5M);
    (y6m,y6,y6M)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &w + &m *beta_bump_lb  >
       a_spine5 + b_spine5 * dih_y y1 y2 y3 y4 y5 y6) \/ 
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;;

let mk_ineq0 i3 i4 i5 i6  = 
  let x i = List.nth [`&2`; `&2 * hminus`;  `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let w = 1 + mid i3 + mid i4 + mid i5 + mid i6 in
  let m = if (w =2) && (i4 = 1) then `1` else `0` in
 do_betas(list_mk_comb (template, [x i3;X i3; x i4;X i4; x i5;X i5; x i6 ;X i6; mk_small_numeral w; m]));;

let make_F4 i3 i4 i5 i6 = 
   {
    id = Printf.sprintf "ZTGIJCF4 %d %d %d %d 1821661595" i3 i4 i5 i6;
    ineq = mk_ineq0 i3 i4 i5 i6;
    doc = "This is the $4$-cell inequality for five or more leaves.";
    tags = (if (i3,i4,i5,i6)=(0,0,0,0) then [Tex] else [] ) @ [Cfsqp;Flypaper];
  };;

 for i3=0 to 1 do 
for i4 = 0 to 1 do
 for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add(make_F4 i3 i4 i5 i6) done done done done;;


let template23 = `\ y3m y3M y5m y5M y6m y6M w1 w2. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (&2 ,y4, sqrt8 );
    (y5m,y5,y5M);
    (y6m,y6,y6M)]
    ((gamma23f y1 y2 y3 y4 y5 y6 w1 w2 sqrt2 lmfun    >
       a_spine5 + b_spine5 * dih_y y1 y2 y3 y4 y5 y6) \/ 
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;;

let mk_ineq23 i3 i5 i6 = 
  let x i = List.nth [`&2`; `&2 * hminus` ; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let m = mk_small_numeral in
  let w1 = 1 +  mid i6 in
  let w2 = 1 + mid i3 + mid i5 in
    do_betas(list_mk_comb (template23, [x i3;X i3; x i5;X i5; x i6 ;X i6; m w1; m w2]));; 

let make_F23 i3 i5 i6 = 
   {
    id = Printf.sprintf "ZTGIJCF23 %d %d %d 7907792228" i3 i5 i6;
    ineq = mk_ineq23 i3 i5 i6;
    doc = "This is the $2$- and $3$-cell inequality for five or more leaves.";
    tags = (if (i3,i5,i6)=(0,0,0) then [Tex] else []) @ [Cfsqp;Flypaper];
  };;

 for i3=0 to 1 do 
 for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add(make_F23 i3 i5 i6) done done done;;

add 
{
  id = "BIXPCGW 9455898160";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun > -- #0.00569) `;
  doc =   "
     If $X$ is a quarter, then $\\gamma(X,L)\\ge -0.00569$.";
  tags = [Flypaper;Cfsqp;Clusterlp;Tex];
};;


add 
{
  id = "BIXPCGW 2300537674";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun > &0) \/ (dih_y y1 y2 y3 y4 y5 y6 < #1.65))`;
  doc =   "
     If $X$ is a quarter such that $\\gamma(X,L)\\le 0$, then $\\dih(X) < 1.65$.";
  tags = [Flypaper;Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "BIXPCGW 6652007036";
  ineq = all_forall `ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #2.8)`;
  doc =   "
     If $X$ is a $4$-cell then  $\\dih(X) < 2.8$.";
  tags = [Flypaper;Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "BIXPCGW 7080972881";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2 * hminus,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #2.3)`;
  doc =   "
     If $X$ is a $4$-cell with a critical edge next to the spine, then  $\\dih(X) < 2.3$.";
  tags = [Flypaper;Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "BIXPCGW 1738910218";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, &2 * hplus);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #2.3)`;
  doc =   "
     If $X$ is a $4$-cell with a critical edge opposite spine, then  $\\dih(X) < 2.3$.";
  tags = [Flypaper;Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "BIXPCGW 7274157868";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, sqrt8);
    (&2,y3, sqrt8);
    (&2,y4, sqrt8);
    (&2,y5, sqrt8);
    (&2,y6, sqrt8)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun > #0.0057) \/
    (dih_y y1 y2 y3 y4 y5 y6 < #2.3))`;
  doc =   "
     If $X$ is a $4$-cell with a single critical edge (the spine), and if $\\dih(X)\\ge 2.3$,
      then  $\\gamma(X,L) > 0.0057$.";
  tags = [Flypaper;Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "QITNPEA 5653753305";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun + #0.0659 
      - #0.042*dih_y y1 y2 y3 y4 y5 y6 > #0.0)`;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "QITNPEA 9939613598";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (&2 * hplus,y4, sqrt8);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun - #0.00457511 
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
   (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
  doc =   "
     This is an inequality for nonquarter $4$-cells of weight $1$ used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "QITNPEA 4003532128";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2.1 ,y4, sqrt8);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    ((gamma23f y1 y2 y3 y4 y5 y6 1 1 sqrt2 lmfun - #0.00457511 
    - #0.00609451*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 < &2) \/
    (eta_y y1 y2 y6 > sqrt2 ) \/
    (eta_y y1 y3 y5 > sqrt2))`;
  doc =   "
     Note the lower bound on $y_4$ is $2.1$.
     This is an inequality for $23$-cells used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp;Tex];
};;

add {
  id = "QITNPEA 3725403817";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, #2.1);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (dih_y y1 y2 y3 y4 y5 y6 < #1.56) `;
  doc =   "
     This is an inequality for $2$- and $3$-cells used to prove the cluster inequality.
      Note that $y_4\\le 2.1$.
     ";
  tags = [Cfsqp;Clusterlp;Tex];
};;


add 
{
  id = "QITNPEA 6206775865";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun + #0.0142852 - #0.00609451 *dih_y y1 y2 y3 y4 y5 y6 > #0.0) `;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp;Tex];
};;

add 
{
  id = "QITNPEA 5814748276";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun - #0.00127562 + #0.00522841 * dih_y y1 y2 y3 y4 y5 y6 > #0.0) `;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp;Tex];
};;


add 
{
  id = "QITNPEA 3848804089";
  ineq = all_forall `ineq
   [(&2 * hminus,y1, &2 * hplus);
    (&2,y2, &2 * hminus);
    (&2,y3, &2 * hminus);
    (#2 ,y4, &2 * hminus);
    (&2,y5, &2 * hminus);
    (&2,y6, &2 * hminus)
   ]
    (gamma4f y1 y2 y3 y4 y5 y6 lmfun - #0.161517 + #0.119482* dih_y y1 y2 y3 y4 y5 y6 > #0.0) `;
  doc =   "
     This is an inequality for quarters used to prove the cluster inequality.";
  tags = [Cfsqp;Clusterlp;Tex];
};;

let mk_ineq0 i3 i4 i5 i6  = 
  let template = `\ y3m y3M y4m y4M y5m y5M y6m y6M w m. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (y4m,y4,y4M);
    (y5m,y5,y5M);
    (y6m,y6,y6M)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &w + &m *beta_bump_lb 
        - #0.0105256 +  #0.00522841*dih_y y1 y2 y3 y4 y5 y6 > #0.0) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))` in
  let x i = List.nth [`&2`; `&2 * hminus`; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let w = 1 + mid i3 + mid i4 + mid i5 + mid i6 in
  let m = if (w =2) && (i4 = 1) then `1` else `0` in
 do_betas(list_mk_comb (template, [x i3;X i3; x i4;X i4; x i5;X i5; x i6 ;X i6; mk_small_numeral w; m]));;

let add0 i3 i4 i5 i6 = if (i3+i4+i5+i6 = 0) then () else
  add {
    id = Printf.sprintf "QITNPEA %d %d %d %d 3803737830" i3 i4 i5 i6;
    ineq = mk_ineq0 i3 i4 i5 i6;
    doc = "This is a $4$-cell (nonquarter) inequality for four blades.";
    tags = (if (i3,i4,i5,i6)=(0,0,0,0) then [Tex] else []) @ [Cfsqp;Flypaper];
  };;

 for i3=0 to 1 do 
for i4 = 0 to 1 do
 for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add0 i3 i4 i5 i6;   done done done done;;


let mk_tm0 i3 i4  = 
  let template = `\ y3m y3M y4m y4M w m. ineq
   [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (y3m,y3,y3M);
    (y4m,y4,y4M);
    (&2 ,y5,&2 *hminus);
    (&2 ,y6,&2 * hminus)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &w + &m *beta_bump_lb 
         > #0.0057) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))` in
  let x i = List.nth [`&2`; `&2 * hminus`; `&2 * hplus`; `sqrt8`] i in
  let X i = x (i+1) in
  let mid i = if (i=1) then 1 else 0 in
  let w = 1 + mid i3 + mid i4 in
  let m = if (w =2) && (i4 = 1) then `1` else `0` in
 do_betas(list_mk_comb (template, [x i3;X i3; x i4;X i4; mk_small_numeral w; m]));;

let add0 i3 i4 = if (i3+i4 = 0) then () else
  add {
    id = Printf.sprintf "QITNPEA %d %d 9063653052" i3 i4 ;
    ineq = mk_tm0 i3 i4 ;
    doc = "This is a $4$-cell (nonquarter) inequality.  The four cell is assumed to
    have exactly one {\\it small} face.";
    tags = (if (i3+i4=1) then [Tex] else []) @ [Cfsqp;Flypaper];
  };;

for i3=1 to 2 do (* start at 1 to force the triangle (y1,y3,y5) not to be small *)
for i4 = 0 to 2 do
   add0 i3 i4   done done;;

add {
    id = "QITNPEA 2134082733"  ;
    ineq =  all_forall  `ineq [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (&2 ,y3,&2 * hminus);
    (&2 * hminus,y4,sqrt8);
    (&2 ,y5,&2 * hminus);
    (&2 ,y6,&2 * hminus)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 + beta_bump_lb 
         - #0.213849 + #0.119482*dih_y y1 y2 y3 y4 y5 y6 > #0.0 ) \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
    doc = "This is a $4$-cell (nonquarter) inequality.  The two edges along the
     spine are small.";
    tags = [Cfsqp;Flypaper;Clusterlp;Tex];
};;

add {
    id = "QITNPEA  5400790175"  ;
    ineq =  all_forall  `ineq [(&2 * hminus, y1, &2 * hplus);
    (&2 ,y2, &2 *hminus);
    (&2 ,y3,&2 * hminus);
    (&2 * hminus,y4,sqrt8);
    (&2 ,y5,&2 * hminus);
    (&2 ,y6,&2 * hminus)]
    ((gamma4f y1 y2 y3 y4 y5 y6 lmfun / &2 + beta_bump_lb 
       + gamma3f y1 y3 y5 sqrt2 lmfun > #0.0057)  \/
    (y_of_x rad2_x y1 y2 y3 y4 y5 y6 > &2))`;
    doc = "This is a $4$-cell (nonquarter) and adjacent $3$-cell inequality.  
     The edges along the   spine are small.";
    tags = [Cfsqp;Flypaper;Clusterlp;Tex];
};;

(* Add all the inequalities from ineqdata3q1h.hl *)

let add3q1h  = 
  let records = Ineqdata3q1h.records in
  let mk_ineq = Ineqdata3q1h.mk_ineq in
  let mk_3q1h case r = 
    let d = List.nth records r in
    let f = mk_ineq case d in
      { ineq = f; 
	id = Printf.sprintf "OXLZLEZ 6346351218 %d %d" case r; 
	tags = (if (case,r)=(0,0) then [Tex] else []) @ [Clusterlp]; 
	doc = "One of many inequalities for four blades, three quarters, and
         simplex of weight $1/2$"; } in
  let mk_3q1hc r = map (fun c -> mk_3q1h c r) (0-- 4) in
  let mk_3q1h_all = List.flatten(map (mk_3q1hc) (0--((List.length records)-1))) in
    map add mk_3q1h_all;;


addtex (Section,"Packing","Polyhedra");;


add  {
id = "4198769118";
tags = [Tex;Flypaper;Eps 1.0e-8];
doc = "%old id: lemma:13-14, calc:cc:disks,  cc:disks, , 8550443271 5216879221
   This inequality gives the nonoverlap of disks on the unit sphere.  The inequality
   is sharp when $h_1=1$ or $h_2=1$.
Let
\\[ 
g(h) = \\arccos(h/2) - \\pi/6.
\\] 
If $h_1,h_2\\in [1,\\hm]$, then
\\[ 
\\op{arc}(2h_1,2h_2,2) - g(h_1) - g(h_2)\\ge 0.
\\] 
   ";
ineq = all_forall `ineq
 [
  (#1.0, h1, #1.26);
  (#1.0, h2, #1.26)
 ]
 (acs (h1/ &2) + acs (h2 / &2) - pi/ (&3) <= arclength(&2 *h1) (&2 *h2) (&2))`;
};;

add {
id = "1965189142 34";
tags = [Tex;Flypaper];
doc = "This inequality gives a linear lower bound on the area of a regular spherical polygon, when $k\\ge 34$";
ineq = all_forall `ineq
 [
  (#1.0,h,#1.26)
 ]
  (#0.591 - #0.0331 * &34 + #0.506 * lfun h < &0)`
};;

{
id = "1965189142 a";
tags = [Tex;Flypaper];
doc = "
%old id: 7991525482, eqn:alin, 
This inequality gives a linear lower bound on the area of a regular spherical polygon, when $k\\le 34$.
Let $L$ be given by Definition~\\ref{def:L}.
Let
\\[ 
g(h) = \\arccos(h/2) - \\pi/6.
\\] 
Let
\\[ 
\\op{reg}(a,k) = 2\\pi - 2 k (\\arcsin(\\cos(a)\\sin(\\pi/k))).
\\] 
Then
\\[ 
\\op{reg}(g(h),k) \\ge c_0 + c_1 k + c_2 L(h),\\quad
k = 3,4,\\ldots,\\quad 1\\le h\\le \\hm.
\\] 
 The integer parameter $k$ has been replaced with a real variable.   If $k\\ge34$, then
the right-hand-side is negative and the inequality is immediate.
 The trig identity 
 \\[
  \\cos(\\acos (h/2) - \\pi/6)) = h \\sqrt(3)/4 + \\sqrt(1-(h/2)^2)/2.
 \\]
  has been used to simplify the inequality.
 ";
ineq = all_forall `ineq
 [
  (#1.0,h,#1.26);
  (#3.0,k,#34.0)
 ]
    (let ca = h * sqrt(#3.0)/ #4.0 +  sqrt(&1 - (h/ &2) pow 2) / &2 in
        (&2 * pi - &2 * k * asn(ca * sin(pi/ k)) > #0.591 - #0.0331 * k + #0.506 * lfun h))`
};;

add  {
id = "8055810915";
tags = [Tex;Flypaper];
doc = "This inequality gives the nonoverlap of disks on the unit sphere.";
ineq = all_forall `ineq
 [
  (#1.0, h, #1.26)
 ]
 (acs (h/ &2) - pi/ (&6) + #0.797 <= arclength(&2 *h) (&2) (&2 * h0))`;
};;

{
id = "6096597438 a";
tags = [Tex;Flypaper];
doc = "This inequality gives a linear lower bound on the area of a regular spherical polygon, when $k\\ge 64$";
ineq = all_forall `ineq
 [
  (#1.0,h,#1.0)
 ]
  (#0.591 - #0.0331 * &64 + #0.506 * lfun (&1) + #1.0 < &0)`
};;

{
id = "6096597438 b";
tags = [Tex;Flypaper];
doc = "
% old id cc:alin2. 8540377696 
Let
\\[ 
g(h) = \\arccos(h/2) - \\pi/6.
\\] 
Let
\\[ 
\\op{reg}(a,k) = 2\\pi - 2 k (\\arcsin(\\cos(a)\\sin(\\pi/k))).
\\] 
Let
\\[ a'=0.797\\approx \\arc(2,2,2\\hm)-g(\\hm).\\]  Then for $k=3,~4$,\\dots
\\[ \\op{reg}(a',k) \\ge c_0 + c_1 k + c_2 L(1) +c_3.\\] 
This inequality gives a linear lower bound on the area of a regular spherical polygon, when $k\\le 64$.
 The integer parameter $k$ has been replaced with a real variable.   If $k\\ge64$, then
the right-hand-side is negative and the inequality is immediate.
 ";
ineq = all_forall `ineq
 [
  (#3.0,k,#64.0)
 ]
    (let ca' = cos(#0.797) in 
        (&2 * pi - &2 * k * asn(ca' * sin(pi/ k)) > 
          #0.591 - #0.0331 * k + #0.506 * lfun (&1) + #1.0))`
};;

addtex(Section,"Local Fan","Standard Fan");;

add {
id = "4717061266";
ineq = all_forall `ineq
[
(&2, y1, &2*h0);
(&2, y2, &2*h0);
(&2, y3, &2*h0);
(&2, y4, &2*h0);
(&2, y5, &2*h0);
(&2, y6, &2*h0)
]
  (delta_y y1 y2 y3 y4 y5 y6 > &0)`;
tags = [Flypaper;Tex];
doc = "A certain configuration of four points cannot be coplanar.";
};;

addtex(Section,"Local Fan","Minimal Fan");;


add  {
id = "2065952723";
doc = "
%See Mathematica numerical calculation.
% old id: eqn:gg'' calc:Lexell.
The derivatives have been computed in Mathematica and converted to
HOL format.  
This is a
  calculation of the sign of a second derivative to show that the
  function $\\tau$ does not have a interior local minimum as a function of the
  edge lengths.  It initially appears to depend on six variables, but
  the dependence on three of the variables is linear and is
  extremal at the endpoints.

Let
\\[ 
g(s;a,b,c,e_1,e_2,e_3) = \\sum_{i=1}^3 \\dih_i(2,2,2,a+s,b,c) e_i,
\\] 
where $\\dih_i$ is given by Definition~\\ref{def:tau}.
Let $\\Delta = \\Delta(4,4,4,a^2,b^2,c^2)$.
Let primes denote derivatives with respect to the variable $s$.
Assume that
$e_i\\in\\leftclosed1,1+\\sol_0/\\pi\\rightclosed$,  that
$a,b,c\\in\\leftclosed2/\\hm,4\\rightclosed$.
%We restrict $a$ further to $a\\le 3.8$.
Then
\\begin{equation}\\label{eqn:calc:Lexell}
(16-a^2) ^2 a^2(  \\Delta (g'(0;a,b,c,e_1,e_2,e_3))^2 
- 0.01\\Delta^{3/2}g''(0;a,b,c,e_1,e_2,e_3))\\ge 0.
\\end{equation}
(The factors of $\\Delta$ clear the denominator in
(\\ref{eqn:calc:Lexell}) to simplify the inequality to be proved.)
%Sum of squares methods may be the easiest way to prove this inequality near the
%minimum.
%The quantities deriv1 and deriv2 are for reference only.
";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &4);
  (&2 / h0, b, &4);
  (&2 / h0, c, &4)
  ]
   (
   let deriv1 = (((&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3))))))))/((-- &16) + (a pow 2)))/a) in
    let deriv2 =
 (&8 * ((&1 /(a pow 2)) * ((&1 /(((-- &16) + (a pow 2)) pow 2)) * ((&2 * ((a 
 pow 10) * e1)) + (((-- &256) * ((((b pow 2) + ((-- &1) * (c pow 2))) pow 3) * 
 (e2 + ((-- &1) * e3)))) + (((-- &1) * ((a pow 6) * ((&2 * (((-- &256) + ((b 
 pow 4) + (((-- &2) * ((b pow 2) * (c pow 2))) + (c pow 4)))) * e1)) + (((((b 
 pow 4) * ((-- &8) + (c pow 2))) + (((-- &16) * ((b pow 2) * (&3 + (c pow 
 2)))) + (&16 * (&16 + (&9 * (c pow 2)))))) * e2) + ((((b pow 2) * (&144 + 
 (((-- &16) * (c pow 2)) + (c pow 4)))) + ((-- &8) * ((-- &32) + ((&6 * (c pow 
 2)) + (c pow 4))))) * e3))))) + (((a pow 8) * (((-- &64) * e1) + ((-- &6) * 
 ((((-- &8) + (b pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3))))) + (((-- &2) 
 * ((a pow 4) * (((b pow 2) + ((-- &1) * (c pow 2))) * (((b pow 4) * e2) + 
 ((&8 * ((c pow 2) * ((&4 * e1) + ((&9 * e2) + ((-- &7) * e3))))) + ((&384 * 
 (e2 + ((-- &1) * e3))) + (((-- &1) * ((c pow 4) * e3)) + ((b pow 2) * (((-- 
 &32) * e1) + (((&56 + ((-- &9) * (c pow 2))) * e2) + (&9 * (((-- &8) + (c pow 
 2)) * e3)))))))))))) + (&16 * ((a pow 2) * (((b pow 2) + ((-- &1) * (c pow 
 2))) * (((b pow 4) * (e2 + ((-- &3) * e3))) + (((-- &4) * ((b pow 2) * ((&8 * 
 e1) + ((((-- &20) + (&3 * (c pow 2))) * e2) + ((-- &3) * (((-- &4) + (c pow 
 2)) * e3)))))) + ((c pow 2) * ((&32 * e1) + ((&3 * ((&16 + (c pow 2)) * e2)) 
 + ((-- &1) * ((&80 + (c pow 2)) * e3)))))))))))))))))) in
    let numE4 = 
(((-- &2) * ((a pow 10) * e1)) + ((&256 * ((((b pow 2) + ((-- &1) * (c pow 
2))) pow 3) * (e2 + ((-- &1) * e3)))) + (((a pow 6) * ((&2 * (((-- &256) + 
((b pow 4) + (((-- &2) * ((b pow 2) * (c pow 2))) + (c pow 4)))) * e1)) + 
(((((b pow 4) * ((-- &8) + (c pow 2))) + (((-- &16) * ((b pow 2) * (&3 + (c 
pow 2)))) + (&16 * (&16 + (&9 * (c pow 2)))))) * e2) + ((((b pow 2) * (&144 + 
(((-- &16) * (c pow 2)) + (c pow 4)))) + ((-- &8) * ((-- &32) + ((&6 * (c pow 
2)) + (c pow 4))))) * e3)))) + ((&2 * ((a pow 8) * ((&32 * e1) + (&3 * ((((-- 
&8) + (b pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))) + ((&200 * ((((a 
pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 + ((-- &1) * 
e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b pow 2)) * e2) + 
(((-- &8) + (c pow 2)) * e3))))))) pow 2)) + ((&2 * ((a pow 4) * (((b pow 
2) + ((-- &1) * (c pow 2))) * (((b pow 4) * e2) + ((&8 * ((c pow 2) * ((&4 * 
e1) + ((&9 * e2) + ((-- &7) * e3))))) + ((&384 * (e2 + ((-- &1) * e3))) + 
(((-- &1) * ((c pow 4) * e3)) + ((b pow 2) * (((-- &32) * e1) + (((&56 + ((-- 
&9) * (c pow 2))) * e2) + (&9 * (((-- &8) + (c pow 2)) * e3)))))))))))) + 
((-- &16) * ((a pow 2) * (((b pow 2) + ((-- &1) * (c pow 2))) * (((b pow 4) * 
(e2 + ((-- &3) * e3))) + (((-- &4) * ((b pow 2) * ((&8 * e1) + ((((-- &20) + 
(&3 * (c pow 2))) * e2) + ((-- &3) * (((-- &4) + (c pow 2)) * e3)))))) + ((c 
pow 2) * ((&32 * e1) + ((&3 * ((&16 + (c pow 2)) * e2)) + ((-- &1) * ((&80 + 
(c pow 2)) * e3)))))))))))))))) in
  (
  (numE4 > &0)
     ))`;
};;

{
id = "OUCPLRI a";
tags = [Flypaper;Cfsqp;Tex];
doc = "
  % old id. calc:2der 
  A formula for a second derivative has been calculated in Mathematica.  It
  can be written as an obvious positive factor times a polynomial numerator.
  This calculation shows that the numerator is negative.
  ";
ineq = all_forall `ineq
  [
  (&2,y1,&2 * h0);
  (&2,y2,&2 * h0)
  ]
  (   (((-- &4) * (y1 pow 2)) + ((y1 pow 4) + (((-- &4) * ((y1 pow 3) * y2)) + 
(((-- &4) * (y2 pow 2)) + ((&6 * ((y1 pow 2) * (y2 pow 2))) + (((-- &4) * (y1 
* (y2 pow 3))) + (y2 pow 4)))))))   < &0 )`;
};;
   

{
id = "OUCPLRI b";
tags = [Flypaper;Cfsqp;Tex];
doc = "
  % old id. calc:2der
  A formula for a second derivative has been calculated in Mathematica.  It
  can be written as an obvious positive factor times a polynomial numerator.
  This calculation shows that the numerator is negative.
  ";
ineq = all_forall `ineq
  [
  (&2,y1,&2 * h0);
  (&2,y2,&2 * h0)
  ]
  (  ((-- &64) + ((&48 * (y1 pow 2)) + (((-- &12) * (y1 pow 4)) + ((y1 pow 6) 
+ ((&80 * (y2 pow 2)) + (((-- &8) * ((y1 pow 2) * (y2 pow 2))) + (((-- &3) * 
((y1 pow 4) * (y2 pow 2))) + (((-- &12) * (y2 pow 4)) + ((&3 * ((y1 pow 2) * 
(y2 pow 4))) + ((-- &1) * (y2 pow 6)))))))))))  < &0 )`;
};;

add {
id = "OMKYNLT 3336871894";
tags = [Tex;Cfsqp;Eps 1.0e-8;Flypaper];
doc = "This is the nonnegativity of $\\tau$ on triangles.  It is a sharp inequality.";
ineq =  all_forall `ineq
    [
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52)]
( taum y1 y2 y3 (&2) (&2) (&2) >= #0.0)`;
};;

add {
id = "OMKYNLT 2 1";
tags = [Cfsqp;Flypaper;Tex];
doc = "This is the inequality of $\\tau > d(r,s)$ on triangles.";
ineq =  all_forall `ineq
    [
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52)]
( taum y1 y2 y3 (&2) (&2) (&2 * h0) > tame_table_d 2 1)`;
};;

add {
id = "OMKYNLT 1 2";
tags = [Cfsqp;Flypaper;Tex];
doc = "
  %old id 8880534953
  This is the inequality of $\\tau > d(r,s)$ on triangles.  Note that
  the optimal point is not $(2,2,2)$ as one might have expected.";
ineq =  all_forall `ineq
    [
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52)]
( taum y1 y2 y3 (&2) (&2 * h0) (&2 * h0) > tame_table_d 1 2)`;
};;

{
id = "OMKYNLT 0 3";
tags = [Cfsqp;Flypaper;Tex];
doc = "This is the inequality of $\\tau > d(r,s)$ on triangles.";
ineq =  all_forall `ineq
    [
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52)]
( taum y1 y2 y3 (&2 * h0) (&2 * h0) (&2 * h0) > tame_table_d 0 3)`;
};;

add {
id = "SDCCMGA a";
doc = "This is an arclength estimate.";
tags = [Tex;Flypaper;Cfsqp];
ineq = all_forall `ineq
 [
  (&2,y,#2.52)
 ]
 (arclength y (&2) (&2 * h0) + arclength y (&2) (&2 * h0) <
   arclength y (&2*h0) (&2 * h0) + arclength (&2 *h0) (&2 *h0) (&2)
   +arclength (&2*h0) (&2*h0) (&2))`;
};;

add {
id = "SDCCMGA b";
doc = "This is an arclength estimate.";
tags = [Tex;Flypaper;Cfsqp];
ineq = all_forall `ineq
 [
  (&2,y,#2.52)
 ]
 (arclength y (&2) (&2 * h0) + arclength y (&2) (&2 * h0) <
   arclength y (&2*h0) (&2) + arclength (&2 *h0) (&2 *h0) (&2 * h0)
   +arclength (&2*h0) (&2*h0) (&2))`;
};;

add  {
id = "2986512815";
doc = "The terms have been generated by Mathematica.
%old id: calc:cc:qua, m11 lemma:flat-exists
The function
  $\\tau$ does not have a local minimum as $y$ varies.
The two simplices are $(2,2,2,y,a,b)$ and $(2,2,2,y,c,d)$, joined along
the common face $(2,2,y)$.

Let $e_1,\\ldots,e_4\\in \\leftclosed1,1+\\sol_0/\\pi\\rightclosed$.
let $a,b,c\\in \\leftclosed 2/h_0,2h_0\\rightclosed$,
$y\\in \\leftclosed 2,3.93\\rightclosed$, and
$d\\in \\leftclosed 2,4\\rightclosed$.
Assume that
\\[ 
\\Delta(4,4,4,a^2,b^2,y^2),~\\Delta(4,4,4,c^2,d^2,y^2)
%,~\\Delta((2h_0)^2,a^2,b^2,y^2,c^2,d^2)  %% dropped constraint for now.
% I can't quite justify this condition (* (delta_y (&2 * h0) a b y c d < &0)  \/ *)
> 0.
\\] 
Assume that
\\[ 
\\dih(2,2,2,a,b,y)+\\dih(2,2,2,d,c,y) < \\pi.
\\] 
Let
\\begin{align*} 
g(y) &=
  e_1\\dih(2,2,2,b,a,y) + e_2\\dih(2,2,2,y,a,b) + e_3 \\dih(2,2,2,a,b,y)+\\\\
  &~~ e_1 \\dih(2,2,2,c,d,y) + e_4\\dih(2,2,2,y,c,d) + e_3\\dih(2,2,2,d,c,y).
\\end{align*}
Then \\[ g'(y)^2 - 0.01 g''(y) > 0.\\] 
The upper bound $3.93$ is obtained from the triangle inequality as follows.
\\[
\\arc(2,2,a)+\\arc(2,2,b) \\le 2\\arc(2,2,2h_0) < 2.73,
\\]
but if $y\\ge 3.93$, then 
$\\arc(2,2,y) > 2.73$.
";
tags= [Tex;Cfsqp;Eps 1.0e-8;Flypaper];

ineq = all_forall `ineq
 [
    (&1,e1,&1 + sol0/pi);
    (&1,e2,&1 + sol0/pi);
    (&1,e3,&1 + sol0/pi);
    (&1,e4,&1 + sol0/pi);
    (&2 / h0, a, &2 * h0);
    (&2 / h0, b, &2 * h0);
    (&2 / h0, c, &2 * h0);
    (&2, y, #3.93);
    (&2, d, #4.0)
 ]
 ((let term1 = ((&4 * ((sqrt ((((-- &4) * (c pow 4)) + (((-- &4) * (((d pow 2) + ((-- &1) * 
(y pow 2))) pow 2)) + ((c pow 2) * ((&8 * (y pow 2)) + ((-- &1) * ((d pow 2) 
* ((-- &8) + (y pow 2)))))))))) * (((-- &1) * ((y pow 2) * ((&8 * e1) + ((&8 
* e3) + (e2 * ((-- &16) + (y pow 2))))))) + (((b pow 2) * ((&8 * e3) + (e1 * 
((-- &8) + (y pow 2))))) + ((a pow 2) * ((&8 * e1) + (e3 * ((-- &8) + (y 
pow 2))))))))) + (&4 * ((sqrt ((((-- &4) * (a pow 4)) + (((-- &4) * (((b pow 
2) + ((-- &1) * (y pow 2))) pow 2)) + ((a pow 2) * ((&8 * (y pow 2)) + ((-- 
&1) * ((b pow 2) * ((-- &8) + (y pow 2)))))))))) * (((-- &1) * ((y pow 2) * 
((&8 * e1) + ((&8 * e3) + (e4 * ((-- &16) + (y pow 2))))))) + (((c pow 2) * 
((&8 * e3) + (e1 * ((-- &8) + (y pow 2))))) + ((d pow 2) * ((&8 * e1) + (e3 * 
((-- &8) + (y pow 2)))))))))) in
  let term2 = ((&4 * (((sqrt ((((-- &4) * (c pow 4)) + (((-- &4) * (((d pow 2) + ((-- &1) * 
(y pow 2))) pow 2)) + ((c pow 2) * ((&8 * (y pow 2)) + ((-- &1) * ((d pow 2) 
* ((-- &8) + (y pow 2)))))))))) pow 3) * (((-- &8) * ((a pow 6) * ((&8 * (e1 
* ((-- &16) + (&3 * (y pow 2))))) + (e3 * (&128 + (((-- &8) * (y pow 2)) + (y 
pow 4))))))) + (((-- &8) * (((b pow 2) + ((-- &1) * (y pow 2))) * (((y pow 4) 
* ((e2 * (((-- &16) + (y pow 2)) pow 2)) + ((&8 * (e1 * ((-- &16) + (&3 * (y 
pow 2))))) + (&8 * (e3 * ((-- &16) + (&3 * (y pow 2)))))))) + (((b pow 2) * 
((y pow 2) * ((&16 * (e3 * (&16 + ((-- &3) * (y pow 2))))) + ((e2 * (((-- 
&16) + (y pow 2)) pow 2)) + (e1 * ((-- &512) + ((&48 * (y pow 2)) + ((-- &3) 
* (y pow 4))))))))) + ((b pow 4) * ((&8 * (e3 * ((-- &16) + (&3 * (y pow 
2))))) + (e1 * (&128 + (((-- &8) * (y pow 2)) + (y pow 4)))))))))) + (((-- 
&4) * ((a pow 2) * ((&6 * ((y pow 4) * ((&8 * (e1 * ((-- &16) + (&3 * (y pow 
2))))) + (e3 * (&128 + (((-- &8) * (y pow 2)) + (y pow 4))))))) + (((-- &4) * 
((b pow 2) * ((y pow 2) * ((e2 * (((-- &16) + (y pow 2)) pow 2)) + ((&4 * (e1 
* ((-- &32) + (((-- &2) * (y pow 2)) + (y pow 4))))) + (&4 * (e3 * ((-- &32) 
+ (((-- &2) * (y pow 2)) + (y pow 4)))))))))) + ((b pow 4) * ((&6 * (e3 * 
(&128 + (((-- &40) * (y pow 2)) + (&3 * (y pow 4)))))) + (e1 * ((-- &768) + 
((&208 * (y pow 2)) + (((-- &20) * (y pow 4)) + (y pow 6))))))))))) + ((-- 
&4) * ((a pow 4) * ((&2 * ((y pow 2) * ((e1 * (&384 + ((-- &72) * (y 
pow 2)))) + ((e2 * (((-- &16) + (y pow 2)) pow 2)) + ((-- &4) * (e3 * (&160 + 
(((-- &14) * (y pow 2)) + (y pow 4))))))))) + ((b pow 2) * ((&6 * (e1 * (&128 
+ (((-- &40) * (y pow 2)) + (&3 * (y pow 4)))))) + (e3 * ((-- &768) + ((&208 
* (y pow 2)) + (((-- &20) * (y pow 4)) + (y pow 6))))))))))))))) + (&4 * 
(((sqrt ((((-- &4) * (a pow 4)) + (((-- &4) * (((b pow 2) + ((-- &1) * (y pow 
2))) pow 2)) + ((a pow 2) * ((&8 * (y pow 2)) + ((-- &1) * ((b pow 2) * ((-- 
&8) + (y pow 2)))))))))) pow 3) * (((-- &8) * ((c pow 6) * ((&8 * (e3 * ((-- 
&16) + (&3 * (y pow 2))))) + (e1 * (&128 + (((-- &8) * (y pow 2)) + (y pow 
4))))))) + (((-- &8) * (((d pow 2) + ((-- &1) * (y pow 2))) * (((y pow 4) * 
((e4 * (((-- &16) + (y pow 2)) pow 2)) + ((&8 * (e1 * ((-- &16) + (&3 * (y 
pow 2))))) + (&8 * (e3 * ((-- &16) + (&3 * (y pow 2)))))))) + (((d pow 2) * 
((y pow 2) * ((e1 * (&256 + ((-- &48) * (y pow 2)))) + ((e4 * (((-- &16) + (y 
pow 2)) pow 2)) + (e3 * ((-- &512) + ((&48 * (y pow 2)) + ((-- &3) * (y pow 
4))))))))) + ((d pow 4) * ((&8 * (e1 * ((-- &16) + (&3 * (y pow 2))))) + (e3 
* (&128 + (((-- &8) * (y pow 2)) + (y pow 4)))))))))) + (((-- &4) * ((c pow 
4) * ((&2 * ((y pow 2) * ((e3 * (&384 + ((-- &72) * (y pow 2)))) + ((e4 * 
(((-- &16) + (y pow 2)) pow 2)) + ((-- &4) * (e1 * (&160 + (((-- &14) * (y 
pow 2)) + (y pow 4))))))))) + ((d pow 2) * ((&6 * (e3 * (&128 + (((-- &40) * 
(y pow 2)) + (&3 * (y pow 4)))))) + (e1 * ((-- &768) + ((&208 * (y pow 2)) + 
(((-- &20) * (y pow 4)) + (y pow 6)))))))))) + ((-- &4) * ((c pow 2) * ((&6 * 
((y pow 4) * ((&8 * (e3 * ((-- &16) + (&3 * (y pow 2))))) + (e1 * (&128 + 
(((-- &8) * (y pow 2)) + (y pow 4))))))) + (((-- &4) * ((d pow 2) * ((y pow 
2) * ((e4 * (((-- &16) + (y pow 2)) pow 2)) + ((&4 * (e1 * ((-- &32) + (((-- 
&2) * (y pow 2)) + (y pow 4))))) + (&4 * (e3 * ((-- &32) + (((-- &2) * (y pow 
2)) + (y pow 4)))))))))) + ((d pow 4) * ((&6 * (e1 * (&128 + (((-- &40) * (y 
pow 2)) + (&3 * (y pow 4)))))) + (e3 * ((-- &768) + ((&208 * (y pow 
2)) + (((-- &20) * (y pow 4)) + (y pow 6))))))))))))))))) in
   term1 * term1 - #0.01 * term2 > &0) \/ 
  (delta_y (&2) (&2) (&2) a b y < &0) \/ 
  (delta_y (&2) (&2) (&2) c d y < &0) \/ 
  (dih_y (&2) (&2) (&2) a b y + dih_y (&2) (&2) (&2) d c y > pi) )`;
};;

add {
id = "JNTEFVP 1";
doc = "A nonconvex quad has a diagonal less than $\\sqrt8$.  This allows us
to split a quad into two simplices.  By extreme edge we can assume the diagonal
is $2h_0$ or $\\sqrt8$.  The case $2h_0$ is already done with the triangles.";
tags=[Tex;Cfsqp;Flypaper];
ineq = all_forall `ineq
 [
   (&4,x1,(&2 * h0) pow 2);
   (&4,x2,(&2 * h0) pow 2);
   (&4,x3,(&2 * h0) pow 2);
   (&4,x4,(&2 * h0) pow 2);
   (&4,x5,(&2 * h0) pow 2);
   (&8 ,x6, (&4 * h0) pow 2)
 ]
  (delta_x4 x1 x2 x3 x4 x5 x6 > &0)`;
};;

add {
id = "JNTEFVP 2 1";
doc = "This is the d[2,1] constant calculation for quads.";
tags=[Tex;Cfsqp;Flypaper];
ineq = all_forall `ineq
 [
   (&2,y1, &2 * h0);
   (&2,y2, &2 * h0);
   (&2,y3, &2 * h0)
 ]
  (taum y1 y2 y3 (&2) (&2) sqrt8 > tame_table_d 2 1)`;
};;

add {
id = "JNTEFVP 1 2";
doc = "This is the d(1,2) constant calculation for quads.";
tags=[Tex;Cfsqp;Flypaper];
ineq = all_forall `ineq
 [
   (&2,y1, &2 * h0);
   (&2,y2, &2 * h0);
   (&2,y3, &2 * h0)
 ]
  (taum y1 y2 y3 (&2) (&2 * h0) sqrt8 > tame_table_d 1 2)`;
};;

add {
id = "JNTEFVP 0 3";
doc = "This is the d(0,3) constant calculation for quads.";
tags=[Cfsqp;Flypaper;Tex];
ineq = all_forall `ineq
 [
   (&2,y1, &2 * h0);
   (&2,y2, &2 * h0);
   (&2,y3, &2 * h0)
 ]
  (taum y1 y2 y3 (&2 * h0) (&2 * h0) sqrt8 > tame_table_d 0 3)`;
};;



addtex(Comment,"PQFYWHW",
 "
 We start the analysis of pentagons with the case of two adjacent flats. 
 By the established properties, the three edges next to a flat all have the same length,
 $2$ or $2h_0$.  The length $2h_0$ is impossible:
 \\[
  \\arc(2h_0,2,2h_0)2 + \\arc(2,2,2h_0) > \\pi,
 \\]
  contrary to genericity.
 Hence the three edges next to a flat have length $2$.
 ");;

add    
{
id = "PQFYWHW 1";
doc = "In a pentagon with adjacent flats, there is at most one long edge.
 Recall that $s\\le 1$.
 % The two edges next to the non-flat.
 % deriv1 still have (16-a^2)a in the denominator. num1 is the polynomial numerator.
 % $a$ is the edge being deformed, $c$ is the diagonal.
 % $b$ is the adjacent edge, assumed also to have length $2h_0$, but not in $S$.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &2 * h0);
  (&2 , b, &2 * h0);
  (&2, c, &4)
  ]
   (
   let deriv1 = (((&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3))))))))/((-- &16) + (a pow 2)))/a) in
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

add    
{
id = "PQFYWHW 2";
doc = "A pentagon with two adjacent flats does not exist.  By the preceding
  calculations, we have reduced to the case where the edges next to the flats have
  length $2$ and at most one edge has length $2h_0$.  This calculation shows
  that the triangle inequality is violated, so that the pentagon does not exist.
   ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&2, y1, &2 * h0);
    (&2, y2, &2 * h0)
  ]
   (arclength y1 (&2 * h0) (&2) + arclength (&2 * h0) (&2 * h0) (&2) + arclength (&2 * h0) y2 (&2) > arclength y1 (&2) (&2) + arclength (&2) y2 (&2 *h0)  )`;
};;


add    
{
id = "PQFYWHW 3";
doc = "Now we start the analysis of a pentagon with nonadjacent flats.
 We show that there is at most one long edge.
 The combined edge length at the two flats is between $2.9$ and $3.93$.
  \\[
  \\arc(2,2,2h_0) 2 < 2.73 < \\arc(2,2,3.93).
 \\]
 \\[
   \\arc(2,2,2.9) < 1.625 < \\arc(2h_0,2h_0,2) 2.
  \\]
  % num1 is the polynomial numerator.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &2 * h0);
  (#2.9 , b, #3.93);
  (#2.9, c, #3.93)
  ]
   (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

add    
{
id = "PQFYWHW 4";
doc = "In a pentagon with two nonadjacent flats. there is at most one long edge.
This calculation shows that we can shorten an edge that is at a flat node.
We shorten the two edges at $a$ (assuming $a <= c + #0.25$), until their lengths are
$(2,2)$ or $(2,2h_0)$ (if one of them belongs to $S$).
If both are $(2,2)$ then the all four edges at the flat have length $2$, because
otherwise 
\\[
 \\arc(2h_0,2h_0,2h_0) + \\arc(2h_0,2h_0,2) \\le \\arc_c \\le \\arc_a \\le
 \\arc(2,2,2)2 < 2.095.
\\]
 % deriv1 still has (16-a^2)a in the denominator. num1 is the polynomial numerator.
% This is linear in e1, e2, e3.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.9, a, #3.93);
  (&2/h0 , b, &2 * h0);
  (#2.9, c, #3.93)
  ]
  ( (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0) \/ (a > c))`;
};;

let templateB = `\y15 y45 y34 y12 y2max. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,&2 *h0);
(&2,y5,&2 *h0)
  ]
  (
    let y23 = y12 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y14 = edge_flat y5 y1 y4       y45 y15 in 
      (dih_y y1 y2 y5 (&2 * h0) y15 y12 > dih_y y1 y3 y4 y34 y14 y13) \/
        (taum y1 y3 y4 y34 y14 y13 + flat_term y2 + flat_term y5 > tame_table_d 4 1) ))`;;

let mk_tplate template r = 
 do_betas(list_mk_comb (template, r));;


let make0 i j = 
  let r = match  i with
   0 -> [`&2`;`&2`;`&2`]
    |1 -> [`&2 * h0`;`&2`;`&2`]
    |2 -> [`&2`;`&2 * h0`;`&2`]
    |3 -> [`&2`;`&2`;`&2 * h0`]
    | _ ->  failwith "make0" in
  let s = match j with
    0 -> [`&2`;`&2 * h0`]
    | 1 -> [`&2 * h0`;`&2`]
    | _ -> failwith "make0 j" in
  let t = r @ s in
{
id = Printf.sprintf "PQFYWHW B %d %d" i j;
doc = "Pentagons with two flats do not exist.  When $y_{15}=y_{45}=2$ and
  y_{34} = 2h_0, then the lines $\\{\\v_2,\\v_3\\}$ and $\\{\\v_4,\\v_5\\}$
are parallel and the dihedral inequality is sharp.
  % The sharp case is i=3, j=0.
The constants $d(5,0)<d(4,1)$.  We prove the stronger inequality with $d(4,1)$.
    ";
tags = (if(i+j=0) then [Tex] else []) @ [Flypaper;Eps 1.0e-8;Penalty(1.0,50.0)];
ineq = mk_tplate templateB t;
};;


map (fun (i,j) -> add  (make0 i j)) [(0,0);(1,0);(2,0);(3,0);(0,1);(1,1);(2,1);(3,1)];;

addtex(Section,"Local Fan","hexagons");;

add  {
id = "GYQVFXJ 6276701321";
doc = "
  Assume $r+s\\ge 4$.
 An edge of $E\\setminus S$ that is not at a flat node
  has length $2$.
  (We use \\case{flat~exists} to show that the edge is adjacent to one $b$ of
  length at least $2h_0$.)  Then let $c$ be the diagonal.
 % $a$ is the edge being deformed, $c$ is the diagonal.
 % $b$ is an adjacent of length at least $2h_0$.
 % added June 13, 2010. to help reduce the number of cases for pentagons and hexagons.
 This inequality was originally designed for hexagons, but it should help with pentagons too.
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (&2 / h0, a, &2 * h0);
  (&2 , b, &4);
  (&2, c, &4)
  ]
   (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

add  {
id = "GYQVFXJ 7755764695";
doc = "
If a diagonal is sufficiently long (at least $3.7$), then the two edges next to
an isolated flat will be as short as possible.  This lemma assumes the reduction
of \\ineq{GYQVFXJ 6276701321} to make the adjacent edge satisfy $b\\le 2$.
 % The diagonal condition holds  arc(2,2,3.7) < 2.435 < arc(2h0,2h0,2)3
 ";
tags = [Flypaper;Tex;Eps 1.0e-8];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.9, a, #3.93);
  (&2/h0 , b, &2);
  (#3.7, c, &4)
  ]
   (
let num1 = -- (&4 * (((a pow 4) * e1) + ((&8 * (((b pow 2) + ((-- &1) * (c pow 2))) * (e2 
+ ((-- &1) * e3)))) + ((-- &1) * ((a pow 2) * ((&16 * e1) + ((((-- &8) + (b 
pow 2)) * e2) + (((-- &8) + (c pow 2)) * e3)))))))) in
     num1 > &0)`;
};;

addtex(Comment,"",
  "
  Nongeneric fans can be found in the closure of some of the families of hexagons.
  Some of the calculations can become singular at these nongeneric fans.  In particular,
  the dihedral angle formula can contain a term $0/0$.  

  It follows from the definition of $\\tau$ that on hexagons:
  \\[
  \\tau \\ge \\sum \\op{azim}(x) - 4 (\\pi + \\sol_0) = \\sol - 4\\sol_0,
  \\]
  where $\\sol$ is the solid angle of the local fan.  If $\\sol>d(6,0) + 4\\sol_0$,
  then the desired estimate on $\\tau$ holds.

  Consider the degenerate situation where two nodes $\\v$ and $\\w$ of a
  hexagon  are nearly
  parallel, so that 
  \\[
  \\arc_V(\\orz,\\v,\\w) \\approx \\pi.
  \\]  
  Assume that there are two flat nodes.
  Let $\\alpha(\\v)$ and $\\alpha(\\w)$ be the azimuth angles at $\\v$ and $\\w$.
  Let $\\beta,\\beta'$ be the azimuth angles at the two other nonflat nodes. 
  Assume that each edge satisfies $\\arc_V(\\orz,\\v_i,\\v_{i+1})\\le \\pi/3$. 
  If we have
  \\begin{equation}\\label{eqn:alpha}
  \\alpha(\\v)\\ge 1.55,\quad
  \\alpha(\\w)\\ge 1.55,\quad
  \\beta\\ge \\pi - 0.068,\quad
  \\beta'\\ge\\pi - 0.068,
  \\end{equation}
  then the solid angle is greater than $d(6,0)+4\\sol_0$ as desired, so that the
  main esimate holds.

  We claim that if \\eqref{eqn:alpha} fails, then 
  \\begin{equation}\\label{eqn:308}
  \\arc_V(\\orz,\\v,\\w) < \\arc(2,2,3.9985).
  \\end{equation}
  This claim has two cases up to symmetry.  First assume that $\\alpha(\\v)<1.55$.
  In this case, \\ineq{GYQVFXJ 4417380956} shows that some node $\\u$ adjacent
 to $\\v$ satisfies $\\normo{\\v}\\ge 2.1$.  It follows that
  \\[
  \arc_V(\\orz,\\v,\\w) \le \\arc{2,2.1,2)2+\\arc(2,2,2) < \\arc(2,2,3.9985).
  \\]


  In the other case of the claim, we may assume that $\\beta < \\pi - 0.068$.
  This is proved in \\ineq{GYQVFXJ~7667414054}.
  
  From \\eqref{eqn:308}, it follows that the projections $\\v^*$ and $\\w^*$ of
  $\\v$ and $\\w$ to the unit sphere satisfy $2\\norm{\\v^*}{\\w^*} < 3.9985$,
  because
  \\[
   3.08681 < \\arc(2,2,3.9985).
  \\]
  The bound $3.9985$ is used in some of the inequalities that follow so that we can
  avoid the nongeneric behavior at $4$.
  ");;

add  {
 id = "GYQVFXJ 4417380956";
 doc = "The dihedral angle of a simplex is greater than $1.55$ if various edge conditions
  hold.";
 ineq = all_forall `ineq
  [(&2, y1, &2 * h0);
   (&2, y2, #2.1);
   (&2, y3, #2.1)
  ]
    (dih_y y1 y2 y3 (&2 * h0) (&2) (&2) > #1.55)`;
 tags = [Tex;Cfsqp;Flypaper];
};;

add  {
 id = "GYQVFXJ 7667414054";
 doc = "This is an upper bound of $3.9985$ on an edge of a simplex.  The monotonity
  of the dihedral angle as a function of the opposite edge is used.";
 ineq = all_forall `ineq
  [(&2 / h0,y5,&2);
   (&2 / h0,y6,&2 * sqrt(&3))
  ]
    (dih_y (&2) (&2) (&2) (#3.9985) y5 y6 > pi - #0.068)`;
 tags = [Tex;Cfsqp;Flypaper];
};;


(* Case hex A: v1...v6 with v2 v5 flat, diag = y14. *)
let template_hexA = `\y12 y2max y45 y5max diagmax. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,&2 *h0);
(&2,y5,y5max);
(&2,y6,&2 *h0);
(&2 *h0,diag,diagmax)
  ]
  (
    let y23 = y12 in
    let y56 = y45 in
    let y16 = &2 in
    let y34 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y46 = edge_flat y5 y4 y6       y56 y45 in 
       (taum y1 y3 y4 y34 diag y13 + flat_term y2 + 
         taum y4 y6 y1 y16 diag y46 + flat_term y5 > tame_table_d 6 0) \/
   (dih_y y1 y3 y4 y34 diag y13 + dih_y y1 y6 y4 y46 diag y16 <
          dih_y y1 y2 y6 (&2 * h0) y16 y12) \/
  ( dih_y y1 y3 y4 y34 diag y13 + dih_y y1 y6 y4 y46 diag y16 > pi) \/  
   (dih_y y6 y1 y4 diag y46 y16 < dih_y y6 y1 y5 (&2 * h0) y56 y16) \/    
   (dih_y y3 y1 y4 diag y34 y13 < dih_y y3 y2 y4 (&2 * h0) y34 y23) \/    
     (delta_y y1 y3 y4 y34 diag y13 < &0) \/
     (delta_y y4 y6 y1 y16 diag y13 < &0)  ))`;;

let make_hexA i  = 
  let r = match  i with
   0 ->  [`&2`;`&2 * h0`;`&2`;`&2 * h0`;`#3.9985`]
    |1 ->[`&2`;`&2 * h0`;`&2 * h0`;`&2`;`#3.7`]
    |2 ->[`&2 * h0`;`&2`;`&2 * h0`;`&2`;`#3.7`] 
    | _ ->  failwith "make_hexA" in
{
id = Printf.sprintf "GYQVFXJ hexA %d" i;
doc = "This inequality is the main hexagon inequality
  with two flat nodes $\\v_2$ $\\v_5$, at opposite vertices of the hexagon.
  This is an effective quadrilateral, with variables $y_1,\\ldots,y_6$ and diagonal
  $y_{14}$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item $y_{34}=y_{16}=2$.
  \\item if the diag $y_{14}$ is greater than $3.7$, 
      then $y_{12}=y_{23}=y_{45}=y_{56}=2$.   
  \\item $y_{14}\\le 3.9985$.
  \\item By symmetry, we can assume that $y_{12}\\le y_{56}$.
  \\end{enumerate}
  The reductions are justified by the preceding calculations.
  There are three cases, depending on whether the edges at $\\v_2$ and $\\v_5$
  are as short or as long as possible.
  ";
tags = (if (i=0) then [Tex] else []) @ [Flypaper;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexA r;
};;

map (fun i -> add (make_hexA i)) (0--2);;

(* case hex B with v2 v6 flat, diag=y35 *)

let template_hexB = `\y12 y2max y56 y6max. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,&2 *h0);
(&2,y5,&2 *h0);
(&2,y6,y6max);
(&2 *h0,diag,&2 * sqrt(&3))
  ]
  (
    let y23 = y12 in
    let y16 = y56 in
    let y34 = &2 in
    let y45 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y15 = edge_flat y6 y1 y5       y56 y16 in 
       (taum y1 y3 y5 diag y15 y13 + flat_term y2 + 
         taum y4 y3 y5 diag y45 y34 + flat_term y6 > tame_table_d 6 0)  \/
     (delta_y y4 y3 y5 diag y45 y34 < &0) \/
    (dih_y y1 y3 y5 diag y15 y13 < dih_y y1 y2 y6 (&2 *h0) y16 y12 )))`;;

let make_hexB i  = 
  let r = match  i with
   0 ->  [`&2`;`&2 * h0`;`&2`;`&2 * h0`]
    |1 ->[`&2`;`&2 * h0`;`&2 * h0`;`&2`]
    |2 ->[`&2 * h0`;`&2`;`&2 * h0`;`&2`] 
    | _ ->  failwith "make_hexB" in
{
id = Printf.sprintf "GYQVFXJ hexB %d" i;
doc = "This inequality is the main hexagon inequality
  with two flat nodes, at nodes $\\v_2$ and $\\v_6$.
  This is an effective quadrilateral with variables for the lengths $y_1,\\ldots,y_6$
  and the diagonal $y_{35}$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item $y_{34}=y_{45}=2$.
  \\item The diagonal bound $y_{35}\\le 2\sqrt3$ comes from 
       $\\arc(2,2,y_{34})+\\arc(2,2,y_{45})\\le 2\\pi/3$.
  \\end{enumerate}
  The reductions are justified by the preceding calculations.
  There are three cases, depending on whether the edges at $\\v_2$ and $\\v_6$
  are as short or as long as possible.
  ";
tags = (if (i=0) then [Tex] else []) @ [Flypaper;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexB r;
};;

map (fun i -> add (make_hexB i)) (0--2);;


let template_hexC = `\y12 y2max y34 y4max y56 y6max. (ineq
  [
(&2,y1,&2 *h0);
(&2,y2,y2max);
(&2,y3,&2 *h0);
(&2,y4,y4max);
(&2,y5,&2 *h0);
(&2,y6,y6max)
  ]
  (
    let y23 = y12 in
    let y45 = y34 in
    let y16 = y56 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y35 = edge_flat y4 y3 y5       y45 y34 in
    let y15 = edge_flat y6 y1 y5       y56 y16 in
       (taum y1 y3 y5 y35 y15 y13 + flat_term y2 + 
         flat_term y4 + flat_term y6 > tame_table_d 6 0) ))`;;

let make_hexC i  = 
  let short = [`&2`;`&2*h0`] in
  let long = [`&2*h0`;`&2`] in 
  let r = match  i with
   0 ->  short @ short @ short
    |1 ->short @ short @ long
    |2 ->short @ long @ long
    | _ ->  failwith "make_hexC" in
{
id = Printf.sprintf "GYQVFXJ hexC %d" i;
doc = "This inequality is the main hexagon inequality
  with three flat nodes, at nodes $\\v_2$, $\\v_4$, and $\\v_6$.
  This is an effective triangle, with variables $y_1,\\ldots,y_6$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item Symmetry is used to make $y_{12}\\le y_{34}\\le y_{56}$.
  \\item Not all edges are long, because $\\arc(2,2h0,2h0)6 > 2\\pi$, which
   is contrary to the perimeter estimate.
  \\end{enumerate}
  There are three cases, depending on whether the edges at the flat nodes 
  are as short or as long as possible.
  This case may have numerical instabilities when the perimeter is  $2\\pi$.
  ";
tags = (if (i=0) then [Tex] else []) @ [Flypaper;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexC r;
};;

map (fun i -> add (make_hexC i)) (0--2);;

(* next hex D, adjacent flats *)

let template_hexD = `\y2min y2max y3min y3max. (ineq
  [
(&2,y1,&2 *h0);
(y2min,y2,y2max);
(y3min,y3,y3max);
(&2,y4,&2 *h0);
(&2,y5,&2 *h0);
(&2,y6,&2 *h0)
  ]
  (
    let y12 = &2 in
    let y23 = &2 in
    let y34 = &2 in
    let y45 = &2 in
    let y56 = &2 in
    let y16 = &2 in
    let y13 = edge_flat y2 y1 y3       y23 y12 in
    let y14 = edge_flat y3 y1 y4       y34 y13 in
    let y46 = edge_flat y5 y4 y6       y56 y45 in
       (taum y1 y4 y6 y46 y16 y14 + flat_term y2 + 
         flat_term y3 + flat_term y5 > tame_table_d 6 0) \/
      (y14 > #3.9985 ) \/
     (dih_y y1 y4 y6 y46 y16 y14 < dih_y y1 y2 y6 (&2 * h0) y16 y12) ))`;;

let make_hexD i  = 
  let full = [`&2`;`&2*h0`] in
  let short = [`&2`;`&2`] in
  let long = [`&2*h0`;`&2 *h0`] in 
  let r = match  i with
   0 ->  full @ short
    |1 ->full @ long
    |2 ->short @ full
    |3 -> long @ full
    | _ ->  failwith "make_hexD" in
{
id = Printf.sprintf "GYQVFXJ hexD %d" i;
doc = "This inequality is the main hexagon inequality
  with three flat nodes, at nodes $\\v_2$, $\\v_3$, and $\\v_5$.
  This is an effective triangle with variables $y_1,\lldots,y_6$.
  Some reductions are used beyond those mentioned in the flypaper.
  \\begin{enumerate}
  \\item Contractions of edges make $y_{12}=\\cdots=y_{56}=y_{16}=2$.
  \\item The case $y_{14}\\ge 3.9985$ has been done by direct argument above.
  \\end{enumerate}
  By \\case{flat~extremal}, either $y_2$ or $y_3$ is extremal.
  There are four cases, depending on which edge $y_2$ or $y_3$ is extremal,
  and whether it is short or long.
  ";
tags = (if (i=0) then [Tex] else []) @ [Flypaper;Penalty(5.0,50.0)];
ineq = mk_tplate template_hexD r;
};;

map (fun i -> add (make_hexD i)) (0--3);;


addtex (Section,"Tame Hypermap","");;


(* interval arithmetic bounds DART 3 *)

let I_5735387903=
 all_forall `ineq
    [ 
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#2.0,y4,&2 * h0);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0)]
   (dih_y y1 y2 y3 y4 y5 y6 > #0.852)`;;

main {
  id = "5735387903";
  doc="";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_5735387903;
};;
 
let I_5490182221=
 all_forall `ineq
    [ 
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#2.0,y4,&2 * h0);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0)]
   (dih_y y1 y2 y3 y4 y5 y6 < #1.9)`;;  (* changed from #1.893, thales, 2010-02-28 *)

main {
  id = "5490182221";
  doc="";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_5490182221;
};;

let I_2570626711=
 all_forall `ineq
    [ 
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (&2 * h0,y4,&2 * h0);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0)]
   (dih_y y1 y2 y3 y4 y5 y6 > #1.15)`;;

main {
  id = "2570626711";
  doc="";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_2570626711;
};;


let tame_hypermap_list = 
  let CDTETAT_list = [I_5735387903;I_5490182221;I_2570626711] in
  CDTETAT_list;;


let I_3296257235=
 all_forall `ineq
    [ 
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#2.0,y4,&2 * h0);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0)]
 (taum y1 y2 y3 y4 y5 y6 + #0.626 * dih_y y1 y2 y3 y4 y5 y6 - #0.77 > #0.0)`;;


main {
  id = "3296257235";
  doc="";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_3296257235;
};;


let I_8519146937=
 all_forall `ineq
    [ 
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#2.0,y4,&2 * h0);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0)]
( taum y1 y2 y3 y4 y5 y6 -  #0.259 * dih_y y1 y2 y3 y4 y5 y6 + #0.32 > #0.0)`;;

main {
  id = "8519146937";
  doc="";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_8519146937;
};;

let I_4667071578=
 all_forall `ineq
    [ 
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#2.0,y4,&2 * h0);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0)]
( taum y1 y2 y3 y4 y5 y6 -  #0.507 * dih_y y1 y2 y3 y4 y5 y6 + #0.724 > #0.0)`;;

main {
  id = "4667071578";
  doc="";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_4667071578;
};;

(* interval arithmetic bounds DART4 *)

let I_7043724150=
 all_forall `ineq
    [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (&2 * h0,y4,#4.37);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2 * h0);
      (#2.0,y9,&2 * h0)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9 + #4.72 * dih_y y1 y2 y3 y4 y5 y6 - #6.248 > #0.0) \/
  (delta_y y4 y9 y6 (&2 * h0)    y5 y8 < &0))`;;

main {
  id = "7043724150";
  doc="We can use dimension reduction methods to reduce the number of variables.";
(*
   The bounds on the four vertices $\\v_1,\\ldots,\\v_4$ gives
   the top simplex bound 
   \\[
   y_4 \\le \\op{edge\\_flat}(2h_0,2h_0,2h_0,2h_0,2h_0) < 4.37
   \\
*)
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_7043724150;
};;

let I_6944699408=
 all_forall `ineq
    [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (&2 * h0,y4,#4.37);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2 * h0);
      (#2.0,y9,&2 * h0)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9 + #0.972 * dih_y y1 y2 y3 y4 y5 y6 -  #1.707 > #0.0) \/  (delta_y y4 y9 y6 (&2 * h0)    y5 y8 < &0))`;;

main {
  id = "6944699408";
  doc=" ";
  tags = [Cfsqp;Tablelp;Tex];
  ineq = I_6944699408;
};;

let I_4240815464=
 all_forall `ineq
    [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (&2 * h0,y4,#4.37);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2 * h0);
      (#2.0,y9,&2 * h0)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9 + 
   #0.7573 *dih_y y1 y2 y3 y4 y5 y6 - #1.433 > #0.0) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < &2 * h0 ) \/
( delta_y y1 y2 y3 y4 y5 y6 < &0) \/
( delta_y y7 y2 y3 y4 y8 y9 < &0)) `;; (* constant 1.433 corrected 2010-06-14 *)

main {
  id = "4240815464";
  doc="";
  tags = [Cfsqp;Tablelp;Tex;Penalty(50.0,500.0)];
  ineq = I_4240815464;
};;

let I_3862621143=
 all_forall `ineq
    [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (&2 * h0,y4,#4.37);
      (#2.0,y5,&2 * h0);
      (#2.0,y6,&2 * h0);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2 * h0);
      (#2.0,y9,&2 * h0)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9 - #0.453 * dih_y y1 y2 y3 y4 y5 y6 +  #0.777 > #0.0) \/
 ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < &2 * h0 )  \/
( delta_y y1 y2 y3 y4 y5 y6 < &0) \/
( delta_y y7 y2 y3 y4 y8 y9 < &0)) `;;

main {
  id = "3862621143";
  doc="";
  tags = [Cfsqp;Tablelp;Tex;Penalty(500.0,500.0)];
  ineq = I_3862621143;
};;



end;;
