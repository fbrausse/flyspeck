(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Nonlinear                                                  *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2011-05-13                                                           *)
(* ========================================================================== *)


(* New test inequalities from May 2011.  Redo all the tameTableD calculations,
    together with associated nontriangular ad hoc LP estimates. 

    The three nontriangular ad hoc LP estimates are
   In head.mod:
   tauB4h 9620775909 apex4 tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8]
   tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,

   In body.mod:
   9563139965D, dart4_diag3_b, tau >= 0.467, quad, diags >= 3.

*)


(* This file does *not* treat the standard quad LP cases:
     ["3862621143";"4240815464";"6944699408";"7043724150"]
    which are proved by usual quad methods (with Dim_red_backsym option *)

let all_forall = Sphere.all_forall;;
let add = Ineq.add;;
let addtex = Ineq.addtex;;

addtex (Section,"Tame Table D","Deformation num1 and general facts");;


add
  {
idv="4828966562";
doc = "If  minor diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
           Added May 12, 2011.";
tags = [May2011;Cfsqp;Tex;Flypaper[];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, (&2 * h0) pow 2);
  ((&2/ h0) pow 2, b2, #3.01 pow 2);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;


add
{
  idv="1117202051";
  doc="Used to maintain nonreflexivity when making num1-deformations.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.0);
    (#3.01,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,&2)
  ]
(dih_y y1 y2 y3 y4 y5 y6 > pi / &2)`;
};;

add
{
  idv="4559601669";
  doc="Used to maintain nonreflexivity when making num1-deformations.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,&2);
    (&2,y3,&2);
    (#3.01,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(dih_y y1 y2 y3 y4 y5 y6 > pi / &2)`;
};;



add
{
  idv="6459846571";
  doc="upper bound on minor diagonal is 3.915 when top edges are 2.
     The bound on y4 comes from the triangle inequality.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,#4.52);
    (&2,y5,&2);
    (&2,y6,&2)
  ]
((y4 < #3.915) \/ 
  delta_y y1 y2 y3 y4 y5 y6 < &0
)`;
};;


add
{
  idv="2485876245";
  doc="Used to make matan approx in hex case (top diags 2).
   y4 bound 5.04 comes from the triangle inequality.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,#2.52);
    (#3.01,y5,#5.04);
      (&2,y6,#2.52)
  ]
(delta4_y y1 y2 y3 y4 y5 y6 > &0  \/
  delta_y y1 y2 y3 y4 y5 y6 < &0
)`;
};;





addtex (Section,"Tame Table D","Hexagons, top edges all 2");;

add
{
  idv="3269621315";
  doc="This is the main pure hexagon case with all top edges 2
   and all diagonals at least 3.01.
   TameTableD[6,0]=0.7578 has been replaced with 0.6.
   The hexagon is split by three minor diagonals forming a triangle.
   The center piece (weighted 1/3) is combined with each outer triangle.
   The 0.34 correction term averages to zero.

    In practice, this should be broken into 2 cases:
   (0) dih_y y7 .... <= pi/2, and delta allowed to tend to zero, and matan formulas.
   (1) dih_y y7 .... >= pi/2, with delta bounded from zero.";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (#3.01,y5,#3.915);
      (#3.01,y6,#3.915);
    (&2,y7,#2.52);
   (&2,y8,&2);
   (&2,y9,&2)
  ]
    ((taum y1 y2 y3 y4 y5 y6 )/ &3 + taum y7 y2 y3 y4 y9 y8
 + #0.34 * (&2 * y4 - y5 - y6)   >  (#0.6)/ &3   
 \/ y_of_x eulerA_x y1 y2 y3 y4 y5 y6 < &0 
\/ delta_y y7 y2 y3 y4 y9 y8 < &0
)`;
};;

(*
This is close enough.  Modify the D[6,0] constant.
0.339 -> -0.0019
0.34 ->  -0.001146
0.341 -> -0.0015386
*)

addtex (Section,"Tame Table D","Pentagons, all top edges 2");;

addtex(Comment,"",
  "
  The context is a pentagon whose top edges are all 2.
  The diagonals are all at least 3.01.
  Since tameTableD[5,0] < 0.696, the tameTableD[5,0] bound is a corollary of 0.696.
  Thus, it is enough to treat 0.696.

  The general strategy is that there must exist a triangle with
  minor diag <= 3.63 and angle <= 2.355.
    The constant 2.355 comes from the tau calculation:
    Solve[5x - 3(Pi + sol0) == 0.696, x]  (* gives 2.354... *)
  The constant 3.63 comes by an ineq that follows.
  This triangle is cut from the pentagon, leaving a quad case that can be done directly.
  The lower bound of tau on the cut triangle is 0.
  ");;

add
{
  idv="8655116269 a";
  doc="pentagon case, clipped smallest angled side triangle.
   If dih clipped < 2.355, then y4 < 3.63.
  ";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.63,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
(dih_y y1 y2 y3 y4 y5 y6 > #2.355 )\/ 
(delta4_y y1 y2 y3 y4 y5 y6 < &0) )`;
};;


add {
  idv="8655116269 b";
  doc="pentagon case, clipped smallest angled side triangle.
   Case dih > pi/2.
   If dih clipped < 2.355, then y4 < 3.63.
   The dih_y > #2.355 disjunct has been linearized, using delta4 < 0.
  ";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.63,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
(  (let tan_sq_lower = &1 in 
    delta4_squared_y y1 y2 y3 y4 y5 y6 * tan_sq_lower > 
    &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 ) \/ 
(delta4_y y1 y2 y3 y4 y5 y6 > &0) \/

  (delta_y y1 y2 y3 y4 y5 y6 < &0)  ))`;
};;


add
{
  idv="3193572903 a";
  doc="pentagon case, clipped smallest angled side triangle.
   If all dih > 2.355, then tau >= 5 (2.355) - 3 (pi + sol0) > 0.696 =largest pent constant";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  > #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (delta4_y y1 y2 y3 y4 y5 y6 < &0))`;
};;



add
{
  idv="3193572903 b";
  doc="pentagon case, clipped smallest angled side triangle.
   Case dih > pi/2.
   If all dih > 2.355, then tau >= 5 (2.355) - 3 (pi + sol0) > 0.696 =largest pent constant";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  > #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
(delta4_y y1 y2 y3 y4 y5 y6 > &0) \/
(let tan_sq_lower = &1 in 
    delta4_squared_y y1 y2 y3 y4 y5 y6 * tan_sq_lower > 
    &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 ) )`;
};;


add
{
  idv="2050588100 a";
  doc="pentagon case, clipped smallest angled side triangle.
   Here is an additional linear constraint on edge lengths.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( (y4 - #3.2) < #0.55 * (y2 + y3 - &4)) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
(delta4_y y1 y2 y3 y4 y5 y6 < &0) )`;
};;

add
{
  idv="2050588100 b";
  doc="pentagon case, clipped smallest angled side triangle.
   Case dih > pi/2.
   Here is an additional linear constraint on edge lengths.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( (y4 - #3.2) < #0.55 * (y2 + y3 - &4)) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
(delta4_y y1 y2 y3 y4 y5 y6 > &0) \/
(let tan_sq_lower = #1.0047 in 
    delta4_squared_y y1 y2 y3 y4 y5 y6 * tan_sq_lower > 
    &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 ) 
 )`;
};;


add
{
  idv="7348498949";
  doc="pentagon case, quad piece, cut along y9";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.915);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.63)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > #0.696) \/
  ((y9 - #3.2) > #0.55 * (y2 + y7 - &4)) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

addtex (Section,"Tame Table D","Pentagons table[4,1]");;

addtex(Comment,"",
"
The context is a pentagon with one edge in the range [2.52,3.01], obtained
by a cut on a hexagon.  
All diagonals are at least 3.01.
All noncut top edges are 2.
This constant appears directly in the ad hoc LP inequalities
and as part of the tameTableD[6,0] calculation.
");;

(*
tameTableD[4,1]=0.6548 = tameTableD[6,0]-tameTableD[2,1].
*)

add
  {
idv="6843920790";
doc = "In a pentagon with one long edge, we can contract the long edge to 2.52, 
   or even to 2, using 2 diags.
   The constant 2.38 < 3.01/h0.";
tags = [May2011;Cfsqp;Tex;Flypaper[];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, #3.01 pow 2);
  (#2.38 pow 2, b2, #15.53);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2  > &0) ) `;
};;


addtex(Comment,"",
"
 We continue to contract the long edge, even make it less than 2.52,
    until it reaches 2, in which case (0) the 0.696 estimate takes over.

    (1) Or until a diagonal hits 3.01, where  the long edge lands in the  triangle,
   leaving a quad with top edges 2,2,2,3.01.  The shortest edge of the quad
   is given by Solve[Delta[x,2,2,x,2,3.01]==0,x], which implies x <= 3.166.
   Cut along this diagonal to triangulate.

    (2) Or until two diagonals hit 3.01, triangulating the pent. 
    There are two diagonals, because after the first hits and is fixed at 3.01 
   assuming the long edge lands in the quad, 
    we can continue contraction on the quad.

  Note: if a flat node develops (with some edge > 2), 
  the usual tricks can be used to dissolve it.
");;


add
{
  idv="3603097872";
  doc="clipped triangle in pentagon case (4,1).  
    In the application to tameTableD[4,1], we have y4=3.01, y6=2, 
   Ineq is slightly generalized for later use.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (sqrt8,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  - #0.1 * (#3.01 - y4) > #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="5026777310";
  doc="pentagon case, clipped A-piece triangle.
   prove constraint on edge lengths.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.01);
    (#3.01,y5,#3.01);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 4 1 - &2 * #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="6438897006";
  doc="pentagon case (4,1), quad piece, cut along y9";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.915);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > tame_table_d 4 1 -  #0.11) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;



addtex (Section,"Tame Table D","Ad hoc quadrilaterals");;

addtex(Comment,"",
"
Let's start with the ad hoc inequality:  9563139965D.
    By top edge contraction arguments, we may assume that 
    (0) all top edges have length 2, or 
    (1) both diagonals have length 3 (by contracting in different ways).
    The first case (0) is impossible by geomeric considerations: 
    edges=2 ==> some diagonal <= sqrt8.
    So both diagonals have length 3.
    This has been completely solved in a series 9563139965D in ineq.hl.
");;


addtex(Comment,"",
"Next the ad hoc LP inequality in head.mod :
    tauB4h 9620775909. tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8].
  This comes from a pentagon that has a 'flat quarter'.

  Case 1: a diagonal < 3.01.  Here we make no deformations.  We cut 
  the quad into two triangles.

   Case 2: both diags > 3.01.  In this case we bound the shorter diagonal.
    Solve[Delta[x, 2, 2, x, 2, sqrt8] == 0, x] // N gives x <= 3.108
 *)
");;




add
{
  idv="5405130650";
  doc=" 0.477 estimate, clipped A-piece triangle.
   Case 1.
   We reuse the other cut triangle (bound 0.11) from above.
   We have not done it here, but we could extremize edge y5, y6.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (sqrt8,y4,#3.01);
    (#2.52,y5,sqrt8);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y4) > #0.477 -  #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

add
{
  idv="8063547910";
  doc="0.477 bound, quad case both diags > 3.01, y9 long.
    In this case top edge deformations have been fully applied,
     so that all short top edges are 2.";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.108);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#2.52,y9,sqrt8)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > #0.477) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

addtex(Comment,"",
"
   Now third ad hoc LP inequality:  Quad 0.696. 
   tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,
   It drops to a quad case if some diag of pent has length <= 3.01 and a cut is made.
   Contract top edges of quad until 3 have length 2.
   Short diag: Solve[Delta[x,2,2,x,2,3.01]==0,x]//N, gives x <= 3.166
");;


add
{
  idv="4680581274";
  doc="quad case both diags > 3.01, y9 long";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (sqrt8,y9,#3.01)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

addtex (Section,"Tame Table D","Quadrilaterals (non ad hoc)");;

addtex(Comment,"",
"
This is the calculation of quadrilaterals (non ad hoc). TameTableD[r,s],
 for (r+s=4): (4,0), (3,1) (2,2).
By triangulating cases away, we may assume that both diagonals are => 3.01.
If there is adjacent short edges [2,2.52], we may deform so that both =2.
We can extremize the long edges [2.52,3.01].

In the case (4,0), when top edges are 2, some diagonal < 3.01, so nothing to do here.

In the case (3,1), there are two cases, depending on y9.  Both can be eliminated
without further interval calculations as follows:
  In fact,
  Solve[Delta[x, 2, 2, x, 2, 2.52] == 0, x], gives x< 3.01, so one is  impossible.
  Solve[Delta[x,2,2,x,2,3.01]==0,x], gives x < 3.166.  This domain
  was already encountered in the Quad 0.696 case.
  Since tameTableD[3,1] < 0.696 - 0.11, this is covered by a previous quad ineq.

Now consider (2,2). Six cases total up to symmetry.
  factor of 2 whether the long edges are adjacent.
  factor of 3 the number {0,1,2} of the long edges that are minimal 2.52.
  Also, the shorter diagonal can cut in two distinguishable ways, if long edges are adjc.

  Here are the shorter diagonal upper bounds in the six cases:
Solve[Delta[x,2.52,2,x,2.52,2]==0,x] (* < 3.22 *)
Solve[Delta[x,2.52,2,x,2,2.52]==0,x] (* < 3.18 *)

Solve[Delta[x,3.01,2,x,2.52,2]==0,x] (* < 3.41 *)
Solve[Delta[x,3.01,2,x,2,2.52]==0,x] (* < 3.33 *)

Solve[Delta[x,3.01,2,x,3.01,2]==0,x] (* < 3.62 *)
Solve[Delta[x,3.01,2,x,2,3.01]==0,x] (* < 3.47 *)

In cases where the two top long edges are split
by the diagonal, we can triangulate using the following triangle calcs.

This reduces everything to three quad cases, where the long top edges are y8,y9.

");;


add
{
  idv="3456082115";
  doc=" tameTableD[2,2] 0.477. 
     Triangulate quad with diagonal y4.
     Use if both long edges are 2.52";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.22);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2) 
 )`;
};;



add
{
  idv="7720405539";
  doc=" tameTableD[2,2] 0.477. 
 Triangulate quad with diagonal y4.
 Use if exactly one long edge is 2.52.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.41);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 - #0.2) 
 )`;
};;


add
{
  idv="2739661360";
  doc=" tameTableD[2,2] 0.477. 
  Triangulate quad with diagonal y4.
  Use if exactly one long edge is 3.01";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.41);
    (#3.01,y5,#3.01);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 + #0.2) 
 )`;
};;

add
{
  idv="9269152105";
  doc=" tameTableD[2,2] 0.477. 
  Triangulate quad with diagonal y4.
  Use if both long edges are 3.01.
  If diag <= 3.41, then it falls into the previous case.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.41,y4,#3.62);
    (#3.01,y5,#3.01);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 ) 
 )`;
};;



add
{
  idv="4033589145";
  doc="quad case both diags > 3.01, y8, y9 long";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.18);
      (#2.0,y5,&2);
       (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
     (#2.52,y8,#2.52);
      (#2.52,y9,#2.52)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > tame_table_d 2 2) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="8035675159";
  doc="quad case both diags > 3.01, y8, y9 long";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.33);
      (#2.0,y5,&2);
       (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
     (#2.52,y8,#2.52);
      (#3.01,y9,#3.01)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > tame_table_d 2 2) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="3916387088";
  doc="quad case both diags > 3.01, y8, y9 long";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.47);
      (#2.0,y5,&2);
       (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
     (#3.01,y8,#3.01);
      (#3.01,y9,#3.01)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > tame_table_d 2 2) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;



addtex (Section,"Tame Table D","Triangles");;


addtex(Comment,"",
"
If the cut edge is between [sqrt8,3.01], the triangle (2,1) has tau < tame_table_d 2 1.
Nevertheless tau > 0.11
We must compensate by putting an extra penalty term (tame_table_d 2 1 - 0.11)
 in the other pieces.

Ad hoc LP.  The case.
tauB4h 9620775909 apex4 tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8]
   This can split into a triangle (2,1) [2.52,sqrt8][sqrt8,3.01] and a triangle (1,2).
   In this case we run one extra triangle calc, 
   replace tame_table_d entries with 0.477 - 0.11.
   
tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,
   This will give an A-piece with [sqrt8,3.01][sqrt8,3.01].  need 0.696 - 2 0.11.

9563139965D, dart4_diag3_b, tau >= 0.467, quad, diags >= 3.
   No triangle occurs here.  No diagonal drawn.

");;

add
{
  idv="6029974545";
  doc="triangle 1,2 ad hoc  case.
    If the y4 edge is extremal at 2.52, we get at least tame_table_d[0,3] > 0.477-0.11.
     So that case folds into the [0,3] case.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,sqrt8);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y6) > #0.477 - #0.11          
 )`;
};;

add
{
  idv="5766053833";
  doc="triangle 1,2, ad hoc 0.696 case ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,#3.01);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y5)  + #0.1 * (#3.01 - y6) > 
   #0.696 - &2 * #0.11
 )`;
};;

add
{
  idv="7881254908";
  doc="triangle 1,2, ad hoc 0.696 case LP";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (sqrt8,y5,#3.01);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6   >    #0.696 - &2 * #0.11
 )`;
};;

addtex(Section,"Tame Table D","Triangle (non ad hoc)");;

add
{
  idv="1107929058";
  doc="triangle 2,1";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 2 1
 )`;
};;

add
{
  idv="7645170609";
  doc="triangle 2,1";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 2 1
 )`;
};;

(* skip 2,1 long edge 3.01 *)

(* 1,2 cases short-long patterns on y5,y6   aa, ab, ac,  bb, bc,    cc.
*)

add
{
  idv="1532755966";
  doc="triangle 1,2-aa";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2
 )`;
};;

add
{
  idv="7097350062";
  doc="triangle 1,2-ab";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + (tame_table_d 2 1 - #0.11)          
 )`;
};;

add
{
  idv="2900061606";
  doc="triangle 1,2-ac";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + (tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="2200527225";
  doc="triangle 1,2-bb";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,sqrt8);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="3106201101";
  doc="triangle 1,2-bc";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,sqrt8);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;

add
{
  idv="9816718044";
  doc="triangle 1,2-cc";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;

(* 0,3 patterns: extremize all the way from 2.52 to 3.01 without stopping at sqrt8.
    The case is given by the number of top edges {0,1,2,3} of length 3.01
*)

add
{
  idv="1080462150";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#2.52,y5,#2.52);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="4143829594";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#2.52,y5,#2.52);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="7459553847";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;

add
{
  idv="4528012043";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.01);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


(* end;; *)
