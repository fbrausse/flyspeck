(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Nonlinear                                                  *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2011-05-13                                                           *)
(* ========================================================================== *)


(* New test inequalities from May 2011.  Redo all the tameTableD calculations,
    together with associated nontriangular ad hoc LP estimates. 

    The three nontriangular ad hoc LP estimates are
   In head.mod:
   tauB4h 9620775909 apex4 tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8]
   tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,

   In body.mod:
   9563139965D, dart4_diag3_b, tau >= 0.467, quad, diags >= 3.

*)


(* This file does *not* treat the standard quad LP cases:
     ["3862621143";"4240815464";"6944699408";"7043724150"]
    which are proved by usual quad methods (with Dim_red_backsym option *)

let add = Parse_ineq.execute_cfsqp;;

let all_forall = Sphere.all_forall;;
let add = Ineq.add;;
let ignore = Ineq.ignore;;
let addtex = Ineq.addtex;;



(* for sphere.hl *)
(* intended for use when dih1 > pi/2, dih2, dih3 < pi/2, tau_residual <0,
    Then tau_lowform_x is a lower bound on tau (that is graceful when delta->0).
*)

let rhazim_x_div_sqrtdelta_posbranch = new_definition
 `rhazim_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6 =
   rho(sqrt(x1)) * dih_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6`;;

let rhazim2_x_div_sqrtdelta_posbranch = new_definition
 `rhazim2_x_div_sqrtdelta_posbranch =  rotate2 rhazim_x_div_sqrtdelta_posbranch`;;

let rhazim3_x_div_sqrtdelta_posbranch = new_definition
 `rhazim3_x_div_sqrtdelta_posbranch  = rotate3 rhazim_x_div_sqrtdelta_posbranch`;;

(*
let tau_residual_x  = new_definition
 `tau_residual_x x1 x2 x3 x4 x5 x6 = 
     rhazim_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6
+     rhazim2_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6
+     rhazim3_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6`;;


let tau_nullform_x = new_definition
  `tau_nullform_x x1 x2 x3 x4 x5 x6 =
    rho (sqrt x1) * pi - (pi + sol0) + 
    sqp(delta_x x1 x2 x3 x4 x5 x6) * tau_residual_x x1 x2 x3 x4 x5 x6`;;
*)

let tau_lowform_x = new_definition
  `tau_lowform_x x1 x2 x3 x4 x5 x6 =
  (let d = delta_x x1 x2 x3 x4 x5 x6 in
    (rho (sqrt x1) * pi - (pi + sol0) + 
    sqp d * rhazim_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6 +
    sqn d * rhazim2_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6 +
    sqn d * rhazim3_x_div_sqrtdelta_posbranch x1 x2 x3 x4 x5 x6))`;;

(* fake functions temporary use *)
let tau_m_diff_quotient = new_definition
  `tau_m_diff_quotient (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real)  = &0`;;

let mdtau = new_definition
  `mdtau (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real)  = &0`;;


let tau_m_diff_quotient2 = new_definition
  `tau_m_diff_quotient2 (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real)  = &0`;;

let mdtau_y_LC = new_definition
`mdtau_y_LC (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real) = &0`;;

let mdtau2_y_LC = new_definition
`mdtau2_y_LC (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real) = &0`;;

let mdtau2 = new_definition
  `mdtau2 (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real)  = mdtau2_y_LC y1 y2 y3 y4 y5 y6`;;

let delta_y_LC = new_definition
`delta_y_LC (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real) = &0`;;


addtex (Section,"Tame Table D","Deformation num1 and general facts");;

addtex(Comment,"2065952723",
"
%See Mathematica numerical calculation.
% old idv: eqn:gg'' calc:Lexell.
The derivatives have been computed in Mathematica and converted to
HOL format.  
This second derivative calculation shows that
  function $\\tau$ does not have a interior local minimum. 

Let
\\[ 
g(s;a,b,c,e_1,e_2,e_3) = \\sum_{i=1}^3 \\dih_i(2,2,2,a+s,b,c) e_i,
\\] 
where $\\dih_i$ is given by Definition~\\ref{def:tau}.
Note linearity in $e_i$, so that extremality appears at endpoints for $e_i$
in $e_i\\in\\leftclosed1,1+\\sol_0/\\pi\\rightclosed$. Hence various
calculations drop to three dimensions.

Let $\\Delta = \\Delta(4,4,4,a^2,b^2,c^2)$.
Let primes denote derivatives with respect to the variable $s$.
Assume $a,b,c\\in\\leftclosed2/\\hm,4\\rightclosed$.
The idea is to show on various domains:
\\begin{equation}\\label{eqn:calc:Lexell}
(16-a^2) ^2 a^2(  \\Delta (g'(0;a,b,c,e_1,e_2,e_3))^2 
- 0.01\\Delta^{3/2}g''(0;a,b,c,e_1,e_2,e_3))\\ge 0.
\\end{equation}
(The factors of $\\Delta$ clear the denominator.)
The variables $a,b,c$ appear in even powers.
");;

add
  {
idv = "2065952723 A1";
doc = "This is the case that $a_2 \\le 15.53$.
   $a_2$ upper bound changed on 2011-Jan-21. 
   If larger than 15.53, it must be in a hexagon,  and two consecutive flat vertices.  
 ";
tags = [Flypaper["UPONLFY"];Tex]; 
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, #15.53);
  ((&2 / h0) pow 2, b2, &4 pow 2);
  ((&2 / h0) pow 2, c2, &4 pow 2)
  ]
   (num_combo1 e1 e2 e3 a2 b2 c2 > &0) `;
};;


add
  {
idv="4828966562";
doc = "If  minor diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
           Added May 12, 2011.";
tags = [May2011;Cfsqp;Tex;Flypaper[];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, (&2 * h0) pow 2);
  ((&2/ h0) pow 2, b2, #3.01 pow 2);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;

add
  {
idv="8964099283";
doc = "If  diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
          This is the case of three long edges.
           Added May 16, 2011.";
tags = [May2011;Cfsqp;Tex;Flypaper[];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.38 pow 2, a2, #3.01 pow 2);
  (#2.38 pow 2, b2, #3.01 pow 2);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;

add
  {
idv="5512912661";
doc = "If  diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
           Added May 16, 2011.";
tags = [May2011;Cfsqp;Tex;Flypaper[];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.38 pow 2, a2, #3.01 pow 2);
  ((&2) pow 2, b2, #2.52 pow 2);
  ((#3.15 /h0) pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;


add
{
  idv="1117202051";
  doc="Used to maintain nonreflexivity when making num1-deformations.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.0);
    (#3.01,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,&2)
  ]
(dih_y y1 y2 y3 y4 y5 y6 > pi / &2)`;
};;

add
{
  idv="4559601669";
  doc="Used to maintain nonreflexivity when making num1-deformations.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,&2);
    (&2,y3,&2);
    (#3.01,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(dih_y y1 y2 y3 y4 y5 y6 > pi / &2)`;
};;



add
{
  idv="6459846571";
  doc="upper bound on minor diagonal is 3.915 when top edges are 2.
     The bound on y4 comes from the triangle inequality.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,#4.52);
    (&2,y5,&2);
    (&2,y6,&2)
  ]
((y4 < #3.915) \/ 
  delta_y y1 y2 y3 y4 y5 y6 < &0
)`;
};;


add
{
  idv="2485876245";
  doc="Used to make matan approx in hex case (top diags 2).
   y4 bound 5.04 comes from the triangle inequality.";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,#2.52);
    (#3.01,y5,#5.04);
      (&2,y6,#2.52)
  ]
(delta4_y y1 y2 y3 y4 y5 y6 > &0  \/
  delta_y y1 y2 y3 y4 y5 y6 < &0
)`;
};;


add
{
  idv="2428128897";
  doc=" delta=0 issues.
   VERY GOOD DELTA ISSUE RESOLVER
    Probably not needed now.
    If taum > 0.25, we can use the 'split' cases below to break off the skinny triangle.
    If taum <= 0.25 then delta4_y < -- #11.2, which we can then assume everywhere.
    The constant #11.2 is  nonoptimal, could use #11.2 or so.

    Actually, we can just use 4559601669, and settle for delta4 < 0, and drop this out.
    Then we don't need splits at all.
  ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (delta4_y y1 y2 y3 y4 y5 y6 < -- #11.2) \/
  ( taum y1 y2 y3 y4 y5 y6 > #0.25) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;


addtex (Section,"Tame Table D","Hexagons, top edges all 2.");;

add
{
  idv="4322269127";
  doc="taum 1st deriv test. 
   This shows that the first derivative of tau (wrt y1) is nonzero.  
  Thus the  optimal configuration has delta > 15 or (y1 minimal = 2)
   It is implemented in interval code, using locally constant structures (LC).";
  tags = [May2011;Tex;Disallow_derivatives];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( mdtau_y_LC y1 y2 y3 y4 y5 y6  > &0) \/
  ( mdtau_y_LC y1 y2 y3 y4 y5 y6  < &0) \/
  (delta_y_LC y1 y2 y3 y4 y5 y6 > &15) \/
  (delta_y_LC y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;

ignore
{
  idv="4322269127 cfsqp version";
  doc="taum 1st deriv test.  This is the cfsqp version of 4322269127.
    It is not to be proved, only used as numerical evidence.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( mdtau y1 y2 y3 y4 y5 y6 pow 2 > #0.47) \/
  (delta_y y1 y2 y3 y4 y5 y6 > &15) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;


add
{
  idv="5556646409";
  doc="taum 2nd deriv test.  This is a key inequality.
   It asserts that taum has no local minimum on the given domain.
   If the derivative is zero, then the second derivative is negative.
   By symmetry, wlog y2 < y3.";
  tags = [May2011;Tex;Disallow_derivatives;Widthcutoff 0.004];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (delta_y_LC y1 y2 y3 y4 y5 y6 < &15) \/
 (y2 < y3) \/
  (mdtau_y_LC  y1 y2 y3 y4 y5 y6  > &0) \/ 
  (mdtau_y_LC  y1 y2 y3 y4 y5 y6  < &0) \/ 
  (mdtau2_y_LC y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


ignore
{
  idv="5556646409 cfsqp version";
  doc="taum 2nd deriv test. Cfsqp version -- only for testing.";
  tags = [May2011;Cfsqp;Tex;Penalty(1500.0,5000.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (mdtau y1 y2 y3 y4 y5 y6 pow 2 > #0.004) \/
  (mdtau2 y1 y2 y3 y4 y5 y6 < -- #0.004) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &15)
 )`;
};;



add
{
  idv="5132343267";
  doc="delta monotonicity.
   In the interval code for 5556646409,
   the interval implementation of delta_y_LC assumes this  monotonicity
    results.  This calculation is not cited explicitly in the code, but still needed.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( delta4_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;


add
{
  idv="7479785942";
  doc="delta monotonicity (for edge y2 and by symmetry y3).
   In the interval code for 5556646409,
   the interval implementation of delta_y_LC assumes various  monotonicity
    results.  This is among them.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( delta4_y y5 y3 y4 y2 y6 y1 > &0)
 )`;
};;




addtex (Section,"Tame Table D","Pentagons, all top edges 2");;

addtex(Comment,"",
  "
  The context is a pentagon whose top edges are all 2.
  The diagonals are all at least 3.01.
  Since tameTableD[5,0] < 0.696, the tameTableD[5,0] bound is a corollary of 0.696.
  Thus, it is enough to treat 0.696.

  The general strategy is that there must exist a triangle with
  minor diag <= 3.63 and angle <= 2.355.
    The constant 2.355 comes from the tau calculation:
    Solve[5x - 3(Pi + sol0) == 0.696, x]  (* gives 2.354... *)
  The constant 3.63 comes by an ineq that follows.
  This triangle is cut from the pentagon, leaving a quad case that can be done directly.
  The lower bound of tau on the cut triangle is 0.
  ");;

add
{
  idv="8655116269 a";
  doc="pentagon case, clipped smallest angled side triangle.
   If dih clipped < 2.355, then y4 < 3.63.
  ";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.63,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
(dih_y y1 y2 y3 y4 y5 y6 > #2.355 )\/ 
(delta4_y y1 y2 y3 y4 y5 y6 < &0) )`;
};;


add {
  idv="8655116269 b";
  doc="pentagon case, clipped smallest angled side triangle.
   Case dih > pi/2.
   If dih clipped < 2.355, then y4 < 3.63.
   The dih_y > #2.355 disjunct has been linearized, using delta4 < 0.
  ";
  tags = [May2011;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.63,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
(  (let tan_sq_lower = &1 in 
    delta4_squared_y y1 y2 y3 y4 y5 y6 * tan_sq_lower > 
    &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 ) \/ 
(delta4_y y1 y2 y3 y4 y5 y6 > &0) \/

  (delta_y y1 y2 y3 y4 y5 y6 < &0)  ))`;
};;


add
{
  idv="3193572903 a";
  doc="pentagon case, clipped smallest angled side triangle.
   If all dih > 2.355, then tau >= 5 (2.355) - 3 (pi + sol0) > 0.696 =largest pent constant";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  > #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (delta4_y y1 y2 y3 y4 y5 y6 < &0))`;
};;



add
{
  idv="3193572903 b";
  doc="pentagon case, clipped smallest angled side triangle.
   Case dih > pi/2.
   If all dih > 2.355, then tau >= 5 (2.355) - 3 (pi + sol0) > 0.696 =largest pent constant";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  > #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
(delta4_y y1 y2 y3 y4 y5 y6 > &0) \/
(let tan_sq_lower = &1 in 
    delta4_squared_y y1 y2 y3 y4 y5 y6 * tan_sq_lower > 
    &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 ) )`;
};;


add
{
  idv="2050588100 a";
  doc="pentagon case, clipped smallest angled side triangle.
   Here is an additional linear constraint on edge lengths.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( (y4 - #3.2) < #0.55 * (y2 + y3 - &4)) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
(delta4_y y1 y2 y3 y4 y5 y6 < &0) )`;
};;

add
{
  idv="2050588100 b";
  doc="pentagon case, clipped smallest angled side triangle.
   Case dih > pi/2.
   Here is an additional linear constraint on edge lengths.
   Tan[Pi - 2.355]^2 is approx 1.00479.
   The disjunct is a reworking of dih_y > 2.355.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( (y4 - #3.2) < #0.55 * (y2 + y3 - &4)) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
(delta4_y y1 y2 y3 y4 y5 y6 > &0) \/
(let tan_sq_lower = #1.0047 in 
    delta4_squared_y y1 y2 y3 y4 y5 y6 * tan_sq_lower > 
    &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 ) 
 )`;
};;


add
{
  idv="7348498949 37";
  doc="pentagon case, quad piece, cut along y9.
   Upper bound on diagonal:
   Use whichever diagonal produces the (2,2,diag) triangle with largest delta.
   Solve[Delta[x, 2, 2, 3.01, 3.63, 2] == 0, x] (* x < 3.651 *)
   shorter diag calc (not used):
   Solve[Delta[x, 2, 2, x, 2, 3.63] == 0, x](*x < 3.356 *) ;
 
  Pending replacement by 37 616";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);
   (* Widthcutoff 0.08 *)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.651);
      (#2.0,y5,&2);
      (#3.01,y6,#3.63);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#2.0,y9,&2)
]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > #0.696) \/
  ((y6 - #3.2) > #0.55 * (y2 + y1 - &4)) \/ 
  delta_y y7 y2 y3 y4 y8 y9 < &37  \/
  delta4_y y7 y2 y3 y4 y8 y9 > -- #11.2 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="7348498949 slit";
  doc="";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.356);
    (&2,y5,&2);
      (#3.01,y6,#3.63)
  ]
(  let slit = #0.25 in taum y1 y2 y3 y4 y5 y6  + slit  > #0.696  
 \/
 ((y6 - #3.2) > #0.55 * (y1 + y2 - &4))
)`;
};;


addtex (Section,"Tame Table D","Pentagons table[4,1]");;

addtex(Comment,"",
"
The context is a pentagon with one edge in the range [2.52,3.01], obtained
by a cut on a hexagon.  
All diagonals are at least 3.01.
All noncut top edges are 2.
This constant appears directly in the ad hoc LP inequalities
and as part of the tameTableD[6,0] calculation.
");;

(*
tameTableD[4,1]=0.6548 = tameTableD[6,0]-tameTableD[2,1].
*)

add
  {
idv="6843920790";
doc = "In a pentagon with one long edge, we can contract the long edge to 2.52, 
   or even to 2, using 2 diags.
   The constant 2.38 < 3.01/h0.";
tags = [May2011;Cfsqp;Tex;Flypaper[];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, #3.01 pow 2);
  (#2.38 pow 2, b2, #15.53);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2  > &0) ) `;
};;


addtex(Comment,"",
"
 We continue to contract the long edge, even make it less than 2.52,
    until it reaches 2, in which case (0) the 0.696 estimate takes over.

    (1) Or until a diagonal hits 3.01, where  the long edge lands in the  triangle,
   leaving a quad with top edges 2,2,2,3.01.  The shortest edge of the quad
   is given by Solve[Delta[x,2,2,x,2,3.01]==0,x], which implies x <= 3.166.
   Cut along this diagonal to triangulate.

    (2) Or until two diagonals hit 3.01, triangulating the pent. 
    There are two diagonals, because after the first hits and is fixed at 3.01 
   assuming the long edge lands in the quad, 
    we can continue contraction on the quad.

  Note: if a flat node develops (with some edge > 2), 
  the usual tricks can be used to dissolve it.
");;


add
{
  idv="3603097872";
  doc="clipped triangle in pentagon case (4,1).  
    In the application to tameTableD[4,1], we have y4=3.01, y6=2, 
   Ineq is slightly generalized for later use.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (sqrt8,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  - #0.1 * (#3.01 - y4) > #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="5026777310";
  doc="pentagon case, clipped A-piece triangle.
   prove constraint on edge lengths.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.01);
    (#3.01,y5,#3.01);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 4 1 - &2 * #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


ignore
{
  idv="6438897006";
  doc="pentagon case (4,1), quad piece, cut along y9
  The upper bound on the shorter diagonal determined by
  Solve[Delta[x, 2, 2, x, 2, 3.01] == 0, x], (* x < 3.166 *).
  Deprecated because it is a special case of 4680581274.";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);
   Deprecated];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > tame_table_d 4 1 -  #0.11) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;



addtex (Section,"Tame Table D","Ad hoc quadrilaterals");;

addtex(Comment,"",
"
Let's start with the ad hoc inequality:  9563139965D.
    By top edge contraction arguments, we may assume that 
    (0) all top edges have length 2, or 
    (1) both diagonals have length 3 (by contracting in different ways).
    The first case (0) is impossible by geomeric considerations: 
    edges=2 ==> some diagonal <= sqrt8.
    So both diagonals have length 3.
    This has been completely solved in a series 9563139965D in ineq.hl.
");;


addtex(Comment,"",
"Next the ad hoc LP inequality in head.mod :
    tauB4h 9620775909. tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8].
  This comes from a pentagon that has a 'flat quarter'.

  Case 1: a diagonal < 3.01.  Here we make no deformations.  We cut 
  the quad into two triangles.

   Case 2: both diags > 3.01.  In this case we bound the shorter diagonal.
    Solve[Delta[x, 2, 2, x, 2, sqrt8] == 0, x] // N gives x <= 3.108
 *)
");;




add
{
  idv="5405130650";
  doc=" 0.477 estimate, clipped A-piece triangle.
   Case 1.
   We reuse the other cut triangle (bound 0.11) from above.
   We have not done it here, but we could extremize edge y5, y6.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (sqrt8,y4,#3.01);
    (#2.52,y5,sqrt8);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y4) > #0.477 -  #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

addtex(Comment,"ignore 8063547910",
"0.477 bound, quad case both diags > 3.01, y9 long [2.52,sqrt8].
    In this case top edge deformations have been fully applied,
     so that all short top edges are 2.
   Then we extremize y9, folding the case y9=sqrt8 into 7697147739.
   What remains is y9=2.52.  But then the diagonal has length 
   Solve[Delta[x,2,2,x,2,2.52]==0,x](*x < 3.01 *)
   so a diagonal can be drawn, and we drop into the triangle section.
  ");;

ignore
{
  idv="8063547910";
  doc="";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);
  Deprecated];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.108);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#2.52,y9,#2.52)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > #0.477) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

addtex(Comment,"",
"
   Now third ad hoc LP inequality:  Quad 0.696. 
   tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,
   It drops to a quad case if some diag of pent has length <= 3.01 and a slice is made.
   Contract top edges of quad until 3 have length 2.
   Short diag: Solve[Delta[x,2,2,x,2,3.01]==0,x]//N, gives x <= 3.166
");;


add
{
  idv="4680581274";
  doc="quad case both diags > 3.01, y9 long";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,5000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
( 
  ( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
   (delta_y y1 y2 y3 y4 y5 y6 < &10) \/
  delta4_y y1 y2 y3 y4 y5 y6 > -- #11.2 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

add
{
  idv="4680581274 delta issue";
  doc="quad case both diags > 3.01, y9 long.
    This justifies the assumption the disjunct delta < 10 in the inequality.";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,5000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(
 (delta_y y1 y2 y3 y4 y5 y6 > &10) \/
  delta4_y y1 y2 y3 y4 y5 y6 > -- #11.2 \/
   ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="4680581274 slit";
  doc="";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.166);
    (&2,y5,&2);
      (#3.01,y6,#3.01)
  ]
(  let slit = #0.25 in taum y1 y2 y3 y4 y5 y6  + slit  > #0.696 - #0.11  )`;
};;



add
{
  idv="7697147739";
  doc="quad case both diags > 3.01, y9 long
   Diagonal upper bound by
  Solve[Delta[x,2,2,x,2,Sqrt[8]]==0,x] (*x < 3.108 *)";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.108);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (sqrt8,y9,sqrt8)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 <  &25) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="7697147739 delta issue";
  doc="quad case both diags > 3.01, y9 long
   Diagonal upper bound by
  Solve[Delta[x,2,2,x,2,Sqrt[8]]==0,x] (*x < 3.108 *)";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (sqrt8,y9,sqrt8)]
(( delta_y y1 y2 y3 y4 y5 y6    > &25) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


addtex (Section,"Tame Table D","Quadrilaterals (non ad hoc)");;

addtex(Comment,"",
"
This is the calculation of quadrilaterals (non ad hoc). TameTableD[r,s],
 for (r+s=4): (4,0), (3,1) (2,2).
By triangulating cases away, we may assume that both diagonals are => 3.01.
If there is adjacent short edges [2,2.52], we may deform so that both =2.
We can extremize the long edges [2.52,3.01].

In the case (4,0), when top edges are 2, some diagonal < 3.01, so nothing to do here.

In the case (3,1), there are two cases, depending on y9.  Both can be eliminated
without further interval calculations as follows:
  In fact,
  Solve[Delta[x, 2, 2, x, 2, 2.52] == 0, x], gives x< 3.01, so one is  impossible.
  Solve[Delta[x,2,2,x,2,3.01]==0,x], gives x < 3.166.  This domain
  was already encountered in the Quad 0.696 case.
  Since tameTableD[3,1] < 0.696 - 0.11, this is covered by a previous quad ineq.

Now consider (2,2). Six cases total up to symmetry.
  factor of 2 whether the long edges are adjacent.
  factor of 3 the number {0,1,2} of the long edges that are minimal 2.52.
  Also, the shorter diagonal can slice in two distinguishable ways, if long edges are adjc.

  Here are the shorter diagonal upper bounds in the six cases:
Solve[Delta[x,2.52,2,x,2.52,2]==0,x] (* < 3.22 *)
Solve[Delta[x,2.52,2,x,2,2.52]==0,x] (* < 3.18 *)

Solve[Delta[x,3.01,2,x,2.52,2]==0,x] (* < 3.41 *)
Solve[Delta[x,3.01,2,x,2,2.52]==0,x] (* < 3.33 *)

Solve[Delta[x,3.01,2,x,3.01,2]==0,x] (* < 3.62 *)
Solve[Delta[x,3.01,2,x,2,3.01]==0,x] (* < 3.47 *)

In cases where the two top long edges are separated
by the diagonal, we can triangulate using the following triangle calcs.

This reduces everything to three quad cases, where the long top edges are y8,y9.
If y8, y9 are both 3.01, use 8964099283 to show it is nonoptimal.
If y8, y9 are both 2.52, triangulate using the long diagonal.

This leaves one quad case, where y8=2.52 and y9=3.01, not separated by short diag.
If long diag <= 3.41, it is covered by the calcs for short diag (which is <= 3.41).
Else long diag [3.41,3.634].  Triangulate by the long diag. Run the quad cluster.

If the shorter diag <= 3.15, we slice and use two triangle calcs.
If the shorter diag >= 3.15, we use a num1 calc to show it is nonoptimal.

So in the end, all quad cases can be replaced by triangulations except this last case.
");;


ignore
{
  idv="3456082115";
  doc=" tameTableD[2,2] 
     Triangulate quad with diagonal y4.
     Use if both long edges are 2.52.
    Deprecated. It is a special case of 4922521904";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.22);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2) 
 )`;
};;




add
{
  idv="7720405539";
  doc=" tameTableD[2,2] 
 Triangulate quad with diagonal y4.
 Use if exactly one long edge is 2.52.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.41);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 - #0.2) 
 )`;
};;


add
{
  idv="2739661360";
  doc=" tameTableD[2,2] 
  Triangulate quad with diagonal y4.
  Use if exactly one long edge is 3.01";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.41);
    (#3.01,y5,#3.01);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 + #0.2) 
 )`;
};;

add
{
  idv="9269152105";
  doc=" tameTableD[2,2] 
  Triangulate quad with diagonal y4.
  Use if both long edges are 3.01.
  If diag <= 3.41, then it falls into the previous case.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.41,y4,#3.62);
    (#3.01,y5,#3.01);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 ) 
 )`;
};;

(* now for the cases where the shorter diagonal does not separate long edges *)

add
{
  idv="4922521904";
  doc=" tameTableD[2,2] 
  Triangulate quad with diagonal y4.
   This is the case y8=2.52 y9=3.01.  Shorter diag doesn't separate long edges.
   We use longer diagonal instead.  Its bound comes from top delta:
  Solve[Delta[3.01, 2, 2.52, x, 2.52, 2] == 0, x] (* x < 3.339 *) ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.339);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 ) 
 )`;
};;


add {
  idv="9507202313";
  doc="tameTableD[2,2]. 
  Triangulate quad with diagonal y4.
  Case both diags > 3.01, y6, y9 long (2.52 and 3.01), 
  short diagonal doesn't separate long edges.
  Triangulate by long diagonal (at least 3.41 for otherwise it drops into case
   where short diagonal separates long edges).
  Solve[Delta[x, 2, 2, 3.01, 2.52, 3.01] == 0, x] (* x < 3.634 *)
  ";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.41,y4,#3.634);
      (#2.0,y5,&2);
      (#2.52,y6,#2.52);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(
      delta_y y1 y2 y3 y4 y5 y6 > &30 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add {
  idv="1637868761";
  doc="  Triangulate quad with diagonal y4.
  Case both diags > 3.01, y6, y9 long (2.52 and 3.01), 
   short diagonal doesn't separate long edges.
  Triangulate by long diagonal (at least 3.41 for otherwise it drops into case
   where short diagonal separates long edges).
  Solve[Delta[x, 2, 2, 3.01, 2.52, 3.01] == 0, x] (* x < 3.634 *)
";
  tags = [May2011;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(1500.0,3000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.41,y4,#3.634);
      (#2.0,y5,&2);
      (#2.52,y6,#2.52);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(
    tauq y1 y2 y3 y4 y5 y6 y7 y8 y9 > tame_table_d 2 2 \/
     delta_y y1 y2 y3 y4 y5 y6 < &30 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;





addtex (Section,"Tame Table D","Triangles");;


addtex(Comment,"",
"
If the sliced edge is between [sqrt8,3.01], the triangle (2,1) has tau < tame_table_d 2 1.
Nevertheless tau > 0.11
We must compensate by putting an extra penalty term (tame_table_d 2 1 - 0.11)
 in the other pieces.

Ad hoc LP.  The case.
tauB4h 9620775909 apex4 tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8]
   This can break into a triangle (2,1) [2.52,sqrt8][sqrt8,3.01] and a triangle (1,2).
   In this case we run one extra triangle calc, 
   replace tame_table_d entries with 0.477 - 0.11.
   
tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,
   This will give an A-piece with [sqrt8,3.01][sqrt8,3.01].  need 0.696 - 2 0.11.

9563139965D, dart4_diag3_b, tau >= 0.467, quad, diags >= 3.
   No triangle occurs here.  No diagonal drawn.

");;

add
{
  idv="6029974545";
  doc="triangle 1,2 ad hoc  case.
    If the y4 edge is extremal at 2.52, we get at least tame_table_d[0,3] > 0.477-0.11.
     So that case folds into the [0,3] case.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,sqrt8);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y6) > #0.477 - #0.11          
 )`;
};;

add
{
  idv="5766053833";
  doc="triangle 1,2, ad hoc 0.696 case ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,#3.01);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y5)  + #0.1 * (#3.01 - y6) > 
   #0.696 - &2 * #0.11
 )`;
};;

add
{
  idv="7881254908";
  doc="triangle 1,2, ad hoc 0.696 case LP";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (sqrt8,y5,#3.01);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6   >    #0.696 - &2 * #0.11
 )`;
};;

addtex(Section,"Tame Table D","Triangle (non ad hoc)");;

add
{
  idv="1107929058";
  doc="triangle 2,1";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 2 1
 )`;
};;

add
{
  idv="7645170609";
  doc="triangle 2,1";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 2 1
 )`;
};;

(* skip 2,1 long edge 3.01 *)

(* 1,2 cases short-long patterns on y5,y6   aa, ab, ac,  bb, bc,    cc.
*)

add
{
  idv="1532755966";
  doc="triangle 1,2-aa";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2
 )`;
};;

add
{
  idv="7097350062";
  doc="triangle 1,2-ab";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + (tame_table_d 2 1 - #0.11)          
 )`;
};;

add
{
  idv="2900061606";
  doc="triangle 1,2-ac";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + (tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="2200527225";
  doc="triangle 1,2-bb";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,sqrt8);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="3106201101";
  doc="triangle 1,2-bc";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,sqrt8);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;

add
{
  idv="9816718044";
  doc="triangle 1,2-cc";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;

(* 0,3 patterns: extremize all the way from 2.52 to 3.01 without stopping at sqrt8.
    The case is given by the number of top edges {0,1,2,3} of length 3.01
*)

add
{
  idv="1080462150";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#2.52,y5,#2.52);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="4143829594";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#2.52,y5,#2.52);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="7459553847";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;

add
{
  idv="4528012043";
  doc="triangle 0,3";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.01);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;



addtex(Section,"Experiments","");;

let experiment x = ();;

experiment {
  idv="";
  doc="";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.166);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > -- #0.08 \/
   delta_y y1 y2 y3 y4 y5 y6 < -- &25
 )`;
};;



experiment {
  idv="";
  doc="";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.166);
  (sqrt8,y5,sqrt8);
      (&2,y6,&2)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > #0.696 - #0.11 + #0.08 
 )`;
};;




experiment {
  idv="";
  doc="";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (#3.01,y5,#3.915);
      (#3.01,y6,#3.915)
  ]
(  delta_y (#2.52) y2 y3 y4 (&2) (&2) > &0  \/
 (taum y1 y2 y3 y4 y5 y6 )/ &3 - sol0
 + #0.34 * (&2 * y4 - y5 - y6)   >  (#0.6)/ &3  
 )`;
};;



experiment {
  idv="FALSE ONE.";
  doc=" This shows that taum_residual is always negative on the given domain.
  This should be rewritten in terms of the residual.
  ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.36);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(
y_of_x tau_residual_x y1 y2 y3 y4 y5 y6 < &0
  \/
  (delta4_y y1 y2 y3 y4 y5 y6 > -- #11.2) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (taum y1 y2 y3 y4 y5 y6 > #0.25)
 )`;
};;

(* 

(( taum y1 y2 y3 y4 y5 y6 - ((rho y1) * pi - (pi+sol0)))/ (#0.0001 + sqrt(delta_y y1 y2 y3 y4 y5 y6)) < &0)    
*)




experiment {
  idv="";
  doc="Implementation test of tau_lowform ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (#2.1,y1,#2.1);
    (#2.2,y2,#2.2);
    (#2.3,y3,#2.3);
    (#3.6,y4,#3.6);
    (#2.5,y5,#2.5);
      (#2.6,y6,#2.6)
  ]
(
  ( y_of_x tau_lowform_x y1 y2 y3 y4 y5 y6 > taum y1 y2 y3 y4 y5 y6 - &1 ) 
 )`;
};;



experiment
{
  idv="";
  doc="Aux 734849949. To show for some diag cut, the small delta > 37";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.63);
    (#3.01,y5,#3.651);
      (&2,y6,&2)
  ]
(
  dih_y y1 y2 y3 y4 y5 y6 < #2.08 \/
    ((y4 - #3.2) > #0.55 * (y2 + y3 - &4))
 )`;
};;

experiment
{
  idv="";
  doc="Aux 734849949. To show for some diag cut, the small delta > 37.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#3.01,y6,#3.651)
  ]
(
  dih_y y1 y2 y3 y4 y5 y6 < #0.51 \/
  delta_y y1 y2 y3 y4 y5 y6 > &37 \/
  delta_y y1 y2 y3 y4 y5 y6 < &0
 )`;
};;

experiment
{
  idv="";
  doc="Aux 734849949. To show for some diag cut, the small delta > 37.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#3.01,y6,#3.651)
  ]
(
  taum y1 y2 y3 y4 y5 y6 > &0 \/
  delta_y y1 y2 y3 y4 y5 y6 < &37 
 )`;
};;


experiment
{
  idv="";
  doc="Aux 734849949. To show for some diag cut, the small delta > 37.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.356);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  dih_y y1 y2 y3 y4 y5 y6 > #2.08 + #0.51 \/
  delta_y y1 y2 y3 y4 y5 y6 > &37 \/
  delta_y y1 y2 y3 y4 y5 y6 < &0
 )`;
};;


experiment
{
  idv="experiment May 18, 2011, 7348498949";
  doc="pentagon case, quad piece, cut along y9.
   Upper bound on diagonal:
   Solve[Delta[x, 2, 2, x, 2, 3.63] == 0, x](*x < 3.356 *) ";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0);
   Widthcutoff 0.08];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.651);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.63);
      (#3.01,cd,#3.651)
]
(( delta_y y1 y2 y3 y4 y5 y6 > &65) \/
   (delta_y y3 y1 y7 cd y8 y5 > &65) \/
  ((y9 - #3.2) > #0.55 * (y2 + y7 - &4)) \/ 
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < cd ))`;
};;


experiment
{
  idv="7348498949 37 616";
  doc="pentagon case, quad piece, cut along y9.
   Upper bound on diagonal:
   Use whichever diagonal produces the (2,2,diag) triangle with largest delta.
   Solve[Delta[x, 2, 2, 3.01, 3.63, 2] == 0, x] (* x < 3.651 *)
   shorter diag (not used):
   Solve[Delta[x, 2, 2, x, 2, 3.63] == 0, x](*x < 3.356 *).
   Experiment May 18, 9am, try 0.616 instead of 0.696. ";
  tags = [May2011;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(1500.0,5000.0);
   (* Widthcutoff 0.08 *)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.651);
      (#2.0,y5,&2);
      (#3.01,y6,#3.63);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#2.0,y9,&2)
]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > #0.616) \/
  ((y6 - #3.2) > #0.55 * (y2 + y1 - &4)) \/ 
  delta_y y7 y2 y3 y4 y8 y9 < &37  \/
  delta4_y y7 y2 y3 y4 y8 y9 > -- #11.2 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;



experiment
{
  idv="";
  doc="taum 1st deriv test.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( tau_m_diff_quotient y1 y2 y3 y4 y5 y6 pow 2 > #0.031) \/
  (delta_y y1 y2 y3 y4 y5 y6 > &15) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;

addtex(Section,"",
"skinny triangles");;

add
{
  idv="";
  doc="linear bound on taum, 2,2,2.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(1500.0,5000.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2);
    (#2.0,y2,#2);
    (&2,y3,#2);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (y_of_x tau_lowform_x y1 y2 y3 y4 y5 y6 > #4.488 - #1.4579 * y4 ) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;

add
{
  idv="";
  doc="linear bound on taum, 2.52,2,2.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(1500.0,5000.0);Deprecated];
  ineq = all_forall `ineq [
    (#2.52,y1,#2.52);
    (#2.0,y2,#2);
    (&2,y3,#2);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (y_of_x tau_lowform_x y1 y2 y3 y4 y5 y6 > #4.488 - #1.4579 * y4 ) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;


add
{
  idv="";
  doc="linear bound on taum, flat,2,2.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(1500.0,5000.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2);
    (&2,y3,#2);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (?? > #4.488 - #1.4579 * y4 ) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;




add
{
  idv="test";
  doc="hexagon case, triangulated by large inner triangle.
    Three outer triangles replaced with linear lower bounds.
    Bottom edges 2,2,2.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,&2);
    (#2.0,y2,&2);
    (&2,y3,&2);
    (#3.01,y4,#3.47);
    (#3.01,y5,#3.47);
      (#3.01,y6,#3.47)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  
    + #4.488 - #1.4579 * y4
    + #4.488 - #1.4579 * y5
    + #4.488 - #1.4579 * y6
> #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (y_of_x eulerA_x  y1 y2 y3 y4 y5 y6 < &0))`;
};;

add
{
  idv="test";
  doc="hexagon case, triangulated by large inner triangle.
    Three outer triangles replaced with linear lower bounds.
    Bottom edges 2.52,2,2.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (#2.52,y1,#2.52);
    (#2.0,y2,&2);
    (&2,y3,&2);
    (#3.01,y4,#3.47);
    (#3.01,y5,#3.737);
      (#3.01,y6,#3.737)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  
    + #4.488 - #1.4579 * y4
    + #3.2139 - #1.009 * y5
    + #3.2139 - #1.009 * y6
> #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (y_of_x eulerA_x  y1 y2 y3 y4 y5 y6 < &0))`;
};;


add
{
  idv="test";
  doc="hexagon case, triangulated by large inner triangle.
    Three outer triangles replaced with linear lower bounds.
    Bottom edges 2.52,2.52,2.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (#2.52,y1,#2.52);
    (#2.52,y2,#2.52);
    (&2,y3,&2);
    (#3.01,y4,#3.737);
    (#3.01,y5,#3.737);
      (#3.01,y6,#3.915)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  
    + #3.2139 - #1.009 * y4
    + #3.2139 - #1.009 * y5
    + #3.2883 - #0.98119 * y6
> #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (y_of_x eulerA_x  y1 y2 y3 y4 y5 y6 < &0))`;
};;


add
{
  idv="test";
  doc="hexagon case, triangulated by large inner triangle.
    Three outer triangles replaced with linear lower bounds.
    Bottom edges 2.52,2.52,2.52
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (#2.52,y1,#2.52);
    (#2.52,y2,#2.52);
    (#2.52,y3,#2.52);
    (#3.01,y4,#3.915);
    (#3.01,y5,#3.915);
      (#3.01,y6,#3.915)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  
    + #3.2883 - #1.009 * y4
    + #3.2883 - #1.009 * y5
    + #3.2883 - #0.98119 * y6
> #0.0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (y_of_x eulerA_x  y1 y2 y3 y4 y5 y6 < &0))`;
};;

(*
We get zeros via y2,y3 in {2,2.52} in
x /. Solve[Delta[2, y2, y3, x, 2, 2] == 0, x] // N // FullForm
{3.01, 3.4641016151377544, 3.7355742827650995, 3.914039468375351}
*)

experiment.
{
  idv="test";
  doc="hexagon case, two oppositely situated flat vertices, making an effective quad.
    Triangulated by short diagonal.
    Bottom edges ?,2,2.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,&2);
    (&2,y3,&2);
    (#3.01,y4,#3.47);
    (#3.01,y5,#3.47);
      (#3.01,y6,#3.47)
  ]
(
  let plow = (\y. #4.498 - #1.4579 * y) in
  let pmid = (\y. #3.2139 - #1.0009 * y) in
  let phi = (\y. #3.2883 - #0.98119 * y) in
  let psol = (\(y:real). -- #0.552) in
  ( taum y1 y2 y3 y4 y5 y6  + plow y4 + plow y5 + plow y6 > &0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (y_of_x eulerA_x  y1 y2 y3 y4 y5 y6 < &0))`;
};;

let template_ineq_hexx  = 
`\y2fix y3fix y4max y5min y5max y6min y6max p4 p5 p6.
  ineq [
    (&2,y1,#2.52);
    (y2fix,y2,y2fix);
    (y3fix,y3,y3fix);
    (#3.01,y4,y4max);
    (y5min,y5,y5max);
      (y6min,y6,y6max)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  + p4 y4 + p5 y5 + p6 y6 > #0.723) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
  (y_of_x eulerA_x  y1 y2 y3 y4 y5 y6 < &0))`;;


let template_record_hexx inq ext =
{
  idv=("test"^ext);
  doc="hexagon case, triangulated with a large central triangle.
     Wlog at most one vertex of the central triangle is flat.  
    Wlog it is edge y1, which might not be extremal (2,2.52).  
    But y2 and y3 are extremal.
     Outer triangles are removed and replaced with p bounds.  This
   bound is piecewise linear, which requires y5 and y6 to be split into 2 cases.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = inq;
};;

let mk_hex i4 i5 i6  = 
  (* we subtract off small correction terms to make things easier to prove *)
  let plo = `(\y. #4.498 - #0.02 - #1.4579 * y)` in
  let pmid = `(\y. #3.2139 - #0.025 - #1.0009 * y)` in
  let phi = `(\y. #3.2883 - #0.01 - #0.98119 * y)` in
  let psol = `(\ (y:real). -- sol0 )` in
  let y2fix = List.nth [`&2`;`#2.52`;`#2.52`] i4 in
  let y3fix = List.nth [`&2`;`&2`;`#2.52`] i4 in
  let p4 = List.nth [plo;pmid;phi] i4 in
  let (y3,y34,y37,y39) = (`#3.01`,`#3.4641`,`#3.7355`,`#3.91404`) in
  let y4max = List.nth [y34;y37;y39] i4 in
  let vlo = [(y3,y34,plo);(y34,y37,psol)] in
  let vhi = [(y3,y37,pmid);(y37,y39,psol)] in
  let (y5min,y5max,p5) =
    let v = if (i4<2) then vlo else vhi in List.nth v i5 in
  let (y6min,y6max,p6) = 
    let v = if (i4<1) then vlo else vhi in List.nth v i6 in
  let inq = 
    Ineq.mk_tplate template_ineq_hexx 
      [y2fix;y3fix;y4max;y5min;y5max;y6min;y6max;p4;p5;p6] in
  let s = string_of_int in
  let ext = " "^(s i4)^(s i5)^(s i6) in 
    template_record_hexx inq ext;;

(* closest case is 2 1 1*)

 for i4=1 to 1 do 
for i5 = 0 to 1 do
 for i6 = 0 to 1 do
   add(mk_hex i4 i5 i6)  done done done;;

(* PENTAGONS *)


let template_ineq_pent  = 
`\y1fix y2fix y3fix  p5 p6.
  ineq [
    (y1fix,y1,y1fix);
    (y2fix,y2,y2fix);
    (y3fix,y3,y3fix);
    (&2,y4,&2);
    (#3.01,y5,#3.23607);
      (#3.01,y6,#3.23607)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6   + p5 y5 + p6 y6 > #0.616) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) \/
    (dih_y y1 y2 y3 y4 y5 y6 + dih_y y1 y2 (&2) (&2) (&2) y6 +
    dih_y y1 (&2) y3 (&2) y5 (&2) < dih_y y1 y2 y3 (#3.01) (&2) (&2))
)`;;


let template_record_pent inq ext =
{
  idv=("test5"^ext);
  doc="pentagon case, triangulated with a large central triangle.
     Wlog no vertex of the central triangle is flat, so y1,y2,y3 are extremal.
     Outer triangles are removed and replaced with p bounds.";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = inq;
};;

  (* we subtract off small correction terms to make things easier to prove *)


(*
pmid: interp[x, {3.01, 
    taumar[2, 2, 2.52, 3.01, 2, 2]}, {3.23607, taumar[2, 2, 2.52, 3.23607, 2,
         2]}] // ExpandAll

phi: interp[x, {3.01, 
    taumar[2, 2.52, 
      2.52, 3.01, 2, 2]}, {3.23607, taumar[2, 2.52, 2.52, 3.23607, 2, 2]}] // 
    ExpandAll
*)

let mk_pent i1 j4  = 
  let plo = `(\y. #4.498 - #0.02 - #1.4579 * y)` in
  let pmid = `(\y. #0.713 - #0.177 * y)` in
  let phi = `(\y. #0.752  - #0.174 * y)` in
  let y1fix = List.nth [`&2`;`#2.52`] i1 in
  let y2fix = List.nth [`&2`;`#2.52`;`#2.52`] j4 in
  let y3fix = List.nth [`&2`;`&2`;`#2.52`] j4 in
  let (p5) = if (i1<1 && j4<1) then plo
  else (if (i1>0 && j4>0) then phi else pmid) in
  let (p6) = if (i1<1 && j4<2) then plo
  else (if (i1>0 && j4>1) then phi else pmid) in
  let inq = 
    Ineq.mk_tplate template_ineq_pent
      [y1fix;y2fix;y3fix;p5;p6] in
  let s = string_of_int in
  let ext = " "^(s i1)^(s j4) in
    template_record_pent inq ext;;

(* closest case is 2 1 1*)

 for i1=0 to 1 do 
 for j4 = 0 to 2 do
   add(mk_pent i1 j4)   done done;;



add
{
  idv="test";
  doc="no flats on vertices of big inner triangle of pent.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#3.01,y6,#3.23607)
  ]
(
  ( dih_y y1 y2 y3 y4 y5 y6 < #1.001) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

add
{
  idv="test";
  doc="no flats on vertices of big inner triangle of pent.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.23607);
    (&2,y5,&2);
      (#3.01,y6,#3.23607)
  ]
(
  ( dih_y y1 y2 y3 y4 y5 y6 < pi - #1.001) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="test";
  doc="no flats on vertices of big inner triangle of pent.
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#3.01,y5,#3.23607);
      (#3.01,y6,#3.23607)
  ]
(
  ( dih_y y1 y2 y3 y4 y5 y6 < pi - &2 * #1.001) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="pent test";
  doc="
    ";
  tags = [May2011;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.23607);
    (&2,y5,#3.23607);
      (&2,y6,&2);
      (&2,y7,#2.52)
  ]
(
   (delta_y y1 y3 y7 (&2) (&2) y5 pow 2 > &0) \/
  ( dih_y y1 y2 y3 y4 y5 y6 < dih_y y1 y2 y7 (#3.01) y5 y6) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;
