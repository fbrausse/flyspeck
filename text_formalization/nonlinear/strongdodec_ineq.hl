(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Nonlinear Inequalities                                                                *)
(* Chapter: Further Results                                                               *)
(* Section: Strong Dodecahedral Conjecture *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2010-05-18                                                         *)
(* ========================================================================== *)

(*

Nonlinear inequalities for the Strong Dodecahedral Conjecture,
  and Fejes Toth's full contact conjecture.

The inequalities in this file are not part of the Flyspeck project.

*)



module Strongdodec_ineq = struct

open Ineq;;


let ydodec = new_definition (* $y_D$ *)
   `ydodec = @y.  sol_y (#2.0) (#2.0)  (#2.0) y y y = pi/ (#5.0)`;;

let rad_y = new_definition
  `rad2_y y1 y2 y3 y4 y5 y6 = rad2_x (y1*y1) (y2*y2) (y3*y3) (y4*y4) (y5*y5) (y6*y6)`;;

let fdodec = new_definition (* $f$ *)
 `fdodec y a b = 
      #6.0 * volR #1.0 (eta_y #2.0 #2.0 y) (sqrt (rad2_y #2.0 #2.0 #2.0 y y y))
    + a* sol_y #2.0 #2.0 #2.0 y y y + #3.0 * b * dih_y #2.0 #2.0 #2.0 y y y`;;

let dfdodec = new_definition `dfdodec a b = @d.
    ((\t. fdodec t a b) has_real_derivative d) (atreal ydodec)`;;

let abdodec = new_definition `abdodec = @ab.
    (fdodec ydodec (FST ab) (SND ab) = &0) /\
     (dfdodec (FST ab) (SND ab) = &0)`;;

let adodec = new_definition (* $a_D$ *) `adodec = FST abdodec`;;

let bdodec = new_definition (* $b_D$ *) `bdodec = SND abdodec`;;

let surfR = new_definition `surfR a b c = #3.0 * volR a b c  / a`;;

let surfRy = new_definition `surfRy y1 y2 y6 c = 
  surfR (y1/ &2) (eta_y y1 y2 y6) c`;;

let solRy = new_definition `solRy y1 y2 y6 c = solR (y1/ &2) (eta_y y1 y2 y6) c`;;

let dihRy = new_definition `dihRy y1 y2 y6 c = dihR (y1/ &2) (eta_y y1 y2 y6) c`;;

let surfy = new_definition `surfy y1 y2 y3 y4 y5 y6 = 
  (let c = sqrt(rad2_y y1 y2 y3 y4 y5 y6) in
     surfRy y1 y2 y6 c + surfRy y2 y1 y6 c + 
     surfRy y2 y3 y4 c + surfRy y3 y2 y4 c +
     surfRy y3 y1 y5 c + surfRy y1 y3 y5 c)`;;

(* D4-inequality, sharp at (2,2,2,ydodec,ydodec,ydodec)
    The domain has been simiplified by arguments in nonlinear_list.tex  *)

let I_9627800748=
all_forall `ineq
  [(#2.0,y1,#2.75);
(#2.0,y2,#2.75);
(#2.0,y3,#2.75);
(#2.0,y4,#2.75);
(#2.0,y5,#2.75);
(#2.0,y6,#2.75)
  ]
  (surfy y1 y2 y3 y4 y5 y6 + #3.0*adodec*sol_y y1 y2 y3 y4 y5 y6
    +bdodec*(lmfun(y1/ &2)*dih_y y1 y2 y3 y4 y5 y6
       + lmfun(y2/ &2)*dih2_y y1 y2 y3 y4 y5 y6 
       + lmfun(y3/ &2)*dih3_y y1 y2 y3 y4 y5 y6
    ) >= &0) \/ (rad2_y y1 y2 y3 y4 y5 y6 > #1.375 * #1.375)`;;

(* D3-local inequality for strong dodecahedral conjecture 
   The domain has been simplified by arguments in nonlinear_list.tex
*)

let I_6938212390=
all_forall `ineq 
   [(#2.0,y1,#2.7);
(#2.0,y2,#2.7);
(#2.0,y6,#2.7)]
(let c = #1.375 in
    (surfRy y1 y2 y6 c + surfRy y2 y1 y6 c)
    + #3.0 * adodec * (solRy y1 y2 y6 c + solRy y2 y1 y6 c)
    + #3.0 * bdodec * (lmfun (y1/ &2)*dihRy y1 y2 y6 c + lmfun (y2/ &2)*dihRy y2 y1 y6 c) >= &0) \/ (eta_y y1 y2 y6 > #1.35)`;;




end;;
