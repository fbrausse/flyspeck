(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Nonlinear                                                  *)
(* Author: Thomas C. Hales                                                    *)
(* Date: 2011-05-13                                                           *)
(* ========================================================================== *)

(* TO DO XX
   replace 0.696 -> 0.616 systematically in estimates.
*)


(* New test inequalities from May 2011.  Redo all the tameTableD calculations,
    together with associated nontriangular ad hoc LP estimates. 

   HEX (1 CASE):
   tameTableD[6,0] has dropped to 0.712.  
   // old values: 0.7578, 0.723, ...

   PENT (3 CASES):
   tameTableD[4,1]  = 0.616.  This is AD HOC tauB5h in head.mod
   tameTableD[5,0]  = 0.4819.  This is (standard) tau5 in head.mod
   tau >= 0.616, diags >= sqrt8. This is AD HOC tau5h  9620775909-5 in head.mod
   // old values: 0.696->0.616, 0.6548->0.616.

   QUAD (2 CASES):
   tau >= 0.477, diags >= sqrt8, 1edge [2.52,sqrt8]. This is AD HOC tauB4h 9620775909 in head.mod:
   tau >= 0.467 diags >= 3. This is AD HOC 9563139965D in body.mod
   + standard B-series quad inequalities.

*)


(* This file does *not* treat the standard quad LP cases:
     ["3862621143";"4240815464";"6944699408";"7043724150"]
    which are proved by usual quad methods (with Dim_red_backsym option *)

module Main_estimate_ineq = struct

let mk_tplate =  Ineq.mk_tplate ;;
let all_forall = Sphere.all_forall;;
let add = Ineq.add;;
let skip = Ineq.skip;;
let addtex = Ineq.addtex;;


addtex(Section,"Main Estimate","Definitions");


(* for sphere.hl *)


addtex(Comment,"","
The actual definitions of these functions need to be supplied.
For now, the functions only get used in cfsqp and interval verifications.

The LC functions are implemented in intervals as locally constant functions.
");;

(* true definitions in mdtau.hl *)


let mdtau_fake = new_definition
  `mdtau (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real)  = &0`;;

let mdtau2_fake = new_definition
  `mdtau2 (y1:real) (y2:real) (y3:real) (y4:real) (y5:real) (y6:real)  = &0`;;



addtex (Section,"Main Estimate","Deformation num1 and general facts");;

addtex(Comment,"2065952723",
"
%See Mathematica numerical calculation.
% old idv: eqn:gg'' calc:Lexell.
The derivatives have been computed in Mathematica and converted to
HOL format.  
This second derivative calculation shows that
  function $\\tau$ does not have a interior local minimum. 

Let
\\[ 
g(s;a,b,c,e_1,e_2,e_3) = \\sum_{i=1}^3 \\dih_i(2,2,2,a+s,b,c) e_i,
\\] 
where $\\dih_i$ is given by Definition~\\ref{def:tau}.
Note linearity in $e_i$, so that extremality appears at endpoints for $e_i$
in $e_i\\in\\leftclosed1,1+\\sol_0/\\pi\\rightclosed$. Hence various
calculations drop to three dimensions.

Let $\\Delta = \\Delta(4,4,4,a^2,b^2,c^2)$.
Let primes denote derivatives with respect to the variable $s$.
Assume $a,b,c\\in\\leftclosed2/\\hm,4\\rightclosed$.
The idea is to show on various domains:
\\begin{equation}\\label{eqn:calc:Lexell}
(16-a^2) ^2 a^2(  \\Delta (g'(0;a,b,c,e_1,e_2,e_3))^2 
- 0.01\\Delta^{3/2}g''(0;a,b,c,e_1,e_2,e_3))\\ge 0.
\\end{equation}
(The factors of $\\Delta$ clear the denominator.)
The variables $a,b,c$ appear in even powers.
");;

add
  {
idv = "2065952723 A1";
doc = "This is the case that $a_2 \\le 15.53$.
   $a_2$ upper bound changed on 2011-Jan-21. 
   If larger than 15.53, it must be in a hexagon,  and two consecutive flat vertices.  
   Warning: this is verified by custom code (using cfsqp heuristics)
   in the interval arithmetic calculations.
 ";
tags=[Flypaper["UPONLFY"];Tex]; 
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, #15.53);
  ((&2 / h0) pow 2, b2, &4 pow 2);
  ((&2 / h0) pow 2, c2, &4 pow 2)
  ]
   (num_combo1 e1 e2 e3 a2 b2 c2 > &0) `;
};;

add
  {
idv="4828966562";
doc = "If  minor diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
           Added May 12, 2011.
       c2 upper bound changed from 15.53 to 16.0 on May 23.";
tags=[Main_estimate;Cfsqp;Tex;Flypaper["UPONLFY"];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, (&2 * h0) pow 2);
  ((&2/ h0) pow 2, b2, #3.01 pow 2);
  (#2.38 pow 2, c2,#16.0)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;


add
  {
idv="8964099283";
doc = "If  diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
          This is the case of three long edges.
           Added May 16, 2011.";
tags=[Main_estimate;Cfsqp;Tex;Flypaper["UPONLFY"];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.38 pow 2, a2, #3.01 pow 2);
  (#2.38 pow 2, b2, #3.01 pow 2);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;

skip
  {
idv="5512912661";
doc = "If  diag >= 3, then 3/1.26 > 2.38 and we can contract.
          15.53: arc[2,2,2.52]2 < arc[2,2,Sqrt[15.53]].
           Added May 16, 2011.
    Case where some edge is at least 3.15.
    I don't think this is ever used.";
tags=[Main_estimate;Cfsqp;Tex;Flypaper["UPONLFY"];Deprecated];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  (#2.38 pow 2, a2, #3.01 pow 2);
  ((&2) pow 2, b2, #2.52 pow 2);
  ((#3.15 /h0) pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2 ) > &0) `;
};;


add
  {
idv="6843920790";
doc = "In a pentagon with one long edge, we can contract the long edge to 2.52, 
   or even to 2, using 2 diags.
   The constant 2.38 < 3.01/h0.";
tags=[Main_estimate;Cfsqp;Tex;Flypaper["UPONLFY"];];
ineq = all_forall `ineq
  [
  (&1 , e1, &1 + sol0/ pi);
  (&1 , e2, &1 + sol0/ pi);
  (&1 , e3, &1 + sol0/ pi);
  ((&2 / h0) pow 2, a2, #3.01 pow 2);
  (#2.38 pow 2, b2, #15.53);
  (#2.38 pow 2, c2, #15.53)
  ]
   ((num1 e1 e2 e3 a2 b2 c2  > &0) ) `;
};;


add
{
  idv="1117202051";
  doc="Used to maintain nonreflexivity when making num1-deformations.
     The big angle on a skinny triangle (ear) is obtuse.
     Case where 2 opposite edges equal 2.";
  tags=[Flypaper["UPONLFY"];Main_estimate;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.0);
    (#3.01,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,&2)
  ]
(delta4_y  y1 y2 y3 y4 y5 y6 < &0)`;
};;

add
{
  idv="4559601669";
  doc="Used to maintain nonreflexivity when making num1-deformations.
     The big angle on a skinny triangle (ear) is obtuse.
   Case where two adjacent edges equal 2.";
  tags=[Flypaper["UPONLFY"];Main_estimate;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,&2);
    (&2,y3,&2);
    (#3.01,y4,#3.915);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(delta4_y y1 y2 y3 y4 y5 y6 < &0)`;
};;

add
{
  idv="6459846571";
  doc="upper bound on minor diagonal is 3.915 when top edges are 2.
     The bound on y4 comes from the triangle inequality.
    This could be proved directly with monotonicity and delta, without interval arith.";
  tags=[Flypaper["UPONLFY"];Main_estimate;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,#4.52);
    (&2,y5,&2);
    (&2,y6,&2)
  ]
((y4 < #3.915) \/ 
  delta_y y1 y2 y3 y4 y5 y6 < &0
)`;
};;

add
{
  idv="2485876245";
  doc="Used to justify matan approx in skinny triangles (ears).
   This says that the skinny angle is acute.
   y4 upper bound  comes from the triangle inequality.";
  tags=[Flypaper[];Main_estimate;Cfsqp;Xconvert;Tex];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,#2.52);
    (#3.01,y5, &2 * #2.52);
      (&2,y6,#2.52)
  ]
(delta4_y y1 y2 y3 y4 y5 y6 > &0)`;
};;

addtex (Section,"Main Estimate","Ears, top edges 2,2,long");;


add
{
  idv="4322269127";
  doc="taum 1st deriv test. 
   This shows that the first derivative of tau (wrt y1) is nonzero.  
  Thus the  optimal configuration has delta > 15 or (y1 minimal = 2)
   It is implemented in interval code, using locally constant structures (LC).";
  tags=[Flypaper[];Main_estimate;Tex;Disallow_derivatives;Penalty(50.0,500.0);];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( mdtau_y_LC y1 y2 y3 y4 y5 y6  > &0) \/
  ( mdtau_y_LC y1 y2 y3 y4 y5 y6  < &0) \/
  (delta_y_LC y1 y2 y3 y4 y5 y6 > &15) \/
  (delta_y_LC y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;

skip
{
  idv="4322269127 cfsqp version";
  doc="taum 1st deriv test.  This is the cfsqp version of 4322269127.
    It is not to be proved, only used as numerical evidence.";
  tags=[Flypaper[];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( mdtau y1 y2 y3 y4 y5 y6 pow 2 > #0.47) \/ // fake
  (delta_y y1 y2 y3 y4 y5 y6 > &15) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;


add
{
  idv="5556646409";
  doc="taum 2nd deriv test.  This is a key inequality.
   It asserts that taum has no local minimum on the given domain.
   If the derivative is zero, then the second derivative is negative.
   By symmetry, wlog y2 < y3.
   The C++ code has been customized for this particular inequality.
   The C++ has an embedded assumption that mdtau2_y_LC is on the domain delta>=15.
   ";
  tags=[Flypaper[];Main_estimate;Tex;Disallow_derivatives;Widthcutoff 0.004;Penalty(1500.0,5000.0);Cfsqp_branch 2];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (delta_y_LC y1 y2 y3 y4 y5 y6 < &15) \/
 (y2 < y3) \/
  (mdtau_y_LC  y1 y2 y3 y4 y5 y6  > &0) \/ 
  (mdtau_y_LC  y1 y2 y3 y4 y5 y6  < &0) \/ 
  (mdtau2_y_LC y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

skip
{
  idv="5556646409 cfsqp version";
  doc="taum 2nd deriv test. Cfsqp version -- only for testing.";
  tags=[Flypaper[];Main_estimate;Cfsqp;Tex;Penalty(1500.0,5000.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  (mdtau y1 y2 y3 y4 y5 y6 pow 2 > #0.004) \/ // fake
  (mdtau2 y1 y2 y3 y4 y5 y6 < -- #0.004) \/  // fake
  (delta_y y1 y2 y3 y4 y5 y6 < &15)
 )`;
};;

skip
{
  idv="5132343267";
  doc="delta monotonicity.
   In the interval code for 5556646409,
   the interval implementation of delta_y_LC assumes this  monotonicity
    results.  This calculation is not cited explicitly in the code, but still needed.
  -
   Deprecated.  This is a consequence of 4559601669, which asserts that
   the wide angle of a skinny triangle (ear) is obtuse.";
  tags=[Flypaper[];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( delta4_y y1 y2 y3 y4 y5 y6 < &0)
 )`;
};;

skip
{
  idv="7479785942";
  doc="delta monotonicity (for edge y5 and by symmetry y6).
   In the interval code for 5556646409,
   the interval implementation of delta_y_LC assumes various  monotonicity
    results.  This is among them.
    -
   This is a consequence of 2485876245. No separate verification is needed.
  ";
  tags=[Flypaper[];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,&2);
    (&2,y3,&2);
    (&2,y4,#2.52);
    (#3.01,y5,#3.915);
      (&2,y6,#2.52)
  ]
(
  ( delta4_y y1 y2 y3 y4 y5 y6 > &0)
 )`;
};;

addtex (Section,"Main Estimate","June Hexagons, top edges all 2.");;

addtex(Comment,"Main Estimate",
"
");;

add
{
  idv="5338748573";
  doc="full hexagon with three alternating flats.
    Big alternating central triangle.
    Symmetries, wlog y1<y2<y3.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (&2,y4,#2.52);
      (&2,y5,#2.52);
    (&2,y6,#2.52)
  ]
(
  (y_of_x taum_3flat_x y1 y2 y3 y4 y5 y6 > #0.712 ) \/
    (y_of_x euler_3flat_x y1 y2 y3 y4 y5 y6 < &0) \/
    (y2 < y1) \/ (y3 < y2)
 )`;
};;

add
{
  idv="3306409086";
  doc="full hexagon with two flats, one hi, can zero out the hi ear.
    Big alternating central triangle.
    By symmetry wlog y5 < y6
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
      (&2,y5,#2.52);
    (&2,y6,#2.52)
  ]
(
  (y_of_x taum_2flat_x y1 y2 y3 y4 y5 y6
    > #0.712 + #0.013) \/
   y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0 \/ 
     (y_of_x euler_2flat_x y1 y2 y3 y4 y5 y6<  &0)  \/
   (y6 < y5)
 )`;
};;

add
{
  idv="9075398267";
  doc="full hexagon with two flats, one lo
    Big alternating central triangle.
   To stabilize near delta=0, we  erases and takes a penalty.
    By symmetry, wlog  y5 < y6.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
     (&2,y5,#2.52);
    (&2,y6,#2.52)
   ]
(
  (y_of_x taum_2flat_x y1 y2 y3 y4 y5 y6
   > #0.712 + sol0) \/
  y_of_x (delta_234_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0 \/
    y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0 \/
     ( y_of_x euler_2flat_x y1 y2 y3 y4 y5 y6<  &0) \/
   (y6 < y5)
 )`;
};;

add
{
  idv="1324821088";
  doc="full hexagon with one flat, hi,hi, can zero out both ears.
    Big alternating central triangle.
    By symmetry, wlog y4 < y5.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
      (&2,y6,#2.52)
  ]
(
  (y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6  > #0.712 + &2 * #0.013) \/
  y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0 \/
  y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
  y5 < y4 \/
     ( y_of_x euler_1flat_x y1 y2 y3 y4 y5 y6< &0) 
 )`;
};;

add
{
  idv="4108834026";
  doc="full hexagon with one flat, ears: hi,lo, can zero  out hi ear.
    Big alternating central triangle.
   To stabilize near delta=0, we add  a disjunct that erases and takes a penalty.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
      (&2,y6,#2.52)
  ]
(
  (y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6 +
 y_of_x (taum_sub246_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6  > #0.712 + #0.013) \/
 (y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6  > #0.712 + #0.013 + sol0) \/
  y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0 \/
     y_of_x (delta_135_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
     (y_of_x euler_1flat_x y1 y2 y3 y4 y5 y6< &0) 
 )`;
};;

add
{
  idv="6388508112";
  doc="full hexagon with one flat, ears: lo,lo
    Big alternating central triangle.
    If delta hi>0, take the penalty and erase.
    By symmetry, wlog 0  < delta234 < delta135
    To stabilize near delta=0, we add  disjuncts that erase and take a penalty.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
      (&2,y6,#2.52)
  ]
(
  (y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6 +
      y_of_x (taum_sub246_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 > 
   #0.712 + sol0) \/
  (y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6
   > #0.712 + &2 * sol0) \/
  y_of_x (delta_234_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0 \/
  y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0 \/
    y_of_x (delta_135_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6  < 
 y_of_x (delta_234_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6  \/
    y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
     ( y_of_x euler_1flat_x y1 y2 y3 y4 y5 y6< &0) 
 )`;
};;


add
{
  idv="5493250206";
  doc="full hexagon with no flats, three ears: hi,hi,hi, can zero out all ears.
    Big alternating central triangle.
    By symmetry y1 < y2 < y3
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
   (#3.01,y6,#3.915)
  ]
(  (taum y1 y2 y3 y4 y5 y6 
    > #0.712 + &3 * #0.013) \/
   y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     y_of_x (delta_126_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     ( y_of_x eulerA_x y1 y2 y3 y4 y5 y6 < &0) \/
    (y2 < y1) \/ (y3 < y2)
 )`;
};;

add
{
  idv="2283016857";
  doc="full hexagon with no flats, three ears: hi,hi,lo=126, zero out hi ears.
    Big alternating central triangle, extremal ears.
    To stabilize near delta=0, we add  a disjunct that erases and takes a penalty.
    By symmetry, y4<y5.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
   (#3.01,y6,#3.915)
  ]
(  (taum y1 y2 y3 y4 y5 y6  +
y_of_x (taum_sub345_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6
    > #0.712 + &2 * #0.013) \/
 (taum y1 y2 y3 y4 y5 y6  
    > #0.712 + &2 * #0.013 + sol0) \/
    y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
    y_of_x (delta_126_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     y_of_x (delta_126_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6> &0  \/
     ( y_of_x eulerA_x y1 y2 y3 y4 y5 y6 < &0) \/ (y5 < y4)
 )`;
};;

add
{
  idv="4872337467";
  doc="full hexagon with no flats, three ears: hi,lo,lo, zero out hi  ear.
    Big alternating central triangle, extremal ears.
    By symmetry, wlog 0  < delta135 < delta126
    To stabilize near delta=0, we add  disjuncts that erase and take a penalty.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
   (#3.01,y6,#3.915)
  ]
( 
 (taum y1 y2 y3 y4 y5 y6  +
y_of_x (taum_sub345_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6
    > #0.712 + #0.013 + sol0) \/
 (taum y1 y2 y3 y4 y5 y6 
    > #0.712 + #0.013 + &2 * sol0) \/
     y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6  < &0  \/
     y_of_x (delta_135_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 < &0  \/
     y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
    y_of_x (delta_126_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 <   
 y_of_x (delta_135_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6  \/
     y_of_x (delta_126_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
     ( y_of_x eulerA_x y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

add
{
  idv="3615835903";
  doc="full hexagon with no flats, three ears: low, low, low
    Big alternating central triangle, extremal ears.
    By symmetry, wlog, we may order the delta terms.
    0 < delta234 < delta135 < delta126
    To stabilize near delta=0, we add  disjuncts that erase and take a penalty.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
      (#3.01,y4,#3.915);
   (#3.01,y5,#3.915);
   (#3.01,y6,#3.915)
  ]
( 
(taum y1 y2 y3 y4 y5 y6  +
y_of_x (taum_sub345_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6
    > #0.712 + &2 * sol0) \/
(taum y1 y2 y3 y4 y5 y6  
    > #0.712 + &3 * sol0) \/
    y_of_x (delta_234_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6  < &0  \/
   y_of_x (delta_234_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
    y_of_x (delta_135_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 <  y_of_x (delta_234_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6   \/
     y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
    y_of_x (delta_126_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6 <   
  y_of_x (delta_135_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6  \/
    y_of_x (delta_126_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > &0  \/
     ( y_of_x eulerA_x y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


(* HEXAGONS, SKINNY TRIANGLES *)
(* Now for the outer skinny triangle (ear) estimates used in hexagon triangulation *)

add
{
  idv="5202826650 a";
  doc="skinny triangle (ear) residual is positive, when y1=2.52, 
   This domain falls within the preconditions of the residual function because of
   4559601669 and 2485876245
   Domain generalized June 3: y3 upperbound -> 2.52.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (#2.52,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
   (y_of_x tau_residual_x y1 y2 y3 y4 y5 y6 > &0) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

add
{
  idv="2535350075";
  doc="full hexagon ear calculation.
   This shows that if (delta hi > 0) and (delta lo >0) we can erase the ear with small penalty.
   Hence, when we look at a lo ear, we can wrap it in with the hi ear case when 
   the hi ear exists: (delta hi>0).
   By symmetry, wlog y2 < y3.
    ";
  tags=[Flypaper["SAUZWSD"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,&2);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.915);
    (&2,y5,&2);
    (&2,y6,&2)
  ]
( 
 (taum y1 y2 y3 y4 y5 y6   > -- #0.013) \/
    (y_of_x (delta_sub1_x (#2.52 pow 2)) y1 y2 y3 y4 y5 y6 < &0) \/
    (delta_y y1 y2 y3 y4 y5 y6 < &0) \/ (y3 < y2)
 )`;
};;


addtex (Section,"Main Estimate","Pentagons, all top edges 2");;
(* New Pentagons,  June 3, 2011.
 This section completely treats all kinds of
   pentagons, modulo cases with a diagonal <= 3.01.  *)


add
{
  idv="7067938795";
  doc="A pentagon cannot have two flats.  This is the A-piece dihedral bound.
    If a pentagon has two flats then
     pi /2 < dih y1 _ _ 3.01 2 2 < dih_y.  This is impossible, by this calc.
    This estimate also gets used on flat+hi.";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#3.01,y5,#3.24);
      (#3.01,y6,#3.24)
  ]
(
  ( dih_y y1 y2 y3 y4 y5 y6 < pi / &2 - #0.46)
 )`;
};;


add
{
  idv="9459075374";
  doc="A bound on the delta of an ear in a pent, when the pent has a flat on the other side.
   The disjunct   (dih_y y1 y2 y3 y4 y5 y6 < #0.46)  has been 'linearized'. 
   Tan[0.46]^2 = 0.245469...";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.52,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
     (#3.01,y5,#3.24);
      (&2,y6,#2.52)
  ]
(let tan2lower = #0.245468 in
   (delta_y y1 y2 y3 y4 y5 y6 > #30.2) \/
  (&4 * x1_delta_y y1 y2 y3 y4 y5 y6 < tan2lower * delta4_squared_y y1 y2 y3 y4 y5 y6)
 )`;
};;


add
{
  idv="2559885109";
  doc="A pentagon lo ear bound";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);];
  ineq = all_forall `ineq [
    (&2,y1,&2);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.24);
    (&2,y5,&2);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > &0)
 )`;
};;

add
{
  idv="9861833891";
  doc="pent hi+something
    Can zero out something
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
   (&2,y4,&2);
    (#3.01,y5,#3.24);
      (#3.01,y6,#3.24)
  ]
( taum y1 y2 y3 y4 y5 y6 +
    y_of_x (taum_sub345_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6  > #0.616 \/
  taum y1 y2 y3 y4 y5 y6   > #0.616
 )`;
};;

add
{
  idv="8199484193";
  doc="pent lo+something
    Can zero out something
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
   (&2,y4,&2);
    (#3.01,y5,#3.24);
      (#3.01,y6,#3.24)
  ]
( taum y1 y2 y3 y4 y5 y6 +
   y_of_x (taum_sub345_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6
   > #0.616
 )`;
};;


add
{
  idv="3980286827";
  doc="pent flat126+lo
  The delta_pent >0 iff  edge_flat y6 y1 y2     (&2) (&2) > #3.24 
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
   (&2,y4,&2);
    (#3.01,y5,#3.24);
      (&2,y6,#2.52)
  ]
( y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6 + 
   y_of_x (taum_sub246_x (&4) (&4) (&4)) y1 y2 y3 y4 y5 y6
     > #0.616 \/
   y_of_x (delta_pent_x) y1 y2 y3 y4 y5 y6 > &0
 )`;
};;



add
{
  idv="3221740746 a";
  doc="pent flat126+hi
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(500.0,5000.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
   (&2,y4,&2);
    (#3.01,y5,#3.24);
      (&2,y6,#2.52)
  ]
( y_of_x taum_1flat_x y1 y2 y3 y4 y5 y6 + 
     y_of_x (taum_sub246_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 > #0.616 \/
    (y_of_x (delta_135_x (#2.52 pow 2) (&4) (&4)) y1 y2 y3 y4 y5 y6 < #30.2) \/
    y_of_x (delta_pent_x) y1 y2 y3 y4 y5 y6 > &0
 )`;
};;



add
{
  idv="8520556953";
  doc="no flats on vertices of big inner triangle of pent.  
  This is the skinny triangle (ear) bound.
   Upper bound on y6 is 1+Sqrt[5].
   Need to do a dih replacement.
   Tan[1.001]^2 > 2.43621.
   The disjunct implies dih < #1.001.
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#3.01,y6,#3.23607)
  ]
(
  let tan2lower = #2.43621 in
  ( &4 * x1_delta_y  y1 y2 y3 y4 y5 y6 < tan2lower * delta4_squared_y y1 y2 y3 y4 y5 y6) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

add
{
  idv="9977174768";
  doc="no flats on vertices of big inner triangle of pent.
   Upper bound on y6 is 1+Sqrt[5].
      Tan[1.001]^2 > 2.43621.
   The disjunct implies dih < pi - #1.001.
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.23607);
    (&2,y5,&2);
      (#3.01,y6,#3.23607)
  ]
( dih_y y1 y2 y3 y4 y5 y6 < pi - #1.001)`;
};;


add
{
  idv="6281973111";
  doc="no flats on vertices of big inner triangle of pent.
   Upper bound on y6 is 1+Sqrt[5].
    ";
  tags=[Flypaper["EDZEPIH"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (&2,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#3.01,y5,#3.23607);
      (#3.01,y6,#3.23607)
  ]
(
  ( dih_y y1 y2 y3 y4 y5 y6 < pi - &2 * #1.001) 
 )`;
};;


addtex (Section,"Main Estimate","Ad hoc quadrilaterals");;

addtex(Comment,"",
"
Let's start with the ad hoc inequality:  9563139965D. (>= 0.467 )
    By top edge contraction arguments, we may assume that 
    (0) all top edges have length 2, or 
    (1) both diagonals have length 3 (by contracting in different ways).
    The first case (0) is impossible by geomeric considerations: 
    edges=2 ==> some diagonal <= sqrt8.
    So both diagonals have length 3.
    This has been completely solved in a series 9563139965D in ineq.hl.
");;


addtex(Comment,"",
"Next the ad hoc LP inequality in head.mod :
    tauB4h 9620775909. tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8].
  This comes from a pentagon that has a 'flat quarter'.

  Case 1: a diagonal < 3.01.  Here we make no deformations.  We cut 
  the quad into two triangles.

   Case 2: both diags > 3.01.  In this case we bound the shorter diagonal.
    Solve[Delta[x, 2, 2, x, 2, sqrt8] == 0, x] // N gives x <= 3.108
 *)
");;


addtex(Comment,"skip 8063547910",
"0.477 bound, quad case both diags > 3.01, y9 long [2.52,sqrt8].
    In this case top edge deformations have been fully applied,
     so that all short top edges are 2.
   Then we extremize y9, folding the case y9=sqrt8 into 7697147739.
   What remains is y9=2.52.  But then the diagonal has length 
   Solve[Delta[x,2,2,x,2,2.52]==0,x](*x < 3.01 *)
   so a diagonal can be drawn, and we drop into the triangle section.
  ");;

skip
{
  idv="8063547910";
  doc="";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Quad_cluster 0.001;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);
  Deprecated];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.108);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#2.52,y9,#2.52)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9  > #0.477) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

addtex(Comment,"",
"
   Now third ad hoc LP inequality:  Quad 0.696. 
   tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,
   It drops to a quad case if some diag of pent has length <= 3.01 and a slice is made.
   Contract top edges of quad until 3 have length 2.
   Extremize the other long edge to 3.01 or sqrt8.
   Short diag: Solve[Delta[x,2,2,x,2,3.01]==0,x]//N, gives x <= 3.166
");;
 (*
Note: XXX
Constant in head.mod is 0.616, 
Why don't we use that instead of 0.696??
 May 13, 2012 . tchales 
*)

skip 
{
  idv="4680581274 derived";
  doc="This derived inequality summarizes the series.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,5000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
( 
  ( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="4680581274";
  doc="quad case both diags > 3.01, y9 long.
   4559601669 gives the gratuitous delta4_y disjunct.
   May 23, changed delta4 constant from -11.2 to 0.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,5000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
( 
  ( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
   (delta_y y1 y2 y3 y4 y5 y6 < &10) \/
  delta4_y y1 y2 y3 y4 y5 y6 > &0  \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

add
{
  idv="4680581274 delta issue";
  doc="quad case both diags > 3.01, y9 long.
    This justifies the assumption the disjunct delta < 10 in the inequality.
   4559601669 gives the gratuitous delta4_y disjunct.
   May 23, changed delta4 constant from -11.2 to 0.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,5000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(
 (delta_y y1 y2 y3 y4 y5 y6 > &10) \/
  delta4_y y1 y2 y3 y4 y5 y6 > &0  \/
   ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


skip
{
  idv="7697147739 derived";
  doc="Summary of the series. Derived inequality.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.108);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (sqrt8,y9,sqrt8)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="7697147739";
  doc="quad case both diags > 3.01, y9 long
   Diagonal upper bound by
  Solve[Delta[x,2,2,x,2,Sqrt[8]]==0,x] (*x < 3.108 *)";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.108);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (sqrt8,y9,sqrt8)]
(( tauq y1 y2 y3 y4 y5 y6 y7 y8 y9    > #0.696 - #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 <  &25) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


add
{
  idv="7697147739 delta issue";
  doc="quad case both diags > 3.01, y9 long
   Diagonal upper bound by
  Solve[Delta[x,2,2,x,2,Sqrt[8]]==0,x] (*x < 3.108 *)";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.01,y4,#3.166);
      (#2.0,y5,&2);
      (#2.0,y6,&2);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (sqrt8,y9,sqrt8)]
(( delta_y y1 y2 y3 y4 y5 y6    > &25) \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


addtex (Section,"Main Estimate","Quadrilaterals (non ad hoc)");;

addtex(Comment,"",
"
This is the calculation of quadrilaterals (non ad hoc). TameTableD[r,s],
 for (r+s=4): (4,0), (3,1) (2,2).
By triangulating cases away, we may assume that both diagonals are => 3.01.
If there is adjacent short edges [2,2.52], we may deform so that both =2.
We can extremize the long edges [2.52,3.01].

In the case (4,0), when top edges are 2, some diagonal < 3.01, so nothing to do here.

In the case (3,1), there are two cases, depending on y9.  Both can be eliminated
without further interval calculations as follows:
  In fact,
  Solve[Delta[x, 2, 2, x, 2, 2.52] == 0, x], gives x< 3.01, so one is  impossible.
  Solve[Delta[x,2,2,x,2,3.01]==0,x], gives x < 3.166.  This domain
  was already encountered in the Quad 0.696 case.
  Since tameTableD[3,1] < 0.696 - 0.11, this is covered by a previous quad ineq.

Now consider (2,2). Six cases total up to symmetry.
  factor of 2 whether the long edges are adjacent.
  factor of 3 the number {0,1,2} of the long edges that are minimal 2.52.
  Also, the shorter diagonal can slice in two distinguishable ways, if long edges are adjc.

  Here are the shorter diagonal upper bounds in the six cases:
Solve[Delta[x,2.52,2,x,2.52,2]==0,x] (* < 3.22 *)
Solve[Delta[x,2.52,2,x,2,2.52]==0,x] (* < 3.18 *)

Solve[Delta[x,3.01,2,x,2.52,2]==0,x] (* < 3.41 *)
Solve[Delta[x,3.01,2,x,2,2.52]==0,x] (* < 3.33 *)

Solve[Delta[x,3.01,2,x,3.01,2]==0,x] (* < 3.62 *)
Solve[Delta[x,3.01,2,x,2,3.01]==0,x] (* < 3.47 *)

In cases where the two top long edges are separated
by the diagonal, we can triangulate using the following triangle calcs.

This reduces everything to three quad cases, where the long top edges are y8,y9.
If y8, y9 are both 3.01, use 8964099283 to show it is nonoptimal.
If y8, y9 are both 2.52, triangulate using the long diagonal.

This leaves one quad case, where y8=2.52 and y9=3.01, not separated by short diag.
If long diag <= 3.41, it is covered by the calcs for short diag (which is <= 3.41).
Else long diag [3.41,3.634].  Triangulate by the long diag. Run the quad cluster.


So in the end, all quad cases can be replaced by triangulations except this last case.
");;

(*
Deprecated remark:
If the shorter diag <= 3.15, we slice and use two triangle calcs.
If the shorter diag >= 3.15, we use a num1 calc to show it is nonoptimal.
*)


skip
{
  idv="3456082115";
  doc=" tameTableD[2,2] 
     Triangulate quad with diagonal y4.
     Use if both long edges are 2.52.
    Deprecated. It is a special case of 4922521904";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.22);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2) 
 )`;
};;

add
{
  idv="7720405539";
  doc=" tameTableD[2,2] 
 Triangulate quad with diagonal y4.
 Use if exactly one long edge is 2.52.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.41);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 - #0.2) 
 )`;
};;

add
{
  idv="2739661360";
  doc=" tameTableD[2,2] 
  Triangulate quad with diagonal y4.
  Use if some long edge is 3.01 and if diag <= 3.41.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.41);
    (#3.01,y5,#3.01);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 + #0.2) 
 )`;
};;

add
{
  idv="9269152105";
  doc=" tameTableD[2,2] 
  Triangulate quad with diagonal y4.
  Use if both long edges are 3.01 and if 3.41 <= diag <= 3.62.
  If diag <= 3.41, then it falls into the previous case.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.41,y4,#3.62);
    (#3.01,y5,#3.01);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 ) 
 )`;
};;

(* now for the cases where the shorter diagonal does not separate long edges *)

add
{
  idv="4922521904";
  doc=" tameTableD[2,2] 
  Triangulate quad with diagonal y4.
   This is the case two top edges =2.52. 
   We use whichever diagonal separates long edges.  
   Its bound comes from top delta:
  Solve[Delta[3.01, 2, 2.52, x, 2.52, 2] == 0, x] (* x < 3.339 *) ";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.339);
    (#2.52,y5,#2.52);
      (&2,y6,&2)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 2 2 / &2 ) 
 )`;
};;

add {
  idv="9507202313";
  doc="tameTableD[2,2]. 
  Triangulate quad with diagonal y4.
  Case both diags > 3.01, y6, y9 long (2.52 and 3.01), 
  short diagonal doesn't separate long edges.
  Triangulate by long diagonal (at least 3.41 for otherwise it drops into case
   where short diagonal separates long edges).
  Solve[Delta[x, 2, 2, 3.01, 2.52, 3.01] == 0, x] (* x < 3.634 *)
  ";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.41,y4,#3.634);
      (#2.0,y5,&2);
      (#2.52,y6,#2.52);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(
      delta_y y1 y2 y3 y4 y5 y6 > &30 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;

add {
  idv="1637868761";
  doc="  Triangulate quad with diagonal y4.
  Case both diags > 3.01, y6, y9 long (2.52 and 3.01), 
   short diagonal doesn't separate long edges.
  Triangulate by long diagonal (at least 3.41 for otherwise it drops into case
   where short diagonal separates long edges).
  Solve[Delta[x, 2, 2, 3.01, 2.52, 3.01] == 0, x] (* x < 3.634 *)
";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Quad_cluster 0.001;Xconvert;Tex;Penalty(1500.0,3000.0)];
  ineq = all_forall `ineq [
      (#2.0,y1,&2 * h0);
      (#2.0,y2,&2 * h0);
      (#2.0,y3,&2 * h0);
      (#3.41,y4,#3.634);
      (#2.0,y5,&2);
      (#2.52,y6,#2.52);
      (#2.0,y7,&2 * h0);
      (#2.0,y8,&2);
      (#3.01,y9,#3.01)]
(
    tauq y1 y2 y3 y4 y5 y6 y7 y8 y9 > tame_table_d 2 2 \/
     delta_y y1 y2 y3 y4 y5 y6 < &30 \/
  ( enclosed y1 y5 y6 y4 y2 y3 y7 y8 y9 < #3.01 ))`;
};;


addtex (Section,"Main Estimate","Triangles");;

(* FIRST DEAL WITH AD HOC TRIANGLES *)

addtex(Comment,"",
"
If the sliced edge is between [sqrt8,3.01], the triangle (2,1) has tau < tame_table_d 2 1.
Nevertheless tau > 0.11
We must compensate by putting an extra penalty term (tame_table_d 2 1 - 0.11)
 in the other pieces.

Ad hoc LP.  The case.
tauB4h 9620775909 apex4 tau >= 0.477, quad, diags >= sqrt8, one edge [2.52,sqrt8]
   This can break into a triangle (2,1) [2.52,sqrt8][sqrt8,3.01] and a triangle (1,2).
   In this case we run one extra triangle calc, 
   replace tame_table_d entries with 0.477 - 0.11.
   
tau5h  9620775909-5 std5 INTER std56flatfree, tau >= 0.696, pent, diags >= sqrt8,
   This will give an A-piece with [sqrt8,3.01][sqrt8,3.01].  need 0.696 - 2 0.11.

9563139965D, dart4_diag3_b, tau >= 0.467, quad, diags >= 3.
   No triangle occurs here.  No diagonal drawn.

");;

add
{
  idv="3603097872";
  doc="skinny clipped triangle (ear) inequality
    In the application to tameTableD[4,1], we have y4=3.01, y6=2, 
   It is slightly generalized for later use.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (sqrt8,y4,#3.01);
    (&2,y5,#2.52);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6  - #0.1 * (#3.01 - y4) > #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="5405130650";
  doc=" 0.477 estimate, clipped A-piece triangle.
   Case 1.
   We reuse the other cut triangle (bound 0.11) from above.
   We have not done it here, but we could extremize edge y5, y6.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (sqrt8,y4,#3.01);
    (#2.52,y5,sqrt8);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y4) > #0.477 -  #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;

skip
{
  idv="6029974545";
  doc="triangle 1,2 ad hoc  case.
    If the y4 edge is extremal at 2.52, we get at least tame_table_d[0,3] > 0.477-0.11.
     So that case folds into the [0,3] case.
   This is a special case of 5405130650.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,sqrt8);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y6) > #0.477 - #0.11          
 )`;
};;


add
{
  idv="5766053833";
  doc="triangle 1,2, ad hoc 0.696 case ";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,#3.01);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6 + #0.1 * (#3.01 - y5)  + #0.1 * (#3.01 - y6) > 
   #0.696 - &2 * #0.11
 )`;
};;

add
{
  idv="5026777310";
  doc="pentagon case, clipped A-piece triangle.
   prove constraint on edge lengths.
   Corollary of 5766053833.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0);Deprecated];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.01);
    (#3.01,y5,#3.01);
      (&2,y6,#2.52)
  ]
(
  ( taum y1 y2 y3 y4 y5 y6 > tame_table_d 4 1 - &2 * #0.11) \/
  (delta_y y1 y2 y3 y4 y5 y6 < &0) 
 )`;
};;


add
{
  idv="7881254908";
  doc="triangle 1,2, ad hoc 0.696 case LP";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (sqrt8,y5,#3.01);
      (sqrt8,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6   >    #0.696 - &2 * #0.11
 )`;
};;

addtex(Section,"Main Estimate","Triangle (non ad hoc)");;

skip
{
  idv="1107929058";
  doc="triangle 2,1.
    This is identical to 'OMKYNLT 2 1', so we skip it here.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 2 1
 )`;
};;

add
{
  idv="7645170609";
  doc="triangle 2,1";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (&2,y5,&2);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 2 1
 )`;
};;

(* skip 2,1 long edge 3.01 *)

(* 1,2 cases short-long patterns on y5,y6   aa, ab, ac,  bb, bc,    cc.
*)

skip
{
  idv="1532755966";
  doc="triangle 1,2-aa.
     This is identical to 'OMKYNLT 1 2' so we skip it here.";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2
 )`;
};;

add
{
  idv="7097350062";
  doc="triangle 1,2-ab";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + (tame_table_d 2 1 - #0.11)          
 )`;
};;

add
{
  idv="2900061606";
  doc="triangle 1,2-ac";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#2.52,y5,#2.52);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + (tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="2200527225";
  doc="triangle 1,2-bb";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,sqrt8);
      (sqrt8,y6,sqrt8)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="3106201101";
  doc="triangle 1,2-bc";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (sqrt8,y5,sqrt8);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;

add
{
  idv="9816718044";
  doc="triangle 1,2-cc";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (&2,y4,&2);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 1 2 + &2 *(tame_table_d 2 1 - #0.11)
 )`;
};;

(* 0,3 patterns: extremize all the way from 2.52 to 3.01 without stopping at sqrt8.
    The case is given by the number of top edges {0,1,2,3} of length 3.01
*)

add
{
  idv="1080462150";
  doc="triangle 0,3";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#2.52,y5,#2.52);
      (#2.52,y6,#2.52)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="4143829594";
  doc="triangle 0,3";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#2.52,y5,#2.52);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


add
{
  idv="7459553847";
  doc="triangle 0,3";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#2.52,y4,#2.52);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;

add
{
  idv="4528012043";
  doc="triangle 0,3";
  tags=[Flypaper["FHOLLLW"];Main_estimate;Cfsqp;Xconvert;Tex;Penalty(50.0,500.0)];
  ineq = all_forall `ineq [
    (&2,y1,#2.52);
    (#2.0,y2,#2.52);
    (&2,y3,#2.52);
    (#3.01,y4,#3.01);
    (#3.01,y5,#3.01);
      (#3.01,y6,#3.01)
  ]
(
   taum y1 y2 y3 y4 y5 y6  > tame_table_d 0 3 + &3 *(tame_table_d 2 1 - #0.11)
 )`;
};;


(*
addtex(Section,"Experiments","");;

let experiment x = ();;
*)

end;;
