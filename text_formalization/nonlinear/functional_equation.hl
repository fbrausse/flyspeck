(* ========================================================================= *)
(* FLYSPECK - BOOK FORMALIZATION                                             *)
(*                                                                           *)
(* Chapter: nonlinear inequalities                                           *)
(* Author:  Thomas Hales      *)
(* Date: 2012-05-20                                                          *)
(* ========================================================================= *)


(* May 2012 functional equational definitions of 
   inequality functions.

   This code is to be used in automated generation of C++ 
   taylorFunctions.

   scripts.hl generates ocaml Sphere2 module based on these lemmas.

   There are some more to implement.  Search "TO HERE" in this file.

autogen:
   see functional_* lemmas in this file.
   see functional1_* lemmas in this file for univariate functions.

native_c:
	unit,x1,x2,x3,x4,x5,x6,
		y1,y2,y3,y4,y5,y6,
	  delta_x,delta_x4,
	  dih_x, sol_x,rad2_x,	
   
   eta_x (3 vars)

	  num1,num2,num_combo1,
	  rat1,rat2,den2,
	  upper_dih,
	  surf_x,

	  delta_y_LC,
	  mdtau_y_LC,
	  mdtau2uf_y_LC,

	  norm2hh_x,


not_found:
	  /* 
	  not in hol light: ldih5_x,eta2_234,eta2_456,
	  x1cube,x1square,
	  dih2_x_div_sqrtdelta_posbranch,
	  dih4_x_div_sqrtdelta_posbranch,
	  dih6_x_div_sqrtdelta_posbranch,
          ldih4_x_div_sqrtdelta_posbranch,
	  vol3r_126_x,
          lfun_sqrtx1_div2 // = promote1_to_6(flat_term_x) / (-sol0).
          lindih(&),
	  */

ignore:
	  edge_flat_x,
	  tau_lowform_x,

incompatible_types:
	  // different type. flat_term_x:real->real in HOL-Light

todo:
   surfR126d(&)
          ell_uvx, // sep 2011.
	  ell_vx2,
	  // mar 2012, local optimality of bcc lattice
	  selling_volume2,
	  selling_surface_nn,
	  selling_surface_nn2_013,
	  selling_surface_nn01_23,
	  selling_homog,
	  fcc_ineq,


	  // to here:
	  gamma3f_x_vLR_lfun,
	  gamma3f_x_vLR0,
	  gamma3f_x_vL_lfun,  
	  gamma3f_x_vL0,
	  gamma3f_x_v_lfun,  
	  gamma3f_x_v0,

          gamma3f_126_x_s_n,
	  gamma3f_135_x_s_n,
	  gamma3f_vLR_x_nlfun,
	  gamma3f_vLR_x_n0,
	  gamma3f_vL_x_nlfun,
	  gamma3f_vL_x_n0,
	  // end here.
	  ;

extra parameter cases:
 "taum_x1(&&)",
 "taum_x2(&&)", "taum_x1_x2(&)", "arclength_x1(&&)", "arclength_x2(&&)",
 "surfR126d(&)",  "delta_126_x(&&&)", "delta_234_x(&&&)",
 "delta_135_x(&&&)", "taum_sub1_x(&)", "delta_sub1_x(&)",
 "taum_sub246_x(&&&)", "taum_sub345_x(&&&)"

 *)


 module Functional_equation = struct  

  open Hales_tactic;;
  open Nonlinear_lemma;;

  let GMATCH = GMATCH_SIMP_TAC;;

let uni = new_definition `uni (f,x) x1 x2 x3 x4 x5 x6 = 
  (f:A->B) ( x x1 x2 x3 x4 x5 x6)`;;

let constant6 = new_definition `constant6 c x1 x2 x3 x4 x5 x6 = c`;;

let promote3_to_6 = new_definition
    `promote3_to_6 f x1 x2 x3 x4 x5 x6 = f x1 x2 x3`;;

let promote1_to_6 = new_definition
  `promote1_to_6 f x1 x2 x3 x4 x5 x6 = f x1`;;

let functional_proj_x1 = prove_by_refinement(
  `proj_x1 = promote1_to_6 I`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;promote1_to_6;proj_x1;I_DEF];
  ]);;
  (* }}} *)

(* these are circular, because we will define rotatek
   as a composition of proj_xm *)

let functional_proj_x2 = prove_by_refinement(
  `proj_x2 = rotate2 proj_x1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_x1;proj_x2;Sphere.rotate2];
  ]);;
  (* }}} *)

let functional_proj_x3 = prove_by_refinement(
  `proj_x3 = rotate3 proj_x1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_x1;proj_x3;Sphere.rotate3];
  ]);;
  (* }}} *)

let functional_proj_x4 = prove_by_refinement(
  `proj_x4 = rotate4 proj_x1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_x1;proj_x4;Sphere.rotate4];
  ]);;
  (* }}} *)

let functional_proj_x5 = prove_by_refinement(
  `proj_x5 = rotate5 proj_x1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_x1;proj_x5;Sphere.rotate5];
  ]);;
  (* }}} *)

let functional_proj_x6 = prove_by_refinement(
  `proj_x6 = rotate6 proj_x1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_x1;proj_x6;Sphere.rotate6];
  ]);;
  (* }}} *)

let rh0 = new_definition `rh0 = &1/(h0 - &1)`;;

let two6 = new_definition `two6 = constant6 ( &2)`;;

let zero6 = new_definition `zero6 = constant6 ( &0)`;;

let dummy6 = new_definition `dummy6 = constant6 ( &0)`;;

let four6 = new_definition `four6 = constant6 ( &4)`;;

let mk_126 = new_definition `mk_126 f =
  compose6 f proj_x1 proj_x2 two6 two6 two6 proj_x6`;;

let mk_456 = new_definition `mk_456 f =
  compose6 f two6 two6 two6 proj_x4 proj_x5 proj_x6`;;

let mk_135 = new_definition `mk_135 f = 
  compose6 f proj_x1 two6 proj_x3 two6 proj_x5 two6`;;

let add6 = new_definition `add6 f g x1 x2 x3 x4 x5 x6 = 
  f x1 x2 x3 x4 x5 x6 + g x1 x2 x3 x4 x5 x6`;;

let scalar6 = new_definition `scalar6 f r x1 x2 x3 x4 x5 x6 = 
  (f x1 x2 x3 x4 x5 x6) * (r:real)`;;

let mul6 = new_definition `mul6 f g x1 x2 x3 x4 x5 x6 = 
  f x1 x2 x3 x4 x5 x6 * g x1 x2 x3 x4 x5 x6`;;

let div6 = new_definition `div6 f g x1 x2 x3 x4 x5 x6 = 
  f x1 x2 x3 x4 x5 x6 / g x1 x2 x3 x4 x5 x6`;;

let sub6 = new_definition `sub6 f g x1 x2 x3 x4 x5 x6 = 
  f x1 x2 x3 x4 x5 x6  -  g x1 x2 x3 x4 x5 x6`;;

let proj_y1 = new_definition `proj_y1 x1 x2 x3 x4 x5 x6 = 
  sqrt(x1)`;;

let proj_y2 = new_definition `proj_y2 x1 x2 x3 x4 x5 x6 = 
  sqrt(x2)`;;

let proj_y3 = new_definition `proj_y3 x1 x2 x3 x4 x5 x6 = 
  sqrt(x3)`;;

let proj_y4 = new_definition `proj_y4 x1 x2 x3 x4 x5 x6 = 
  sqrt(x4)`;;

let proj_y5 = new_definition `proj_y5 x1 x2 x3 x4 x5 x6 = 
  sqrt(x5)`;;

let proj_y6 = new_definition `proj_y6 x1 x2 x3 x4 x5 x6 = 
  sqrt(x6)`;;


let domain6 = new_definition `domain6 h f g = 
  (!x1 x2 x3 x4 x5 x6. h x1 x2 x3 x4 x5 x6 ==>
      (f x1 x2 x3 x4 x5 x6 = g x1 x2 x3 x4 x5 x6))`;;

(* should be called something different, because we project out 3 coords *)

let rotate234 = new_definition `rotate234 f = 
  compose6 f proj_x2 proj_x3 proj_x4 unit6 unit6 unit6`;;

let rotate126 = new_definition `rotate126 f = 
  compose6 f proj_x1 proj_x2 proj_x6 unit6 unit6 unit6`;;

let rotate345 = new_definition `rotate345 f = 
  compose6 f proj_x3 proj_x4 proj_x5 unit6 unit6 unit6`;;

let functional_overload() = (
  overload_interface ("+",`add6`);
  overload_interface ("-",`sub6`);
  overload_interface ("/",`div6`);
  overload_interface ("*",`mul6`));;

let _ = functional_overload();;

let proj_x1 = Nonlinear_lemma.proj_x1;;
let proj_x2 = Nonlinear_lemma.proj_x2;;
let proj_x3 = Nonlinear_lemma.proj_x3;;
let proj_x4 = Nonlinear_lemma.proj_x4;;
let proj_x5 = Nonlinear_lemma.proj_x5;;
let proj_x6 = Nonlinear_lemma.proj_x6;;
let unit6 = Nonlinear_lemma.unit6;;
let compose6 = Nonlinear_lemma.compose6;;


let functional_proj_y1 = prove_by_refinement(
  `proj_y1 = promote1_to_6 sqrt`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;promote1_to_6;proj_y1];
  ]);;
  (* }}} *)

let functional_proj_y2 = prove_by_refinement(
  `proj_y2 = rotate2 proj_y1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_y1;proj_y2;Sphere.rotate2];
  ]);;
  (* }}} *)

let functional_proj_y3 = prove_by_refinement(
  `proj_y3 = rotate3 proj_y1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_y1;proj_y3;Sphere.rotate3];
  ]);;
  (* }}} *)

let functional_proj_y4 = prove_by_refinement(
  `proj_y4 = rotate4 proj_y1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_y1;proj_y4;Sphere.rotate4];
  ]);;
  (* }}} *)

let functional_proj_y5 = prove_by_refinement(
  `proj_y5 = rotate5 proj_y1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_y1;proj_y5;Sphere.rotate5];
  ]);;
  (* }}} *)

let functional_proj_y6 = prove_by_refinement(
  `proj_y6 = rotate6 proj_y1`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;proj_y1;proj_y6;Sphere.rotate6];
  ]);;
  (* }}} *)


let sqrt_sqrt = prove_by_refinement(
  `!x. &0 <= x ==> (sqrt x * sqrt x = x)`,
  (* {{{ proof *)
  [
  MESON_TAC[arith `&0 pow 2 = &0`;(SPEC `&0` Nonlinear_lemma.sq_pow2)];
  ]);;
  (* }}} *)

let functional_norm2hh_x = prove_by_refinement(
  `norm2hh_x = uni(pow2,(proj_y1 - constant6 (hminus + hplus))) +
    uni(pow2, proj_y2 - two6) + uni(pow2,proj_y3 - two6) +
    uni(pow2, proj_y4 - two6) + uni(pow2,proj_y5 - two6) +
    uni(pow2, proj_y6 - two6)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM; add6; sub6; uni;proj_y1;Nonlinear_lemma.pow2; two6;Sphere.norm2hh_x;Sphere.norm2hh;proj_y1;proj_y2;proj_y3;proj_y4;proj_y5;proj_y6;constant6];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_eta2_126 = prove_by_refinement(
  `domain6
    (\x1 x2 x3 x4 x5 x6.
       (&0 <= x1 /\ &0 <= x2 /\ &0 <= x6))
    eta2_126  (uni(pow2,rotate126 (promote3_to_6 eta_x)))`,
  (* {{{ proof *)
  [
 REWRITE_TAC[domain6;Sphere.eta2_126;Sphere.eta_y; uni; rotate126;compose6;promote3_to_6;proj_x1;proj_x2;proj_x6;unit6;LET_END_DEF;LET_DEF;Nonlinear_lemma.pow2];
  BY(ASM_SIMP_TAC[sqrt_sqrt])
  ]);;
  (* }}} *)


let functional_rotate2 = prove_by_refinement(
  `!f. rotate2 f = compose6 f proj_x2 proj_x3 proj_x1 proj_x5 proj_x6 proj_x4`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Sphere.rotate2;FUN_EQ_THM;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6]);
  ]);;
  (* }}} *)

let functional_rotate3 = prove_by_refinement(
  `!f. rotate3 f = compose6 f proj_x3 proj_x1 proj_x2 proj_x6 proj_x4 proj_x5`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Sphere.rotate3;FUN_EQ_THM;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6]);
  ]);;
  (* }}} *)

let functional_rotate4 = prove_by_refinement(
  `!f. rotate4 f = compose6 f proj_x4 proj_x2 proj_x6 proj_x1 proj_x5 proj_x3`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Sphere.rotate4;FUN_EQ_THM;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6]);
  ]);;
  (* }}} *)

let functional_rotate5 = prove_by_refinement(
  `!f. rotate5 f = compose6 f proj_x5 proj_x3 proj_x4 proj_x2 proj_x6 proj_x1`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Sphere.rotate5;FUN_EQ_THM;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6]);
  ]);;
  (* }}} *)

let functional_rotate6 = prove_by_refinement(
  `!f. rotate6 f = compose6 f proj_x6 proj_x1 proj_x5 proj_x3 proj_x4 proj_x2`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Sphere.rotate6;FUN_EQ_THM;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6]);
  ]);;
  (* }}} *)

let functional_x1_delta_x = prove_by_refinement(
  `x1_delta_x = proj_x1 * delta_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
   BY(REWRITE_TAC[proj_x1;Sphere.x1_delta_x;mul6])
  ]);;
  (* }}} *)

let functional_delta4_squared_x = prove_by_refinement(
  `delta4_squared_x = uni(pow2,delta_x4)`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;uni;Nonlinear_lemma.pow2;Sphere.delta4_squared_x])
  ]);;
  (* }}} *)

(*
let functional_vol_x = prove_by_refinement(
  `vol_x = uni(sqrt,delta_x) / constant6 (&12)`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;uni;Sphere.vol_x;constant6;div6]);
  ]);;
  (* }}} *)
*)

let functional_vol_x = prove_by_refinement(
  `vol_x = scalar6 (uni(sqrt,delta_x)) (&1 / &12)`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM;uni;Sphere.vol_x;scalar6]);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_dih2_x = prove_by_refinement(
  `dih2_x = rotate2 dih_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[Sphere.dih2_x;Sphere.rotate2];
  BY(MESON_TAC[Nonlinear_lemma.dih_x_sym])
  ]);;
  (* }}} *)

let functional_dih3_x = prove_by_refinement(
  `dih3_x = rotate3 dih_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[Sphere.dih3_x;Sphere.rotate3];
  ]);;
  (* }}} *)

let functional_dih4_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\
       &0 <= x4 /\ &0 <= x5 /\ &0 <= x6)
	      dih4_x  (rotate4 dih_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6];
    REWRITE_TAC[Sphere.dih4_x; Sphere.rotate4;Sphere.dih4_y; Sphere.dih_y; LET_DEF;LET_END_DEF];
  REPEAT WEAK_STRIP_TAC;
  REPEAT( GMATCH_SIMP_TAC (ISPEC `&0` Nonlinear_lemma.sq_pow2));
  BY(ASM_REWRITE_TAC[REAL_ARITH `&0 pow 2 = &0`])
  ]);;
  (* }}} *)

let functional_dih5_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\
       &0 <= x4 /\ &0 <= x5 /\ &0 <= x6)
	      dih5_x  (rotate5 dih_x)`,
  (* {{{ proof *)
  [
    REWRITE_TAC[domain6];
    REWRITE_TAC[Sphere.dih5_x; Sphere.rotate5;Sphere.dih5_y; Sphere.dih_y; LET_DEF;LET_END_DEF];
    REPEAT WEAK_STRIP_TAC;
    REPEAT( GMATCH_SIMP_TAC (ISPEC `&0` Nonlinear_lemma.sq_pow2));
    (ASM_REWRITE_TAC[REAL_ARITH `&0 pow 2 = &0`]);
    MESON_TAC[Nonlinear_lemma.dih_x_sym;Nonlinear_lemma.dih_x_sym2];
  ]);;
  (* }}} *)

let functional_dih6_x = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6.
   &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\
       &0 <= x4 /\ &0 <= x5 /\ &0 <= x6)
	      dih6_x  (rotate6 dih_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6];
    REWRITE_TAC[Sphere.dih6_x; Sphere.rotate6;Sphere.dih6_y;Sphere.dih_y; LET_DEF;LET_END_DEF];
  REPEAT WEAK_STRIP_TAC;
  REPEAT( GMATCH_SIMP_TAC (ISPEC `&0` Nonlinear_lemma.sq_pow2));
  (ASM_REWRITE_TAC[REAL_ARITH `&0 pow 2 = &0`]);
  ]);;
  (* }}} *)

(*
let functional_lfun_y1 = prove_by_refinement(
  `lfun_y1 = (unit6 * constant6 h0 + proj_x1 * constant6 (-- &1))*
  (unit6 / (constant6 h0 - unit6))`,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[add6;mul6;div6;sub6;constant6];
    REWRITE_TAC[Sphere.lfun_y1;Sphere.lfun;		Nonlinear_lemma.unit6;Nonlinear_lemma.proj_x1];
REAL_ARITH_TAC;
  ]);;
  (* }}} *)
*)


let functional_lfun_y1 = prove_by_refinement(
  `lfun_y1 = scalar6 (scalar6 unit6 h0 - proj_x1) rh0`,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[add6;scalar6;mul6;div6;sub6;constant6;rh0];
    REWRITE_TAC[Sphere.lfun_y1;Sphere.lfun;		Nonlinear_lemma.unit6;Nonlinear_lemma.proj_x1];
REAL_ARITH_TAC;
  ]);;
  (* }}} *)
(*
let functional_ldih_x = prove_by_refinement(
  `ldih_x = 
    (unit6 * constant6 h0 + proj_y1 * constant6 ( -- #0.5))*
    (unit6 / (constant6 h0 - unit6)) * dih_x`,
  (* {{{ proof *)
  [
     REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[add6;mul6;div6;sub6;constant6];
    REWRITE_TAC[proj_y1;Sphere.ldih_x;Nonlinear_lemma.unit6;Sphere.lfun];
    REAL_ARITH_TAC;
  ]);;
  (* }}} *)
*)

let functional_ldih_x = prove_by_refinement(
  `ldih_x = 
    (scalar6 (scalar6 unit6 h0 - scalar6 proj_y1 (#0.5)) rh0) * dih_x`,
  (* {{{ proof *)
  [
     REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[add6;mul6;div6;sub6;constant6;rh0;scalar6];
    REWRITE_TAC[proj_y1;Sphere.ldih_x;Nonlinear_lemma.unit6;Sphere.lfun];
    REAL_ARITH_TAC;
  ]);;
  (* }}} *)

let functional_ldih2_x = prove_by_refinement(
  `ldih2_x = rotate2 ldih_x`,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[Sphere.rotate2;Sphere.ldih2_x;Sphere.ldih_x;Sphere.dih2_x];
  MESON_TAC[Nonlinear_lemma.dih_x_sym];
  ]);;
  (* }}} *)

let functional_ldih3_x = prove_by_refinement(
  `ldih3_x = rotate3 ldih_x`,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM];
  REWRITE_TAC[Sphere.rotate3;Sphere.ldih3_x;Sphere.ldih_x;Sphere.dih3_x];
  ]);;
  (* }}} *)

let functional_ldih6_x = prove_by_refinement(
  `domain6 
    (\x1 x2 x3 x4 x5 x6. &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\
       &0 <= x4 /\ &0 <= x5 /\ &0 <= x6)
    ldih6_x 
    (rotate6 ldih_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6 ];
  REWRITE_TAC[Sphere.rotate6;Sphere.ldih6_x;Sphere.ldih_x;Sphere.dih6_x;Sphere.dih6_y; Sphere.dih_y;LET_DEF;LET_END_DEF];
  BY(ASM_SIMP_TAC[sqrt_sqrt])
  ]);;
  (* }}} *)

let functional_eulerA_x = prove_by_refinement(
  `eulerA_x = proj_y1 * proj_y2 * proj_y3 +
     scalar6 (proj_y1 * (proj_x2 + proj_x3 - proj_x4)) (#0.5) +
     scalar6 (proj_y2 * (proj_x1 + proj_x3 - proj_x5)) (#0.5) +
     scalar6 (proj_y3 * (proj_x1 + proj_x2 - proj_x6)) (#0.5)
    `,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM;mul6;add6; sub6;proj_y1;proj_y2;proj_y3;scalar6; constant6;proj_x1;proj_x2; proj_x3;proj_x4; proj_x5;proj_x6;Sphere.eulerA_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_gchi1_x = prove_by_refinement(
  `gchi1_x = uni (gchi,proj_y1) * dih_x`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.gchi1_x;uni;proj_y1;mul6]);
  ]);;
  (* }}} *)

let functional_gchi2_x = prove_by_refinement(
  `gchi2_x = uni (gchi,proj_y2) * dih2_x`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.gchi2_x;uni;proj_y2;mul6]);
  ]);;
  (* }}} *)

let functional_gchi3_x = prove_by_refinement(
  `gchi3_x = uni (gchi,proj_y3) * dih3_x`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.gchi3_x;uni;proj_y3;mul6]);
  ]);;
  (* }}} *)

let functional_gchi4_x = prove_by_refinement(
  `gchi4_x = uni (gchi,proj_y4) * dih4_x`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.gchi4_x;uni;proj_y4;mul6]);
  ]);;
  (* }}} *)

let functional_gchi5_x = prove_by_refinement(
  `gchi5_x = uni (gchi,proj_y5) * dih5_x`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.gchi5_x;uni;proj_y5;mul6]);
  ]);;
  (* }}} *)

let functional_gchi6_x = prove_by_refinement(
  `gchi6_x = uni (gchi,proj_y6) * dih6_x`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.gchi6_x;uni;proj_y6;mul6]);
  ]);;
  (* }}} *)

let functional_eta2_135 = prove_by_refinement(
  `eta2_135 = rotate3 eta2_126`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;Sphere.rotate3;Sphere.eta2_135;Sphere.eta2_126];
  BY(MESON_TAC[Collect_geom.ETA_Y_SYYM])
  ]);;
  (* }}} *)

let functional_vol3_x_sqrt = prove_by_refinement(
  `domain6
    (\x1 x2 x3 x4 x5 x6.
       &0 <= x1 /\ &0 <= x2 /\ &0 <=x6)
    vol3_x_sqrt 
    (mk_126 vol_x)`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[domain6;mk_126;two6;constant6;proj_x1;proj_x2;proj_x6;compose6;Nonlinear_lemma.vol3_vol_x])
  ]);;
  (* }}} *)

(*
let functional_vol3f_x_lfun = prove_by_refinement(
  `    (domain6
       (\x1 x2 x3 x4 x5 x6.
	&0 <= x1 /\ &0 <= x2 /\ &0 <=x6)
       vol3f_x_lfun
       (constant6 ( &2 * mm1 / pi ) *
    (two6 * compose6 dih_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
       two6 * compose6 dih2_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
       two6 * compose6 dih6_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
       compose6 dih3_x proj_x1 proj_x2 two6 two6 two6 proj_x6 + 
       compose6 dih4_x proj_x1 proj_x2 two6 two6 two6 proj_x6 + 
       compose6 dih5_x proj_x1 proj_x2 two6 two6 two6 proj_x6 -
       constant6 ( &3 * pi)) 
    - (constant6 (&8 * mm2 / pi)) *
     (compose6 ldih_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
	compose6 ldih2_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
	compose6 ldih6_x proj_x1 proj_x2 two6 two6 two6 proj_x6)))
    `,
  (* {{{ proof *)
  [
    REWRITE_TAC[LET_DEF;LET_END_DEF; two6; domain6;constant6;mul6;add6;sub6;proj_x1; compose6;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6];
  BY(REWRITE_TAC[Nonlinear_lemma.vol3f_x_lfun_alt])
  ]);;
  (* }}} *)
*)

let functional_vol3f_x_lfun = prove_by_refinement(
  `domain6
       (\x1 x2 x3 x4 x5 x6.
	&0 <= x1 /\ &0 <= x2 /\ &0 <=x6)
       vol3f_x_lfun
       (constant6 ( &2 * mm1 / pi ) *
    (two6 * mk_126  dih_x + two6 * mk_126 dih2_x + two6 * mk_126 dih6_x +
       mk_126 dih3_x + mk_126 dih4_x + mk_126 dih5_x -
       constant6 ( &3 * pi)) 
    - (constant6 (&8 * mm2 / pi)) *
     (mk_126 ldih_x + 	mk_126 ldih2_x + mk_126 ldih6_x ))
    `,
  (* {{{ proof *)
  [
    REWRITE_TAC[LET_DEF;LET_END_DEF;mk_126; two6; domain6;constant6;mul6;add6;sub6;proj_x1; compose6;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6];
  BY(REWRITE_TAC[Nonlinear_lemma.vol3f_x_lfun_alt])
  ]);;
  (* }}} *)

(*
let functional_vol3f_x_sqrt2_lmplus = prove_by_refinement(
  `    (domain6
       (\x1 x2 x3 x4 x5 x6.
	(&2 * h0) pow 2 <= x1 /\ &0 <= x2 /\ &0 <=x6)
       vol3f_x_sqrt2_lmplus
       (constant6 ( &2 * mm1 / pi ) *
    (two6 * compose6 dih_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
       two6 * compose6 dih2_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
       two6 * compose6 dih6_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
       compose6 dih3_x proj_x1 proj_x2 two6 two6 two6 proj_x6 + 
       compose6 dih4_x proj_x1 proj_x2 two6 two6 two6 proj_x6 + 
       compose6 dih5_x proj_x1 proj_x2 two6 two6 two6 proj_x6 -
       constant6 ( &3 * pi)) 
    - (constant6 (&8 * mm2 / pi)) *
     (compose6 ldih2_x proj_x1 proj_x2 two6 two6 two6 proj_x6 +
	compose6 ldih6_x proj_x1 proj_x2 two6 two6 two6 proj_x6)))`,
  (* {{{ proof *)
  [
    REWRITE_TAC[LET_DEF;LET_END_DEF;domain6; two6;constant6;mul6;add6;sub6;proj_x1;compose6;proj_x2; proj_x3;proj_x4;proj_x5;proj_x6];
  BY(REWRITE_TAC[Nonlinear_lemma.vol3f_x_sqrt2_lmplus_alt])
  ]);;
  (* }}} *)
*)



let functional_vol3f_x_sqrt2_lmplus = prove_by_refinement(
  `    (domain6
       (\x1 x2 x3 x4 x5 x6.
	(&2 * h0) pow 2 <= x1 /\ &0 <= x2 /\ &0 <=x6)
       vol3f_x_sqrt2_lmplus
       (constant6 ( &2 * mm1 / pi ) *
    (two6 * mk_126 dih_x  +
       two6 * mk_126 dih2_x +
       two6 * mk_126 dih6_x +
       mk_126 dih3_x +
        mk_126 dih4_x +
        mk_126 dih5_x -
       constant6 ( &3 * pi)) 
    - (constant6 (&8 * mm2 / pi)) *
     (mk_126 ldih2_x + 
	mk_126 ldih6_x)))`,
  (* {{{ proof *)
  [
    REWRITE_TAC[LET_DEF;LET_END_DEF;mk_126;domain6; two6;constant6;mul6;add6;sub6;proj_x1;compose6;proj_x2; proj_x3;proj_x4;proj_x5;proj_x6];
  BY(REWRITE_TAC[Nonlinear_lemma.vol3f_x_sqrt2_lmplus_alt])
  ]);;
  (* }}} *)

let cos797 = new_definition `cos797 = cos(#0.797)`;;

let functional_asn797k = prove_by_refinement(
  `asn797k = 
    proj_x1 * uni(asn,constant6 (cos797) * 
		     uni(sin, constant6(pi) / proj_x1))`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;mul6;div6;uni;cos797;constant6;proj_x1;Sphere.asn797k]);
  ]);;
  (* }}} *)

let functional_asnFnhk = prove_by_refinement(
  `asnFnhk = 
    proj_x2 * uni(asn,(proj_x1 * constant6 (sqrt3 / #4.0) +
		     (uni(sqrt,unit6 - 
			     uni(pow2,(proj_x1 * constant6 (#0.5))))) *
		     constant6 (#0.5)) * uni(sin,constant6(pi)/proj_x2))`,
  (* {{{ proof *)
  [
    (REWRITE_TAC[FUN_EQ_THM;sub6;mul6; div6;Nonlinear_lemma.pow2;add6;unit6; uni;constant6;proj_x1; proj_x2;Sphere.asnFnhk]);
  BY(REWRITE_TAC[REAL_ARITH `x * #0.5 = x/ &2`])
  ]);;
  (* }}} *)

let functional_acs_sqrt_x1_d4 = prove_by_refinement(
  `acs_sqrt_x1_d4 = uni(acs,scalar6 proj_y1 (#0.25))`,
  (* {{{ proof *)
  [
    BY(REWRITE_TAC[FUN_EQ_THM;uni;mul6;constant6;scalar6;proj_y1; Sphere.acs_sqrt_x1_d4;arith `x * #0.25 = x/ &4`])
  ]);;
  (* }}} *)

let functional_acs_sqrt_x2_d4 = prove_by_refinement(
  `acs_sqrt_x2_d4 = uni(acs,scalar6 proj_y2 (#0.25))`,
  (* {{{ proof *)
  [
    BY(REWRITE_TAC[FUN_EQ_THM;uni;mul6;constant6;scalar6;proj_y2; Sphere.acs_sqrt_x2_d4;arith `x * #0.25 = x/ &4`])
  ]);;
  (* }}} *)

(* ldih5_x ldih6_x not in HOL Light*)

let functional_arclength_x_123 = prove_by_refinement(
  `let al_num = proj_x1 + proj_x2 - proj_x3  in
  let al_den = uni(sqrt,scalar6 (proj_x1 * proj_x2) ( &4)) in
  let domain = 
    (\x1 x2 x3 x4 x5 x6. (&0 < x1 /\ &0 < x2 /\ &0 <= x3) /\
     (sqrt  x3 <= sqrt x1 + sqrt x2 /\ sqrt x1 <= sqrt x2 + sqrt x3 /\ 
      sqrt x2 <= sqrt x3 + sqrt x1)) in
    domain6 domain (arclength_x_123)  ( uni(acs, al_num / al_den ) )`,
  (* {{{ proof *)
  [
    REWRITE_TAC[LET_DEF;LET_END_DEF;];
     REWRITE_TAC[domain6];
    REWRITE_TAC[add6;mul6;div6;sub6;scalar6;constant6;uni];
    REWRITE_TAC[proj_x1;proj_x2;proj_x3;Sphere.arclength_x_123;];
    REPEAT STRIP_TAC;
    GMATCH_SIMP_TAC Trigonometry1.ACS_ARCLENGTH;
   ASM_REWRITE_TAC[];
   ASM_SIMP_TAC[SQRT_POS_LT;SQRT_POS_LE];
   AP_TERM_TAC;
   REPEAT(   GMATCH_SIMP_TAC (ISPEC `&0` Nonlinear_lemma.sq_pow2));
   ASM_SIMP_TAC[REAL_ARITH `&0 pow 2 = &0`;REAL_ARITH `&0 < x ==> &0 <= x`;REAL_ARITH `u + x * -- &1 = u - x`];
   AP_TERM_TAC;
   MATCH_MP_TAC EQ_SYM;
   REWRITE_TAC[REAL_ARITH `(x1 * x2)* &4 = x1 * (x2 * (&2 pow 2))`];
   REPEAT (GMATCH SQRT_MUL);
   GMATCH Euler_complement.SQRT_OF_POW_2_LE;
   REPEAT (GMATCH Real_ext.REAL_PROP_NN_MUL2);
   ASM_SIMP_TAC[REAL_ARITH `&0 <= &2 pow 2 /\ &0 <= &2`;REAL_ARITH `&0 < x ==> &0 <= x`];
   REAL_ARITH_TAC;
  ]);;
  (* }}} *)


let functional_arclength_234 = prove_by_refinement(
  `arclength_x_234 = rotate234 arclength_x_123`,
  (* {{{ proof *)
  [
  REWRITE_TAC[rotate234;Sphere.arclength_x_123];
    REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[add6;mul6;div6;sub6; constant6;Nonlinear_lemma.compose6;uni;Nonlinear_lemma.arclength_x_234; Sphere.arclength_x_123;];
    REWRITE_TAC[proj_x1;proj_x2;proj_x3;proj_x4];
  ]);;
  (* }}} *)

let functional_arclength_126 = prove_by_refinement(
  `arclength_x_126 = rotate126 arclength_x_123`,
  (* {{{ proof *)
  [
  REWRITE_TAC[rotate126];
    REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[add6;mul6;div6;sub6; constant6;Nonlinear_lemma.compose6;uni; Nonlinear_lemma.arclength_x_126; Sphere.arclength_x_123;];
    REWRITE_TAC[proj_x1;proj_x2;proj_x3;proj_x6];
  ]);;
  (* }}} *)
 
(* arclength_x_345 deprecated *)

(* this could be rewriten further with eulerA_x *)

(*
let functional_sol_euler_x_divsqrtdelta = prove_by_refinement(
  `let a = uni(sqrt,proj_x1 * proj_x2 * proj_x3) +
     proj_y1 * (proj_x2 + proj_x3 - proj_x4) * constant6 (#0.5) +
     proj_y2 * (proj_x1 + proj_x3 - proj_x5) * constant6 (#0.5) +
     proj_y3 * (proj_x1 + proj_x2 - proj_x6) * constant6 (#0.5) in
    (sol_euler_x_div_sqrtdelta  =
	(uni(matan,(delta_x / (a * a * constant6 (&4))))) / a)`,
  (* {{{ proof *)
  [
    LET_TAC;
    FIRST_X_ASSUM MP_TAC;
    REWRITE_TAC[FUN_EQ_THM];
    REWRITE_TAC[uni;Sphere.sol_euler_x_div_sqrtdelta; div6;mul6;add6;sub6;constant6;proj_y1;proj_y2; proj_y3;proj_x1;proj_x2;proj_x3; proj_x4;proj_x5;proj_x6];
    REWRITE_TAC[REAL_ARITH `x * #0.5 = x/ &2`;REAL_ARITH `&4 * a pow 2 = a* a * &4`];
  REPEAT    STRIP_TAC;
  FIRST_X_ASSUM (ASSUME_TAC o (ISPECL [`x:real`;`x':real`; `x'':real`;`x''':real`;`x'''':real`; `x''''':real`]));
    ASM_REWRITE_TAC[];
    REWRITE_TAC[LET_DEF;LET_END_DEF];    
  ]);;
  (* }}} *)
*)

let functional_sol_euler_x_divsqrtdelta = prove_by_refinement(
  `domain6
    (\x1 x2 x3 x4 x5 x6.
       (&0 <= x1 /\ &0 <= x2 /\ &0 <= x3))
    sol_euler_x_div_sqrtdelta
	((uni(matan,(delta_x / (scalar6 (eulerA_x * eulerA_x) (&4))))) / eulerA_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6];
  REWRITE_TAC[uni;scalar6;Sphere.sol_euler_x_div_sqrtdelta; functional_eulerA_x;div6;mul6;add6;sub6;constant6;proj_y1;proj_y2; proj_y3;proj_x1;proj_x2;proj_x3; proj_x4;proj_x5;proj_x6];
  REWRITE_TAC[REAL_ARITH ` (x/ &2 = x * (#0.5)) /\ ((a*b)*(c:real) = a*b*c)`;REAL_ARITH `&4 * a pow 2 = a* a * &4`;LET_DEF;LET_END_DEF];
  REPEAT STRIP_TAC;
  BY(ASM_SIMP_TAC[SQRT_MUL;Real_ext.REAL_PROP_NN_MUL2])
  ]);;
  (* }}} *)


let functional_sol246_euler_x_div_sqrtdelta = prove_by_refinement(
  `sol_euler246_x_div_sqrtdelta = rotate4 sol_euler_x_div_sqrtdelta`,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM];
    BY(REWRITE_TAC[Sphere.rotate4; Sphere.sol_euler246_x_div_sqrtdelta])
  ]);;
  (* }}} *)

let functional_sol345_euler_x_div_sqrtdelta = prove_by_refinement(
  `sol_euler345_x_div_sqrtdelta = rotate5 sol_euler_x_div_sqrtdelta`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  BY(REWRITE_TAC[Sphere.rotate5;Sphere.sol_euler345_x_div_sqrtdelta])
  ]);;
  (* }}} *)

let functional_sol156_euler_x_div_sqrtdelta = prove_by_refinement(
  `sol_euler156_x_div_sqrtdelta = rotate6 sol_euler_x_div_sqrtdelta`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM];
  BY(REWRITE_TAC[Sphere.rotate6;Sphere.sol_euler156_x_div_sqrtdelta])
  ]);;
  (* }}} *)

let functional_dih_x_div_sqrtdelta_posbranch = prove_by_refinement(
  `domain6 (\x1 x2 x3 x4 x5 x6. (&0 <= x1))
    dih_x_div_sqrtdelta_posbranch
    ((scalar6 proj_y1 (&2)) / (delta_x4) *
      uni(matan, (scalar6 (proj_x1 * delta_x) (&4)) / (uni(pow2,delta_x4))))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6];
  REWRITE_TAC[proj_y1;constant6;proj_x1;uni;scalar6;mul6;div6;Sphere.dih_x_div_sqrtdelta_posbranch;];
  REWRITE_TAC[LET_DEF;LET_END_DEF;Nonlinear_lemma.pow2;arith `&4 * x * y = (x*y)* &4`];
  REPEAT WEAK_STRIP_TAC;
  ASM_SIMP_TAC[SQRT_MUL;arith `&0 <= &4`];
  (REWRITE_TAC[Collect_geom2.SQRT4_EQ2]);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)


(* dih2_x_div_sqrtdelta_posbranch not defined in HOL-Light *)

let functional_dih3_x_div_sqrtdelta_posbranch = prove_by_refinement(
  `dih3_x_div_sqrtdelta_posbranch = rotate3 dih_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Sphere.rotate3;Sphere.dih3_x_div_sqrtdelta_posbranch]);
  ]);;
  (* }}} *)


let functional_dih5_x_div_sqrtdelta_posbranch = prove_by_refinement(
  `dih5_x_div_sqrtdelta_posbranch = rotate5 dih_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Sphere.rotate5;Sphere.dih5_x_div_sqrtdelta_posbranch]);
  ]);;
  (* }}} *)

let functional_dih_x_126_s2 = prove_by_refinement(
  `domain6
    (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x2 /\ &0 <= x6)
    dih_x_126_s2  (mk_126 dih_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[domain6;Nonlinear_lemma.dih_x_126_s2;constant6;compose6;mk_126;two6;proj_x1;proj_x2;proj_x6;Sphere.dih_y;LET_DEF;LET_END_DEF;Nonlinear_lemma.sqrt2_sqrt2];
  BY(ASM_SIMP_TAC[sqrt_sqrt])
  ]);;
  (* }}} *)

let functional_dih2_x_126_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x2 /\ &0 <= x6)
   dih2_x_126_s2 ( mk_126 dih2_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[domain6;Nonlinear_lemma.dih2_x_126_s2;mk_126;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2];
  REPEAT WEAK_STRIP_TAC;
GMATCH (ISPECL (replicate `&0` 6)   Nonlinear_lemma.dih2_x_y);
  REPEAT (POP_ASSUM MP_TAC);
  BY(REAL_ARITH_TAC) 
  ]);;
  (* }}} *)


let functional_dih3_x_126_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x2 /\ &0 <= x6)
   dih3_x_126_s2 ( mk_126 dih3_x)`,
  (* {{{ proof *)
  [
    REWRITE_TAC[domain6;Nonlinear_lemma.dih3_x_126_s2; mk_126;compose6;proj_x1;proj_x2;two6;proj_x6; constant6;Sphere.sqrt2];
  REPEAT WEAK_STRIP_TAC;
GMATCH (ISPECL (replicate `&0` 6)   Nonlinear_lemma.dih3_x_y);
  REPEAT (POP_ASSUM MP_TAC);
  BY(REAL_ARITH_TAC) 
  ]);;
  (* }}} *)


let functional_dih4_x_126_s2 = prove_by_refinement(
  `   dih4_x_126_s2= ( mk_126 dih4_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.dih4_x_126_s2;mk_126;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;Sphere.dih4_x];
  ]);;
  (* }}} *)


let functional_dih5_x_126_s2 = prove_by_refinement(
  `   dih5_x_126_s2= ( mk_126 dih5_x)`,
  (* {{{ proof *)
  [
    REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.dih5_x_126_s2; mk_126;compose6;proj_x1;proj_x2; two6;proj_x6;constant6; Sphere.sqrt2;Sphere.dih5_x];
  ]);;
  (* }}} *)


let functional_dih6_x_126_s2 = prove_by_refinement(
  `   dih6_x_126_s2= ( mk_126 dih6_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.dih6_x_126_s2;mk_126;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;Sphere.dih6_x];
  ]);;
  (* }}} *)

let functional_dih_x_135_s2 = prove_by_refinement(
  `domain6
    (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x3 /\ &0 <= x5)
    dih_x_135_s2  (mk_135 dih_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[domain6;Nonlinear_lemma.dih_x_135_s2;constant6;compose6;mk_135;two6;proj_x1;proj_x3;proj_x5;Sphere.dih_y;LET_DEF;LET_END_DEF;Nonlinear_lemma.sqrt2_sqrt2];
  BY(ASM_SIMP_TAC[sqrt_sqrt])
  ]);;
  (* }}} *)


let functional_dih2_x_135_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x3 /\ &0 <= x5)
   dih2_x_135_s2 ( mk_135 dih2_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[domain6;Nonlinear_lemma.dih2_x_135_s2;mk_135;compose6;proj_x1;proj_x3;two6;proj_x5;constant6;Sphere.sqrt2];
  REPEAT WEAK_STRIP_TAC;
GMATCH (ISPECL (replicate `&0` 6)   Nonlinear_lemma.dih2_x_y);
  REPEAT (POP_ASSUM MP_TAC);
  BY(REAL_ARITH_TAC) 
  ]);;
  (* }}} *)


let functional_dih3_x_135_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x3 /\ &0 <= x5)
   dih3_x_135_s2 ( mk_135 dih3_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[domain6;Nonlinear_lemma.dih3_x_135_s2;mk_135;compose6;proj_x1;proj_x3;two6;proj_x5;constant6;Sphere.sqrt2];
  REPEAT WEAK_STRIP_TAC;
GMATCH (ISPECL (replicate `&0` 6)   Nonlinear_lemma.dih3_x_y);
  REPEAT (POP_ASSUM MP_TAC);
  BY(REAL_ARITH_TAC) 
  ]);;
  (* }}} *)


let functional_dih4_x_135_s2 = prove_by_refinement(
  `   dih4_x_135_s2= ( mk_135 dih4_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.dih4_x_135_s2;mk_135;compose6;proj_x1;proj_x3;two6;proj_x5;constant6;Sphere.sqrt2;Sphere.dih4_x];
  ]);;
  (* }}} *)


let functional_dih5_x_135_s2 = prove_by_refinement(
  `   dih5_x_135_s2= ( mk_135 dih5_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.dih5_x_135_s2;mk_135;compose6;proj_x1;proj_x3;two6;proj_x5;constant6;Sphere.sqrt2;Sphere.dih5_x];
  ]);;
  (* }}} *)


let functional_dih6_x_135_s2 = prove_by_refinement(
  `   dih6_x_135_s2= ( mk_135 dih6_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.dih6_x_135_s2;mk_135;compose6;proj_x1;proj_x3;two6;proj_x5;constant6;Sphere.sqrt2;Sphere.dih6_x];
  ]);;
  (* }}} *)



let functional_ldih_x_126_s2 = prove_by_refinement(
  `   ldih_x_126_s2= uni (lfun, (proj_y1 / two6)) * dih_x_126_s2`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih_x_126_s2;mk_126;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;uni;mul6;div6;proj_y1;arith `&2 = #2.0`])
  ]);;
  (* }}} *)

let functional_ldih2_x_126_s2 = prove_by_refinement(
  `   ldih2_x_126_s2= uni (lfun, (proj_y2 / two6)) * dih2_x_126_s2`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih2_x_126_s2;mk_126;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;uni;mul6;div6;proj_y2;arith `&2 = #2.0`])
  ]);;
  (* }}} *)


let functional_ldih6_x_126_s2 = prove_by_refinement(
  `   ldih6_x_126_s2= uni (lfun, (proj_y6 / two6)) * dih6_x_126_s2`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih6_x_126_s2;mk_126;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;uni;mul6;div6;proj_y6;arith `&2 = #2.0`])
  ]);;
  (* }}} *)


let functional_ldih_x_135_s2 = prove_by_refinement(
  `   ldih_x_135_s2= uni (lfun, (proj_y1 / two6)) * dih_x_135_s2`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih_x_135_s2;mk_135;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;uni;mul6;div6;proj_y1;arith `&2 = #2.0`])
  ]);;
  (* }}} *)

let functional_ldih3_x_135_s2 = prove_by_refinement(
  `   ldih3_x_135_s2= uni (lfun, (proj_y3 / two6)) * dih3_x_135_s2`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih3_x_135_s2;mk_135;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;uni;mul6;div6;proj_y3;arith `&2 = #2.0`])
  ]);;
  (* }}} *)


let functional_ldih5_x_135_s2 = prove_by_refinement(
  `   ldih5_x_135_s2= uni (lfun, (proj_y5 / two6)) * dih5_x_135_s2`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih5_x_135_s2;mk_135;compose6;proj_x1;proj_x2;two6;proj_x6;constant6;Sphere.sqrt2;uni;mul6;div6;proj_y5;arith `&2 = #2.0`])
  ]);;
  (* }}} *)

let functional_edge_flat2_x = prove_by_refinement(
  `domain6
   (\x1 x2 x3 x4 x5 x6.
            &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\ &0 <= x5 /\ &0 <= x6)
    edge_flat2_x
    (uni(pow2,(uni(sqrt,
		   compose6(promote3_to_6 quadratic_root_plus_curry)
		     proj_x1
		 (proj_x1 * proj_x1 + 
		    (proj_x3 - proj_x5) * (proj_x2 - proj_x6) - 
		    proj_x1 * (proj_x2 + proj_x3 + proj_x5 + proj_x6))
(                 proj_x1 * proj_x3 * proj_x5 +
                 proj_x1 * proj_x2 * proj_x6 -
                 proj_x3 * (proj_x1 + proj_x2 - proj_x3 + proj_x5 - proj_x6) *
		 proj_x6 -
                 proj_x2 * proj_x5 * (proj_x1 - proj_x2 + proj_x3 - 
					proj_x5 + proj_x6))
		     zero6 zero6 zero6))))
    `,
  (* {{{ proof *)
  [
    BY(REWRITE_TAC[domain6; Nonlinear_lemma.edge_flat2_x_rewrite; compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6; zero6;constant6;add6;mul6; sub6;uni;promote3_to_6; Nonlinear_lemma.quadratic_root_plus_curry; Nonlinear_lemma.pow2])
  ]);;
  (* }}} *)


let functional_euler_3flat_x = prove_by_refinement(
  `let x4r = compose6 edge_flat2_x proj_x4 proj_x2 proj_x3 zero6 four6 four6 in
  let x5r = compose6 edge_flat2_x proj_x5 proj_x1 proj_x3 zero6 four6 four6 in
  let x6r = compose6 edge_flat2_x proj_x6 proj_x1 proj_x2 zero6 four6 four6 in
  ( euler_3flat_x = 
    compose6 eulerA_x proj_x1 proj_x2 proj_x3 x4r x5r x6r)`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Sphere.euler_3flat_x;compose6;four6;zero6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;constant6;LET_DEF;LET_END_DEF])
  ]);;
  (* }}} *)

let functional_euler_2flat_x = prove_by_refinement(
  `
  let x5r = compose6 edge_flat2_x proj_x5 proj_x1 proj_x3 zero6 four6 four6 in
  let x6r = compose6 edge_flat2_x proj_x6 proj_x1 proj_x2 zero6 four6 four6 in
  ( euler_2flat_x = 
    compose6 eulerA_x proj_x1 proj_x2 proj_x3 proj_x4 x5r x6r)`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Sphere.euler_2flat_x;compose6;four6;zero6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;constant6;LET_DEF;LET_END_DEF])
  ]);;
  (* }}} *)

let functional_euler_1flat_x = prove_by_refinement(
  `
  let x6r = compose6 edge_flat2_x proj_x6 proj_x1 proj_x2 zero6 four6 four6 in
  ( euler_1flat_x = 
    compose6 eulerA_x proj_x1 proj_x2 proj_x3 proj_x4 proj_x5 x6r)`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Sphere.euler_1flat_x;compose6;four6;zero6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;constant6;LET_DEF;LET_END_DEF])
  ]);;
  (* }}} *)


let functional_taum_3flat_x = prove_by_refinement(
  `let x4r = compose6 edge_flat2_x proj_x4 proj_x2 proj_x3 zero6 four6 four6 in
  let x5r = compose6 edge_flat2_x proj_x5 proj_x1 proj_x3 zero6 four6 four6 in
  let x6r = compose6 edge_flat2_x proj_x6 proj_x1 proj_x2 zero6 four6 four6 in
  ( taum_3flat_x = 
      compose6 taum_x proj_x1 proj_x2 proj_x3 x4r x5r x6r +
    uni(flat_term_x,proj_x4) +
	uni(flat_term_x,proj_x5) +
	uni(flat_term_x,proj_x6))`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Sphere.taum_3flat_x;compose6;four6;add6;uni;zero6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;constant6;LET_DEF;LET_END_DEF]);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let functional_taum_2flat_x = prove_by_refinement(
  `
  let x5r = compose6 edge_flat2_x proj_x5 proj_x1 proj_x3 zero6 four6 four6 in
  let x6r = compose6 edge_flat2_x proj_x6 proj_x1 proj_x2 zero6 four6 four6 in
  ( taum_2flat_x = 
      compose6 taum_x proj_x1 proj_x2 proj_x3 proj_x4 x5r x6r +
	uni(flat_term_x,proj_x5) +
	uni(flat_term_x,proj_x6))`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Sphere.taum_2flat_x;compose6;four6;add6;uni;zero6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;constant6;LET_DEF;LET_END_DEF]);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let functional_taum_1flat_x = prove_by_refinement(
  `
   let x6r = compose6 edge_flat2_x proj_x6 proj_x1 proj_x2 zero6 four6 four6 in
  ( taum_1flat_x = 
      compose6 taum_x proj_x1 proj_x2 proj_x3 proj_x4 proj_x5 x6r +
	uni(flat_term_x,proj_x6))`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Sphere.taum_1flat_x;compose6;four6;add6;uni;zero6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6;constant6;LET_DEF;LET_END_DEF]);
  ]);;
  (* }}} *)

let functional_delta_x_126_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x2 /\ &0 <= x6)
  delta_x_126_s2 ( mk_126 delta_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Nonlinear_lemma.delta_x_126_s2;Sphere.delta_y;mk_126;compose6;proj_x1;proj_x2;proj_x6;two6;constant6;Nonlinear_lemma.sqrt2_sqrt2];
  BY(ASM_SIMP_TAC[sqrt_sqrt])
  ]);;
  (* }}} *)


let functional_delta_x_135_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x3 /\ &0 <= x5)
  delta_x_135_s2 ( mk_135 delta_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Nonlinear_lemma.delta_x_135_s2;Sphere.delta_y;mk_135;compose6;proj_x1;proj_x3;proj_x5;two6;constant6;Nonlinear_lemma.sqrt2_sqrt2];
  BY(ASM_SIMP_TAC[sqrt_sqrt])
  ]);;
  (* }}} *)

let functional_delta_pent_x = prove_by_refinement(
  `delta_pent_x = compose6
    delta_x proj_x1 proj_x2 proj_x6 four6 four6 (constant6 (#10.4976))`,
  (* {{{ proof *)
  [
  REWRITE_TAC[FUN_EQ_THM;Sphere.delta_pent_x;proj_x1;proj_x2;proj_x6;four6;constant6;compose6];
  REPEAT WEAK_STRIP_TAC;
  AP_TERM_TAC;
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_vol3_x_135_s2 = prove_by_refinement(
  `domain6
     (\x1 x2 x3 x4 x5 x6.
     &0 <= x1 /\ &0 <= x3 /\ &0 <= x5)
  vol3_x_135_s2 ( mk_135 vol_x)`,
  (* {{{ proof *)
  [
REWRITE_TAC[domain6;Nonlinear_lemma.vol3_x_135_s2;mk_135;Sphere.vol3r;compose6;proj_x1;proj_x3;proj_x5;two6;constant6;Sphere.vol_y;Sphere.y_of_x;Nonlinear_lemma.sqrt2_sqrt2];
  ASM_SIMP_TAC[sqrt_sqrt];
  REPEAT WEAK_STRIP_TAC;
  REWRITE_TAC[Sphere.vol_x;Sphere.delta_x];
  REPEAT (AP_THM_TAC ORELSE AP_TERM_TAC);
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)



let functional_ldih_x_div_sqrtdelta_posbranch = prove_by_refinement(
  `ldih_x_div_sqrtdelta_posbranch = 
    (scalar6 (constant6 h0 - scalar6 proj_y1 ( #0.5))  rh0)
    * dih_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
[
  REWRITE_TAC[FUN_EQ_THM;mul6;scalar6;rh0;Sphere.ldih_x_div_sqrtdelta_posbranch;Sphere.lfun;constant6;mul6;sub6;proj_y1;];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_ldih2_x_div_sqrtdelta_posbranch = 
  Sphere.ldih2_x_div_sqrtdelta_posbranch;;

let functional_ldih3_x_div_sqrtdelta_posbranch = 
  Sphere.ldih3_x_div_sqrtdelta_posbranch;;

(*
let functional_ldih4_x_div_sqrtdelta_posbranch = 
  Sphere.ldih4_x_div_sqrtdelta_posbranch;;
*)

let functional_ldih5_x_div_sqrtdelta_posbranch = 
  Sphere.ldih5_x_div_sqrtdelta_posbranch;;

let functional_ldih6_x_div_sqrtdelta_posbranch = 
  Sphere.ldih6_x_div_sqrtdelta_posbranch;;

let functional_ldih_x_n = prove_by_refinement(
  `ldih_x_n = uni(sqn,delta_x) * ldih_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih_x_n;mul6;uni])
  ]);;
  (* }}} *)

let functional_ldih_x_126_n = prove_by_refinement(
  `ldih_x_126_n = mk_126 ldih_x_n`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih_x_126_n;mk_126;Nonlinear_lemma.sqrt2_sqrt2;proj_x1;proj_x2;proj_x6;compose6;two6;constant6])
  ]);;
  (* }}} *)

(* this differs from C++ code? *)

let functional_ldih2_x_126_n = prove_by_refinement(
  `ldih2_x_126_n = mk_126 (rotate2 ldih_x_n)`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih2_x_126_n;functional_ldih_x_126_n;mk_126;Sphere.rotate2;Nonlinear_lemma.sqrt2_sqrt2;proj_x1;proj_x2;proj_x6;compose6;two6;constant6]);
  REWRITE_TAC[Nonlinear_lemma.ldih2_x_n;Nonlinear_lemma.ldih_x_n;Sphere.ldih2_x_div_sqrtdelta_posbranch;Sphere.rotate2];
  REPEAT WEAK_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  REWRITE_TAC[Sphere.delta_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let functional_ldih6_x_126_n = prove_by_refinement(
  `ldih6_x_126_n = mk_126 (rotate6 ldih_x_n)`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih6_x_126_n;functional_ldih_x_126_n;mk_126;Sphere.rotate6;Nonlinear_lemma.sqrt2_sqrt2;proj_x1;proj_x2;proj_x6;compose6;two6;constant6]);
  REWRITE_TAC[Nonlinear_lemma.ldih6_x_n;Nonlinear_lemma.ldih_x_n;Sphere.ldih6_x_div_sqrtdelta_posbranch;Sphere.rotate6];
  REPEAT WEAK_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  REWRITE_TAC[Sphere.delta_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_ldih_x_135_n = prove_by_refinement(
  `ldih_x_135_n = mk_135 ldih_x_n`,
  (* {{{ proof *)
  [
BY(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih_x_135_n;mk_135;Nonlinear_lemma.sqrt2_sqrt2;proj_x1;proj_x3;proj_x5;compose6;two6;constant6])
  ]);;
  (* }}} *)

 
let functional_ldih3_x_135_n = prove_by_refinement(
  `ldih3_x_135_n = mk_135 (rotate3 ldih_x_n)`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih3_x_135_n;functional_ldih_x_135_n;mk_135;Sphere.rotate2;Nonlinear_lemma.sqrt2_sqrt2;proj_x1;proj_x3;proj_x5;compose6;two6;constant6]);
  REWRITE_TAC[Nonlinear_lemma.ldih3_x_n;Nonlinear_lemma.ldih_x_n;Sphere.ldih3_x_div_sqrtdelta_posbranch;Sphere.rotate3];
  REPEAT WEAK_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  REWRITE_TAC[Sphere.delta_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional_ldih5_x_135_n = prove_by_refinement(
  `ldih5_x_135_n = mk_135 (rotate5 ldih_x_n)`,
  (* {{{ proof *)
  [
(REWRITE_TAC[FUN_EQ_THM;Nonlinear_lemma.ldih5_x_135_n;functional_ldih_x_135_n;mk_135;Sphere.rotate5;Nonlinear_lemma.sqrt2_sqrt2;proj_x1;proj_x3;proj_x5;compose6;two6;constant6]);
  REWRITE_TAC[Nonlinear_lemma.ldih5_x_n;Nonlinear_lemma.ldih_x_n;Sphere.ldih5_x_div_sqrtdelta_posbranch;Sphere.rotate5];
  REPEAT WEAK_STRIP_TAC;
  REPEAT (AP_TERM_TAC ORELSE AP_THM_TAC);
  REWRITE_TAC[Sphere.delta_x];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)

let functional1_rho = prove_by_refinement(
  `!y. rho y = y * (const1 * rh0 * (#0.5)) + (&1 - const1 * rh0)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Nonlinear_lemma.rho_alt;Sphere.h0;rh0];
  REPEAT WEAK_STRIP_TAC;
  BY(CONV_TAC REAL_RING)
  ]);;
  (* }}} *)

let functional1_flat_term_x = prove_by_refinement(
  `!y. flat_term_x y = (sqrt y - &2 * h0) * rh0 * sol0 * (#0.5)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Sphere.flat_term_x;Sphere.flat_term;Sphere.h0;rh0];
  REPEAT WEAK_STRIP_TAC;
  BY(BY(CONV_TAC REAL_RING))
  ]);;
  (* }}} *)

let functional1_lfun = prove_by_refinement(
  `!y. lfun y = ( h0 - y)*rh0`,
  (* {{{ proof *)
  [
  REWRITE_TAC[Sphere.lfun;rh0];
  BY(REAL_ARITH_TAC)
  ]);;
  (* }}} *)


let functional_rhazim_x = prove_by_refinement(
  `domain6
    (\x1 x2 x3 x4 x5 x6. &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\
       &0 <= x4 /\ &0 <= x5 /\ &0 <= x6)
    rhazim_x  
    (uni (rho,proj_y1) * dih_x)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6];
  REWRITE_TAC[Sphere.rhazim_x;Sphere.rhazim;uni;proj_y1;mul6;Sphere.dih_y;LET_DEF;LET_END_DEF];
  REPEAT WEAK_STRIP_TAC;
  AP_TERM_TAC;
  REPEAT( GMATCH_SIMP_TAC (ISPEC `&0` Nonlinear_lemma.sq_pow2));
  BY(ASM_REWRITE_TAC[REAL_ARITH `&0 pow 2 = &0`;])
  ]);;
  (* }}} *)

let functional_rhazim2_x = prove_by_refinement(
  `rhazim2_x = rotate2 rhazim_x`,
  (* {{{ proof *)
  [
 REWRITE_TAC[FUN_EQ_THM];
  BY(REWRITE_TAC[Sphere.node2_y;Sphere.rotate2;Sphere.rhazim2_x;Sphere.rhazim_x;Sphere.rhazim2])
  ]);;
  (* }}} *)

let functional_rhazim3_x = prove_by_refinement(
  `rhazim3_x = rotate3 rhazim_x`,
  (* {{{ proof *)
  [
 REWRITE_TAC[FUN_EQ_THM];
  BY(REWRITE_TAC[Sphere.node3_y;Sphere.rotate3;Sphere.rhazim3_x;Sphere.rhazim_x;Sphere.rhazim3])
  ]);;
  (* }}} *)

let functional_taum_x = prove_by_refinement(
  `taum_x = rhazim_x + rhazim2_x +
    rhazim3_x - constant6 ((&1 + const1)*pi)`,
  (* {{{ proof *)
  [
 REWRITE_TAC[FUN_EQ_THM];
  (REWRITE_TAC[Sphere.taum_x;add6;sub6;mul6;constant6;unit6]);
  ]);;
  (* }}} *)

(* extra parameter cases *)

let functional_taum_x1 = prove_by_refinement(
  `!a b.
    domain6
    (\x1 x2 x3 x4 x5 x6. &0 <= a /\ &0 <= b)
    (taum_x1 a b)
    (compose6 taum_x four6 four6 four6 
       (constant6 (a*a)) (constant6 (b*b)) proj_x1)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;compose6;four6;constant6;Sphere.taum_x1; Sphere.taum_y1;Sphere.taum_x;Nonlinear_lemma.taum_123;proj_x1; Sphere.rhazim_x;Sphere.rhazim2_x; Collect_geom2.SQRT4_EQ2; Sphere.rhazim3_x];
  BY(SIMP_TAC[Nonlinear_lemma.sqrtxx])
  ]);;
  (* }}} *)



let functional_taum_x2 = prove_by_refinement(
  `!a b.
    domain6
    (\x1 x2 x3 x4 x5 x6. &0 <= a /\ &0 <= b)
    (taum_x2 a b)
    (compose6 taum_x four6 four6 four6 
       (constant6 (a*a)) (constant6 (b*b)) proj_x2)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;compose6;four6;constant6;Sphere.taum_x2; Sphere.taum_y2;Sphere.taum_x;Nonlinear_lemma.taum_123;proj_x2; Sphere.rhazim_x;Sphere.rhazim2_x; Collect_geom2.SQRT4_EQ2; Sphere.rhazim3_x];
  BY(SIMP_TAC[Nonlinear_lemma.sqrtxx])
  ]);;
  (* }}} *)


let functional_taum_x1_x2 = prove_by_refinement(
  `!a.
    domain6
    (\x1 x2 x3 x4 x5 x6. &0 <= a)
    (taum_x1_x2 a)
    (compose6 taum_x four6 four6 four6 
       (constant6 (a*a)) proj_x1 proj_x2)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;compose6;four6;constant6;Sphere.taum_x1_x2; Sphere.taum_y1_y2;Sphere.taum_x;Nonlinear_lemma.taum_123;proj_x2; proj_x1;Sphere.rhazim_x;Sphere.rhazim2_x; Collect_geom2.SQRT4_EQ2; Sphere.rhazim3_x];
  BY(SIMP_TAC[Nonlinear_lemma.sqrtxx])
  ]);;
  (* }}} *)

let functional_arclength_x1 = prove_by_refinement(
  `!a b.
    domain6    (\x1 x2 x3 x4 x5 x6. &0 <= a /\ &0 <= b) 
    (arclength_x1 a b) 
    (compose6
       arclength_x_123 proj_x1 (constant6 (a*a)) (constant6 (b*b))
       dummy6 dummy6 dummy6)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Sphere.arclength_x_123; compose6; Sphere.arclength_x1;proj_x1;constant6;dummy6; Sphere.arclength_y1];
  BY(BY(SIMP_TAC[Nonlinear_lemma.sqrtxx]))
  ]);;
  (* }}} *)


let functional_arclength_x2 = prove_by_refinement(
  `!a b.
    domain6    (\x1 x2 x3 x4 x5 x6. &0 <= a /\ &0 <= b) 
    (arclength_x2 a b) 
    (compose6
       arclength_x_123 proj_x2 (constant6 (a*a))  (constant6 (b*b))
       dummy6 dummy6 dummy6)`,
  (* {{{ proof *)
  [
  REWRITE_TAC[domain6;Sphere.arclength_x_123; compose6; Sphere.arclength_x2;proj_x2;constant6;dummy6; Sphere.arclength_y2];
  BY(BY(SIMP_TAC[Nonlinear_lemma.sqrtxx]))
  ]);;
  (* }}} *)

let functional_delta_126_x = prove_by_refinement(
  `!a b c. delta_126_x a b c = compose6 delta_x proj_x1 proj_x2 
    (constant6 a) (constant6 b) (constant6 c) proj_x6`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM; Sphere.delta_126_x;constant6;compose6;proj_x1;proj_x2;proj_x6 ])
  ]);;
  (* }}} *)

let functional_delta_234_x = prove_by_refinement(
  `!a b c. delta_234_x a b c = compose6 delta_x 
    (constant6 a) proj_x2 proj_x3 proj_x4 (constant6 b) (constant6 c)`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM; Sphere.delta_234_x;constant6;compose6;proj_x2;proj_x3;proj_x4 ])
  ]);;
  (* }}} *)


let functional_delta_135_x = prove_by_refinement(
  `!a b c. delta_135_x a b c = compose6 delta_x 
    proj_x1 (constant6 a) proj_x3 (constant6 b) proj_x5 (constant6 c)`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM; Sphere.delta_135_x;constant6;compose6;proj_x1;proj_x3;proj_x5 ])
  ]);;
  (* }}} *)

let functional_delta_sub1_x = prove_by_refinement(
  `!a. delta_sub1_x a = compose6 delta_x 
    (constant6 a) proj_x2 proj_x3 proj_x4 proj_x5 proj_x6`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM; Sphere.delta_sub1_x;constant6;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6 ])
  ]);;
  (* }}} *)

let functional_taum_sub1_x = prove_by_refinement(
  `!a. taum_sub1_x a = compose6 taum_x 
    (constant6 a) proj_x2 proj_x3 proj_x4 proj_x5 proj_x6`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM; Sphere.taum_sub1_x;constant6;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6 ])
  ]);;
  (* }}} *)


let functional_taum_sub246_x = prove_by_refinement(
  `!a b c. taum_sub246_x a b c = compose6 taum_x 
    proj_x1 (constant6 a) proj_x3 (constant6 b) proj_x5 (constant6 c)`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM; Sphere.taum_sub246_x;constant6;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6 ])
  ]);;
  (* }}} *)

let functional_taum_sub345_x = prove_by_refinement(
  `!a b c. taum_sub345_x a b c = compose6 taum_x 
    proj_x1 proj_x2 (constant6 a) (constant6 b) (constant6 c) proj_x6`,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM; Sphere.taum_sub345_x;constant6;compose6;proj_x1;proj_x2;proj_x3;proj_x4;proj_x5;proj_x6 ])
  ]);;
  (* }}} *)

let functional_rhazim_x_div_sqrt_delta_posbranch = prove_by_refinement(
  `rhazim_x_div_sqrtdelta_posbranch = 
    uni(rho,proj_y1) * dih_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.rhazim_x_div_sqrtdelta_posbranch;mul6;uni;proj_y1;]);
  ]);;
  (* }}} *)

let functional_rhazim2_x_div_sqrt_delta_posbranch = prove_by_refinement(
  `rhazim2_x_div_sqrtdelta_posbranch = 
    rotate2 rhazim_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.rhazim2_x_div_sqrtdelta_posbranch;mul6;uni;proj_y1;]);
  ]);;
  (* }}} *)

let functional_rhazim3_x_div_sqrt_delta_posbranch = prove_by_refinement(
  `rhazim3_x_div_sqrtdelta_posbranch = 
    rotate3 rhazim_x_div_sqrtdelta_posbranch`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[FUN_EQ_THM;Sphere.rhazim3_x_div_sqrtdelta_posbranch;mul6;uni;proj_y1;]);
  ]);;
  (* }}} *)

let functional_tau_residual = prove_by_refinement(
  `tau_residual_x = rhazim_x_div_sqrtdelta_posbranch +
    rhazim2_x_div_sqrtdelta_posbranch + rhazim3_x_div_sqrtdelta_posbranch `,
  (* {{{ proof *)
  [
  (REWRITE_TAC[FUN_EQ_THM;Sphere.tau_residual_x;add6]);
  ]);;
  (* }}} *)

let functional_halfbump_x1 = prove_by_refinement(
  `halfbump_x1 = promote1_to_6 halfbump_x`,
  (* {{{ proof *)
  [
  REWRITE_TAC[promote1_to_6;Nonlinear_lemma.halfbump_x1;FUN_EQ_THM];
  ]);;
  (* }}} *)

let functional_halfbump_x4 = prove_by_refinement(
  `halfbump_x4 = rotate4 halfbump_x1`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[Sphere.rotate4;Nonlinear_lemma.halfbump_x4;Nonlinear_lemma.halfbump_x1;FUN_EQ_THM])
  ]);;
  (* }}} *)

(*
let functional1_vol2r_x = 
  new_definition `vol2r_x x = &2 * pi * (&2 - (x / &4)) / &3`;;

let functional_vol2r_x1 = 
  new_definition `vol2r_x1 = promote1_to_6 vol2r_x`;;


(*
let functional1_vol2_x = 
  new_definition `vol2_x x = &2 * pi * (&2 - (sqrt x) / &4) / &3`;;

let functional_vol2_x1 = 
  new_definition `vol2_x1 = promote1_to_6 vol2_x`;;
*)

let functional_gamma3f_x_v_lfun = prove_by_refinement(
  `
  let vv_term_m1 = scalar6 (unit6 - scalar6 proj_y1 (&1 / sqrt8)) (&4 * mm1) in
  let (vv_term_m2) = 
    (scalar6 (uni(flat_term_x,proj_x1)) (-- &16 * mm2 /sol0)) in
    domain6
      (\x1 x2 x3 x4 x5 x6.
	 &0 <= x1 /\ &0 <= x2 /\ &0 <= x3 /\ &0 <= x4 /\ &0 <= x5 /\ &0 <= x6)
    gamma3f_x_v_lfun ((dih_x - constant6 (&2 * #0.03)) *
    ((vol2r_x1 - vv_term_m1 ) + vv_term_m2))`,
  (* {{{ proof *)
  [
  rt[domain6;LET_DEF;LET_END_DEF;Nonlinear_lemma.gamma3f_x_v_lfun;mul6;sub6;Nonlinear_lemma.gamma3f_v_lfun;constant6;Sphere.vol2r;functional_vol2_x1;functional1_vol2_x;promote1_to_6;mul6;add6;scalar6;uni;proj_x1;Sphere.dih_y;Nonlinear_lemma.sqrt2_sqrt2;proj_y1;functional_vol2r_x1;functional1_vol2r_x;Sphere.lfun;unit6;Sphere.flat_term_x;Sphere.flat_term;Nonlinear_lemma.sqrt8_sqrt2];
    simp[sqrt_sqrt]
      st/r
      AP_TERM_TAC
sgthen `(sqrt x1 / &2) pow 2 = x1 / &4` SUBST1_TAC
rt[arith `(sqrt x1 / &2) pow 2 = (sqrt x1 * sqrt x1) / &4`]
asimp[sqrt_sqrt]
ABBREV_TAC `a = &2 * pi * (&2 - x1/ &4) / &3`
rt[arith `((a:real) - b + c = a - (b - c))`]
AP_TERM_TAC
  ]);;
  (* }}} *)

searcht 5 [`sqrt8`;`sqrt2`];;
searcht 5 [`dih_x`;`dih_y`];;
searcht 5 [`lfun_y1`];;
searcht 5 [def "lfun_"];;
searcht 5 [`lfun_sqrtx1_div2`];;
searcht 5 [`mm2`];;
functional_overload();;
searcht 5 [`gamma3f_v_lfun`];;
1;;
*)

(*
extra parameter cases scratch

searcht 5 [`tau_lowform_x`];;
search [`rhazim_x_div_sqrtdelta_posbranch`];;
functional_overload();;

Sphere.delta_126_x;;
Sphere.delta_234_x;;
searcht 5 [`delta_126_x`];;
searcht 5 [`lindih`];;
Sphere.arclength;;
Sphere.arclength_x_123;;
Sphere.arclength_x1;;
Sphere.arclength_y1;;
searcht 5 [`sqrt(a * a) = a`];;
Sphere.taum_x1;;
Sphere.taum_y1;;
Sphere.taum;;
Sphere.taum_x;;
searcht 5 [`rhazim`;`rhazim_x`];;
searcht 5 [`sqrt (&4)`];;
searcht 5 [`taum_x`;`taum`];;
searcht 5 [`taum`;`rhazim`];;
*)

 end;;  
