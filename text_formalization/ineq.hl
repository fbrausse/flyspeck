(* File of the nonlinear inequalities to be verified by interval arithmetic.
   File created Sep 4, 2009
*)


(* quad0.mod inequalities *)

needs "sphere.hl";;

prioritize_real();;


(* interval arithmetic bounds DART 3 *)

let I_5735387903=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
   (dih_y y1 y2 y3 y4 y5 y6 >= #0.852)`;;


let I_5490182221=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
   (dih_y y1 y2 y3 y4 y5 y6 <= #1.893)`;;

let I_3296257235=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( ((tau_y y1 y2 y3 y4 y5 y6) + 
  ((#0.626) * (dih_y y1 y2 y3 y4 y5 y6))- #0.77)>= #0)`;;

let I_8519146937=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( ((tau_y y1 y2 y3 y4 y5 y6) - 
  ((#0.259) * (dih_y y1 y2 y3 y4 y5 y6))+ #0.32)>= #0)`;;

let I_4667071578=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( ((tau_y y1 y2 y3 y4 y5 y6) - 
  ((#0.507) * (dih_y y1 y2 y3 y4 y5 y6))+ #0.724)>= #0)`;;

let I_1395142356=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( (tau_y y1 y2 y3 y4 y5 y6) + #0.001 - 
  ((#0.18) * (y1 + y2 + y3 - #6))-
  ((#0.125) * (y4 + y5 + y6 - #6))>= #0)`;;

let I_7394240696=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( (sol_y y1 y2 y3 y4 y5 y6) - #0.55125 - 
  ((#0.196) * (y4 + y5 + y6 - #6))-
  ((#0.38) * (y1 + y25 + y3 - #6))>= #0)`;;

let I_7726998381=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( (--sol_y y1 y2 y3 y4 y5 y6) + #0.5513 - 
  ((#0.3232) * (y4 + y5 + y6 - #6))-
  ((#0.151) * (y1 + y25 + y3 - #6))>= #0)`;;


let I_4047599236=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( (dih_y y1 y2 y3 y4 y5 y6) - #1.2308 +  
  ((#0.3639) * (y2 + y3 + y5 + y6 - #8)) -
  ((#0.235) * (y1 - #2)) -((#0.685) * (y4 - #2)) >= #0)`;;


let I_3526497018=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( (--dih_y y1 y2 y3 y4 y5 y6) + #1.231 - 
  ((#0.152) * (y2 + y3 + y5 + y6 - #8))+
  ((#0.5) * (y1 - #2)) + ((#0.773) * (y4 - #2))>= #0)`;;


let I_5957966880=
 all_forall `ineq
    [ 
      (#2.0,y1,#2.52);
      (#2.0,y2,#2.52);
      (#2.0,y3,#2.52);
      (#2.0,y4,#2.52);
      (#2.0,y5,#2.52);
      (#2.0,y6,#2.52)]
( (rhdih_y y1 y2 y3 y4 y5 y6) - #1.2308 +  
  ((#0.3639) * (y2 + y3 + y5 + y6 - #8)) -
  ((#0.6) * (y1 - #2)) -((#0.685) * (y4 - #2)) >= #0)`;;
