
(* summary of the trig chapter *)
(* everything labeled definition or lemma *)
(* where possible, random strings from the pdf were associated with the HOL functions.  in some cases, there seemed to be no function associated with the random string, so the string was commented out.  in some cases, a lemma or definition was labeled, but had neither a random string nor a function; these are also included.  if no label was assigned in the tex file, there's nothing between the $$ *)

(* definition $eqn:cos0$ *)
let SIN_0 = SIN_0 ;;

(* definition $eqn:cos0$ *)
let COS_0 = COS_0;;

(* Lemma $lemma:circle$ *)
let WPMXVYZ = SIN_CIRCLE;; 

(* Lemma $lemma:sin-add$  *)
let WNYVJPE1 = SIN_ADD;;

(* Lemma $lemma:sin-add$ *)
let WNYVJPE2 = COS_ADD;;

(* Lemma $lemma:cos-neg$ *)
let KGLLRQT1 = COS_NEG;;

(* Lemma $lemma:sin-neg$ *)
let KGLLRQT2 = SIN_NEG;;

(* Lemma $lemma:sin-pi2$ *)
let CPIREMF = SIN_PI2;;

(* Lemma $lemma:cos-sin$ *)
let SCEZKRH = COS_SIN;;

(* definition $def:tan$ *)
(* CHECK THIS *)
 let TAN = tan ;;


(* Lemma $lemma:tan-add$ *)
let KWYPRWZ = TAN_ADD;;

(* Lemma $lemma:tan-pi4$ *)
let KSQDZSF = TAN_PI4;;

(* Definition $def:arctan$ *)
let atn = atn;;

(* Definition $$ *)
(* NOT IN TRIG.ML *)
let ATN = atn ;; 

(* Definition $$ *)
let ATN_TAN = ATN_TAN ;;

(* Definition $$ *)
let ATN_BOUNDS = ATN_BOUNDS ;;

(* Definition $$ *)
let TAN_ATN = TAN_ATN ;;

(* Definition $$ *)
let ATN_1 = ATN_1 ;;

(* Definition $$ *)
(* let DIFF_ATN = DIFF_ATN ;; *)

(* Definition $$ *)
let ATN_MONO_LT = ATN_MONO_LT ;;

(* Definition $$ *)
let ATN_MONO_LT_EQ = ATN_MONO_LT_EQ ;;

(* Definition $def:arccos$ *)
let acs = acs;;

(* Definition $def:arccos$ *)
let ACS_COS = ACS_COS;;

(* Definition $def:arccos$ *)
let COS_ACS = COS_ACS;;

(* Lemma $lemma:sin-arccos$ *)
let FMGMALU = SIN_ACS;;

(* Lemma $lemma:arccos-arctan$ *)
let OUIJTWY = acs_atn2 ;;

(* Definition $def:arcsin$ *)
let asn = asn;;

(*CAUCHY SCHWARZ Lemma $$ *)
let JJKJALK = NORM_CAUCHY_SCHWARZ ;;


(*TRIANGLE INEQ  Lemma $$ *)
let OIPLPTM = NORM_TRIANGLE ;;

(* Definition $def:delta$ *)
let delta_x = delta_x ;;

(* Definition $def:aff$ *)
let aff = aff ;;

(* Definition $$ *)
let convex = convex ;;
let hull = hull ;;

(* Definition $$ *)
let cone = cone ;;

(* Definition $$ *)
let line = line ;;

(* Definition $$ *)
let collinear = collinear ;;

(* Definition $$ *)
let plane = plane ;;

(* Definition $$ *)
let closed_half_plane = closed_half_plane ;;
let open_half_plane = open_half_plane ;;

(* Definition $$ *)
let coplanar = coplanar ;;

(* Definition $$ *)
let closed_half_space = closed_half_space ;;
let open_half_space = open_half_space ;;

(* Definition $def:angle$ *)
let arcV = arcV ;;

(* Lemma $$ *)
let HQTBPCM = LAW_OF_COSINES ;;

(* Lemma $$ *)
let UKBAHKV = LAW_OF_SINES ;;

(* Lemma $$ *)
(* cross product something *)
let KVVWPNA = NORM_CROSS ;;

(* Lemma $$ *)
(* cross product order and distribution with dot product *)
let BKMUSOX1 = CROSS_SKEW ;;
let BKMUSOX2 = CROSS_TRIPLE ;;

(* Definition $def:dih$ *)
let dihV = dihV ;;

(* Lemma $lemma:sloc$ *)
let RLXWSTK = spherical_loc ;;

(* Lemma $dihform$ *)
let OJEKOJF = dih_formula ;; 

(* Lemma $$ *)
let NLVWBBW = spherical_loc2 ;;

(* Lemma $lemma:euler$ *)
let JLPSDHF = euler_triangle ;;

(* Lemma $lemma:sph-tri-ineq$ *)
let KEITDWB = ARCV_INEQUALITY ;;

(* Lemma $lemma:sph-tri-multi$ *)
let FGNMPAV = FGNMPAV ;;

(* Lemma $$ *)
(* Lexell's Thm *)
(* hasn't been formalized *)
(* let UWIPRDV ;; *)

(* Lemma $$ *)
(* fix one point on the unit sphere with antipodal point... *)
(* not part of project x_x *)
(* let ZHHSGTF ;; *)

(* Lemma $lemma:ngon$ *)
(* hasn't been done *)
(* let GOTCJAH ;; *)

(* Lemma $lemma:ngon-area$ *)
(* hasn't been done *)
(* let BBEVFIC ;; *)

(* Lemma $lemma:polar2$ *)
(* I don't know what I'm doing; check this! *)
let PDPFQUK = thetaij ;;

(* Lemma $lemma:polar-sum$ *)
(* I don't know what I'm doing; check this! *)
let ISRTTNZ = thetapq_wind ;;

(* Definition $def:azimuth$ *)
(* cthulhu > shoggoth > azimuth *)

(* Lemma $$ *)
let QAFHJNM = zenith ;;

(* Lemma $$ *)
(* check this *)
let EYFCXPP = polar_coord_zenith ;; 

(* Definition $$ *)
let azim = azim ;;

(* Lemma $lemma:sph$ *)
let XPHCPNY = SPHERICAL_COORDINATES ;;

(* Definition $def:sph$ *)

(* Lemma $lemma:polar-gen$ *)
let YBXRVTS = polar_coord_zenith ;;

(* Definition $def:polar$ *)
(* polar_c is defined in sphere.hl but that section of the file is commented out *)

(* Definition $$ *)
let cyclic_set = cyclic_set ;;

(* Lemma $$ *)
(* let NLOFMTR ;; *)
(* the closest thing I could find was azim_pair_t from trig.ml *)

(* Lemma $$ *)
(* let YVREJIS ;; *)

(* Lemma $lemma:2pi-sum$ *)
(* let ULEKUUB ;; *)

(* Lemma $lemma:dih-azim$ *)
(* let QQZKTXU ;; *)

(* Definition $def:arcVarc_t$ *)
(* let arcVarc_t = arcVarc_t ;; *)
