needs "trig2.ml";;
needs "trig.ml";;

(* summary of the trig chapter *)
(* everything labeled definition or lemma *)
(* where possible, random strings from the pdf were associated with the HOL functions.  in some cases, there seemed to be no function associated with the random string, so the string was commented out.  in some cases, a lemma or definition was labeled, but had neither a random string nor a function; these are also included.  if no label was assigned in the tex file, there's nothing between the $$ *)

(* definition label{eqn:cos0} *)
let SIN_0 = SIN_0 ;;

(* definition label{eqn:cos0} *)
let COS_0 = COS_0;;

(* Lemma label{lemma:circle} *)
let WPMXVYZ = SIN_CIRCLE;; 

(* Lemma label{lemma:sin-add}  *)
let WNYVJPE1 = SIN_ADD;;

(* Lemma label{lemma:sin-add} *)
let WNYVJPE2 = COS_ADD;;

(* Lemma label{lemma:cos-neg} *)
let KGLLRQT1 = COS_NEG;;

(* Lemma label{lemma:sin-neg} *)
let KGLLRQT2 = SIN_NEG;;

(* Lemma label{lemma:sin-pi2} *)
let CPIREMF = SIN_PI2;;

(* Lemma label{lemma:cos-sin} *)
let SCEZKRH = COS_SIN;;

(* definition label{def:tan} *)
(* CHECK THIS *)
 let TAN = tan ;;

(* Lemma label{lemma:tan-add} *)
let KWYPRWZ = TAN_ADD;;

(* Lemma label{lemma:tan-pi4} *)
let KSQDZSF = TAN_PI4;;

(* Definition label{def:arctan} *)
let atn = atn;;

(* Definition label{} *)
(* NOT IN TRIG.ML *)
let ATN = atn ;; 

(* Definition label{} *)
let ATN_TAN = ATN_TAN ;;

(* Definition label{} *)
let ATN_BOUNDS = ATN_BOUNDS ;;

(* Definition label{} *)
let TAN_ATN = TAN_ATN ;;

(* Definition label{} *)
let ATN_1 = ATN_1 ;;

(* Definition label{} *)
(* let DIFF_ATN = DIFF_ATN ;; *)

(* Definition label{} *)
let ATN_MONO_LT = ATN_MONO_LT ;;

(* Definition label{} *)
let ATN_MONO_LT_EQ = ATN_MONO_LT_EQ ;;

(* Definition label{def:arccos} *)
let acs = acs;;

(* Definition label{def:arccos} *)
let ACS_COS = ACS_COS;;

(* Definition label{def:arccos} *)
let COS_ACS = COS_ACS;;

(* Lemma label{lemma:sin-arccos} *)
let FMGMALU = SIN_ACS;;

(* Lemma label{lemma:arccos-arctan} *)
let OUIJTWY = acs_atn2 ;;

(* Definition label{def:arcsin} *)
let asn = asn;;

(*CAUCHY SCHWARZ Lemma label{} *)
let JJKJALK = NORM_CAUCHY_SCHWARZ ;;


(*TRIANGLE INEQ  Lemma label{} *)
let OIPLPTM = NORM_TRIANGLE ;;

(* Definition label{def:delta} *)
let delta_x = delta_x ;;

(* Definition label{def:aff} *)
let aff = aff ;;

(* Definition label{} *)
let convex = convex ;;
let hull = hull ;;

(* Definition label{} *)
let cone = cone ;;

(* Definition label{} *)
let line = line ;;

(* Definition label{} *)
let collinear = collinear ;;

(* Definition label{} *)
let plane = plane ;;

(* Definition label{} *)
let closed_half_plane = closed_half_plane ;;
let open_half_plane = open_half_plane ;;

(* Definition label{} *)
let coplanar = coplanar ;;

(* Definition label{} *)
let closed_half_space = closed_half_space ;;
let open_half_space = open_half_space ;;

(* Definition label{def:angle} *)
let arcV = arcV ;;

(* Lemma label{} *)
let HQTBPCM = LAW_OF_COSINES ;;

(* Lemma label{} *)
let UKBAHKV = LAW_OF_SINES ;;

(* Lemma label{} *)
(* cross product something *)
let KVVWPNA = NORM_CROSS ;;

(* Lemma label{} *)
(* cross product order and distribution with dot product *)
let BKMUSOX1 = CROSS_SKEW ;;
let BKMUSOX2 = CROSS_TRIPLE ;;

(* Definition label{def:dih} *)
let dihV = dihV ;;

(* Lemma label{lemma:sloc} *)
(* let RLXWSTK = spherical_loc ;; *) (* Trigsig *)

(* Lemma label{dihform} *)
(* let OJEKOJF = dih_formula ;;*)  (* Trigsig *)

(* Lemma label{} *)
(* let NLVWBBW = spherical_loc2 ;; *) (* Trigsig *)

(* Lemma label{lemma:euler} *)
(* let JLPSDHF = euler_triangle ;; *) (* Trigsig *)

(* Lemma label{lemma:sph-tri-ineq} *)
let KEITDWB = ARCV_INEQUALTY ;;

(* Lemma label{lemma:sph-tri-multi} *)
let FGNMPAV = FGNMPAV ;;

(* Lemma label{} *)
(* Lexell's Thm *)
(* hasn't been formalized *)
(* let UWIPRDV ;; *)

(* Lemma label{} *)
(* fix one point on the unit sphere with antipodal point... *)
(* not part of project x_x *)
(* let ZHHSGTF ;; *)

(* Lemma label{lemma:ngon} *)
(* hasn't been done *)
(* let GOTCJAH ;; *)

(* Lemma label{lemma:ngon-area} *)
(* hasn't been done *)
(* let BBEVFIC ;; *)

(* Lemma label{lemma:polar2} *)
(* I don't know what I'm doing; check this! *)
(* let PDPFQUK = thetaij ;; *) (* Trigsig *)

(* Lemma label{lemma:polar-sum} *)
(* I don't know what I'm doing; check this! *)
(* let ISRTTNZ = thetapq_wind ;; *) (* Trigsig *)

(* Definition label{def:azimuth} *)
(* cthulhu > shoggoth > azimuth *)

(* Lemma label{} *)
(* let QAFHJNM = zenith ;; *) (* Trigsig *)

(* Lemma label{} *)
(* check this *)
(* let EYFCXPP = polar_coord_zenith ;; *)  (* Trigsig *)

(* Definition label{} *)
let azim = azim ;;  

(* Lemma label{lemma:sph} *)
let XPHCPNY = SPHERICAL_COORDINATES ;;

(* Definition label{def:sph} *)

(* Lemma label{lemma:polar-gen} *)
(* let YBXRVTS = polar_coord_zenith ;; *) (* Trigsig *)

(* Definition label{def:polar} *)
(* polar_c is defined in sphere.hl but that section of the file is commented out *)

(* Definition label{} *)
let cyclic_set = cyclic_set ;;

(* Lemma label{} *)
(* let NLOFMTR ;; *)
(* the closest thing I could find was azim_pair_t from trig.ml *)

(* Lemma label{} *)
(* let YVREJIS ;; *)

(* Lemma label{lemma:2pi-sum} *)
(* let ULEKUUB ;; *)

(* Lemma label{lemma:dih-azim} *)
(* let QQZKTXU ;; *)

(* Definition label{def:arcVarc_t} *)
(* let arcVarc_t = arcVarc_t ;; *)
