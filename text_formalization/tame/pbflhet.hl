(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Pbflhet= struct


open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;

open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Ncvibwu;;


let INDUCT_REV=prove(`(!i:num. i<=j ==> P i) <=> (!i. i<=j ==> P (j-i)) `,
EQ_TAC
THEN REPEAT RESA_TAC
THENL[
MATCH_DICH_TAC 1
THEN DICH_TAC 0
THEN ARITH_TAC;

MRESA_TAC(ARITH_RULE`!i j:num. i<=j==> j-i<=j/\ j-(j-i)=i`)[`i`;`j`]
THEN THAYTHE_TAC 3[`j-i:num`]]);;


let FINAL_LIST_INDUCT1=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L   /\   marked_list L N r x /\ ~final_list L (rtrans L N r x i) 
==>(!j. j<=i
==> ~final_list L (rtrans L N r x (j)))`,

REPEAT GEN_TAC
THEN RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN ONCE_REWRITE_TAC[INDUCT_REV]
THEN INDUCT_TAC 
THENL[
ASM_REWRITE_TAC[ARITH_RULE`i-0=i`];
STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<= b==> a<=b/\ b-a= SUC (b- SUC a)`)[`j'`;`i`]
THEN DICH_TAC 3
THEN RESA_TAC
THEN GABBREV_TAC`j1=i- SUC j':num`
THEN MATCH_MP_TAC Qcdvkea.FINAL_LIST_INDUCT
THEN ASM_REWRITE_TAC[]]);;


let properties_of_ytrans0=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
 ~final_list L (rtrans L N r x i)/\
(find_face L x) =f/\
next_el f x =w
==> indexf w (ytrans L N r x 0) f =indexf w (ytrans L N r x 0) (rtrans L N r x i)/\
indexf w (ytrans L N r x 0) f< indexf w (ztrans L N r x i) f /\
indexf w (ytrans L N r x 0) f<= indexf w (ytrans L N r x i) f /\
 MEM (ytrans L N r x 0) (rtrans L N r x i)`,
REPEAT GEN_TAC
THEN GSPEC_TAC(`i`,`i`)
THEN INDUCT_TAC
THENL[
RESA_TAC
THEN MRESA_TAC Pwssrat.ytrans_mem_rtrans[`L`;`N`;`r`;`x`;`0`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`]
THEN MRESA_TAC Pplhulj.indexf_ytrans_eq_l_m[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(20-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Ncvibwu.indexf_ytrans_eq_l_m1[`L`;`N`;`r`;`x`;`0`;`w`]
THEN ARITH_TAC;

RESA_TAC
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN DICH_TAC 8
THEN RESA_TAC
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN MRESA_TAC (ARITH_RULE`!a b c d:num. a<b/\ b<=c /\ c<d==> a<d/\ a<=c`)[`indexf w (ytrans L N r x 0) f`;`indexf w (ztrans L N r x i) f`;`indexf w (ytrans L N r x (SUC i)) f`;`indexf w (ztrans L N r x (SUC i)) f`]
THEN MRESA_TAC FINAL_LIST_INDUCT1[`L`;`N`;`r`;`x`;`i`]
THEN THAYTHEL_TAC 0[`0`][ARITH_RULE`0<=i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN DICH_ASM_TAC(22-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`(ytrans L N r x 0)`;`f`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w (ytrans L N r x 0) f`;`indexf w (ztrans L N r x i) f`]
THEN MRESA_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`i`;`indexf w (ytrans L N r x 0) f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`(ytrans L N r x 0)`;`f`]
]);;



let in_rtrans_suc_not_rtrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> MEM d (betwn f (ytrans L N r x i) (ztrans L N r x i))`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN DICH_ASM_TAC(22-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(25-8)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x i)`;`r1`][Tame_defs2.ytrans]
THEN MP_TAC PPLHULJ
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`][MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN DICH_TAC(41-7)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.betwn_mem[`r1`;`z`;`y`;`d`]);;



let indexf_in_rtrans_suc_not_rtrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> indexf w d f< indexf w (ztrans L N r x i) f
/\ indexf w (ytrans L N r x i) f< indexf w d f`,

REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESAL_TAC in_rtrans_suc_not_rtrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC PPLHULJ
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.ytrans;]
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN DICH_ASM_TAC(28-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`y`;`d`;`z`;`f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num . a+b=c /\ d+e=b==> e<=c`)[`indexf w y f`;`indexf y z f`;`indexf w z f`;`indexf y d f`;`indexf d z f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC Tame_list.indexf_add_right[`w`;`d`;`z`;`f`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d`;`z`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num . a+b=c /\ d+e=b/\ f+e=c/\ 0<d /\ d<b ==> f<c/\ a<f`)[`indexf w y f`;`indexf y z f`;`indexf w z f`;`indexf y d f`;`indexf d z f`;`indexf w d  f`]);;




let eq_indexf_in_rtrans_suc_not_rtrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> indexf w d f= indexf w d (rtrans L N r x (SUC i))`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w d f`;`indexf w z f`]
THEN MRESA_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`i`;`indexf w d f`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN MRESAL_TAC in_rtrans_suc_not_rtrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN DICH_ASM_TAC(29-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`y`;`d`;`z`;`f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN ASM_REWRITE_TAC[transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[GSYM Tame_defs2.ztrans]
THEN ASM_REWRITE_TAC[]);;



let lt_indexf_in_rtrans_suc_not_rtrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> indexf w d (rtrans L N r x (SUC i))< indexf w ((ytrans L N r x (SUC i))) (rtrans L N r x (SUC i))`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN MRESAL_TAC eq_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`][]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Pplhulj.indexf_ytrans_eq_l_m[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN DICH_ASM_TAC(9-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC i`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`SUC i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Ncvibwu.indexf_ytrans_eq_l_m1[`L`;`N`;`r`;`x`;`SUC i`;`w`]
THEN SYM_DICH_TAC (26-9)
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][]
THEN DICH_TAC 1
THEN DICH_TAC 1
THEN ARITH_TAC);;




let indexf_two_point_in_rtrans_suc_not_rtrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)/\
   MEM d (rtrans L N r x i) /\
   MEM d1 (rtrans L N r x i) /\
indexf w d (rtrans L N r x i)< indexf w (ytrans L N r x i) (rtrans L N r x i)
/\ indexf w d1 (rtrans L N r x i)< indexf w d (rtrans L N r x i)
   ==> indexf (ztrans L N r x i) d1 (rtrans L N r x i)< indexf (ztrans L N r x i) d (rtrans L N r x i)`,

REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN DICH_TAC (23-9)
THEN ASM_REWRITE_TAC[Tame_defs2.ytrans]
THEN STRIP_TAC
THEN MRESAL_TAC Ncvibwu.next_mark_case_mem[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ytrans]
THENL[

DICH_TAC 1
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.indexf_refl[`y`;`r1`]
THEN ARITH_TAC;

MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN DICH_ASM_TAC(27-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`z`;`w`;`y`;`r1`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w d r1`;`indexf w y r1`]
THEN MRESA_TAC Tame_list.betwn_mem[`r1`;`z`;`y`;`w`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`d`;`y`;`r1`] 
THEN DICH_TAC 3
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b+c=d ==> c <= d`)[`indexf z w r1 `;` indexf w d r1 `;` indexf d y r1 `;` indexf z y r1`]
THEN MRESA_TAC Tame_list.indexf_add_right[`z`;`d`;`y`;`r1`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d f:num. a+b+c=d /\ f+c=d==> a+b=f`)[`indexf z w r1 `;` indexf w d r1 `;` indexf d y r1 `;` indexf z y r1`;` indexf z d r1`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w d1 r1`;`indexf w d r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`d1`;`d`;`r1`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b= c/\ d+e=b/\ d<b ==> e<=c/\ 0<e`)[`indexf z w r1 `;` indexf w d r1 `;` indexf z d r1 `;` indexf w d1 r1`;` indexf d1 d r1`]
THEN MRESA_TAC Tame_list.indexf_add_right[`z`;`d1`;`d`;`r1`]
THEN DICH_TAC 1
THEN DICH_TAC 0
THEN ARITH_TAC]);;



let lt_from_z_indexf_in_rtrans_suc_not_rtrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))< indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))`,

REPEAT RESA_TAC
THEN MRESA_TAC indexf_two_point_in_rtrans_suc_not_rtrans[`f`;`w`;`(ytrans L N r x 0)`;`L`;`N`;`d`;`r`;`x`;`SUC i`]
THEN MATCH_DICH_TAC 0
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`SUC i`]
THEN SYM_DICH_TAC 3
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC lt_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`d`;`r`;`x`;` i`]
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][]
THEN MRESAL_TAC eq_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`][]
THEN SYM_DICH_TAC 0
THEN DICH_TAC 0
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN DICH_TAC 1
THEN SYM_DICH_TAC 2
THEN ARITH_TAC);;


let INDUCT_MEM_MAIN_RESULT=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
==> MEM d (rtrans L N r x i)`,
REPEAT RESA_TAC
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`MEM d (rtrans L N r x i)`]
THEN DICH_TAC 1
THEN REWRITE_TAC[ARITH_RULE`~(a<=b)<=> b<a:num`]
THEN MATCH_MP_TAC lt_from_z_indexf_in_rtrans_suc_not_rtrans
THEN ASM_REWRITE_TAC[]);;



let ztran_suc_in_rtrans=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))
==> MEM (ztrans L N r x (SUC i)) (rtrans L N r x i)`,
REPEAT RESA_TAC
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN MRESA_TAC Tame_list.indexf_refl[`(ztrans L N r x (SUC i))`;`(rtrans L N r x (SUC i))`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`(ztrans L N r x (SUC i))`;`r`;`x`;`i`]
THEN MATCH_DICH_TAC 0
THEN ARITH_TAC);;



let indexf_const_le_indexf_ytrans=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i) /\
 MEM d (rtrans L N r x i) /\
indexf  w d  (rtrans L N r x i) <= indexf  w (ytrans L N r x i) (rtrans L N r x i)
==>
 indexf  w d  (rtrans L N r x i) = indexf  w d  f`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN DICH_ASM_TAC(21-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Ncvibwu.indexf_ytrans_eq_l_m1[`L`;`N`;`r`;`x`;`i`;`w`]
THEN DICH_TAC(28-8)
THEN RESA_TAC
THEN DICH_ASM_TAC(28-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MP_TAC next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`r1`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC(indexf w d r1)`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC l_y_rep_power_le[`L`;`r1`;`x`]
THEN THAYTHEL_TAC 0[`indexf w d r1`][ARITH_RULE`a<=a:num`;POWER;o_DEF;I_DEF]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN MRESA_TAC mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MATCH_MP_TAC Tame_list.next_eln_indexf
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;`indexf w d r1`]
THEN MRESA_TAC Pplhulj.indexf_ytrans_eq_l_m[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`(ytrans L N r x i)`]
THEN MP_TAC PPLHULJ
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`(ytrans L N r x i)`]
THEN DICH_TAC 0
THEN DICH_TAC(45-28)
THEN ARITH_TAC);;



let ztrans_suc_in_ztran_w=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))
==>
indexf  (ztrans L N r x i) (ztrans L N r x (SUC i))  (rtrans L N r x i) 
< indexf  (ztrans L N r x i) w  (rtrans L N r x i)`,
REPEAT RESA_TAC
THEN MRESA_TAC ztran_suc_in_rtrans[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN MRESA_TAC PWSSRAT[`L`;`N`;`r`;`x`;`(ztrans L N r x (SUC i))`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a< b\/ b<=a`)[`indexf (ztrans L N r x i) (ztrans L N r x (SUC i)) (rtrans L N r x i)`;`indexf (ztrans L N r x i) w (rtrans L N r x i)`]
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MP_TAC next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`w`;`z1`;`r1`] 
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`z1`;`y`;`r1`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b /\b<=c==> a<=c`)[`indexf z w r1`;`indexf z z1 r1`;`indexf z y r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`w`;`y`;`r1`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num. a+d=b /\ a+e=c/\ b+f=c ==> d+f=e/\ d<=e`)[`indexf z w r1`;`indexf z z1 r1`;`indexf z y r1`;`indexf w z1 r1`;`indexf w y r1`;`indexf z1 y r1`]
THEN MRESA_TAC indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`z1`;`r`;`x`;`i`]
THEN MRESAL_TAC indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`y`;`r`;`x`;`i`]
[ARITH_RULE`a<=a:num`]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN DICH_TAC 2
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_TAC 0
THEN ARITH_TAC);;



let ztrans_in_suc=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)
==> MEM (ztrans L N r x i) (rtrans L N r x (SUC i))`,

REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=prev_el r1 z`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN DICH_ASM_TAC(19-9)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MRESA_TAC Seq2.next_prev_id[`(ztrans L N r x i)`;`r1`]);;



let trans_indexf_suc=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)/\
(ztrans L N r x i)=z/\
MEM d (rtrans L N r x i) /\
MEM d1 (rtrans L N r x i) /\
MEM d (rtrans L N r x (SUC i)) /\
MEM d1 (rtrans L N r x (SUC i)) /\
indexf z d1 (rtrans L N r x i)<= indexf z d (rtrans L N r x i)
==> indexf d1 d (rtrans L N r x i)= indexf d1 d (rtrans L N r x (SUC i))
`,
REPEAT RESA_TAC
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN MRESA_TAC OHCGKFU[`L`;`N`;`r`;`x`;`d`;`i`]
THEN MRESA_TAC OHCGKFU[`L`;`N`;`r`;`x`;`d1`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`d1`;`d`;`r1`]
THEN DICH_TAC(19-12)
THEN RESA_TAC
THEN MRESA_TAC ztrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`d1`;`d`;`(rtrans L N r x (SUC i))`]
THEN DICH_TAC 0
THEN DICH_TAC (20-18)
THEN ARITH_TAC);;

let w_betwn_ztrans_ytran0=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)
==>
indexf  (ztrans L N r x i) w  (rtrans L N r x i) 
<= indexf  (ztrans L N r x i) (ytrans L N r x 0)  (rtrans L N r x i) /\
indexf  (ztrans L N r x i) (ytrans L N r x 0)  (rtrans L N r x i) 
<= indexf  (ztrans L N r x i) (ytrans L N r x i)  (rtrans L N r x i)`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MRESAL_TAC indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`y`;`r`;`x`;`i`][ARITH_RULE`a<=a:num`]
THEN DICH_TAC(17-14)
THEN RESA_TAC
THEN MP_TAC next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y0`;`y`;`r1`]
THEN MRESAL_TAC Ncvibwu.next_mark_case_mem[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ytrans]
THENL[

DICH_TAC(20-17)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_refl[`y`;`f`]
THEN ASM_REWRITE_TAC[ARITH_RULE`a<=0<=> a=0 `]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf0[`y`;`y0`;`r1`]
THEN ARITH_TAC;


MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(30-24)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`z`;`w`;`y`;`r1`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC (36-19)
THEN STRIP_TAC 
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b+c=d==> c<=d`)[`indexf z w r1`;`indexf w y0 r1`;` indexf y0 y r1`;` indexf z y r1`]
THEN MRESA_TAC Tame_list.indexf_add_right[`z`;`y0`;`y`;`r1`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b+c=d/\ e+c=d==> a+b=e`)[`indexf z w r1`;`indexf w y0 r1`;` indexf y0 y r1`;` indexf z y r1`;`indexf z y0 r1`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC]);;




let INDUCT_LE_MAIN_RESULT=prove( `!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
==>  indexf (ztrans L N r x i) d (rtrans L N r x i)<=
indexf (ztrans L N r x i) (ytrans L N r x 0) (rtrans L N r x i)`,

REPEAT RESA_TAC
THEN MRESA_TAC ztran_suc_in_rtrans[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN MRESA_TAC w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC ztrans_suc_in_ztran_w[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC PWSSRAT[`L`;`N`;`r`;`x`;`d`;`i`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<=b\/ b<a`)[`indexf z d r1`;`indexf z y0 r1`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`indexf z z1 r1`;`indexf z w r1`;`indexf z y0 r1`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`z1`;`L`;`N`;`y0`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<=c`)[`indexf z z1 r1`;`indexf z y0 r1`;`indexf z d r1`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`z1`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`z1`;`y0`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`z1`;`d`;`r1`]
THEN DICH_TAC(38-24)
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN DICH_TAC (35-8)
THEN ARITH_TAC);;



let INDUCT_CONST_MAIN_RESULT=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
==>  indexf (ztrans L N r x (SUC i)) d (rtrans L N r x i)=
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))`,
REPEAT RESA_TAC
THEN MRESA_TAC INDUCT_LE_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`d`;`L`;`N`;`y0`;`r`;`x`;`i`]
THEN MRESA_TAC w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC ztrans_suc_in_ztran_w[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`indexf z z1 r1`;`indexf z w r1`;`indexf z y0 r1`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN MRESA_TAC ztran_suc_in_rtrans[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`z1`;`L`;`N`;`y0`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z1`;`d`;`y0`;`r2`]
THEN MRESA_TAC (ARITH_RULE`!a b c:num. a+b=c==> b<=c`)[`indexf z1 d r2 `;` indexf d y0 r1 `;` indexf z1 y0 r1`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC (32-26)
THEN REPEAT STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_add_right[`z1`;`d`;`y0`;`r1`]
THEN DICH_TAC 0
THEN DICH_TAC 1
THEN ARITH_TAC);;


let INDUCT_MAIN_RESULT=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
==>  indexf (ztrans L N r x (SUC i)) d (rtrans L N r x i)=
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))
/\ indexf (ztrans L N r x i) d (rtrans L N r x i)<=
indexf (ztrans L N r x i) (ytrans L N r x 0) (rtrans L N r x i)
/\ MEM d (rtrans L N r x i)`,
REPEAT RESA_TAC
THENL[

MATCH_MP_TAC INDUCT_CONST_MAIN_RESULT
THEN ASM_REWRITE_TAC[];
MATCH_MP_TAC INDUCT_LE_MAIN_RESULT
THEN ASM_REWRITE_TAC[];
MATCH_MP_TAC INDUCT_MEM_MAIN_RESULT
THEN ASM_REWRITE_TAC[]]);;





let  INDUCT_CONST_MAIN_RESULT_TWO=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
   MEM d1 (rtrans L N r x (SUC i)) /\
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
/\
indexf (ztrans L N r x (SUC i)) d1 (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))
==>  indexf d1 d (rtrans L N r x i)=
indexf d1 d (rtrans L N r x (SUC i))`,
REPEAT RESA_TAC
THEN MRESA_TAC INDUCT_LE_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN MRESA_TAC INDUCT_CONST_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<=c==> a<=c`)[`indexf z1 d1 r2`;`indexf z1 d r2`;`indexf z1 y0 r2`]
THEN MRESA_TAC INDUCT_CONST_MAIN_RESULT[`f`;`w`;`L`;`N`;`d1`;`r`;`x`;`i`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN MRESA_TAC Tame_list.indexf_add_left[`z1`;`d1`;`d`;`r2`]
THEN DICH_TAC 0
THEN DICH_TAC (22-10)
THEN SYM_DICH_TAC 1
THEN SYM_DICH_TAC 2
THEN STRIP_TAC 
THEN MRESA_TAC ztran_suc_in_rtrans[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d1`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z1`;`d1`;`d`;`r1`]
THEN DICH_TAC 0
THEN ARITH_TAC);;



let INDUCT_LE_MAIN_RESULT_TWO =prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
   MEM d1 (rtrans L N r x (SUC i)) /\
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
/\
indexf (ztrans L N r x (SUC i)) d1 (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))
==>  indexf (ztrans L N r x i) d (rtrans L N r x i)<=
indexf (ztrans L N r x i) (ytrans L N r x 0) (rtrans L N r x i)
/\
indexf (ztrans L N r x i) d1 (rtrans L N r x i)<=
indexf (ztrans L N r x i) d (rtrans L N r x i)`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN MRESA_TAC INDUCT_LE_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<=c==> a<=c`)[`indexf z1 d1 r2`;`indexf z1 d r2`;`indexf z1 y0 r2`]
THEN MRESA_TAC INDUCT_LE_MAIN_RESULT[`f`;`w`;`L`;`N`;`d1`;`r`;`x`;`i`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d1`;`r`;`x`;`i`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`d1`;`y0`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`d`;`y0`;`r1`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`d1`;`L`;`N`;`y0`;`r`;`x`;`i`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`d`;`L`;`N`;`y0`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z1`;`d1`;`y0`;`r2`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z1`;`d`;`y0`;`r2`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=e/\ c+d=e /\ a<=c==> d<=b`)[`indexf z1 d1 r2 `;`indexf d1 y0 r2`;`indexf z1 d r2 `;`indexf d y0 r2`;`indexf z1 y0 r2`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 2
THEN SYM_DICH_TAC 2
THEN DICH_TAC 2
THEN SYM_DICH_TAC 2
THEN ARITH_TAC);;




let INDUCT_MAIN_RESULT_TWO=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
   MEM d1 (rtrans L N r x (SUC i)) /\
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) (ytrans L N r x 0) (rtrans L N r x (SUC i))
/\
indexf (ztrans L N r x (SUC i)) d1 (rtrans L N r x (SUC i))<=
indexf (ztrans L N r x (SUC i)) d (rtrans L N r x (SUC i))
==>  indexf (ztrans L N r x i) d (rtrans L N r x i)<=
indexf (ztrans L N r x i) (ytrans L N r x 0) (rtrans L N r x i)
/\
indexf (ztrans L N r x i) d1 (rtrans L N r x i)<=
indexf (ztrans L N r x i) d (rtrans L N r x i)
/\ indexf d1 d (rtrans L N r x i)=
indexf d1 d (rtrans L N r x (SUC i))
/\ MEM d (rtrans L N r x i)
/\ MEM d1 (rtrans L N r x i)`,
REPEAT GEN_TAC
THEN RESA_TAC
THEN MRESA_TAC INDUCT_LE_MAIN_RESULT_TWO[`f`;`w`;`d1`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<=c==> a<=c`)[`indexf z1 d1 r2`;`indexf z1 d r2`;`indexf z1 y0 r2`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d1`;`r`;`x`;`i`]
THEN MRESA_TAC INDUCT_MEM_MAIN_RESULT[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]
THEN MRESA_TAC INDUCT_CONST_MAIN_RESULT_TWO[`f`;`w`;`d1`;`L`;`N`;`d`;`r`;`x`;`i`]);;





let PBFLHET_ALL_concl = `!L N d r ri w (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
  MEM d ri /\
  MEM d1 ri /\
~final_list L ri/\
 rtrans L N r x i=ri /\
  next_el (find_face L x) x =w/\
indexf (ztrans L N r x i)  d ri  <=   indexf (ztrans L N r x i) (ytrans L N r x 0) ri /\
indexf (ztrans L N r x i)  d1 ri <=indexf (ztrans L N r x i)  d ri
   ==>
  (!t. t<=i ==> MEM d (rtrans L N r x (t)) /\
MEM d1 (rtrans L N r x (t))
/\ indexf (ztrans L N r x t) d (rtrans L N r x t)<= indexf (ztrans L N r x t) (ytrans L N r x 0) (rtrans L N r x t)/\
indexf (ztrans L N r x t) d1 (rtrans L N r x t)<= indexf (ztrans L N r x t) d (rtrans L N r x t)
/\ indexf d1 d (rtrans L N r x t)= indexf d1 d (rtrans L N r x i)
)`;;

let PBFLHET_ALL =prove( PBFLHET_ALL_concl,


REPEAT GEN_TAC
THEN STRIP_TAC
THEN ONCE_REWRITE_TAC[INDUCT_REV]
THEN INDUCT_TAC
THENL[

ASM_REWRITE_TAC[ARITH_RULE`a-0=a`];

STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<= b==> a<=b/\ b-a= SUC (b- SUC a)/\ (b- SUC a)<=b/\ SUC (b- SUC a)<=b`)[`t`;`i`]
THEN DICH_TAC 5
THEN RESA_TAC
THEN GABBREV_TAC`j=i- SUC t:num`
THEN MRESA_TAC FINAL_LIST_INDUCT1[`L`;`N`;`r`;`x`;`i`]
THEN THAYTHE_TAC 0[`SUC j`]
THEN MRESA_TAC INDUCT_MAIN_RESULT_TWO[`(find_face L x)`;`w`;`d1`;`L`;`N`;`d`;`r`;`x`;`j`]]);;




let PBFLHET_concl = `!L N d r ri w (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
  MEM d ri /\
  rtrans L N r x i =ri/\
 next_el (find_face L x) x =w/\
~final_list L ri/\
  indexf (ztrans L N r x i) d ri <=   indexf (ztrans L N r x i) (ytrans L N r x 0) ri
   ==>
   MEM d r/\ indexf (ztrans L N r x i) d ri= indexf (ztrans L N r x i) d r`;;



let PBFLHET=prove( PBFLHET_concl,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_refl[`(ztrans L N r x i)`;`ri`]
THEN MRESAL_TAC PBFLHET_ALL[`(ztrans L N r x i)`;`L`;`N`;`d`;`r`;`ri`;`w`;`x`;`i`][ARITH_RULE`0<=a`]
THEN THAYTHEL_TAC 0[`0`][ARITH_RULE`0<=a`;Tame_defs2.rtrans;Tame_defs2.transform_list;POWER;o_DEF;I_DEF]);;




 end;;



