open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


(* module  Aq4= struct *)

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;





let betwn_eq_nil=prove_by_refinement( `!r. betwn r y z =[] /\ MEM y r /\ MEM z r/\ ~(y=z)/\ uniq r
==> next_el r y=z`,
[
REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf y z r`];

MRESA_TAC Tame_list.indexf0[`y`;`z`;`r`];

MRESAL_TAC Tame_list.size_betwn[`y`;`z`;`r`][Seq.size_nil]
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`indexf y z r`][ARITH_RULE`2<=a==> 1<=a`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC 0=1`]
THEN STRIP_TAC
THEN MATCH_MP_TAC Tame_list.indexf1
THEN ASM_REWRITE_TAC[]]);;



let EQ_MEM_NEXT_EL_LAST=prove(`~(y = z) /\
           MEM y f /\
           MEM z f /\
           MEM d (betwn f y z) /\
           uniq f
==> (          MEM (next_el f d) (betwn f y z) <=> ~(LAST(betwn f y z)=d) )
`,

REPEAT RESA_TAC
THEN EQ_TAC
THENL[
REPEAT RESA_TAC
THEN DICH_TAC 1
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`d`]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`y`;`z`]
THEN MATCH_MP_TAC Tame_list.not_betwn2
THEN ASM_REWRITE_TAC[];

RESA_TAC
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d`;`z`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`(next_el f d)`;`z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`y`;`d`;`f`;]
THEN MRESA_TAC Seq2.mem_next_el[`d`;`f`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`y`;`z`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> SUC(a)<c`)[`indexf y d f`;`indexf y z f`;` sizel f`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`SUC(indexf y d f)`;`y`;`(next_el f d)`;`f`][COM_POWER;I_DEF;o_DEF]
THEN ASM_REWRITE_TAC[ARITH_RULE`0< SUC a`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> SUC a= b\/ SUC a<b`)[`indexf y d f`;`indexf y z f`;]
THEN MRESA_TAC Tame_list.indexf_n[`y`;`(next_el f d)`;`f`;]
THEN MRESA_TAC Tame_list.indexf_n[`y`;`z`;`f`;]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`d`]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`y`;`z`]
THEN MRESA_TAC Kbwpbhq.change_next_prev[`f`;`z`;`d`]
THEN MRESA_TAC Kbwpbhq.change_next_prev[`f`;`z`;`LAST (betwn f y z)`]
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn f y z`]
THEN GABBREV_TAC`d1=LAST (betwn f y z)`
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d1`]]);;



let betwn_cat_ex=prove(`!a. ~(MEM y a)
       ==> betwn (APPEND (APPEND [z] (APPEND a [y])) b) z y=a `,
REWRITE_TAC[Tame_defs.betwn;LET_THM;Dangeyj.fst_snd_fun;IN_SET_OF_LIST;Seq2.next_el;Tame_defs.split_at;Tame_defs.split_at_rec;APPEND;MEM_APPEND;Seq.mem_seq1]
THEN LIST_INDUCT_TAC
THEN REWRITE_TAC[Tame_defs.betwn;LET_THM;Dangeyj.fst_snd_fun;IN_SET_OF_LIST;Seq2.next_el;Tame_defs.split_at;Tame_defs.split_at_rec;APPEND;MEM_APPEND;Seq.mem_seq1;MEM;DE_MORGAN_THM]
THEN RESA_TAC
THEN DICH_TAC 2
THEN RES_TAC
THEN ASM_SIMP_TAC[GSYM Tame_list.fst_split_at_acc;APPEND]);;


let uniq_change_append_ex=prove(`uniq (APPEND (APPEND [z] (APPEND a [y])) b)==> next_el (APPEND (APPEND [z] (APPEND a [y])) b) d1= next_el (APPEND (APPEND [y] (APPEND b [z])) a) d1/\ uniq (APPEND (APPEND [y] (APPEND b [z])) a)`,

REWRITE_TAC[Seq2.APPEND_cat]
THEN ASM_SIMP_TAC[Tame_list.next_el_cat_sym]
THEN ONCE_REWRITE_TAC[Seq.uniq_catC]
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ASM_SIMP_TAC[Tame_list.next_el_cat_sym]
THEN ONCE_REWRITE_TAC[Seq.uniq_catC]
THEN ONCE_REWRITE_TAC[GSYM Seq.catA]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.next_el_cat_sym[`a`;`(cat [y] (cat b [z]))`]
THEN ONCE_REWRITE_TAC[GSYM Seq.catA]
THEN ONCE_REWRITE_TAC[GSYM Seq.catA]
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Seq.uniq_catC[`a`;`(cat [y] (cat b [z]))`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[GSYM Seq.catA]
THEN STRIP_TAC
THEN MRESA_TAC Seq.uniq_catC[`[y]`;`(cat (cat b [z]) a)`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN STRIP_TAC
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ASM_REWRITE_TAC[]
);;


let uniq_change_append_ex1=prove(`uniq (APPEND  b (APPEND [z] (APPEND a [y])))==> next_el (APPEND  b (APPEND [z] (APPEND a [y]))) d1= next_el (APPEND (APPEND [y] (APPEND b [z])) a) d1/\ uniq (APPEND (APPEND [y] (APPEND b [z])) a)`,

REWRITE_TAC[Seq2.APPEND_cat]
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ASM_SIMP_TAC[Tame_list.next_el_cat_sym]
THEN REPEAT RESA_TAC
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[Seq.uniq_catC]
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ONCE_REWRITE_TAC[Seq.catA]
THEN ASM_REWRITE_TAC[]);;



let HD_UPT =prove_by_refinement(`!a. 2<=a ==> HD(upt 1 a)=1`,
[
INDUCT_TAC
THEN REWRITE_TAC[Tame_list.upt_rec;MEM];

ARITH_TAC;

MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`2<=a`][MEM;MEM_APPEND];

DICH_TAC 1
THEN RESA_TAC
THEN MRESAL_TAC(ARITH_RULE`!a:num. 2<=a==> 1<=a`)[`a`][HD_APPEND]
THEN MRESAS_TAC Hojodcm.mem_upt1[`1`;`a`][ARITH_RULE`2<=a==> 0<1/\ 1<a`;ARITH_RULE`0<1`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`(upt 1 a)`;`1`];

STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a. ~(2<=a)/\ 2<= SUC a==> a=1/\ 1<=1`)[`a`]
THEN REWRITE_TAC[Tame_list.upt_rec;MEM;HD_APPEND;ARITH_RULE`1=SUC 0/\ ~(SUC 0<=0)`;HD]]);;


let prev_el_cat=prove(`!s.uniq(cat r s) /\ ~(x=HD r)/\ MEM x r
==> prev_el (cat r s) x = prev_el r x`,
REPEAT RESA_TAC
THEN MRESAL_TAC Elllnyz.next_el_rev[`(cat r s)`;`x`][Seq.mem_cat;Seq.rev_cat]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Seq.cat_uniq[`r`;`s`]
THEN MRESAS_TAC Elllnyz.next_el_rev[`r`;`x`][Seq.cat_uniq]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.next_el_cat2[`x`;`rev s`;`rev r`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[Seq.mem_rev;GSYM Seq.rev_cat;Seq.rev_uniq]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN ASM_SIMP_TAC[Tame_list.LAST_rev]);;


let prev_el_cat0=prove(`!s.uniq(cat r s) /\ ~(x=HD s)/\ MEM x s
==> prev_el (cat r s) x = prev_el s x`,
REPEAT RESA_TAC
THEN MRESAL_TAC Elllnyz.next_el_rev[`(cat r s)`;`x`][Seq.mem_cat;Seq.rev_cat]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Seq.cat_uniq[`r`;`s`]
THEN MRESAS_TAC Elllnyz.next_el_rev[`s`;`x`][Seq.cat_uniq]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.next_el_cat1[`x`;`rev s`;`rev r`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[Seq.mem_rev;GSYM Seq.rev_cat;Seq.rev_uniq]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`s`;`x`]
THEN ASM_SIMP_TAC[Tame_list.LAST_rev]);;


let hd_flatten_eq_hd_fst=prove(`!t. uniq (flatten t)/\ MEM l t /\ MEM (HD (flatten t)) l ==> HD (flatten t) = HD l`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.cats0;HD;Seq.cons_uniq]
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`l`;`(HD (cat h (flatten t)))`]
THEN ASM_REWRITE_TAC[HD_APPEND;GSYM Tame_list.lower_case]
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[HD_APPEND;GSYM Tame_list.lower_case]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`h=[]`]
THENL[
STRIP_TAC
THEN DICH_TAC 7
THEN RESA_TAC;

STRIP_TAC
THEN MRESAL_TAC Tame_list.MEM_HD[`h`][Seq2.mem_flatten]
THEN MRESAL_TAC List_hypermap.uniq_sublist_unique[`h`;`l`;`h::t`;`HD h`][MEM;MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.cats0;HD;Seq.cons_uniq]]);;



let prev_el_not_hd_flatten=prove_by_refinement( `!s r x.
           uniq (flatten s) /\ MEM x r /\ MEM r s /\ ~(x = HD r)
           ==> prev_el (flatten s) x = prev_el r x`,
[
LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Seq.flatten_cons;Seq.cat_uniq]
THEN REPEAT RESA_TAC
THEN THAYTHE_TAC 6[`r`;`x`];

MATCH_MP_TAC prev_el_cat
THEN ASM_SIMP_TAC[Seq.cat_uniq]
THEN DICH_TAC 3
THEN ASM_TAC
THEN REPEAT RESA_TAC;

SYM_DICH_TAC 0
THEN MATCH_MP_TAC prev_el_cat0
THEN ASM_REWRITE_TAC[Seq.cat_uniq]
THEN GSUBGOAL_THEN`MEM x (flatten t)`ASSUME_TAC;

ASM_REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[];

ASM_REWRITE_TAC[]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`flatten t`;`x`]
THEN STRIP_TAC
THEN DICH_TAC 3
THEN REWRITE_TAC[]
THEN MRESAL_TAC Tame_list.MEM_HD[`(flatten t)`][Seq2.mem_flatten]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`r`;`l`;`t`;`x`]
THEN MATCH_MP_TAC hd_flatten_eq_hd_fst
THEN ASM_REWRITE_TAC[]]);;


let PREV_EL_UPT =prove_by_refinement(`!a. 2<=a/\ MEM x (upt 1 a)/\ 2<=x 
==> prev_el (upt 1 a) x =x-1`,
[
INDUCT_TAC
THEN REWRITE_TAC[Tame_list.upt_rec;MEM]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`2<=a`][MEM;MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC;

DICH_TAC 1
THEN MRESAL_TAC(ARITH_RULE`!a:num. 2<=a==> 1<=a`)[`a`][MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC;

DICH_TAC 5
THEN RESA_TAC
THEN SYM_DICH_TAC 0
THEN REWRITE_TAC[Tame_list.lower_case]
THEN MATCH_MP_TAC prev_el_cat
THEN ASM_SIMP_TAC[HD_UPT;ARITH_RULE`2<=a==> ~(a=1)`]
THEN MRESAL_TAC Aq1.uniq_upt1[`SUC a`][Tame_list.upt_rec;MEM;Tame_list.lower_case];


MATCH_MP_TAC Kbwpbhq.change_next_prev
THEN MRESAL_TAC Aq1.uniq_upt1[`SUC a`][Tame_list.upt_rec;MEM;Tame_list.lower_case]
THEN MRESA_TAC Aq23.LAST_UPT[`a`]
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`a`][ARITH_RULE`2<=a==> 0<a`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b/\ 2<=b==> b-1=a/\ 0<a/\ a<b/\ 1<b`)[`PRE a`;`a`]
THEN ASM_SIMP_TAC[Seq.mem_cat;Tame_list.MEM_LAST]
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 5
THEN MRESAL_TAC Tame_list.next_el_cat_last1[`upt 1 a`;`[a]`][HD;Ohcgkfu.sing_not_nil]
THEN MATCH_DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`upt 1 a`;`1`]
THEN MATCH_DICH_TAC 0
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN ASM_REWRITE_TAC[ARITH_RULE`0<1`];

DICH_TAC 1
THEN MRESA_TAC(ARITH_RULE`!a. ~(2<=a)/\ 2<= SUC a==> a=1/\ 1<=1`)[`a`]
THEN REWRITE_TAC[Tame_list.upt_rec;MEM;HD_APPEND;ARITH_RULE`1=SUC 0/\ ~(SUC 0<=0)`;HD;APPEND]
THEN DICH_TAC 2
THEN ARITH_TAC]);;



let prev_el_MEM_map=prove(` !y d f.
           uniq y /\
           MEM d y /\
           (!u v. MEM u y /\ MEM v y /\ f u = f v ==> u = v)
           ==> prev_el (MAP f y) (f d) = f (prev_el y d)`,
REPEAT RESA_TAC
THEN MRESAS_TAC Tame_list.next_el_MEM_map[`rev y`;`d`;`f`][Seq.rev_uniq;Seq.mem_rev;Elllnyz.next_el_rev]
THEN DICH_TAC 0
THEN ASM_SIMP_TAC[Seq.map_rev;Tame_list.lower_case]
THEN STRIP_TAC
THEN SYM_DICH_TAC 0
THEN MATCH_MP_TAC(GSYM Elllnyz.next_el_rev)
THEN ASM_SIMP_TAC[Seq.map_f;]
THEN MRESA_TAC Seq.map_inj_in_uniq[`f`;`y`]
THEN MATCH_DICH_TAC 0
THEN REPEAT RESA_TAC
THEN MATCH_DICH_TAC 3
THEN ASM_REWRITE_TAC[]);;


let prev_el_map_upt=prove(`(!u v. MEM u (upt 1 a) /\ MEM v (upt 1 a) /\ f u = f v ==> u = v) /\ 2<=a/\ MEM x (upt 1 a)/\ ~(f x = HD (map f(upt 1 a)) ) ==> prev_el (map f(upt 1 a)) (f x)= f (x-1)`,

REWRITE_TAC[GSYM Tame_list.lower_case;Tame_list.HD_MAP]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`upt 1 a`;`x`]
THEN MRESAS_TAC Tame_list.HD_MAP[`upt 1 a`;`f`][HD_UPT]
THEN DICH_TAC 2
THEN RESA_TAC
THEN DICH_TAC 3
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!x. 0<x==> x=1\/ 2<=x`)[`x`]
THEN DICH_TAC 3
THEN RESA_TAC
THEN MRESAL_TAC prev_el_MEM_map[`upt 1 a`;`x`;`f`][Aq1.uniq_upt1]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MRESA_TAC PREV_EL_UPT[`x`;`a`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN RESA_TAC
);;


let nil_rev=prove(`~(rev r = []) <=> ~(r=[])`,
SIMP_TAC[List_hypermap.mem_not_nil;Seq.mem_rev])
;;


let prev_el_cat_last2=prove(`!s.uniq(cat r s) /\ ~(r=[])/\ ~(s=[])
==> prev_el (cat r s) (HD r) = LAST( s)`,
REPEAT RESA_TAC
THEN MRESAS_TAC Elllnyz.next_el_rev[`(cat r s)`;`HD r`][Seq.mem_cat;Seq.rev_cat;Tame_list.MEM_HD]
THEN SYM_DICH_TAC 0
THEN ASM_SIMP_TAC[GSYM Tame_list.LAST_rev;GSYM Tame_list.HD_rev]
THEN MATCH_MP_TAC Tame_list.next_el_cat_last2
THEN ASM_REWRITE_TAC[GSYM Seq.rev_cat;Seq.rev_uniq;nil_rev]);;


let prev_el_cat_last1=prove(`!s.uniq(cat r s) /\ ~(r=[])/\ ~(s=[])
==> prev_el (cat r s) (HD s) = LAST( r)`,

REPEAT RESA_TAC
THEN MRESAS_TAC Elllnyz.next_el_rev[`(cat r s)`;`HD s`][Seq.mem_cat;Seq.rev_cat;Tame_list.MEM_HD]
THEN SYM_DICH_TAC 0
THEN ASM_SIMP_TAC[GSYM Tame_list.LAST_rev;GSYM Tame_list.HD_rev]
THEN MATCH_MP_TAC Tame_list.next_el_cat_last1
THEN ASM_REWRITE_TAC[GSYM Seq.rev_cat;Seq.rev_uniq;nil_rev]);;


let prev_el1=prove(`prev_el [h] h=h`,
MRESAL_TAC Seq2.prev_next_id[`h`;`[h]`][Ohcgkfu.uniq_sing;Tame_list.next_el1])
;;

let next_el_last_hd=prove(`!h.uniq h/\ ~(h=[])==> next_el h (LAST h) = HD h`,
REPEAT RESA_TAC
THEN MRESA_TAC APPEND_BUTLAST_LAST[`h`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN ASM_SIMP_TAC[LAST_APPEND;Ohcgkfu.sing_not_nil;LAST]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`BUTLAST h=[]`][APPEND;HD;Tame_list.next_el1;HD_APPEND]
THEN MRESAS_TAC Tame_list.next_el_cat_last2[`BUTLAST h`;`[LAST h]`][LAST;GSYM Tame_list.lower_case;Ohcgkfu.sing_not_nil;APPEND_BUTLAST_LAST]);;

let nil_flatten=prove(`~(t = []) /\ all (\r. ~(r = [])) t ==> ~(flatten t=[])`,
REWRITE_TAC[List_hypermap.mem_not_nil;Seq2.mem_flatten;GSYM Seq.allP]
THEN RESA_TAC
THEN THAYTHE_TAC 0[`x`]
THEN ASM_TAC
THEN SET_TAC[]);;

let prev_el_last_hd=prove(`!h.uniq h/\ ~(h=[])==> prev_el h (HD h) = LAST h`
,
REPEAT RESA_TAC
THEN MATCH_MP_TAC Kbwpbhq.change_next_prev
THEN ASM_SIMP_TAC[next_el_last_hd;Tame_list.MEM_LAST]);;


let prev_el_cons_hd=prove(`uniq (h :: t)/\ 0 < sizel t==> prev_el (h :: t) (HD t) =h`,
RESA_TAC
THEN MATCH_MP_TAC Kbwpbhq.change_next_prev
THEN ASM_SIMP_TAC[MEM;Seq2.next_el_hd_cons]);;




let prev_el_hd_flatten=prove_by_refinement(`!s r.
         uniq (flatten s) /\ all (\r. ~(r = [])) s /\ MEM r s
         ==> prev_el (flatten s) (HD r) = LAST (prev_el s r)`,
[

LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.all_cons;Tame_list.cat_eq_nil;DE_MORGAN_THM]
THEN REPEAT RESA_TAC
;



MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`t=[]`][Seq.flatten0;Seq.cats0;prev_el1]
;



MATCH_MP_TAC Kbwpbhq.change_next_prev
THEN ASM_SIMP_TAC[Tame_list.MEM_LAST;next_el_last_hd]
 ;




MRESA_TAC nil_flatten[`t`]
THEN MRESAS_TAC prev_el_cat_last2[`h`;`(flatten t)`][Seq.cat_uniq]
THEN MRESAL_TAC List_hypermap.uniq_flatten[`h::t`][MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.all_cons;Tame_list.cat_eq_nil;DE_MORGAN_THM]
THEN MRESAL_TAC prev_el_last_hd[`h::t`][NOT_CONS_NIL;HD;LAST]
THEN MATCH_MP_TAC Aq23.LAST_FLATTEN_2
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC (11-5)
THEN REWRITE_TAC[List_hypermap.mem_not_nil;Seq2.mem_flatten;GSYM Seq.allP]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN ASM_SIMP_TAC[Tame_list.MEM_LAST;next_el_last_hd]
;



THAYTHE_TAC 6[`r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`t`;`r`]
THEN MRESA_TAC nil_flatten[`t`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`r= HD t`]
;



GSUBGOAL_THEN`~(r=[])`MP_TAC
;


DICH_TAC(9-4)
THEN REWRITE_TAC[List_hypermap.mem_not_nil;Seq2.mem_flatten;GSYM Seq.allP]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN ASM_SIMP_TAC[Tame_list.MEM_LAST;next_el_last_hd];


RESA_TAC
THEN MRESA_TAC Tame_list.HD_flatten[`t`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC prev_el_cat_last1[`h`;`(flatten t)`][MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.all_cons;Tame_list.cat_eq_nil;DE_MORGAN_THM]
THEN MRESAL_TAC List_hypermap.uniq_flatten[`h::t`][MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.all_cons;Tame_list.cat_eq_nil;DE_MORGAN_THM]
THEN MRESAL_TAC prev_el_cons_hd[`t`;`h`][GSYM Pwssrat.sizel0_not_nil]
;




GSUBGOAL_THEN`~(HD t=[])`MP_TAC
;


DICH_TAC(9-4)
THEN REWRITE_TAC[List_hypermap.mem_not_nil;Seq2.mem_flatten;GSYM Seq.allP]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN ASM_SIMP_TAC[Tame_list.MEM_LAST;next_el_last_hd;Tame_list.MEM_HD];



GSUBGOAL_THEN`~(r=[])`MP_TAC
;


DICH_TAC(9-4)
THEN REWRITE_TAC[List_hypermap.mem_not_nil;Seq2.mem_flatten;GSYM Seq.allP]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN ASM_SIMP_TAC[Tame_list.MEM_LAST;next_el_last_hd;Tame_list.MEM_HD];





REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.HD_flatten[`t`]
THEN GSUBGOAL_THEN`~(HD (flatten t) =HD r)`ASSUME_TAC
;


ASM_REWRITE_TAC[]
THEN DICH_TAC 3
THEN MATCH_MP_TAC Ssrbool.contraNN
THEN STRIP_TAC
THEN MATCH_MP_TAC List_hypermap.uniq_sublist_unique
THEN GEXISTS_TAC`t`
THEN GEXISTS_TAC`HD r`
THEN ASM_SIMP_TAC[Tame_list.MEM_HD]
THEN SYM_DICH_TAC 0
THEN ASM_SIMP_TAC[Tame_list.MEM_HD]
;


GSUBGOAL_THEN`MEM (HD r) (flatten t)`ASSUME_TAC
;


ASM_REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`r`
THEN ASM_SIMP_TAC[Tame_list.MEM_HD]
;


MRESAL_TAC prev_el_cat0[`h`;`HD r`;`(flatten t)`][MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.all_cons;Tame_list.cat_eq_nil;DE_MORGAN_THM]
THEN MRESAL_TAC List_hypermap.uniq_flatten[`h::t`][MEM;Seq.flatten_cons;Seq.cat_uniq;Seq.all_cons;Tame_list.cat_eq_nil;DE_MORGAN_THM]
THEN MRESAL_TAC prev_el_cat0[`[h]`;`r`;`t`][GSYM Seq2.APPEND_cat;APPEND];
]);;



let nil_upt=prove(` 2<= a ==> ~((upt 1 a)=[])`,
RESA_TAC
THEN REWRITE_TAC[List_hypermap.mem_not_nil]
THEN GEXISTS_TAC`1`
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN DICH_TAC 0
THEN ARITH_TAC);;


let last_split_at_rec=prove(`!a. uniq(cat a [h:A]) ==> split_at_rec h [] (cat a [h]) = a,[]`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Tame_defs.split_at;Tame_defs.split_at_rec;APPEND_NIL;Seq2.uniq;APPEND;Seq.cat0s;Seq.cat_cons;Seq.mem_cat;DE_MORGAN_THM]
THEN RESA_TAC
THEN DICH_TAC 3
THEN RESA_TAC
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN ONCE_REWRITE_TAC[GSYM Tame_list.fst_split_at_acc]
THEN MRESAL_TAC Dangeyj.snd_split_at_rec_const[`h`;`(cat t [h])`;`[h']`;`[]:(A)list`][APPEND]);;



let snd_not_last_split_rec=prove(`!a. uniq(cat a [h:A])/\ MEM r a ==> 
SND(split_at_rec r [] (cat a [h])) = cat (SND (split_at_rec r [] a)) [h]`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Tame_defs.split_at;Tame_defs.split_at_rec;APPEND_NIL;Seq2.uniq;APPEND;Seq.cat0s;Seq.cat_cons;Seq.mem_cat;DE_MORGAN_THM]
THEN RESA_TAC
THEN MRESA_TAC(SET_RULE`!a b t. ~MEM a t/\ MEM b t==> ~(a=b)`)[`h'`;`r`;`t`]
THEN DICH_TAC 5
THEN RESA_TAC
THEN MRESAL_TAC Dangeyj.snd_split_at_rec_const[`r`;`(cat t [h])`;`[h']`;`[]:(A)list`][APPEND]
THEN MRESAL_TAC Dangeyj.snd_split_at_rec_const[`r`;`t`;`[h']`;`[]:(A)list`][APPEND]);;


let fst_not_last_split_rec=prove(`!a. uniq(cat a [h:A])/\ MEM r a ==> 
FST(split_at_rec r [] (cat a [h])) = FST (split_at_rec r [] a)`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Tame_defs.split_at;Tame_defs.split_at_rec;APPEND_NIL;Seq2.uniq;APPEND;Seq.cat0s;Seq.cat_cons;Seq.mem_cat;DE_MORGAN_THM]
THEN RESA_TAC
THEN MRESA_TAC(SET_RULE`!a b t. ~MEM a t/\ MEM b t==> ~(a=b)`)[`h'`;`r`;`t`]
THEN DICH_TAC 5
THEN RESA_TAC
THEN ONCE_REWRITE_TAC[GSYM Tame_list.fst_split_at_acc]
THEN ASM_REWRITE_TAC[]);;



let rev_split_at=prove(`!r:(A)list. uniq r/\ MEM r1 r==>split_at r1 (rev r) =(rev(SND (split_at r1 r)), rev(FST (split_at r1 r)))`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[MEM;Tame_defs.split_at;Tame_defs.split_at_rec;APPEND_NIL;Seq2.uniq;APPEND]
THEN RESA_TAC
THENL[

MRESAL_TAC Seq.rev_cat[`[h]`;`t`][Seq.cat1s;Tame_list.rev1]
THEN MRESAL_TAC Seq.rev_uniq[`h::t`][Seq2.uniq;Tame_list.rev0]
THEN MRESA_TAC last_split_at_rec[`h`;`(rev t)`];


MRESA_TAC(SET_RULE`!a b t. ~MEM a t/\ MEM b t==> ~(a=b)`)[`h`;`r1`;`t`]
THEN DICH_TAC 4
THEN RESA_TAC
THEN MRESAL_TAC Seq.rev_cat[`[h]`;`t`][Seq.cat1s;Tame_list.rev1]
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN MRESAL_TAC Seq.rev_uniq[`h::t`][Seq2.uniq;Tame_list.rev0]
THEN MRESAL_TAC fst_not_last_split_rec[`h`;`r1`;`rev t`][Seq.mem_rev]
THEN MRESAL_TAC snd_not_last_split_rec[`r1`;`h`;`rev t`][Seq.mem_rev]
THEN DICH_TAC 4
THEN ASM_REWRITE_TAC[Tame_defs.split_at]
THEN RESA_TAC
THEN MRESAL_TAC Dangeyj.snd_split_at_rec_const[`r1`;`t`;`[h]`;`[]:(A)list`][APPEND]
THEN ONCE_REWRITE_TAC[GSYM Tame_list.fst_split_at_acc]
THEN ASM_REWRITE_TAC[APPEND]
THEN MRESAL_TAC Seq.rev_cat[`[h]`;`FST (split_at_rec r1 [] t)`][Seq.cat1s;Tame_list.rev1]]);;




let betwn_rev=prove_by_refinement(`uniq f/\ MEM (y:A) f/\ MEM z f/\ ~(y=z) ==> betwn (rev f) z y = rev(betwn f y z)`,
[
ASM_SIMP_TAC[Tame_defs.betwn;LET_THM;Dangeyj.fst_fun;Dangeyj.fst_snd_fun;rev_split_at;IN_SET_OF_LIST;Seq.mem_rev]
THEN REPEAT RESA_TAC
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`MEM y (FST (split_at z f))`];


MRESA_TAC Dangeyj.sym_fst_snd_in_split[`z`;`y`;`f`]
THEN MRESAL_TAC Ohcgkfu.uniq_fst_split[`z`;`f`;`[]:(A)list`][APPEND;GSYM Tame_defs.split_at]
THEN MRESAL_TAC Dangeyj.uniq_snd_split[`y`;`[]:(A)list`;`f`][APPEND;GSYM Tame_defs.split_at]
THEN MRESAL_TAC rev_split_at[`y`;`(FST (split_at z f))`;][Seq.rev_uniq;Seq.mem_rev]
THEN MRESAL_TAC Dangeyj.FST_SND_SYM_SPLIT[`z`;`y`;`f`][APPEND;GSYM Tame_defs.split_at]
THEN SYM_DICH_TAC 0;

MRESAL_TAC Tame_list.split_at_both[`f`;`z`;`y`;`[]:(A)list`][MEM;GSYM Tame_defs.split_at]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`MEM z (SND (split_at y f))`];

MRESAL_TAC Tame_list.split_at_snd_antisym[`f`;`y`;`z`;`[]:(A)list`][MEM;GSYM 
Tame_defs.split_at];

ASM_REWRITE_TAC[Tame_list.APPEND_cat;Seq.rev_cat]
THEN MRESAL_TAC Tame_list.split_at_both[`f`;`y`;`z`;`[]:(A)list`][MEM;GSYM Tame_defs.split_at]
THEN MRESA_TAC rev_split_at[`z`;`f`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC
THEN MRESAL_TAC Ohcgkfu.uniq_fst_split[`y`;`f`;`[]:(A)list`][APPEND;GSYM Tame_defs.split_at]
THEN MRESAL_TAC rev_split_at[`z`;`(FST (split_at y f))`;][Seq.rev_uniq;Seq.mem_rev]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC
THEN SYM_DICH_TAC 0
THEN REMOVE_ASSUM_TAC
THEN REMOVE_ASSUM_TAC
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN MRESA_TAC rev_split_at[`y`;`f`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Dangeyj.SND_TWO_SPLIT[`y`;`z`;`rev f`;`[]:(A)list`][MEM;GSYM Tame_defs.split_at;Seq.rev_uniq]
THEN DICH_TAC 0
THEN MRESA_TAC rev_split_at[`y`;`f`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC
THEN ASM_REWRITE_TAC[Seq.mem_rev]
THEN RESA_TAC
THEN MRESA_TAC rev_split_at[`z`;`f`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC
THEN MRESAL_TAC Dangeyj.uniq_snd_split[`z`;`[]:(A)list`;`f`][APPEND;GSYM Tame_defs.split_at]
THEN MRESAL_TAC rev_split_at[`y`;`(SND (split_at z f))`;][Seq.rev_uniq;Seq.mem_rev]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[Add_triangle.pair_expand]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC
THEN MRESAL_TAC Dangeyj.SND_TWO_SPLIT[`z`;`y`;`f`;`[]:(A)list`][MEM;GSYM Tame_defs.split_at;Seq.rev_uniq]
]);;



let AQ4_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
   all (loop_list L) (ntrans L N r x 1)`;;

let AQ4=prove_by_refinement(
 AQ4_concl,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d=x'`
;



MRESAL_TAC Tame_list.MEM_replace[`d`;`r`;`[SND (split_normal_list L r (find_face L y) y z1)]`;`N`][Seq.mem_seq1];



DICH_ASM_TAC(32-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHE_TAC 0[`d`];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.loop_list;GSYM Seq.allP]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn (find_face L y) y z = []`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;Tame_defs2.one_step_list]
THEN REPEAT RESA_TAC;



ASM_REWRITE_TAC[List_hypermap.dart_in_face]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`z`;`x`;`L`]
;



ASM_REWRITE_TAC[APPEND_NIL;APPEND]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`z`;`APPEND (betwn r z y) [y]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`betwn r z y = []`]
;



MRESAL_TAC betwn_eq_nil[`z`;`y`;`r`][HD]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(38-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`z`][Tame_defs2.one_step_list];




MRESA_TAC Dangeyj.HD_BETWN2[`r`;`z`;`y`]
THEN DICH_ASM_TAC(39-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`z`][Tame_defs2.one_step_list]
;



CHANGE_TAC`d1=x''`
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d1`]
THEN DICH_ASM_TAC(35-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list]
;



ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`(LAST(betwn r z y)=d1)`]
;


GABBREV_TAC`r1=APPEND [z] (APPEND (betwn r z y) [y])`
THEN MRESA_TAC Tame_list.not_betwn2[`z`;`y`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`[]:(A#A)list`;`z`;`y`;`(betwn r z y)`][APPEND_NIL]
THEN MRESA_TAC Aq23.next_last_betwn[`r1`;`z`;`y`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r z y`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN RESA_TAC
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Aq23.next_last_betwn[`r`;`z`;`y`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d1`]
THEN DICH_ASM_TAC(45-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




GABBREV_TAC`r1=APPEND [z] (APPEND (betwn r z y) [y])`
THEN MRESA_TAC Tame_list.not_betwn2[`z`;`y`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`[]:(A#A)list`;`z`;`y`;`(betwn r z y)`][APPEND_NIL]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`z`;`y`;`d1`;`r1`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r z y`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r1`;`z`;`y`;`d1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN SYM_DICH_TAC 0
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r`;`z`;`y`;`d1`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`z`;`y`;`d1`;`r`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d1`]
THEN DICH_ASM_TAC(46-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




ASM_REWRITE_TAC[List_hypermap.dart_in_face]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
;




ASM_REWRITE_TAC[APPEND_NIL;APPEND]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`z`;`APPEND (betwn r z y) [y]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESAL_TAC Ncvibwu.next_el_last_hd[`y`;`z`;`betwn r z y`][APPEND]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESAL_TAC betwn_eq_nil[`y`;`z`;`(find_face L y)`][HD]
THEN SYM_DICH_TAC 0
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF]
;



DICH_TAC 0
THEN REWRITE_TAC[MEM]
;


DICH_TAC 0
THEN REWRITE_TAC[MEM]
;




ASM_REWRITE_TAC[List_hypermap.dart_in_face]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`z`;`x`;`L`]
;



ASM_REWRITE_TAC[APPEND_NIL;APPEND]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`z`;`APPEND (betwn r z y) [y]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`betwn r z y = []`]
;



MRESAL_TAC betwn_eq_nil[`z`;`y`;`r`][HD;APPEND;Seq2.next_el_hd_cons2]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(38-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`z`][Tame_defs2.one_step_list];




MRESAL_TAC Seq2.next_el_hd_cons[`z`;`APPEND (APPEND (betwn r z y) [y]) (betwn (find_face L y) y z)`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;HD_APPEND]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`z`;`y`]
THEN DICH_ASM_TAC(40-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`z`][Tame_defs2.one_step_list]
;




CHANGE_TAC`d1=x''`
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d1`]
THEN DICH_ASM_TAC(35-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list]
;




ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`(LAST(betwn r z y)=d1)`]
;


GABBREV_TAC`r1=(APPEND (APPEND [z] (APPEND (betwn r z y) [y])) (betwn (find_face L y) y z))`
THEN MRESA_TAC Tame_list.not_betwn2[`z`;`y`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`betwn (find_face L y) y z`;`z`;`y`;`(betwn r z y)`][APPEND_NIL]
THEN MRESA_TAC Aq23.next_last_betwn[`r1`;`z`;`y`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r z y`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN RESA_TAC
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Aq23.next_last_betwn[`r`;`z`;`y`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d1`]
THEN DICH_ASM_TAC(45-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




GABBREV_TAC`r1=(APPEND (APPEND [z] (APPEND (betwn r z y) [y])) (betwn (find_face L y) y z))`
THEN MRESA_TAC Tame_list.not_betwn2[`z`;`y`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`betwn (find_face L y) y z`;`z`;`y`;`(betwn r z y)`][APPEND_NIL]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`z`;`y`;`d1`;`r1`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r z y`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r1`;`z`;`y`;`d1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN SYM_DICH_TAC 0
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r`;`z`;`y`;`d1`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`z`;`y`;`d1`;`r`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d1`]
THEN DICH_ASM_TAC(46-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




ASM_REWRITE_TAC[List_hypermap.dart_in_face]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
;





ASM_REWRITE_TAC[APPEND_NIL;APPEND]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`z`;`APPEND (betwn r z y) [y]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC (GSYM APPEND_ASSOC)[`[z]`;`(betwn r z y)`;`[y]`]
THEN MRESAL_TAC Ncvibwu.tuong_minh_tai[`y`;`(betwn (find_face L y) y z)`;`APPEND [z] (betwn r z y)`][GSYM Pwssrat.sizel0_not_nil]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[APPEND]
THEN RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(46-33)
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`y`;`z`]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF]
;





GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(40-34)
THEN RESA_TAC
THEN CHANGE_TAC`d1=x''`
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d1`;`x`;`L`]
THEN ASM_REWRITE_TAC[List_hypermap.dart_in_face]
;





GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(40-34)
THEN RESA_TAC
THEN CHANGE_TAC`d1=x''`
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d1`;`x`;`L`]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC uniq_change_append_ex[`d1`;`y`;`(betwn f y z)`;`z`;`betwn r z y`;]
;







MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`(LAST(betwn f y z)=d1)`]
;


GABBREV_TAC`r1=(APPEND (APPEND [y] (APPEND (betwn f y z) [z])) (betwn r z y))`
THEN MRESA_TAC Tame_list.not_betwn2[`y`;`z`;`f`] 
THEN MRESAL_TAC betwn_cat_ex[`(betwn r z y)`;`y`;`z`;`(betwn f y z)`][APPEND_NIL]
THEN MRESA_TAC Aq23.next_last_betwn[`r1`;`y`;`z`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`y`;`z`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d1`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
;








GABBREV_TAC`r1=(APPEND (APPEND [y] (APPEND (betwn f y z) [z])) (betwn r z y))`
THEN MRESA_TAC Tame_list.not_betwn2[`y`;`z`;`f`] 
THEN MRESAL_TAC betwn_cat_ex[`(betwn r z y)`;`y`;`z`;`(betwn f y z)`][APPEND_NIL]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y`;`z`;`d1`;`r1`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r1`;`y`;`z`;`d1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN SYM_DICH_TAC 0
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`f`;`y`;`z`;`d1`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y`;`z`;`d1`;`f`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d1`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
;







ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.loop_list;GSYM Seq.allP]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn (find_face L y) y z = []`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;Tame_defs2.one_step_list]
THEN REPEAT RESA_TAC;





DICH_TAC 0
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM]
;


DICH_TAC 0
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM]
;





MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN DICH_ASM_TAC(35-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`(next_el r y)`][Tame_defs2.one_step_list]
;



ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN GABBREV_TAC`y1=next_el r y`
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];



DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;



MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn r y1 z1 = []`][HD];



MRESAL_TAC betwn_eq_nil[`y1`;`z1`;`r`][HD;APPEND;Seq2.next_el_hd_cons2]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(48-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`y1`][Tame_defs2.one_step_list]
;




MRESA_TAC Dangeyj.HD_BETWN2[`r`;`y1`;`z1`]
THEN DICH_ASM_TAC(49-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`y1`][Tame_defs2.one_step_list]
;




CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y1`;`z1`;`d1`]
THEN DICH_ASM_TAC(35-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list]
;




ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];




DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;



MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`(LAST(betwn r y1 z1)=d1)`]
;






GABBREV_TAC`r1=(y1 :: APPEND (betwn r y1 z1) [z1])`
THEN MRESA_TAC Tame_list.not_betwn2[`y1`;`z1`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`[]:(A#A)list`;`y1`;`z1`;`(betwn r y1 z1)`][APPEND_NIL;APPEND]
THEN MRESA_TAC Aq23.next_last_betwn[`r1`;`y1`;`z1`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r y1 z1`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;APPEND;Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MRESA_TAC Aq23.next_last_betwn[`r`;`y1`;`z1`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y1`;`z1`;`d1`]
THEN DICH_ASM_TAC(56-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




GABBREV_TAC`r1=(y1 :: APPEND (betwn r y1 z1) [z1])`
THEN MRESA_TAC Tame_list.not_betwn2[`y1`;`z1`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`[]:(A#A)list`;`y1`;`z1`;`(betwn r y1 z1)`][APPEND_NIL;APPEND]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y1`;`z1`;`d1`;`r1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r1`;`y1`;`z1`;`d1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM]
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN SYM_DICH_TAC 0
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r`;`y1`;`z1`;`d1`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y1`;`z1`;`d1`;`r`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y1`;`z1`;`d1`]
THEN DICH_ASM_TAC(56-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN DICH_ASM_TAC(37-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`z1`][Tame_defs2.one_step_list]
;





ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];




DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;



MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESAL_TAC Ncvibwu.next_el_last_hd[`z1`;`y1`;`betwn r y1 z1`][APPEND]
THEN MRESAL_TAC betwn_eq_nil[`y`;`z`;`(find_face L y)`][HD]
THEN DICH_TAC(56-22)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`z1`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC prev_r_not_eq_f_v0[`z1`;`z`;`L`;`N`;`r`;`x`]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN THAYTHEL_ASM_TAC 3[`y`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC next_r_not_eq_f_v0[`f`;`y`;`L`;`N`;`r`;`x`]
THEN MRESAS_TAC F_LIST_INJ[`L`;`y`;`e_list z1`][List_hypermap.darts_of_list;IN_SET_OF_LIST;Tame_list.good_list_e_list;]
THEN ONCE_REWRITE_TAC[List_hypermap.e_list] 
THEN ONCE_REWRITE_TAC[List_hypermap.e_list]
THEN REWRITE_TAC[];





ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN CHANGE_TAC`e=x''`
THEN CHANGE_TAC`n=x'''`
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(43-34)
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`][List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`e`;`n`][List_hypermap.dart_in_face]
THEN REWRITE_TAC[GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`e`;`L`;`n`][List_hypermap.darts_of_list;IN_SET_OF_LIST;List_hypermap.dart_in_face];





ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN CHANGE_TAC`e=x''`
THEN CHANGE_TAC`n=x'''`
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`r0=(rev
  (flatten
  (map
   (\x. map (\i. (n_list L POWER i) x)
        (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
  (betwn (find_face L y) y z))))`
THEN MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN MRESAL_TAC uniq_change_append_ex1[`d1`;`z1`;`r0`;`y1`;`(betwn r y1 z1)`][Tame_list.lower_case];



GSUBGOAL_THEN`~(MEM y1 r0)`ASSUME_TAC
;




DICH_TAC 0
THEN ASM_REWRITE_TAC[Seq.cat_uniq;GSYM Seq.hasP;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN DICH_TAC 4
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`y1`
THEN ASM_REWRITE_TAC[]
;




MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];




DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;



GSUBGOAL_THEN`MEM d1 r0`ASSUME_TAC;



EXPAND_TAC"r0"
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[Seq.mapP]
THEN STRIP_TAC;


GEXISTS_TAC`e`
THEN ASM_REWRITE_TAC[]
;


GEXISTS_TAC`n`
THEN ASM_REWRITE_TAC[]
;




MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`(LAST(r0)=d1)`]
;


GABBREV_TAC`r1=(cat (cat [z1] (cat r0 [y1])) (betwn r y1 z1))`
THEN MRESAL_TAC betwn_cat_ex[`(betwn r y1 z1)`;`z1`;`y1`;`r0`][APPEND_NIL;Tame_list.lower_case]
THEN MRESA_TAC Aq23.next_last_betwn[`r1`;`z1`;`y1`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r0`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN RESA_TAC
THEN GABBREV_TAC`l1=flatten
      (map
       (\x. map (\i. (n_list L POWER i) x)
            (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
      (betwn (find_face L y) y z))`
THEN GSUBGOAL_THEN`MEM d1 l1`ASSUME_TAC;




DICH_TAC(63-57)
THEN DICH_TAC(62-59)
THEN EXPAND_TAC"r0"
THEN REWRITE_TAC[Seq.mem_rev];



MRESA_TAC Dangeyj.mem_imp_not_nil[`l1`;`d1`]
THEN MRESA_TAC Tame_list.LAST_rev[`l1`]
THEN GABBREV_TAC`t=(map
       (\x. map (\i. (n_list L POWER i) x)
            (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
      (betwn (find_face L y) y z))`
THEN GSUBGOAL_THEN`~(t=[])`ASSUME_TAC;



MATCH_MP_TAC Dangeyj.mem_imp_not_nil
THEN EXPAND_TAC"t"
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN GEXISTS_TAC`map (\i. (n_list L POWER i) e)
     (upt 1 (sizel (filter (\t. t = FST e) (flatten L))))`
THEN GEXISTS_TAC`e`
THEN ASM_REWRITE_TAC[];




GSUBGOAL_THEN`~(HD t = [])`ASSUME_TAC
;





MATCH_MP_TAC Dangeyj.mem_imp_not_nil
THEN EXPAND_TAC"t"
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN REWRITE_TAC[Tame_list.HD_MAP;GSYM Tame_list.lower_case]
THEN ASM_SIMP_TAC[Tame_list.HD_MAP]
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN GABBREV_TAC`e1=HD (betwn (find_face L y) y z)`
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(70-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e1`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e1`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC Tame_list.MEM_HD[`(betwn (find_face L y) y z)`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e1`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e1`;`FST e1`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN STRIP_TAC
THEN GEXISTS_TAC`n_list L e1`
THEN EXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN DICH_TAC 0
THEN ARITH_TAC;



MRESA_TAC Tame_list.HD_flatten[`t`]
THEN EXPAND_TAC"t"
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN REWRITE_TAC[Tame_list.HD_MAP;GSYM Tame_list.lower_case]
THEN ASM_SIMP_TAC[Tame_list.HD_MAP]
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN GABBREV_TAC`e1=HD (betwn (find_face L y) y z)`
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(72-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e1`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e1`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC Tame_list.MEM_HD[`(betwn (find_face L y) y z)`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e1`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e1`;`FST e1`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN STRIP_TAC
THEN MRESAS_TAC Hojodcm.mem_upt1[`1`;`sizel (filter (MEM (FST e1)) L)`][ARITH_RULE`2<=a==> 0<1/\ 1<a`;ARITH_RULE`0<1`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`(upt 1 (sizel (filter (MEM (FST e1)) L)))`;`1`]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_list.HD_MAP;GSYM Tame_list.lower_case]
THEN ASM_SIMP_TAC[Tame_list.HD_MAP]
THEN REWRITE_TAC[Tame_list.HD_MAP;Tame_list.lower_case]
THEN STRIP_TAC
THEN MRESA_TAC HD_UPT[`sizel (filter (MEM (FST e1)) L)`]
THEN ASM_REWRITE_TAC[ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF]
THEN DICH_TAC(96-71)
THEN RESA_TAC
THEN DICH_TAC(96-32)
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`y`;`z`]
;






MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN DICH_TAC(99-22)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`y`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el f y)`;`x`;`L`]
THEN MRESAL_TAC next_r_not_eq_f_v0[`f`;`y`;`L`;`N`;`r`;`x`][List_hypermap.n_list]
THEN MRESA_TAC Seq2.prev_next_id[`y`;`f`]
;





DICH_TAC (58-37)
THEN RESA_TAC
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN GABBREV_TAC`r1=(cat (cat [z1] (cat r0 [y1])) (betwn r y1 z1))`
THEN MRESAL_TAC betwn_cat_ex[`(betwn r y1 z1)`;`z1`;`y1`;`r0`][APPEND_NIL;Tame_list.lower_case]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`z1`;`y1`;`d1`;`r1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN DICH_TAC 3
THEN RESA_TAC
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r1`;`z1`;`y1`;`d1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN REPEAT RESA_TAC
THEN SYM_DICH_TAC 0
THEN DICH_TAC 2
;





GABBREV_TAC`l1=flatten
      (map
       (\x. map (\i. (n_list L POWER i) x)
            (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
      (betwn (find_face L y) y z))`
THEN GSUBGOAL_THEN`MEM d1 l1`ASSUME_TAC;




DICH_TAC(61-56)
THEN EXPAND_TAC"r0"
THEN REWRITE_TAC[Seq.mem_rev];


STRIP_TAC
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`z1`;`y1`;`r1`;]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN EXPAND_TAC"r0"
THEN REWRITE_TAC[Seq.rev_uniq]
THEN STRIP_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 0
THEN EXPAND_TAC"r0"
THEN REWRITE_TAC[Seq.rev_uniq]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Elllnyz.next_el_rev[`l1`;`d1`]
THEN GABBREV_TAC`l2=map
       (\x. map (\i. (n_list L POWER i) x)
            (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
      (betwn (find_face L y) y z)`
THEN DICH_TAC(66-35)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN GSUBGOAL_THEN`MEM d1 l`ASSUME_TAC
;



EXPAND_TAC"l"
THEN 
REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN GEXISTS_TAC`n`
THEN ASM_REWRITE_TAC[];



GSUBGOAL_THEN`MEM l l2`ASSUME_TAC
;



EXPAND_TAC"l2"
THEN 
REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN GEXISTS_TAC`e`
THEN ASM_REWRITE_TAC[];




MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`~(d1 = HD l)`]
;


MRESA_TAC prev_el_not_hd_flatten[`l2`;`l`;`d1`]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(71-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN DICH_TAC(83-34)
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e`;`FST e`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN RESA_TAC;



GSUBGOAL_THEN`(!u v.
           MEM u (upt 1 (sizel (filter (MEM (FST e)) L))) /\
           MEM v (upt 1 (sizel (filter (MEM (FST e)) L))) /\
           (n_list L POWER u) e = (n_list L POWER v) e
           ==> u = v)`ASSUME_TAC
;



ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN REPEAT RESA_TAC
THEN MRESAL_TAC Hypermap_and_fan.ORBIT_MAP_INJ[`dart(hypermap_of_list L)`;`node_map (hypermap_of_list L)`;`e`;`u`;`v`;`CARD (node (hypermap_of_list L) e)`][Hypermap.node_map_and_darts;GSYM node]
THEN MATCH_DICH_TAC 0
THEN ASM_SIMP_TAC[List_hypermap.components_hypermap_of_list; GSYM Lebhirj.n_list_ext_n_list_power;List_hypermap.dart_in_face]
;




MRESA_TAC prev_el_map_upt[`(sizel (filter (\t. t = FST e) (flatten L)))`;`(\i. (n_list L POWER i) e)`;`n`]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`e`;`n`][List_hypermap.dart_in_face]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`e`;`L`;`n`][List_hypermap.dart_in_face;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN MRESAL_TAC Tame_list.inverse_node_map_list[`L`;`d1`][List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC List_hypermap.components_hypermap_of_list[`L`]
THEN DICH_TAC (101-34)
THEN ASM_REWRITE_TAC[]
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!n. 0<n==> n=SUC(n-1)`)[`n`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[th] THEN ASSUME_TAC (SYM th))
THEN REWRITE_TAC[COM_POWER;o_DEF]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`e`;`n-1`][List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC (103-99)
THEN ASM_REWRITE_TAC[Lvducxu.HYP_MAPS_INVS];



DICH_TAC(69-34)
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
;




GSUBGOAL_THEN`all (\r. ~(r = [])) l2`ASSUME_TAC
;


EXPAND_TAC"l2"
THEN REWRITE_TAC[List_hypermap.mem_not_nil;Seq2.mem_flatten;GSYM Seq.allP; Seq.mapP]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`e2=x'''`
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(78-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e2`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e2`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e2`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e2`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e2`;`FST e2`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case;Seq.mapP]
THEN STRIP_TAC
;



GEXISTS_TAC`n_list L e2`
THEN GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN ONCE_REWRITE_TAC[Aq1.MEM_EQ_UPT]
THEN DICH_TAC 0
THEN ARITH_TAC;



MRESA_TAC prev_el_hd_flatten[`l2`;`l`]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(78-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e`;`FST e`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case;Seq.mapP]
THEN STRIP_TAC
THEN MRESA_TAC nil_upt[`sizel (filter (MEM (FST e)) L)`]
THEN DICH_TAC 0
THEN DICH_TAC (92-89)
THEN EXPAND_TAC"l"
THEN REWRITE_TAC[GSYM Tame_list.lower_case]
THEN ASM_SIMP_TAC[Tame_list.HD_MAP]
THEN REWRITE_TAC[ Tame_list.lower_case]
THEN REPEAT RESA_TAC
THEN ASM_SIMP_TAC[HD_UPT;ARITH_RULE`1= SUC 0`;POWER;o_DEF;I_DEF]
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC 0=1`]
THEN DICH_TAC(93-65)
THEN RESA_TAC
;




DICH_TAC (93-64)
THEN RESA_TAC
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`y`;`z`;`f`]
;





GSUBGOAL_THEN`(!u v.
           MEM u (betwn f y z) /\
           MEM v (betwn f y z) /\
           map (\i. (n_list L POWER i) u)
           (upt 1 (sizel (filter (\t. t = FST u) (flatten L)))) =
           map (\i. (n_list L POWER i) v)
           (upt 1 (sizel (filter (\t. t = FST v) (flatten L))))
           ==> u = v)`ASSUME_TAC
;




REPEAT RESA_TAC
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`u`;`FST u`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case;Seq.mapP]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`v`;`FST v`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case;Seq.mapP]
THEN MRESA_TAC Hojodcm.count_node_face[`u`;`L`]
THEN MRESA_TAC Hojodcm.count_node_face[`v`;`L`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`u`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`x`;`L`]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`u`][List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`v`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`v`;`x`;`L`]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`v`][List_hypermap.dart_in_face]
THEN DICH_TAC(107-97)
THEN RESA_TAC
THEN MRESA_TAC nil_upt[`sizel (filter (MEM (FST u)) L)`]
THEN MRESA_TAC nil_upt[`sizel (filter (MEM (FST v)) L)`]
THEN MRESAL_TAC Tame_list.HD_MAP[`(upt 1 (sizel (filter (MEM (FST u)) L)))`;`(\i. (n_list L POWER i) u)`][ Tame_list.lower_case]
THEN MRESAL_TAC Tame_list.HD_MAP[`(upt 1 (sizel (filter (MEM (FST v)) L)))`;`(\i. (n_list L POWER i) v)`][ Tame_list.lower_case]
THEN DICH_TAC 0
THEN ASM_SIMP_TAC[HD_UPT;ARITH_RULE`1= SUC 0`;POWER;o_DEF;I_DEF;GSYM Tame_list.n_list_ext_n_list;List_hypermap.dart_in_face;GSYM List_hypermap.components_hypermap_of_list;Hypermap.node_map_injective]
;




MRESAL_TAC prev_el_MEM_map[`(betwn (find_face L y) y z)`;`e`;`(\x. map (\i. (n_list L POWER i) x)
           (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))`][Tame_list.lower_case]
THEN GABBREV_TAC`u=prev_el (betwn f y z) e`
THEN MRESA_TAC Seq2.mem_prev_el[`e`;`(betwn f y z)`]
THEN MRESA_TAC Hojodcm.count_node_face[`u`;`L`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`u`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`u`;`FST u`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case;Seq.mapP]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHEL_TAC 0[`u`][List_hypermap.dart_in_face]
THEN MRESA_TAC nil_upt[`sizel (filter (MEM (FST u)) L)`]
THEN MRESAL_TAC Tame_list.LAST_MAP[`(upt 1 (sizel (filter (MEM (FST u)) L)))`;`(\i. (n_list L POWER i) u)`][Tame_list.lower_case]
THEN MRESA_TAC Aq23.LAST_UPT[`sizel (filter (MEM (FST u)) L)`]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`u`;`PRE (sizel (filter (MEM (FST u)) L))`][List_hypermap.dart_in_face;]
THEN MRESA_TAC List_hypermap.components_hypermap_of_list[`L`]
THEN MRESA_TAC Hypermap.lemma_node_cycle[`(hypermap_of_list L)`;`u`]
THEN MRESA_TAC (ARITH_RULE`!a. 2<=a==> 1<=a`)[`sizel (filter (MEM (FST u)) L)`]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`sizel (filter (MEM (FST u)) L)`][ARITH_RULE`2<=a==> 1<=a`]
THEN DICH_TAC 2
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[SYM th])
THEN REWRITE_TAC[COM_POWER;o_DEF]
THEN GABBREV_TAC`v=(n_list_ext L POWER PRE (sizel (filter (MEM (FST u)) L))) u`
;



GSUBGOAL_THEN`~(e=HD (betwn f y z))`ASSUME_TAC
;



DICH_TAC(113-57)
THEN MATCH_MP_TAC Ssrbool.contraNN
THEN STRIP_TAC
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`l1`;`d1`]
THEN MRESA_TAC Tame_list.LAST_rev[`l1`]
THEN DICH_TAC(115-73)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`l2`;`l`]
THEN MRESA_TAC Tame_list.MEM_HD[`l2`]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`HD l2`]
THEN MRESA_TAC Tame_list.HD_flatten[`l2`;]
THEN MATCH_MP_TAC(SET_RULE`a=b==> HD a= HD b`)
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`e`]
THEN MRESAL_TAC Tame_list.HD_MAP[`(betwn f y z)`;`(\x. map (\i. (n_list L POWER i) x)
       (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))`][Tame_list.lower_case]
THEN SYM_DICH_TAC(120-112)
THEN ASM_REWRITE_TAC[];



MRESA_TAC betwn_rev[`f`;`y`;`z`]
THEN MRESA_TAC Elllnyz.next_el_rev[`betwn f y z`;`e`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC betwn_rev[`f`;`y`;`z`]
THEN MRESAL_TAC EQ_MEM_NEXT_EL_LAST[`rev f`;`z`;`y`;`e`][Seq.rev_uniq;Seq.mem_rev]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`e`]
THEN MRESA_TAC Tame_list.LAST_rev[`betwn f y z`;]
THEN MRESAL_TAC Ncvibwu.next_el_betwn_same[`z`;`y`;`e`;`rev f`][Seq.rev_uniq;Seq.mem_rev]
THEN MRESAL_TAC Tame_list.n_list_ext_n_list[`e`;`L`][List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`e`;`L`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN MRESAL_TAC Tame_list.f_list_ext_f_list[`L`;`n_list_ext L e`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Elllnyz.next_el_rev[`f`;`e`]
THEN STRIP_TAC
THEN MRESA_TAC Seq2.next_prev_id[`e`;`f`]
THEN DICH_TAC 0
THEN MRESA_TAC Seq2.mem_prev_el[`e`;`f`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(n_list_ext L v)`;`x`;`L`]
THEN STRIP_TAC 
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`n_list_ext L v`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Tame_list.f_list_ext_f_list[`L`;`n_list_ext L v`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Tame_list.e_list_ext_n_f[`L`][o_DEF;FUN_EQ_THM]
THEN THAYTHE_TAC 0[`n_list_ext L v`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Tame_list.inverse_n_list_ext[`L`][o_DEF;FUN_EQ_THM]
THEN THAYTHE_TAC 0[`n_list_ext L v`]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC (126-110)
THEN REWRITE_TAC[Lvducxu.HYP_MAPS_INVS];




MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN DICH_TAC(37-22)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`(next_el r y)`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
;





ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];




DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;





ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`r0=(rev
  (flatten
  (map
   (\x. map (\i. (n_list L POWER i) x)
        (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
  (betwn (find_face L y) y z))))`
THEN MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP;Seq.cat1s]
THEN MRESA_TAC Tame_list.next_el_cat_sym[`r0`;`y1 :: (cat (betwn r y1 z1) 
[z1])`]
;





MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn r y1 z1 = []`][HD];



MRESAL_TAC betwn_eq_nil[`y1`;`z1`;`r`][HD;APPEND;Seq2.next_el_hd_cons2;GSYM Tame_list.lower_case]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(53-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`y1`][Tame_defs2.one_step_list]
;




MRESA_TAC Dangeyj.HD_BETWN2[`r`;`y1`;`z1`]
THEN GABBREV_TAC`r1=cat (y1 :: cat (betwn r y1 z1) [z1]) r0`
THEN MRESA_TAC Tame_list.not_betwn2[`y1`;`z1`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`r0`;`y1`;`z1`;`betwn r y1 z1`][APPEND_NIL;Tame_list.lower_case;Seq.cat1s]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r1`;`y1`;`z1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN DICH_TAC 3
THEN RESA_TAC
THEN DICH_TAC (57-51)
THEN ONCE_REWRITE_TAC[Seq.uniq_catC]
THEN RESA_TAC
THEN RESA_TAC
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(57-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`y1`][Tame_defs2.one_step_list]
;





MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`(next_el r y)`;`z1`;`x''`]
THEN DICH_ASM_TAC(38-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`x''`][Tame_defs2.one_step_list];





ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];




DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;





ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`r0=(rev
  (flatten
  (map
   (\x. map (\i. (n_list L POWER i) x)
        (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
  (betwn (find_face L y) y z))))`
THEN MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP;Seq.cat1s]
THEN MRESA_TAC Tame_list.next_el_cat_sym[`r0`;`y1 :: (cat (betwn r y1 z1) 
[z1])`]
THEN DICH_TAC (1)
THEN ONCE_REWRITE_TAC[Seq.uniq_catC]
THEN RESA_TAC
;






MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`(LAST(betwn r y1 z1)=d1)`]
;






GABBREV_TAC`r1=cat (y1 :: APPEND (betwn r y1 z1) [z1]) r0`
THEN MRESA_TAC Tame_list.not_betwn2[`y1`;`z1`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`r0`;`y1`;`z1`;`(betwn r y1 z1)`][APPEND_NIL;APPEND;Tame_list.lower_case]
THEN MRESA_TAC Aq23.next_last_betwn[`r1`;`y1`;`z1`]
THEN DICH_TAC 0
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r y1 z1`;`d1`]
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MRESA_TAC Aq23.next_last_betwn[`r`;`y1`;`z1`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y1`;`z1`;`d1`]
THEN DICH_ASM_TAC(60-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];




GABBREV_TAC`r1=cat (y1 :: APPEND (betwn r y1 z1) [z1]) r0`
THEN MRESA_TAC Tame_list.not_betwn2[`y1`;`z1`;`r`] 
THEN MRESAL_TAC betwn_cat_ex[`r0`;`y1`;`z1`;`(betwn r y1 z1)`][APPEND_NIL;APPEND;Tame_list.lower_case]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y1`;`z1`;`d1`;`r1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r1`;`y1`;`z1`;`d1`]
THEN DICH_TAC 0
THEN EXPAND_TAC"r1"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;MEM;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN REPEAT RESA_TAC
THEN SYM_DICH_TAC 0
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r`;`y1`;`z1`;`d1`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y1`;`z1`;`d1`;`r`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y1`;`z1`;`d1`]
THEN DICH_ASM_TAC(60-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`d1`][Tame_defs2.one_step_list];







MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN DICH_ASM_TAC(37-22)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list;GSYM Seq.allP]
THEN THAYTHEL_TAC 0[`z1`][Tame_defs2.one_step_list]
;





ASM_REWRITE_TAC[APPEND_NIL;]
THEN CHANGE_TAC`d1=x''`
THEN GABBREV_TAC`y1=next_el r y`
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;MEM;]
THEN MRESAL_TAC Seq2.next_el_hd_cons[`y1`;`APPEND (betwn r y1 z1) [z1]`][GSYM Pwssrat.sizel0_not_nil;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;HD_APPEND]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`];




DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;




ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`r0=(rev
  (flatten
  (map
   (\x. map (\i. (n_list L POWER i) x)
        (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
  (betwn (find_face L y) y z))))`
THEN MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP;Seq.cat1s]
THEN MRESA_TAC Tame_list.next_el_cat_sym[`r0`;`y1 :: (cat (betwn r y1 z1) 
[z1])`]
THEN DICH_TAC (1)
THEN ONCE_REWRITE_TAC[Seq.uniq_catC]
THEN RESA_TAC
;





MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
;



DICH_TAC(56-32)
THEN RESA_TAC;




GSUBGOAL_THEN`~(r0=[])`ASSUME_TAC;



DICH_TAC 0
THEN REWRITE_TAC[List_hypermap.mem_not_nil]
THEN EXPAND_TAC"r0"
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN CHANGE_TAC`e=x''`
THEN GEXISTS_TAC`n_list L e`
THEN GEXISTS_TAC`map (\i. (n_list L POWER i) e)
          (upt 1 (sizel (filter (\t. t = FST e) (flatten L))))`
THEN ASM_REWRITE_TAC[Seq.mapP]
THEN STRIP_TAC;


GEXISTS_TAC`e`
THEN ASM_REWRITE_TAC[]
;


GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(57-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e`;`FST e`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN ARITH_TAC;





MRESA_TAC (GSYM APPEND_ASSOC)[`[y1]`;`(betwn r y1 z1)`;`[z1]`]
THEN MRESAL_TAC Ncvibwu.tuong_minh_tai[`z1`;`r0`;`APPEND [y1] (betwn r y1 z1)`][GSYM Pwssrat.sizel0_not_nil]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[APPEND]
THEN DICH_TAC(58-51)
THEN ASM_REWRITE_TAC[Seq.cat_cons;Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN RESA_TAC
THEN MRESA_TAC nil_rev[`flatten
 (map
  (\x. map (\i. (n_list L POWER i) x)
       (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
 (betwn (find_face L y) y z))`]
THEN MRESA_TAC Tame_list.HD_rev[`flatten
 (map
  (\x. map (\i. (n_list L POWER i) x)
       (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
 (betwn (find_face L y) y z))`]
;



GSUBGOAL_THEN`~(map
        (\x. map (\i. (n_list L POWER i) x)
             (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
        (betwn f y z) =
        [])` ASSUME_TAC
;




DICH_TAC (61-55)
THEN REWRITE_TAC[List_hypermap.mem_not_nil]
THEN EXPAND_TAC"r0"
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN RESA_TAC
THEN CHANGE_TAC`e=x''`
THEN GEXISTS_TAC`map (\i. (n_list L POWER i) e)
     (upt 1 (sizel (filter (\t. t = FST e) (flatten L))))`
THEN GEXISTS_TAC`e`
THEN ASM_REWRITE_TAC[];





GSUBGOAL_THEN `~(LAST
        (map
         (\x. map (\i. (n_list L POWER i) x)
              (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
        (betwn f y z)) =
        [])` ASSUME_TAC;




MRESAL_TAC Tame_list.LAST_MAP[`(betwn f y z)`;`
         (\x. map (\i. (n_list L POWER i) x)
              (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))`][Tame_list.lower_case]
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
THEN REWRITE_TAC[List_hypermap.mem_not_nil]
THEN GABBREV_TAC`e=(LAST (betwn f y z))`
THEN GEXISTS_TAC`n_list L e`
THEN REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten;Seq.mapP]
;



GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(65-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn f y z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e`;`FST e`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN ARITH_TAC;





MRESA_TAC LAST_FLATTEN_2[`(map
  (\x. map (\i. (n_list L POWER i) x)
       (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
 (betwn f y z))`]
THEN MRESAL_TAC Tame_list.LAST_MAP[`(betwn f y z)`;`(\x. map (\i. (n_list L POWER i) x)
       (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))`][Tame_list.lower_case]
THEN GABBREV_TAC`e=(LAST (betwn f y z))`
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(67-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn f y z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e`;`FST e`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN STRIP_TAC
THEN MRESA_TAC nil_upt[`sizel (filter (MEM (FST e)) L)`]
THEN MRESAL_TAC Tame_list.LAST_MAP[`upt 1 (sizel (filter (MEM (FST e)) L))`;`(\i. (n_list L POWER i) e)`][Tame_list.lower_case]
THEN MRESA_TAC Aq23.LAST_UPT[`sizel (filter (MEM (FST e)) L)`]
THEN MRESA_TAC next_last_betwn[`f`;`y`;`z`]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`e`;`PRE (sizel (filter (MEM (FST e)) L))`][List_hypermap.dart_in_face;]
THEN MRESA_TAC List_hypermap.components_hypermap_of_list[`L`]
THEN MRESA_TAC Hypermap.lemma_node_cycle[`(hypermap_of_list L)`;`e`]
THEN MRESA_TAC (ARITH_RULE`!a. 2<=a==> 1<=a`)[`sizel (filter (MEM (FST e)) L)`]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`sizel (filter (MEM (FST e)) L)`][ARITH_RULE`2<=a==> 1<=a`]
THEN DICH_TAC 2
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[SYM th])
THEN REWRITE_TAC[COM_POWER;o_DEF]
THEN GABBREV_TAC`v=(n_list_ext L POWER PRE (sizel (filter (MEM (FST e)) L))) e`
THEN DICH_TAC(95-22)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`z1`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC prev_r_not_eq_f_v0[`z1`;`z`;`L`;`N`;`r`;`x`]
THEN DICH_TAC(98-87)
THEN RESA_TAC
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`e`;`SUC 0`]
[POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESAS_TAC F_LIST_INJ[`L`;`e`;`e_list z1`][List_hypermap.darts_of_list;IN_SET_OF_LIST;Tame_list.good_list_e_list;]
THEN DICH_TAC 0
THEN ASM_SIMP_TAC[List_hypermap.dart_in_face]
THEN RESA_TAC
THEN ASM_SIMP_TAC[List_hypermap.n_eq_e_fi;o_DEF]
THEN MRESAL_TAC Lp_gen_theory.e_list_ext_eq_e_list[`L`;`z1`][List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC(100-89)
THEN ASM_REWRITE_TAC[Lvducxu.HYP_MAPS_INJ]
THEN MRESAL_TAC Tame_list.f_list_ext_f_list[`L`;`z1`][List_hypermap.dart_in_face;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC(99-90)
THEN STRIP_TAC
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[Lvducxu.HYP_MAPS_INVS]
]);;




 (* end;; *)





load_end __FILE__;;