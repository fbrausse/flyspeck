open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


(* module  Aq56= struct *)

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;


let TL_LAST=prove(`!r. ~(r=[])/\ ~(TL r=[])==>LAST(TL(r))= LAST r`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[TL;LAST]
THEN RESA_TAC);;



let case_hd_betwn_last=prove_by_refinement(
`~(y=z)/\ MEM y r /\ MEM z r /\ uniq r/\ MEM d (betwn r y z)==> d= HD (betwn r y z)\/ MEM d (betwn r (HD (betwn r y z)) (LAST (betwn r y z))) \/ d= (LAST (betwn r y z))`,
[
REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.indexf_betwn[`r`;`y`;`d`;`z`]
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`indexf y d r`][ARITH_RULE`0<a==> 1<=a`]
THEN GABBREV_TAC`j=PRE (indexf y d r)`
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y`;`z`;`d`]
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`j`];

DICH_TAC 3
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC 0=1`]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf1[`y`;`d`;`r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r y z`;`d`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`y`;`z`];

MRESA_TAC(ARITH_RULE`!a b:num. a<b==> SUC a=b\/ SUC a<b`)[`indexf y d r`;`indexf y z r`];

MRESA_TAC Tame_list.indexf_n[`y`;`z`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`y`;`d`;`r`]
THEN DICH_TAC 1
THEN SYM_DICH_TAC 1
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.not_betwn2[`y`;`z`;`r`] 
THEN MRESA_TAC EQ_MEM_NEXT_EL_LAST[`r`;`y`;`z`;`d`];

MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r y z`;`d`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`y`;`z`]
THEN MRESA_TAC Tame_list.indexf_n[`y`;`d`;`r`]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`y`;`z`]
THEN MRESA_TAC next_last_betwn[`r`;`y`;`z`;]
THEN MRESA_TAC (ARITH_RULE`!a b c d. SUC a=b/\ SUC b< c/\ c<d==> a<d/\ 1<d`)[`j`;`indexf y d r`;`indexf y z r`;`sizel r`]
THEN MRESA_TAC (ARITH_RULE`!b c:num. SUC b< c==> 1<=c`)[`indexf y d r`;`indexf y z r`;]
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`indexf y z r`][ARITH_RULE`0<a==> 1<=a`]
THEN GABBREV_TAC`j1=PRE (indexf y z r)`
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn r y z`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y`;`z`;`(LAST (betwn r y z))`]
THEN MRESAS_TAC Tame_list.indexf_add_betwn[`y`;`(LAST (betwn r y z))`;`z`;`r`][Tame_list.MEM_LAST]
THEN MRESA_TAC Tame_list.next_el_indexf[`(LAST (betwn r y z))`;`z`;`r`]
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC(23-6)
THEN SYM_DICH_TAC(23-19)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+1= SUC b<=> a=b`]
THEN RESA_TAC
THEN RESA_TAC
THEN DICH_TAC 1
THEN SYM_DICH_TAC(23-7)
THEN REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN REPEAT STRIP_TAC
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`j`;`next_el r y`;`d`;`r`]
THEN DICH_TAC 3
THEN REWRITE_TAC[ARITH_RULE`SUC a< SUC b<=> a<b`]
THEN RESA_TAC
THEN MRESA_TAC (SET_RULE`!A. A\/ ~A`)[` LAST (betwn r y z)= next_el r y`];

DICH_TAC(26-21)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.next_el_indexf[`y`;`next_el r y`;`r`]
THEN DICH_TAC(27-24)
THEN DICH_TAC(26-8)
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`(next_el r y)`;`d`;`(LAST (betwn r y z))`]
THEN MRESA_TAC (ARITH_RULE`!b c:num. b< c==> 1<=c`)[`j`;`j1`;]
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`j1`][ARITH_RULE`0<a==> 1<=a`]
THEN GABBREV_TAC`j2=PRE (j1)`
THEN MRESA_TAC Tame_list.next_el_indexf[`y`;`next_el r y`;`r`]
THEN MRESA_TAC Tame_list.indexf_add_left[`y`;`next_el r y`;`(LAST (betwn r y z))`;`r`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ 1+c=b ==> a<c \/ SUC a= 1+c`)[`j`;`j1`;`indexf (next_el r y) (LAST (betwn r y z)) r`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC (32-6)
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`indexf y d r`][ARITH_RULE`0<a==> 1<=a`]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_n[`y`;`d`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`y`;`LAST (betwn r y z)`;`r`]]);;


let AQ5_concl = `
  !L N r (x:A#A) d.
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
    MEM d (flatten (ntrans L N r x 1)) ==>
   node (hypermap_of_list L) d SUBSET set_of_list (flatten (ntrans L N r x 1))`;;



let AQ5=prove_by_refinement(
 AQ5_concl,
[

REPEAT RESA_TAC
THEN DICH_TAC 0
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
;


GSUBGOAL_THEN`!d. MEM d r ==> node (hypermap_of_list L) d SUBSET
     set_of_list
     (cat (flatten (replace r [SND (split_normal_list L r f y z1)] N))
     (flatten [FST (split_normal_list L r f y z1)]))` ASSUME_TAC
;


REPEAT RESA_TAC
THEN GSUBGOAL_THEN`MEM d (flatten N)` ASSUME_TAC
;



REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[];


THAYTHEL_TAC (41-23)[`d`][SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten]
THEN REPEAT RESA_TAC
THEN THAYTHE_TAC 1[`x'`]
THEN CHANGE_TAC`d1=x'`
THEN CHANGE_TAC`l1=l`
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`l1=r`];


DICH_TAC 1
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_cases[`r`;`y`;`d1`;`z`]
;



MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`SND (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1];



REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;





MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`SND (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r y z`;`d1`]
THEN MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`d1= HD(betwn r y z)`]
;



MRESA_TAC Dangeyj.HD_BETWN2[`r`;`y`;`z`]
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`FST (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;



MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`d1= LAST(betwn r y z)`]
;



MRESA_TAC next_last_betwn[`r`;`y`;`z`]
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`FST (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC Seq2.prev_next_id[`(LAST (betwn r y z))`;`r`];



MRESA_TAC case_hd_betwn_last[`d1`;`r`;`y`;`z`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`y`;`z`]
THEN DICH_TAC 1
THEN RESA_TAC
THEN MRESA_TAC next_last_betwn[`r`;`y`;`z`;]
THEN MRESA_TAC Seq2.prev_next_id[`(LAST (betwn r y z))`;`r`]
THEN DICH_TAC 2
THEN SYM_DICH_TAC 0
THEN RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`FST (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`SND (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`l1`
THEN ASM_REWRITE_TAC[]
THEN MATCH_MP_TAC Tame_list.MEM3_replace
THEN ASM_REWRITE_TAC[];



RESA_TAC
;



MRESAL_TAC Tame_list.MEM_replace[`l`;`r`;`[SND (split_normal_list L r (find_face L y) y z1)]`;`N`][Seq.mem_seq1]
;



GSUBGOAL_THEN`MEM d (flatten N)` ASSUME_TAC
;



REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[];



THAYTHEL_TAC (44-23)[`d`][]
THEN REPEAT RESA_TAC
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`l=r`];


DICH_TAC (45-41)
THEN RESA_TAC
;






DICH_TAC 1
THEN ASM_REWRITE_TAC[SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten] 
THEN REPEAT STRIP_TAC
THEN THAYTHE_TAC 1[`x'`]
THEN CHANGE_TAC`d1=x'`
THEN CHANGE_TAC`l1=l'`
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`l1=r`];


DICH_TAC 1
THEN RESA_TAC
THEN THAYTHEL_TAC (48-39)[`d1`][SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[Hypermap.node_refl];



MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`l1`
THEN ASM_REWRITE_TAC[]
THEN MATCH_MP_TAC Tame_list.MEM3_replace
THEN ASM_REWRITE_TAC[];



DICH_TAC 1
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN RESA_TAC
;



THAYTHEL_TAC (43-40)[`z`][SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;


MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`d`]
THEN THAYTHEL_TAC (44-40)[`d`][SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




THAYTHEL_TAC (43-40)[`y`][SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




ASM_REWRITE_TAC[SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d1=x'`;




GABBREV_TAC`n=CARD (node (hypermap_of_list L) d)`
THEN MRESA_TAC lemma_via_node_map[`(hypermap_of_list L)`;`d`;`d1`]
THEN ASM_SIMP_TAC[List_hypermap.components_hypermap_of_list]
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`j`];



ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`SND (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;


ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`FST (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;MEM_APPEND;APPEND_NIL;Tame_list.lower_case;Seq.mem_cat;Seq.mem_rev;Seq2.mem_flatten]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B\/C\/D`)
THEN ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN GEXISTS_TAC`map (\i. (n_list L POWER i) d)
          (upt 1 (sizel (filter (\t. t = FST d) (flatten L))))`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;




GEXISTS_TAC`d`
THEN ASM_REWRITE_TAC[];



ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN GEXISTS_TAC`j`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`d`;`j`][List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(52-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`d`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`d`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`d`;`FST d`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN RESA_TAC
THEN DICH_TAC(66-46)
THEN RESA_TAC;



DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC;



DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten]
THEN ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN RESA_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN RESA_TAC
THEN CHANGE_TAC`e=x'`
THEN CHANGE_TAC`n=x''`
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`e`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`e`;`x`;`L`]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`e`;`n`][List_hypermap.dart_in_face]
THEN ASM_SIMP_TAC[GSYM List_hypermap.components_hypermap_of_list]
THEN MRESA_TAC Hypermap.lemma_in_node2[`hypermap_of_list L`;`e`;`n`]
THEN MRESA_TAC Hypermap.lemma_node_identity[`hypermap_of_list L`;`e`;`(node_map (hypermap_of_list L) POWER n) e`]
THEN SYM_DICH_TAC 0;




ASM_REWRITE_TAC[SUBSET;IN_SET_OF_LIST;Seq.mem_cat;Seq2.mem_flatten;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d1=x'''`;



GABBREV_TAC`m=CARD (node (hypermap_of_list L) e)`
THEN MRESA_TAC lemma_via_node_map[`(hypermap_of_list L)`;`e`;`d1`]
THEN ASM_SIMP_TAC[List_hypermap.components_hypermap_of_list]
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`j`];



ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`SND (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.lower_case]
;


ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
;




MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`FST (split_normal_list L r f y z1)`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.lower_case]
;






ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;]
THEN ASM_REWRITE_TAC[Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat;Seq2.mem_flatten]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B\/C\/D`)
THEN ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN GEXISTS_TAC`map (\i. (n_list L POWER i) e)
          (upt 1 (sizel (filter (\t. t = FST e) (flatten L))))`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;




GEXISTS_TAC`e`
THEN ASM_REWRITE_TAC[];



ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN GEXISTS_TAC`j`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`e`;`j`][List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(56-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`e`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`e`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`e`;`FST e`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN RESA_TAC
THEN DICH_TAC(70-52)
THEN RESA_TAC;




MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN THAYTHE_TAC (43-40)[`next_el r y`]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
;


MRESA_TAC Tame_list.betwn_mem[`r`;`next_el r y`;`z1`;`d`]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN THAYTHE_TAC (43-40)[`d`]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
;



MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN THAYTHE_TAC (43-40)[`z1`]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;]
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
]);;



let AQ6_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
    MEM (rtrans L N r x 1) (ntrans L N r x 1)`;;

let AQ6= prove( AQ6_concl,

REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1]);;


 (* end;; *)





load_end __FILE__;;