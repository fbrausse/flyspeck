open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Aq23= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;




let AQ2_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
   all (\s. ~(s = [])) (ntrans L N r x 1)`;;



let AQ2=  prove_by_refinement( 
AQ2_concl,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d=x'`;

MRESAL_TAC Tame_list.MEM_replace[`d`;`r`;`[SND (split_normal_list L r (find_face L y) y z1)]`;`N`][Seq.mem_seq1];


DICH_ASM_TAC(32-20)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHE_TAC 0[`d`];

ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1]
THEN GEXISTS_TAC`z`
THEN ASM_REWRITE_TAC[];


ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_list.lower_case;Seq.mem_rev;Seq.mem_cat]
THEN GEXISTS_TAC`z1`
THEN ASM_REWRITE_TAC[]]);;




let exist_or_next_f=  prove_by_refinement(
`!L N r (x:A#A).
         good_list L /\
         good_list_nodes L /\
marked_list L N r x 
/\ ~(final_list L r)
/\(find_face L x) =f
==> ((?d. MEM d (betwn f (ytrans L N r x 0) (ztrans L N r x 0)))<=> ~(next_el f (ytrans L N r x 0)= (ztrans L N r x 0)))
`,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC 2[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(15-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(20-6)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`w=   next_el f x`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESAL_TAC indexf_ytrans_suc_lp_v0[`f`;`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;MEM_APPEND;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1]
THEN MRESA_TAC f_list_power_ytrans_not_mem_v0[`L`;`N`;`r`;`x`]
THEN GABBREV_TAC`d= ((next_el f) POWER(SUC(indexf w y f)) )w`
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d`;`z`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;`SUC(indexf w y f) `]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`z`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a+1<c/\ a<=b/\ SUC(a)< c`)[`indexf w y f`;`indexf w z f`;` sizel f`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`SUC (indexf w y f)`;`w`;`d`;`f`][ARITH_RULE`0<SUC a`]
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`next_el f y = z`];

GEXISTS_TAC`d`
THEN ASM_REWRITE_TAC[]
THEN MRESAS_TAC Tame_list.indexf_add_left[`w`;`y`;`d`;`f`][ARITH_RULE` a<=SUC a:num`;ARITH_RULE`a+b=SUC a<=> b=1`;ARITH_RULE`0<1/\ (1< SUC a<=> 0<a)`]
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`l'p L N r x`]
THEN DICH_TAC(48-33)
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC 0=1`]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf1[`y`;`z`;`f`]
THEN DICH_TAC 0
THEN ARITH_TAC;

ASM_REWRITE_TAC[]
THEN MRESAS_TAC Tame_list.indexf_add_left[`w`;`y`;`d`;`f`][ARITH_RULE` a<=SUC a:num`;ARITH_RULE`a+b=SUC a<=> b=1`;ARITH_RULE`0<1/\ (1< SUC a<=> 0<a)`]
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`l'p L N r x`]
THEN DICH_TAC(48-33)
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC 0=1`]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf1[`y`;`z`;`f`]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d'`;`z`];

ARITH_TAC;

MRESA_TAC(ARITH_RULE`!a b:num. a= SUC b/\ 0<b==> ~(a=1)`)[`indexf y z f`;`l'p L N r x`]
THEN MRESA_TAC Tame_list.next_el_indexf[`y`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a. ~(1<a)==> a=0 \/ a=1`)[`sizel f`];



MRESA_TAC Dangeyj.mem_imp_not_nil[`f`;`y`]
THEN MRESA_TAC Seq.size_eq0[`f`];

MRESA_TAC Seq2.size1_eq[`f`]
THEN DICH_TAC(54-29)
THEN DICH_TAC(53-29)
THEN ASM_REWRITE_TAC[Seq.mem_seq1;]
THEN REPEAT RESA_TAC
THEN DICH_TAC 2
THEN SYM_DICH_TAC 2
THEN ASM_REWRITE_TAC[]]);;




let next_last_betwn=prove(`MEM y r /\
           MEM z r /\
           uniq r/\ ~(y=z)/\ ~(betwn r y z=[])==> next_el r(LAST(betwn r y z))=z`,
REPEAT RESA_TAC
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`y`;`z`;`r`]
THEN MRESA_TAC Tame_list.indexl_LAST[`betwn r y z`]
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn r y z`]
THEN MRESA_TAC Tame_list.size_betwn[`y`;`z`;`r`]
THEN MRESA_TAC Tame_list.indexl_betwn[`y`;`LAST(betwn r y z)`;`z`;`r`]
THEN MRESA_TAC Pwssrat.sizel0_not_nil[`betwn r y z`]
THEN DICH_TAC 1
THEN ASM_SIMP_TAC[ARITH_RULE`!a:num. 0<a==> SUC (a-1)= a`]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`indexf y z r=0`][ARITH_RULE`~(a=0)<=> 0<a`]
THEN MRESAL_TAC Tame_list.indexf0[`y`;`z`;`r`][ARITH_RULE`~(a=0)<=> 0<a`]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf y z r`][ARITH_RULE`1<=a<=> 0<a`]
THEN MRESAL_TAC Tame_list.indexf_n[`y`;`z`;`r`][GSYM List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y`;`z`;`LAST (betwn r y z)`]
THEN MRESAL_TAC Tame_list.indexf_n[`y`;`LAST (betwn r y z)`;`r`][GSYM List_hypermap.dart_in_face]);;



let F_LIST_INJ=prove(`  good_list L/\ y IN darts_of_list L /\ z IN darts_of_list L
==> (f_list L y= f_list L z<=> y=z)`,
REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.f_list_ext_f_list[`L`;`y`]
THEN MRESA_TAC Tame_list.f_list_ext_f_list[`L`;`z`]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ASM_SIMP_TAC[GSYM List_hypermap.components_hypermap_of_list;Lvducxu.HYP_MAPS_INJ]);;



let LAST_FLATTEN_2=prove(`!r. ~(r=[])/\  ~(LAST r=[])==>LAST (flatten r)= LAST(LAST r)`,
LIST_INDUCT_TAC
THEN REWRITE_TAC[LAST]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`t=[]`][flatten_sing]
THEN RESA_TAC
THEN DICH_TAC 3
THEN RESA_TAC
THEN ASM_REWRITE_TAC[Tame_list.concat_flatten;LAST_APPEND]
THEN GSUBGOAL_THEN`~(flatten t = [])`ASSUME_TAC
THENL[
DICH_TAC 1
THEN ASM_REWRITE_TAC[List_hypermap.mem_not_nil]
THEN RESA_TAC
THEN ASM_REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`x`
THEN GEXISTS_TAC`LAST t`
THEN ASM_SIMP_TAC[Tame_list.MEM_LAST];
ASM_REWRITE_TAC[]]);;



let LAST_UPT=prove_by_refinement(
`!a. 2<=a ==> LAST(upt 1 a) =PRE a`,
[
INDUCT_TAC
THEN REWRITE_TAC[Tame_list.upt_rec;MEM];

ARITH_TAC;

MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`1<=a`][MEM;MEM_APPEND];

DICH_TAC 1
THEN RESA_TAC;

ASM_REWRITE_TAC[LAST_APPEND;Ohcgkfu.sing_not_nil;LAST;PRE];

DICH_TAC 0
THEN ASM_REWRITE_TAC[ARITH_RULE`~(1<=a)<=> a=0`]
THEN ARITH_TAC]);;



let AQ3_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
   all (f_last L) (ntrans L N r x 1)`;;


let AQ3=prove_by_refinement(
 AQ3_concl,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d=x'`;



MRESAL_TAC Tame_list.MEM_replace[`d`;`r`;`[SND (split_normal_list L r (find_face L y) y z1)]`;`N`][Seq.mem_seq1];


DICH_ASM_TAC(32-21)[GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil]
THEN THAYTHE_TAC 0[`d`];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn (find_face L y) y z = []`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES]
;



ASM_REWRITE_TAC[APPEND_NIL]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC Ncvibwu.next_el_last_hd[`y`;`z`;`(betwn r z y)`]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN DICH_TAC 4
THEN MRESAL_TAC exist_or_next_f[`f`;`L`;`N`;`r`;`x`]
[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM List_hypermap.mem_not_nil]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN STRIP_TAC
THEN DICH_TAC (42-37)
THEN RESA_TAC
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
;





GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(39-33)
THEN RESA_TAC
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESAL_TAC Tame_list.next_el_cat_last2[`(APPEND [z] (APPEND (betwn r z y) [y]))`;`betwn f y z`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;GSYM Seq2.APPEND_cat;HD_APPEND;Seq2.HD]
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn f y z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`LAST (betwn f y z)`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`LAST (betwn f y z)`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`LAST (betwn f y z)`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face
]
THEN ONCE_REWRITE_TAC[SET_RULE`A=B<=> B=A`]
THEN MATCH_MP_TAC next_last_betwn
THEN ASM_REWRITE_TAC[];






MRESAL_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;Tame_list.lower_case]
THEN MRESAL_TAC Tame_list.next_el_cat_last2[`(REVERSE
  (flatten
  (map
   (\x. map (\i. (n_list L POWER i) x)
        (upt 1 (sizel (filter (\t. t = FST x) (flatten L)))))
  (betwn (find_face L y) y z))))`;`APPEND [next_el r y] (APPEND (betwn r (next_el r y) z1) [z1])`][Tame_list.lower_case]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;GSYM Tame_list.lower_case]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn (find_face L y) y z = []`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND]
;


DICH_TAC 1
THEN ASM_REWRITE_TAC[Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case]
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.next_el_cat_last2[`[next_el r y]`;` (APPEND (betwn r (next_el r y) z1) [z1])`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES;MAP;Seq.flatten0;REVERSE;APPEND;GSYM Tame_list.lower_case;LAST_APPEND;HD]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC exist_or_next_f[`f`;`L`;`N`;`r`;`x`]
[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM List_hypermap.mem_not_nil]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(41-32)
THEN RESA_TAC
THEN DICH_TAC(41-36)
THEN RESA_TAC
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN DICH_TAC(43-22)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`z1`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC prev_r_not_eq_f_v0[`z1`;`z`;`L`;`N`;`r`;`x`]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN THAYTHEL_ASM_TAC 4[`y`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC next_r_not_eq_f_v0[`f`;`y`;`L`;`N`;`r`;`x`]
THEN MRESAS_TAC F_LIST_INJ[`L`;`y`;`e_list z1`][List_hypermap.darts_of_list;IN_SET_OF_LIST;Tame_list.good_list_e_list;List_hypermap.e_list];


GSUBGOAL_THEN`~(REVERSE
    (flatten
    (MAP
     (\x. MAP (\i. (n_list L POWER i) x)
          (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))
    (betwn (find_face L y) y z))) =
    [])`ASSUME_TAC
;


DICH_TAC 0
THEN ASM_REWRITE_TAC[List_hypermap.mem_not_nil]
THEN STRIP_TAC
THEN GABBREV_TAC`g=(\x. MAP (\i. (n_list L POWER i) x)
           (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))`
THEN CHANGE_TAC`d1=x''`
THEN GEXISTS_TAC`n_list L d1`
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;]
THEN GEXISTS_TAC`g d1`
THEN ASM_SIMP_TAC[Seq.map_f]
THEN EXPAND_TAC"g"
THEN ASM_REWRITE_TAC[MEM_MAP]
THEN GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF; Tame_list.lower_case]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(35-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`d1`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`d1`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(53-33)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d1`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`d1`;`FST d1`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN ARITH_TAC;




GSUBGOAL_THEN`~(
    (flatten
    (MAP
     (\x. MAP (\i. (n_list L POWER i) x)
          (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))
    (betwn (find_face L y) y z))) =
    [])`ASSUME_TAC
;

REMOVE_ASSUM_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[List_hypermap.mem_not_nil]
THEN STRIP_TAC
THEN GABBREV_TAC`g=(\x. MAP (\i. (n_list L POWER i) x)
           (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))`
THEN CHANGE_TAC`d1=x''`
THEN GEXISTS_TAC`n_list L d1`
THEN ASM_REWRITE_TAC[Tame_list.lower_case;Seq.mem_rev;Seq2.mem_flatten;]
THEN GEXISTS_TAC`g d1`
THEN ASM_SIMP_TAC[Seq.map_f]
THEN EXPAND_TAC"g"
THEN ASM_REWRITE_TAC[MEM_MAP]
THEN GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF; Tame_list.lower_case]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(35-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`d1`;`L`]
THEN DICH_ASM_TAC(46-43)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`d1`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(53-33)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d1`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`d1`;`FST d1`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN ARITH_TAC;





GSUBGOAL_THEN`~(
    ( (MAP
     (\x. MAP (\i. (n_list L POWER i) x)
          (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))
    (betwn (find_face L y) y z))) =
    [])`ASSUME_TAC
;



REMOVE_ASSUM_TAC
THEN REMOVE_ASSUM_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[List_hypermap.mem_not_nil]
THEN STRIP_TAC
THEN GABBREV_TAC`g=(\x. MAP (\i. (n_list L POWER i) x)
           (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))`
THEN CHANGE_TAC`d1=x''`
THEN GEXISTS_TAC`g d1`
THEN ASM_SIMP_TAC[Seq.map_f]
THEN EXPAND_TAC"g"
THEN ASM_REWRITE_TAC[MEM_MAP]
THEN GEXISTS_TAC`d1`
THEN ASM_REWRITE_TAC[MEM_MAP]
;


RESA_TAC
THEN ASM_SIMP_TAC[Tame_list.HD_rev;Tame_list.lower_case]
THEN DICH_TAC 1
THEN ASM_SIMP_TAC[Tame_list.HD_rev;Tame_list.lower_case]
THEN STRIP_TAC
THEN ASM_SIMP_TAC[Tame_list.HD_rev;GSYM Tame_list.lower_case]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(43-37)
THEN RESA_TAC
THEN MRESAL_TAC LAST_FLATTEN_2[`(MAP
  (\x:A#A. MAP (\i. (n_list L POWER i) x)
       (upt 1 (LENGTH (FILTER (\t. t = FST x) (flatten L)))))
 (betwn f y z))`][Tame_list.lower_case]
THEN DICH_TAC 0
THEN GABBREV_TAC`d1=LAST (betwn f y z)`
THEN DICH_TAC (44-33)
THEN RESA_TAC
THEN ASM_SIMP_TAC[GSYM Tame_list.lower_case; Tame_list.LAST_MAP]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(45-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESA_TAC Hojodcm.count_node_face[`d1`;`L`]
THEN DICH_ASM_TAC(56-53)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`d1`][List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn f y z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d1`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d1`;`x`;`L`]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`d1`;`FST d1`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN DICH_TAC(62-58)
THEN RESA_TAC
THEN GSUBGOAL_THEN`~(map (\i. (n_list L POWER i) d1) (upt 1 (sizel (filter (MEM (FST d1)) L))) =
    [])`ASSUME_TAC;


ASM_REWRITE_TAC[List_hypermap.mem_not_nil]
THEN GEXISTS_TAC`n_list L d1`
THEN ASM_REWRITE_TAC[MEM_MAP;GSYM Tame_list.lower_case]
THEN GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF; Tame_list.lower_case]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN DICH_TAC 0
THEN ARITH_TAC;


GSUBGOAL_THEN`~((upt 1 (sizel (filter (MEM (FST d1)) L)))=[])`
ASSUME_TAC
;


ASM_REWRITE_TAC[List_hypermap.mem_not_nil]
THEN GEXISTS_TAC`SUC 0`
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF; Tame_list.lower_case]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN DICH_TAC 1
THEN ARITH_TAC;


ASM_SIMP_TAC[Tame_list.LAST_MAP]
THEN DICH_TAC 0
THEN ASM_SIMP_TAC[Tame_list.LAST_MAP;GSYM Tame_list.lower_case]
THEN REPEAT RESA_TAC
THEN ASM_REWRITE_TAC[Tame_list.lower_case;]
THEN ASM_SIMP_TAC[LAST_UPT]
THEN DICH_TAC 3
THEN SYM_DICH_TAC 3
THEN STRIP_TAC
THEN GABBREV_TAC`n=CARD (node (hypermap_of_list L) d1)`
THEN MRESAS_TAC Hypermap.lemma_node_cycle[`hypermap_of_list L`;`d1`][List_hypermap.components_hypermap_of_list]
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`d1`;`n`][List_hypermap.dart_in_face]
THEN MRESAS_TAC Hypermap.LE_SUC_PRE[`n`][ARITH_RULE`2<=a==> 1<=a`]
THEN DICH_TAC 1 
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN REWRITE_TAC[COM_POWER;o_DEF;PRE]
THEN GABBREV_TAC`y1=(n_list L POWER PRE n) d1`
THEN STRIP_TAC
;





MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN DICH_TAC(70-22)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`z1`][Tame_defs2.loop_list;Tame_defs2.one_step_list]
THEN MRESA_TAC prev_r_not_eq_f_v0[`z1`;`z`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC next_last_betwn[`f`;`y`;`z`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d1`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESAS_TAC F_LIST_INJ[`L`;`d1`;`e_list z1`][List_hypermap.darts_of_list;IN_SET_OF_LIST;Tame_list.good_list_e_list;List_hypermap.e_list;]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.e_list[`d1`]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(LAND_CONV o RAND_CONV o DEPTH_CONV)[th])
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC (75-67)
THEN MRESAL_TAC Lebhirj.n_list_ext_n_list_power[`L`;`d1`;`PRE n`][List_hypermap.dart_in_face]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`d1`;`L`;`PRE n`][List_hypermap.dart_in_face;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[GSYM List_hypermap.dart_in_face]
THEN STRIP_TAC
THEN ASM_SIMP_TAC[GSYM Tame_list.n_list_ext_n_list]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`y1`;`L`;`SUC 0`][List_hypermap.darts_of_list;IN_SET_OF_LIST;POWER;o_DEF;I_DEF]
THEN ASM_SIMP_TAC[GSYM Lp_gen_theory.e_list_ext_eq_e_list]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`(n_list_ext L y1)`;`L`;`SUC 0`][List_hypermap.darts_of_list;IN_SET_OF_LIST;POWER;o_DEF;I_DEF]
THEN ASM_SIMP_TAC[GSYM Tame_list.f_list_ext_f_list;List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN MRESAL_TAC Tame_list.inverse_n_list_ext[`L`][o_DEF;FUN_EQ_THM]
THEN THAYTHE_TAC 0[`n_list_ext L y1`]
THEN SYM_DICH_TAC 0
THEN ASM_SIMP_TAC[GSYM List_hypermap.components_hypermap_of_list;Lvducxu.HYP_MAPS_INVS]]);;




 end;;





load_end __FILE__;;