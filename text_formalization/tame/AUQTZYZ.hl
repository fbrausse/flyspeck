(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Lemma: AUQTZYZ *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Auqtzyz= struct

open Truong_tactic;;
open Hypermap;;

parse_as_infix("POWER",(24,"right"));;

let lemma_inverse_res_power= prove_by_refinement(`!n. (inverse (res (face_map H) (face H x)) POWER n) x = (inverse (face_map H) POWER n) x`,
[
INDUCT_TAC;

REWRITE_TAC[Hypermap.POWER];
ASM_REWRITE_TAC[Hypermap.COM_POWER;o_DEF]
THEN MRESAL_TAC Hypermap.lemma_inverse_res[`H`;`x`;`((inverse (face_map H) POWER n) x)`][Hypermap.face_refl]
THEN MATCH_DICH_TAC 0
THEN MATCH_MP_TAC Hypermap.lemma_power_inverse_in_face
THEN SIMP_TAC[Hypermap.face_refl]]);;


let loop_inverse_tuple= prove(`r= (face H x,inverse (res (face_map H) (face H x)))
==> 
(?x. x IN FST r /\ orbit_map (SND r) x = FST r) `,
REPEAT RESA_TAC
THEN GEXISTS_TAC`x`
THEN REWRITE_TAC[Hypermap.face_refl]
THEN GEN_REWRITE_TAC(RAND_CONV o ONCE_DEPTH_CONV)[Lvducxu.FACE_NODE_EDGE_ORBIT_INVERSE;]
THEN REWRITE_TAC[orbit_map;EXTENSION;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC
THEN RESA_TAC
THEN GEXISTS_TAC`n`
THEN ASM_REWRITE_TAC[lemma_inverse_res_power]);;




let power_div=prove(`(f POWER n) x =x /\ m=q*n+r ==>  (f POWER m) x = (f POWER r) x`,
ONCE_REWRITE_TAC[ADD_SYM;]
THEN REPEAT RESA_TAC
THEN REWRITE_TAC[addition_exponents;o_DEF]
THEN ASM_SIMP_TAC[power_map_fix_point]);;


let EXTRA_COMP_LOOP= prove_by_refinement(
`!H p n i j. ~(node H (p i)= node H (p j))/\ i<=n /\ j<=n/\ is_contour H p (SUC n) /\ is_inj_list p n /\ (!m. p (m MOD SUC n)= p m) ==>
  (?L. is_loop H L /\ path_of_loop L (p 0) = p/\ in_dart_of_loop (p 0) L
/\ (?y z. in_dart_of_loop y L /\ in_dart_of_loop z L /\ ~(node H y = node H z))
/\ dart_of_loop L=  support_of_sequence p n
/\ loop_map L= samsara p n)`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`L=loop(support_of_sequence p n,samsara p n)`
THEN GEXISTS_TAC`L`
THEN RESA_TAC;

MRESAL_TAC Oxlzlez.MOD_REFL_ALT[`SUC n`][ARITH_RULE`~(SUC n=0)`]
THEN THAYTHE_TAC 2[`SUC n`]
THEN MRESA_TAC Hypermap.lemma_make_contour_loop[`H`;`p`;`n`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[Hypermap.lemma_inj_contour_via_list]
THEN ASM_TAC
THEN REWRITE_TAC[Hypermap.is_contour]
THEN REPEAT RESA_TAC;

STRIP_TAC;

MRESAL_TAC Oxlzlez.MOD_REFL_ALT[`SUC n`][ARITH_RULE`~(SUC n=0)`]
THEN THAYTHEL_ASM_TAC 2[`SUC n`][ARITH_RULE`~(SUC n=0)`]
THEN DICH_TAC 1
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN REWRITE_TAC[FUN_EQ_THM;Hypermap.path_of_loop]
THEN MRESA_TAC Hypermap.lemma_generate_loop[`p`;`n`]
THEN MRESA_TAC Hypermap.lemma_samsara_power[`p`;`n`]
THEN MRESA_TAC Hypermap.lemma_samsara_permute[`p`;`n`]
THEN MRESA_TAC Hypermap.lemma_size_list[`p`;`n`]
THEN GEN_TAC
THEN MP_TAC DIVISION_SIMP
THEN STRIP_TAC
THEN THAYTHEL_TAC 1[`x`;`SUC n`][ARITH_RULE`~(SUC n= 0)`]
THEN MRESA_TAC power_div[`x DIV (SUC n)`;`SUC n`;`x`;`samsara p n`;`x MOD (SUC n)`;`p 0`]
THEN MRESAL_TAC DIVISION[`x`;`SUC n`][ARITH_RULE`~(SUC n= 0)`;ARITH_RULE`a< SUC n<=> a<= n:num`]
THEN THAYTHE_TAC (15-9)[`x MOD SUC n`];

STRIP_TAC;

REWRITE_TAC[in_dart_of_loop]
THEN MRESA_TAC Hypermap.lemma_generate_loop[`p`;`n`]
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN EXISTS_TAC`0`
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;

REWRITE_TAC[in_dart_of_loop]
THEN MRESA_TAC Hypermap.lemma_generate_loop[`p`;`n`]
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN GEXISTS_TAC`p i`
THEN GEXISTS_TAC`p j`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;

GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[];

GEXISTS_TAC`j`
THEN ASM_REWRITE_TAC[]]);;


let COMPLEMENT_LARGE_INDEX=prove(`is_node_nondegenerate H /\ x IN dart H
==> !n.  n <= complement_index H x n`,
STRIP_TAC
THEN INDUCT_TAC
THENL[
REWRITE_TAC[complement_index;ARITH_RULE`0<=0`;];

MRESA_TAC Hypermap.lemma_increasing_index_one[`H`;`x`;`n`]
THEN MRESA_TAC (ARITH_RULE`!a b c. a<=b /\ b<c==> SUC a<= c`)[`n`;`complement_index H x n `;` complement_index H x (SUC n)`]]);;


let lemma_complement_index_exists=prove(`is_node_nondegenerate H /\
         x IN dart H /\ 1<= n
==>  ?i j. n= complement_index H x i+ j /\ 
j<CARD (node H ((inverse (face_map H) POWER SUC i) x))/\
1<= j `,
REPEAT STRIP_TAC
THEN MRESA_TAC COMPLEMENT_LARGE_INDEX[`H`;`x`]
THEN THAYTHE_TAC 0[`n`]
THEN MRESA_TAC Hypermap.lemma_complement_index[`H`;`x`;`n`;`n`]
THEN GEXISTS_TAC`i`
THEN GEXISTS_TAC`j`
THEN ASM_REWRITE_TAC[]);;


let complement_index_face_le1=prove(`is_node_nondegenerate H /\ x IN dart H
==> 1<= (complement_index H x (CARD (face H x)))`,
STRIP_TAC
THEN MRESA_TAC Hypermap.FACE_NOT_EMPTY[`H`;`x`]
THEN MRESA_TAC COMPLEMENT_LARGE_INDEX[`H`;`x`]
THEN THAYTHE_TAC 0[`(CARD (face H x))`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC);;


let complement_cycle=prove(`is_restricted H /\ (x IN dart H) /\
PRE (complement_index H x (CARD (face H x))) = n
==> complement H x ( SUC n) = complement H x 0`,
REWRITE_TAC[is_restricted]
THEN RESA_TAC
THEN MRESA_TAC complement_index_face_le1[`H`;`x`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN THAYTHEL_TAC (17-13)[`0`][complement_index]
THEN MATCH_MP_TAC(SET_RULE`x=y==> f x= f y`)
THEN REWRITE_TAC[POWER;I_DEF;Lvducxu.INVERSE_FACE_CYCLE]);;


let complement_cycle1= prove(`is_restricted H /\ (x IN dart H) /\
PRE (complement_index H x (CARD (face H x))) = n
==> complement H x (1+ SUC n) = complement H x 1`,
REWRITE_TAC[is_restricted]
THEN RESA_TAC
THEN MRESA_TAC complement_index_face_le1[`H`;`x`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN REWRITE_TAC[ARITH_RULE`1+a= SUC a`;ARITH_RULE`1= SUC 0`]
THEN DICH_TAC (19-16)
THEN THAYTHEL_ASM_TAC (16-14)[`0`][complement_index]
THEN DICH_TAC 1
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th])
THEN THAYTHE_TAC 0[`CARD (face H x)`]
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th])
THEN STRIP_TAC
THEN MATCH_MP_TAC(SET_RULE`x=y==> f x= f y`)
THEN MATCH_MP_TAC(SET_RULE`x=y==> f x= f y`)
THEN REWRITE_TAC[POWER;I_DEF;Lvducxu.INVERSE_FACE_CYCLE]);;


let card_node_inverse=prove(` CARD (node H ((inverse (face_map H) POWER SUC 0) x))
=  CARD (node H ((inverse (face_map H) POWER SUC (CARD (face H x))) x))`,
REWRITE_TAC[COM_POWER;o_DEF;I_DEF;]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`]
THEN REWRITE_TAC[POWER;I_DEF]);;


let complement_index_add=prove(`
!i. complement_index H x i + complement_index H x (CARD (face H x))=complement_index H x (i+ (CARD (face H x)))`,
INDUCT_TAC
THENL[
REWRITE_TAC[complement_index;ARITH_RULE`0+a=a`];
REWRITE_TAC[ARITH_RULE`SUC i+a=SUC(i+a)`;complement_index]
THEN SYM_ASSUM_TAC
THEN MATCH_MP_TAC(ARITH_RULE`b=d==>(a+b)+c=(a+c)+d:num`)
THEN REWRITE_TAC[ARITH_RULE`SUC (i+a)= SUC i+a`;addition_exponents;o_DEF]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`]]);;



let complement_permuter= prove_by_refinement(`is_restricted H /\ (x IN dart H) /\
PRE (complement_index H x (CARD (face H x))) = n
==> !i. complement H x ( i+ SUC n) = complement H x i`,
[
REWRITE_TAC[is_restricted]
THEN RESA_TAC
THEN INDUCT_TAC
THEN REWRITE_TAC[ARITH_RULE`0+a=a`;];

MATCH_MP_TAC complement_cycle
THEN ASM_REWRITE_TAC[is_restricted];

MRESAL_TAC lemma_complement_index_exists[`SUC i`;`H`;`x`][ARITH_RULE`1<= SUC i `]
THEN MRESA_TAC complement_index_face_le1[`H`;`x`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN MRESA_TAC (ARITH_RULE`!a b c.(a+b)+c=(a+c)+b:num`)[`complement_index H x i'`;`j`;`complement_index H x (CARD (face H x))`]
THEN REWRITE_TAC[complement_index_add]
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN THAYTHE_ASM_TAC(1)[`i'`;`j`]
THEN GSUBGOAL_THEN`j <
      CARD
      (node H ((inverse (face_map H) POWER SUC (i' + CARD (face H x))) x))`
ASSUME_TAC;

REWRITE_TAC[ARITH_RULE`SUC (i+a)= SUC i+a`;addition_exponents;o_DEF]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`];

THAYTHE_ASM_TAC(1)[`i' + CARD (face H x)`;`j`]
THEN DICH_TAC(25-11)
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC(24-11)
THEN GSUBGOAL_THEN`?j1. j= SUC j1` MP_TAC;

EXISTS_TAC`PRE j`
THEN DICH_TAC(23-12)
THEN ASM_SIMP_TAC[Hypermap.LE_SUC_PRE];

STRIP_TAC
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!i b j1. SUC i  = b + SUC j1
==>  i  = b+ j1`)[`i`;`complement_index H x i'`;`j1`]
THEN STRIP_TAC
THEN REWRITE_TAC[ARITH_RULE`SUC (i+a)= SUC i+a`;addition_exponents;o_DEF]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`]]);;


let complement_permuter1=prove(`is_restricted H /\ (x IN dart H) /\
PRE (complement_index H x (CARD (face H x))) = n
==> !m. complement H x (m* SUC n+j) = complement H x j`,
RESA_TAC
THEN INDUCT_TAC
THEN REWRITE_TAC[ARITH_RULE`0*a=0/\ 0+j=j`]
THEN REWRITE_TAC[ARITH_RULE`SUC a *b+j= (a*b+ j)+ b`]
THEN MRESA_TAC complement_permuter[`n`;`H`;`x`]);;


let complement_mod=prove(`is_restricted H /\ (x IN dart H) /\
PRE (complement_index H x (CARD (face H x))) = n
==> !m. complement H x (m MOD SUC n) = complement H x m`,
RESA_TAC
THEN REPEAT RESA_TAC
THEN MRESAL_TAC DIVISION[`m`;`SUC n`][ARITH_RULE`~(SUC n =0)`]
THEN REMOVE_ASSUM_TAC
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(RAND_CONV o ONCE_DEPTH_CONV)[th])
THEN MRESA_TAC complement_permuter1[`n`;`H`;`x`]);;




let CARD_FACE_LE3=prove(`3 <= CARD (face H x)
==> ~(face_map H x= x)`,
let lemma=prove(`(\x. face_map H x)= face_map H`,
REWRITE_TAC[FUN_EQ_THM]) in

ONCE_REWRITE_TAC[Hypermap.orbit_one_point]
THEN REWRITE_TAC[GSYM face;lemma]
THEN REPEAT STRIP_TAC
THEN DICH_TAC 1
THEN RESA_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[CARD_SING]
THEN ARITH_TAC);;


let node_node_map_eq=prove(`node H (node_map H d) = node H d`,
REWRITE_TAC[node]
THEN MRESA_TAC Hypermap.node_map_and_darts[`H`]
THEN MRESAL_TAC Hypermap.lemma_orbit_power[`dart H`;`node_map H`;`d`;`SUC 0`][POWER;o_DEF;I_DEF]);;



let suc_pre_face=prove(`SUC (PRE (CARD (face H x)))=(CARD (face H x))`,
MATCH_MP_TAC Hypermap.LE_SUC_PRE
THEN ASM_REWRITE_TAC[ Hypermap.FACE_NOT_EMPTY]);;


let SUC_LE_PRE=prove( `!a b. SUC b<= a==> b<= PRE a `,
REPEAT STRIP_TAC
THEN MATCH_MP_TAC(ARITH_RULE`SUC a<= SUC b==> a<=b`)
THEN MATCH_MP_TAC(ARITH_RULE`!a b c. a<=b/\ c=b ==> a<=c:num`)
THEN GEXISTS_TAC`a`
THEN ASM_REWRITE_TAC[]
THEN MATCH_MP_TAC Hypermap.LE_SUC_PRE
THEN DICH_TAC 0
THEN ARITH_TAC);;



let inverse_node_mod=prove(`(inverse (node_map H) POWER (j)) x= (inverse (node_map H) POWER (j MOD (CARD (node H x)))) x`,
MRESA_TAC Hypermap.lemma_node_inverse_cycle[`H`;`x`]
THEN MATCH_MP_TAC(GEN_ALL power_div)
THEN MRESAL_TAC DIVISION[`j`;`CARD(node H x)`][ARITH_RULE`~(n =0)<=> 1<= n`;Hypermap.NODE_NOT_EMPTY]
THEN GEXISTS_TAC`j DIV CARD (node H x)`
THEN GEXISTS_TAC`CARD (node H x)`
THEN ASM_REWRITE_TAC[]
THEN REMOVE_ASSUM_TAC
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[th])
THEN ASM_REWRITE_TAC[]);;



let lemma_via_inverse_face_map=prove(
`!H x y.
         y IN face H x
         ==> (?j. j < CARD (face H x) /\ y = (inverse (face_map H) POWER j) x)`,
REWRITE_TAC[Lvducxu.FACE_NODE_EDGE_ORBIT_INVERSE]
THEN REPEAT STRIP_TAC
THEN MATCH_MP_TAC Hypermap.lemma_index_on_orbit
THEN GEXISTS_TAC`dart H`
THEN ASM_REWRITE_TAC[Hypermap.face_map_and_darts]
THEN MATCH_MP_TAC PERMUTES_INVERSE
THEN ASM_REWRITE_TAC[Hypermap.face_map_and_darts]);;



let atoms_of_family_eq=prove(` is_normal H NF
==> atoms_of_family H NF={atm | (?x. x IN darts_of_family NF /\ atm = atom_choice H NF x)}`,
ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IN_ELIM_THM;Hypermap.atom_via_atom_choice]);;


let atoms_of_family_eq_atom=prove(` is_normal H NF
==> atoms_of_family H NF={atm | (?x L. L IN NF /\ in_dart_of_loop x L /\ atm = atom H L x)}`,
SIMP_TAC[atoms_of_family_eq]
THEN ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IN_ELIM_THM;Hypermap.atom_via_atom_choice;darts_of_family;UNIONS;in_dart_of_loop]
THEN REPEAT RESA_TAC
THEN EQ_TAC
THEN RESA_TAC
THENL[

GEXISTS_TAC`x'`
THEN GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]
THEN ASM_TAC
THEN REPEAT RESA_TAC
THEN MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[in_dart_of_loop];

GEXISTS_TAC`x'`
THEN MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN THAYTHEL_TAC 0[`L`;`x'`][in_dart_of_loop]
THEN GEXISTS_TAC`dart_of_loop L`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]]);;




let PRE_LT_LE=prove(`1<= a==> (!b. b<= PRE a <=> b<a)`,
REPEAT RESA_TAC
THEN REWRITE_TAC[ARITH_RULE`a<=b<=> a< SUC b`]
THEN ASM_SIMP_TAC[Hypermap.LE_SUC_PRE]);;




let lemma_samsara_power_add=prove(`!p n.
           is_inj_list p n           ==> 
               (!i j. i+ j <= n ==> (samsara p n POWER j) (p i) = p (i+j))`,
REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!i j n:num. i+j <= n ==> i<=n`)[`i`;`j`;`n`]
THEN MRESA_TAC Hypermap.lemma_samsara_power[`p`;`n`]
THEN THAYTHE_ASM_TAC 0[`i`]
THEN SYM_DICH_TAC 1
THEN THAYTHE_ASM_TAC 0[`i+j:num`]
THEN SYM_DICH_TAC 1
THEN ONCE_REWRITE_TAC[ARITH_RULE`i+j=j+i:num`]
THEN REWRITE_TAC[Hypermap.addition_exponents;o_DEF]);;



let lemma_samsara_power_add0=prove(`!p n.
           is_inj_list p n           ==> 
               (!i j. i+ j = SUC n /\ 1<=j ==> (samsara p n POWER j) (p i) = p (0))`,
REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!i j n:num. i+j = SUC n /\ 1<=j ==> i<=n`)[`i`;`j`;`n`]
THEN MRESA_TAC Hypermap.lemma_samsara_power[`p`;`n`]
THEN THAYTHE_ASM_TAC 0[`i`]
THEN SYM_DICH_TAC 1
THEN ONCE_REWRITE_TAC[ARITH_RULE`i+j=j+i:num`]
THEN MRESAL_TAC Hypermap.addition_exponents[`j`;`i`;`samsara p n`][FUN_EQ_THM;o_DEF]
THEN THAYTHE_TAC 0[`p 0`]
THEN SYM_DICH_TAC 0
THEN ONCE_REWRITE_TAC[ARITH_RULE`i+j=j+i:num`]
THEN ASM_REWRITE_TAC[]);;




let atom_refl=prove(`x IN atom H L x `,
REWRITE_TAC[atom;IN_ELIM_THM;is_node_going]
THEN GEXISTS_TAC`0`
THEN REWRITE_TAC[POWER;I_DEF;ARITH_RULE`i<=0<=> i=0`]
THEN REPEAT RESA_TAC
THEN REWRITE_TAC[POWER;I_DEF;ARITH_RULE`i<=0<=> i=0`]);;



let atom_eq_in=prove(`atom H L y =atom H L x==> y IN atom H L x`,
ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN RESA_TAC
THEN REWRITE_TAC[atom_refl]);;


let inj_atom= prove_by_refinement(`is_restricted H /\ (x IN dart H) /\
(\x1. atom H (loop_of_face H x) x1)=g/\
  CARD(face H x)= cf
==>(!x1 y1. x1 IN (face H x) /\ y1 IN (face H x) /\ g x1 = g y1 ==> x1 = y1)`,
[
RESA_TAC
THEN EXPAND_TAC"g"
THEN REWRITE_TAC[IN_NUMSEG;]
THEN DICH_TAC 3
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC th THEN REWRITE_TAC[is_restricted] THEN ASSUME_TAC th)
THEN RESA_TAC
THEN THAYTHE_TAC 0[`x`]
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 1<= a`)[`cf`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
THEN ASM_REWRITE_TAC[ARITH_RULE`a<=b<=> a< SUC b`;ARITH_RULE`0< SUC a`]
THEN REPEAT RESA_TAC
THEN GABBREV_TAC`L=loop_of_face H x`
THEN MRESA_TAC atom_refl[`H`;`L`;`x1`]
THEN DICH_TAC 0
THEN REWRITE_TAC[atom;IN_ELIM_THM;is_node_going]
THEN EXPAND_TAC"L"
THEN REWRITE_TAC[Hypermap.loop_of_face_rep]
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`x1`]
THEN REWRITE_TAC[Hypermap.power_res_face_map]
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`y1`]
THEN REWRITE_TAC[Hypermap.power_res_face_map]
THEN STRIP_TAC;


THAYTHEL_TAC 0[`k`][ARITH_RULE`k<=k:num`]
THEN DICH_TAC(22-8)
THEN REWRITE_TAC[simple_hypermap]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`y1`]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`y1`]
THEN GSUBGOAL_THEN`x1 IN node H y1`ASSUME_TAC;


ASM_REWRITE_TAC[Hypermap.lemma_power_inverse_in_node2];


GSUBGOAL_THEN`x1 IN face H y1`ASSUME_TAC;

DICH_TAC (24-21)
THEN ASM_REWRITE_TAC[Hypermap.lemma_in_face];

MRESAL_TAC(SET_RULE`!a A B. a IN A/\ a IN B==> a IN A INTER B`)[`x1`;`node H y1`;`face H y1`][IN_SING];


THAYTHEL_TAC 0[`k`][ARITH_RULE`k<=k:num`]
THEN DICH_TAC(22-8)
THEN REWRITE_TAC[simple_hypermap]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`x1`]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x1`]
THEN GSUBGOAL_THEN`y1 IN node H x1`ASSUME_TAC;

ASM_REWRITE_TAC[Hypermap.lemma_power_inverse_in_node2];

GSUBGOAL_THEN`y1 IN face H x1`ASSUME_TAC;

DICH_TAC(24-20)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[th])
THEN REWRITE_TAC[Hypermap.lemma_in_face];

MRESAL_TAC(SET_RULE`!a A B. a IN A/\ a IN B==> a IN A INTER B`)[`y1`;`node H x1`;`face H x1`][IN_SING]]);;




let image_face_atom=prove(`is_restricted H /\
     x IN dart H /\
     (\x1. atom H (loop_of_face H x) x1) = g /\
     CARD (face H x) = cf
==> IMAGE g (face H x)= {y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)}`,
REPEAT RESA_TAC
THEN REWRITE_TAC[IMAGE;]
THEN ONCE_REWRITE_TAC[EXTENSION;]
THEN REWRITE_TAC[IN_ELIM_THM;in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN EXPAND_TAC"g"
THEN SET_TAC[]);;



let card_atom_loop_of_face=prove(`is_restricted H /\
     x IN dart H
==> CARD {y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)} = CARD(face H x)`,
GABBREV_TAC`g=(\x1. atom H (loop_of_face H x) x1)`
THEN GABBREV_TAC`cf=CARD (face H x) `
THEN STRIP_TAC
THEN MRESA_TAC image_face_atom[`cf`;`g`;`H`;`x`]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC inj_atom[`cf`;`H`;`x`;`g`]
THEN EXPAND_TAC"cf" 
THEN MATCH_MP_TAC CARD_IMAGE_INJ
THEN ASM_REWRITE_TAC[Hypermap.FACE_FINITE]);;



let IMAGE_ATOM_LOOP=prove(`(\x1. atom H L x1) = g
==> IMAGE g (dart_of_loop L)={y | ?x. y = atom H L x /\ in_dart_of_loop x L}`,
REWRITE_TAC[IMAGE;in_dart_of_loop]
THEN STRIP_TAC
THEN EXPAND_TAC"g"
THEN SET_TAC[]);;



let FINITE_ATOM_LOOP=prove(`FINITE {y | ?x. y = atom H L x /\ in_dart_of_loop x L}`,
GABBREV_TAC`g=(\x1. atom H L x1)`
THEN MRESA_TAC IMAGE_ATOM_LOOP[`g`;`H`;`L`]
THEN SYM_DICH_TAC 0
THEN MATCH_MP_TAC FINITE_IMAGE
THEN REWRITE_TAC[Hypermap.loop_lemma]);;




let atoms_of_loop_rep=prove(` atoms_of_loop H L = {y | ?x. y = atom H L x /\ in_dart_of_loop x L}`,
REWRITE_TAC[atoms_of_loop;]
THEN ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IN_ELIM_THM]
THEN SET_TAC[]);;




let lemma_atom_tail=prove(`!H x y. y IN face H x 
==> y = face_map H (inv_loop_map (loop_of_face H x) y)`,
REPEAT RESA_TAC
THEN ONCE_REWRITE_TAC[Hypermap.lemma_inverse_on_loop;]
THEN REWRITE_TAC[Hypermap.loop_of_face_rep]
THEN MRESA_TAC Hypermap.lemma_inverse_res[`H`;`x`;`y`]
THEN REWRITE_TAC[Lvducxu.HYP_MAPS_INVS]);;



let is_restricted_card_node=prove(`is_restricted H /\
x IN dart H /\
(inverse (face_map H) POWER i) x = y1
==> 2<= CARD (node H y1)`,
REWRITE_TAC[is_restricted;Hypermap.lemma_node_nondegenerate]
THEN REPEAT RESA_TAC
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;` i`][Hypermap.face_refl]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`y1`]);;



let complement_index_bound= prove_by_refinement( `is_restricted H /\
x IN dart H /\
PRE (complement_index H x cf) = n /\
CARD (face H x) = cf /\
(inverse (face_map H) POWER SUC i) x = y1/\
CARD (node H y1) = cn 
/\ i< cf
==> SUC (complement_index H x i) +  PRE (PRE cn)<= SUC n`,
[
REPEAT RESA_TAC
THEN REWRITE_TAC[ARITH_RULE`SUC A+B= A + SUC B`]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;`SUC i`][Hypermap.face_refl]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`y1`]
THEN MRESA_TAC is_restricted_card_node[`SUC i`;`x`;`H`;`y1`]
THEN MRESAL_TAC SUC_LE_PRE[`cn`;`1`][ARITH_RULE`SUC 1=2`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`PRE cn`]
THEN DICH_TAC 11
THEN REWRITE_TAC[is_restricted]
THEN RESA_TAC
THEN MRESA_TAC complement_index_face_le1[`H`;`x`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`complement_index H x cf`]
THEN GSUBGOAL_THEN`complement_index H x i + PRE cn= complement_index H x (SUC i)`ASSUME_TAC;

ASM_REWRITE_TAC[complement_index];

ASM_REWRITE_TAC[]
THEN MRESAL_TAC(ARITH_RULE`!a b. a<b==> SUC a=b \/ SUC a<b`)[`i`;`cf`][ARITH_RULE`a<=a:num`]
THEN MATCH_MP_TAC(ARITH_RULE`a<b==> a<=b:num`)
THEN MATCH_MP_TAC Hypermap.lemma_increasing_index
THEN ASM_REWRITE_TAC[]]);;



let point_imp_function=prove(`(!i. 0 < i /\ i < k ==> ~(ITER i f x = x))
==>
(!i. 0 < i /\ i < k ==> ~(ITER i f = I))`,
REPEAT STRIP_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[FUN_EQ_THM;I_DEF;NOT_FORALL_THM]
THEN GEXISTS_TAC`x`
THEN THAYTHE_TAC 2[`i`]);;


let CARD_ITER_K_EK_IMP_DIST_FUNTION=prove(`CARD {ITER n f x | n < k} = k
==> (!i. 0 < i /\ i < k ==> ~(ITER i f = I))`,
STRIP_TAC
THEN MATCH_MP_TAC point_imp_function
THEN REPEAT RESA_TAC
THEN DICH_TAC 0
THEN MRESA_TAC(ARITH_RULE`!i k. 0<i/\i<k==> 0<k/\ ~(i=0)`)[`i`;`k`]
THEN MRESA_TAC Wrgcvdr_cizmrrh.CARD_ITER_K_EK_IMP_DIST[`x`;`k`;`f`]
THEN THAYTHEL_TAC 0[`i`;`0`][ITER]);;


let tail_head_change=prove(`!H L x y. x= inv_loop_map L y
==> 
(loop_map L x = face_map H x<=> y = face_map H (inv_loop_map L y))`,
REPEAT RESA_TAC
THEN  REWRITE_TAC[Hypermap.lemma_inverse_evaluation]);;




let EXISTS_PATH_COMPLEMENT= prove_by_refinement(
`!H x. is_restricted H /\ (x IN dart H) 
==> ?L. is_loop H L /\ path_of_loop L (complement H x 0) = complement H x /\
in_dart_of_loop (complement H x 0) L
/\ (?y z. in_dart_of_loop y L /\ in_dart_of_loop z L /\ ~(node H y = node H z))
/\ dart_of_loop L INTER (face H x)={}
/\ (!y z. in_dart_of_loop y L /\ z IN node H y==> in_dart_of_loop z L\/ z IN face H x) 
/\ (!y z.  y IN face H x /\ z IN node H y==> in_dart_of_loop z L\/ z IN face H x) 
/\ CARD (atoms_of_loop H L)= CARD (face H x)
/\ (atoms_of_loop H L) INTER 
{y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)} = {}
/\ (!x1. 	in_dart_of_loop x1 L ==>
       ?y.  y IN atom H L x1 /\
           y = face_map H (inv_loop_map L y)/\
	    node_map H y IN face H x /\
            (node_map H (node_map H y)) IN atom H L x1)
/\ (!x1. 	x1 IN face H x ==>
       ?y.  y IN atom H L (inverse (node_map H) x1) /\
           y = face_map H (inv_loop_map L y)
/\ x1= node_map H y
/\ inverse (node_map H) x1 IN dart_of_loop L)
/\ (!x1. x1 IN face H x ==> in_dart_of_loop ( node_map H x1) L  )`,
[
REWRITE_TAC[atoms_of_loop_rep]
THEN REPEAT RESA_TAC
THEN DICH_TAC 0
THEN POP_ASSUM(fun th-> ASSUME_TAC th THEN MP_TAC th)
THEN REWRITE_TAC[is_restricted]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN GABBREV_TAC`n=(PRE (complement_index H x (CARD (face H x))))`
THEN THAYTHE_TAC 1[`SUC n`]
THEN MRESAL_TAC Hypermap.lemma_inj_complement[`H`;`x`][Hypermap.lemma_inj_contour_via_list]
THEN MRESA_TAC EXTRA_COMP_LOOP[`H`;`complement H x`;`n`]
THEN MRESAL_TAC complement_mod[`n`;`H`;`x`][is_restricted]
THEN MRESA_TAC Hypermap.lemma_lower_bound_index[`H`;`x`;`CARD (face H x)`]
THEN THAYTHE_TAC(20-8)[`x`]
THEN MRESA_TAC(ARITH_RULE`!a b. 3<= a/\ a<=b==> 1<=b/\ 3<= b`)[`CARD (face H x)`;`complement_index H x (CARD (face H x))`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`complement_index H x (CARD (face H x))`]
THEN DICH_TAC 1
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th])
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!n. 3<= SUC n==> 0<= n/\ SUC 0<= n`)[`n`]
THEN GSUBGOAL_THEN`~(node H (complement H x 0) = node H (complement H x (SUC 0)))`ASSUME_TAC;


ASM_REWRITE_TAC[]
 THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN MATCH_MP_TAC Hypermap.lemma_different_nodes
THEN THAYTHEL_TAC (24-9)[`0`][complement_index;POWER;I_DEF]
THEN POP_ASSUM MP_TAC
THEN THAYTHEL_TAC (23-9)[`0`][complement_index;POWER;I_DEF;o_DEF]
THEN REPEAT STRIP_TAC
THEN MRESAL_TAC Hypermap.lemma_in_node1[`H`;`(node_map H x)`;`inverse (node_map H) (inverse (face_map H) x)`][Lvducxu.HYP_MAPS_INVS]
THEN DICH_TAC 0
THEN REWRITE_TAC[node_node_map_eq]
THEN DICH_TAC (25-4)
THEN REWRITE_TAC[simple_hypermap]
THEN STRIP_TAC 
THEN THAYTHE_TAC 0[`x`]
THEN MRESA_TAC Hypermap.face_refl[`H`;`x`]
THEN MRESA_TAC Hypermap.lemma_inverse_in_face[`H`;`x`;`x`]
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A /\ x IN B==> x IN A INTER B`)[`inverse (face_map H) x`;`node H x`;`face H x`][SET_RULE`a IN {b}<=> a=b`]
THEN DICH_TAC 0
THEN MRESA_TAC Hypermap.face_map_and_darts[`H`]
THEN MRESA_TAC Hypermap.non_fixed_point_lemma[`dart H`;`face_map H`;]
THEN THAYTHE_TAC 0[`x`]
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th])
THEN MATCH_MP_TAC CARD_FACE_LE3
THEN ASM_REWRITE_TAC[];

THAYTHE_TAC (25-17)[`0`;`SUC 0`]
THEN GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;

GEXISTS_TAC`y`
THEN GEXISTS_TAC`z`
THEN ASM_REWRITE_TAC[];

GSUBGOAL_THEN`support_of_sequence (complement H x) n INTER face H x = {}` ASSUME_TAC;

REWRITE_TAC[support_of_sequence;SET_RULE`A={}<=> ~(?a. a IN A)`;IN_ELIM_THM;INTER]
THEN STRIP_TAC
THEN DICH_TAC 0
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<= i`)[`i`];

THAYTHEL_TAC (35-9)[`0`][complement_index;POWER;I_DEF]
THEN DICH_TAC(35-4)
THEN REWRITE_TAC[simple_hypermap]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x`]
THEN MRESAL_TAC Hypermap.lemma_in_node1[`H`;`x`;`x`][Hypermap.node_refl]
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A /\ x IN B==> x IN A INTER B`)[`node_map H x`;`node H x`;`face H x`][SET_RULE`a IN {b}<=> a=b`]
THEN DICH_TAC 0
THEN DICH_TAC (37-6)
THEN REWRITE_TAC[is_node_nondegenerate]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x`];

MRESA_TAC lemma_complement_index_exists[`i`;`H`;`x`]
THEN THAYTHE_TAC (38-12)[`i'`;`j`]
THEN DICH_TAC(38-4)
THEN REWRITE_TAC[simple_hypermap]
THEN STRIP_TAC
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;`SUC i'`][Hypermap.face_refl]
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`(inverse (face_map H) POWER (SUC i')) x`]
THEN GABBREV_TAC`x1=(inverse (face_map H) POWER (SUC i')) x`
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`x1`]
THEN THAYTHE_TAC (41-37)[`x1`]
THEN MRESA_TAC Hypermap.lemma_power_inverse_in_node2[`H`;`x1`;`j`]
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A /\ x IN B==> x IN A INTER B`)[`(inverse (node_map H) POWER j) x1`;`node H x1`;`face H x1`][SET_RULE`a IN {b}<=> a=b`]
THEN MRESA_TAC Hypermap.node_map_and_darts[`H`]
THEN MRESA_TAC Hypermap.inverse_power_function[`dart H`;`node_map H`;`j`;`x1`;`x1`]
THEN MRESAL_TAC Hypermap_and_fan.ORBIT_MAP_INJ[`dart H`;`node_map H`;`x1`;`0`;`j`;`CARD (node H x1)`][POWER;I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN REWRITE_TAC[ARITH_RULE`0< a<=> 1<= a`;Hypermap.NODE_NOT_EMPTY]
THEN REWRITE_TAC[node]
THEN DICH_TAC (46-35)
THEN ARITH_TAC;

ASM_REWRITE_TAC[]
THEN STRIP_TAC;

REMOVE_ASSUM_TAC
THEN ASM_REWRITE_TAC[in_dart_of_loop;support_of_sequence;IN_ELIM_THM]
THEN REPEAT RESA_TAC 
THEN MRESA_TAC Hypermap.lemma_via_inverse_node_map[`H`;`y'`;`z'`]
THEN POP_ASSUM MP_TAC
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<= i`)[`j`];

REWRITE_TAC[POWER;I_DEF]
THEN RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[];

STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<= i`)[`i`];

THAYTHEL_TAC (39-9)[`0`][complement_index;POWER;I_DEF]
THEN MRESA_TAC(ARITH_RULE`!j. 1<=j ==> j= SUC 0\/ SUC 1<= j`)[`j`];

REWRITE_TAC[POWER;I_DEF;o_DEF;Lvducxu.HYP_MAPS_INVS;Hypermap.face_refl];

GSUBGOAL_THEN`?j1. 1<= j1/\ j= SUC j1` MP_TAC;

GEXISTS_TAC`j-1`
THEN MRESA_TAC(ARITH_RULE`!j. SUC 1<=j==>  1<= j-1/\ j= SUC(j-1)`)[`j`];

STRIP_TAC;

ASM_REWRITE_TAC[POWER;I_DEF;o_DEF;Lvducxu.HYP_MAPS_INVS;Hypermap.face_refl]
THEN DICH_TAC(41-34)
THEN ASM_REWRITE_TAC[node_node_map_eq]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a< b==> a< b`)[`j1`;`CARD(node H x)`]
THEN THAYTHEL_TAC(43-11)[`PRE(CARD (face H x))`;`j1`][suc_pre_face;Lvducxu.INVERSE_FACE_CYCLE]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/ B`)
THEN GEXISTS_TAC`complement_index H x (PRE (CARD (face H x))) + j1`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC suc_pre_face[`H`;`x`]
THEN EXPAND_TAC"n"
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN REWRITE_TAC[complement_index]
THEN REWRITE_TAC[suc_pre_face]
THEN MATCH_MP_TAC (ARITH_RULE`SUC a<= SUC b==> a<=b`)
THEN MRESAL_TAC SUC_LE_PRE[`CARD (face H x)`;`2`][ARITH_RULE`SUC 2=3`]
THEN MRESA_TAC Hypermap.lemma_lower_bound_index[`H`;`x`;`PRE(CARD (face H x))`]
THEN MRESA_TAC(ARITH_RULE`!a b c. a<=b /\b<=c ==> a<=c:num`)[`2`;`PRE (CARD (face H x))`;`complement_index H x (PRE (CARD (face H x)))`]
THEN MRESA_TAC(ARITH_RULE`!b c. 2<=b==> 1<=b+c:num`)[`complement_index H x (PRE (CARD (face H x)))`;`PRE (CARD (node H ((inverse (face_map H) POWER CARD (face H x)) x)))`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`complement_index H x (PRE (CARD (face H x))) +
  PRE (CARD (node H ((inverse (face_map H) POWER CARD (face H x)) x)))`]
THEN MATCH_MP_TAC(ARITH_RULE`!a b c. SUC b<=c==> SUC (a+b)<= a+c:num`)
THEN MATCH_MP_TAC(ARITH_RULE`!a b. SUC a<= SUC b==> a<=b:num`)
THEN ASM_REWRITE_TAC[Lvducxu.INVERSE_FACE_CYCLE]
THEN MRESA_TAC Hypermap.NODE_NOT_EMPTY[`H`;`x`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`CARD (node H x)`]
THEN DICH_TAC(49-40)
THEN ARITH_TAC;

MRESA_TAC lemma_complement_index_exists[`i`;`H`;`x`]
THEN THAYTHE_TAC (42-12)[`i'`;`j'`]
THEN ASM_REWRITE_TAC[GSYM lemma_add_exponent_function]
THEN GABBREV_TAC`k=CARD (node H ((inverse (face_map H) POWER SUC i') x))`
THEN GABBREV_TAC`x1=(inverse (face_map H) POWER SUC i') x`
THEN MRESA_TAC Hypermap.lemma_node_inverse_cycle[`H`;`x1`]
THEN MRESA_TAC inverse_node_mod[`j+j':num`;`H`;`x1`]
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<= i`)[`(j + j') MOD k`];


ASM_REWRITE_TAC[POWER;I_DEF]
THEN MATCH_MP_TAC (SET_RULE`A==> B\/A`)
THEN MRESA_TAC Hypermap.face_refl[`H`;`x`]
THEN MRESA_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;`SUC i'`];

MRESA_TAC(ARITH_RULE`!j k. j<k==> ~(k=0)`)[`j'`;`k`]
THEN MRESAL_TAC DIVISION[`j+j':num`;`k`][ARITH_RULE`~(SUC n =0)`]
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN THAYTHE_TAC 1[`i'`;`(j+j') MOD k`]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC(51-31)
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC (ARITH_RULE`!a b c. a+b<= c/\ 1<= b==> a< c`)[`complement_index H x i'`;`j'`;`n`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. b=a\/ a<b\/ a= SUC b\/ SUC b<a`)[`CARD (face H x)`;`i'`];


DICH_TAC 1
THEN ASM_REWRITE_TAC[]
THEN ONCE_REWRITE_TAC[ARITH_RULE`a<b<=> SUC a< SUC b`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN ARITH_TAC;

MRESA_TAC Hypermap.lemma_increasing_index[`H`;`x`;`CARD(face H x)`;`i'`]
THEN DICH_TAC 0
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN SYM_DICH_TAC 0
THEN DICH_TAC 1
THEN ARITH_TAC;

DICH_TAC (54-12)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC(ARITH_RULE`!a b. a<b==> SUC a<=b`)[`(j + j') MOD k`;`k`]
THEN MRESA_TAC SUC_LE_PRE[`k`;`(j + j') MOD k`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b==> a=b\/ a<b`)[`(j + j') MOD k`;`PRE k`];

DICH_TAC(55-49)
THEN ASM_REWRITE_TAC[complement_index]
THEN REPEAT STRIP_TAC
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`][complement_index]
THEN DICH_TAC 2
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC complement_cycle[`n`;`H`;`x`][complement_index;]
THEN STRIP_TAC
THEN SYM_DICH_TAC 0
THEN GEXISTS_TAC`0`
THEN REWRITE_TAC[ARITH_RULE`0<=n:num`];

ASM_REWRITE_TAC[complement_index]
THEN STRIP_TAC
THEN GEXISTS_TAC`complement_index H x i'+ (j + j') MOD k`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`][complement_index]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. b< c==> a+b< a+c`)[`complement_index H x i'`;`(j + j') MOD k`;`PRE k`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ARITH_TAC;

MRESAL_TAC Hypermap.lemma_increasing_index[`H`;`x`;`SUC i'`;`CARD(face H x)`][complement_index]
THEN GEXISTS_TAC`complement_index H x i'+ (j + j') MOD k`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC(ARITH_RULE`!a b. a<b==> SUC a<=b`)[`(j + j') MOD k`;`k`]
THEN MRESA_TAC SUC_LE_PRE[`k`;`(j + j') MOD k`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b==>  c+ a<=c+b`)[`(j + j') MOD k`;`PRE k`;`complement_index H x i'`]
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`][complement_index]
THEN SYM_DICH_TAC 0
THEN ARITH_TAC;


STRIP_TAC;

REMOVE_ASSUM_TAC
THEN REPEAT RESA_TAC
THEN MRESA_TAC lemma_via_inverse_face_map[`H`;`x`;`y'`]
THEN MRESA_TAC Hypermap.lemma_via_inverse_node_map[`H`;`y'`;`z'`]
THEN ASM_REWRITE_TAC[in_dart_of_loop;support_of_sequence;IN_ELIM_THM]
THEN REPEAT RESA_TAC 
THEN MRESA_TAC(ARITH_RULE`!i. i=0 \/ 1<=i`)[`j'`];

REWRITE_TAC[POWER;I_DEF;Hypermap.lemma_power_inverse_in_face2];

MRESA_TAC(ARITH_RULE`!i. i=0 \/ 1<=i`)[`j`];

REWRITE_TAC[POWER;I_DEF]
THEN DICH_TAC(40-37)
THEN ASM_REWRITE_TAC[POWER;I_DEF]
THEN STRIP_TAC
THEN THAYTHEL_TAC (41-13)[`PRE(CARD (face H x))`;`j'`][suc_pre_face;Lvducxu.INVERSE_FACE_CYCLE]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MRESA_TAC(ARITH_RULE`!a b. a<b==> SUC a<=b`)[`j'`;`CARD (node H x)`]
THEN MRESA_TAC SUC_LE_PRE[`CARD (node H x)`;`j'`]
THEN MRESA_TAC (ARITH_RULE`!b a:num. a<=b==> b=a\/ a<b`)[`PRE(CARD (node H x))`;`j'`];

MRESA_TAC complement_cycle[`n`;`H`;`x`]
THEN DICH_TAC(45-13)
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN DICH_TAC 0
THEN MRESA_TAC suc_pre_face[`H`;`x`]
THEN POP_ASSUM (fun th-> ONCE_REWRITE_TAC[SYM th])
THEN REWRITE_TAC[complement_index]
THEN ASM_REWRITE_TAC[suc_pre_face;Lvducxu.INVERSE_FACE_CYCLE]
THEN REPEAT STRIP_TAC
THEN DICH_TAC 1
THEN RESA_TAC
THEN DICH_TAC(45-39)
THEN SYM_DICH_TAC 0
THEN RESA_TAC
THEN GEXISTS_TAC`0`
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;

GEXISTS_TAC`complement_index H x (PRE (CARD (face H x))) + j'`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC suc_pre_face[`H`;`x`]
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN POP_ASSUM (fun th-> ONCE_REWRITE_TAC[SYM th])
THEN REWRITE_TAC[complement_index]
THEN ASM_REWRITE_TAC[suc_pre_face;Lvducxu.INVERSE_FACE_CYCLE]
THEN DICH_TAC 0
THEN ARITH_TAC;

GSUBGOAL_THEN`?j1. j= SUC j1`MP_TAC;

GEXISTS_TAC`PRE j`
THEN DICH_TAC 0
THEN SIMP_TAC[Hypermap.LE_SUC_PRE];

STRIP_TAC
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC(41-37)
THEN RESA_TAC
THEN THAYTHE_TAC(42-13)[`j1`;`j'`]
THEN MATCH_MP_TAC (SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`complement_index H x j1 + j'`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN MRESAL_TAC Hypermap.lemma_increasing_index[`H`;`x`;`j`;`CARD(face H x)`][complement_index]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN DICH_TAC 1
THEN ARITH_TAC;


DICH_TAC 0
THEN ASM_REWRITE_TAC[in_dart_of_loop]
THEN MRESA_TAC CARD_NUMSEG_1[`CARD (face H x)`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN GABBREV_TAC`f=(\i. complement H x (complement_index H x i + SUC 0))`
THEN GABBREV_TAC`cf= CARD (face H x)`
THEN GSUBGOAL_THEN `IMAGE f (0.. PRE (cf))={x1 | ?i. i< CARD (face H x) /\ x1=complement H x (complement_index H x i + SUC 0)}`ASSUME_TAC;


ASM_REWRITE_TAC[IMAGE;IN_NUMSEG]
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 1<=a`)[`cf`]
THEN MRESA_TAC PRE_LT_LE[`cf`]
THEN EXPAND_TAC"f"
THEN REWRITE_TAC[ARITH_RULE`0<=a<=> T`];


GSUBGOAL_THEN`(!x y. x IN (0.. PRE (cf)) /\ y IN (0.. PRE (cf)) /\ f x = f y /\ y<= x ==> x = y)`ASSUME_TAC
;


REWRITE_TAC[IN_NUMSEG;ARITH_RULE`0<=a<=> T`]
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 1<=a`)[`cf`]
THEN MRESA_TAC PRE_LT_LE[`cf`]
THEN EXPAND_TAC"f"
THEN REPEAT STRIP_TAC
THEN DICH_TAC 1
THEN DICH_TAC(41-8)
THEN REWRITE_TAC[Hypermap.lemma_node_nondegenerate]
THEN STRIP_TAC 
THEN MRESA_TAC Hypermap.lemma_power_inverse_in_face2[`H`;`x`;`SUC x'`]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`(inverse (face_map H) POWER SUC x') x `]
THEN THAYTHE_ASM_TAC 2[`(inverse (face_map H) POWER SUC x') x`]
THEN MRESA_TAC Hypermap.lemma_power_inverse_in_face2[`H`;`x`;`SUC y'`]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`(inverse (face_map H) POWER SUC y') x `]
THEN THAYTHE_ASM_TAC 2[`(inverse (face_map H) POWER SUC y') x`]
THEN THAYTHEL_ASM_TAC (47-12)[`x'`;`SUC 0`][ARITH_RULE`SUC 0=1/\ 1<=1/\ (1<a<=> 2<=a)`]
THEN THAYTHEL_ASM_TAC (0)[`y'`;`SUC 0`][ARITH_RULE`SUC 0=1/\ 1<=1/\ (1<a<=> 2<=a)`]
THEN REWRITE_TAC[ARITH_RULE`1=SUC 0`;POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Hypermap.inverse_power_function[`dart H`;`node_map H `;`SUC 0`;`inverse (node_map H)
 ((inverse (face_map H) POWER x') (inverse (face_map H) x))`;`(inverse (face_map H) POWER y') (inverse (face_map H) x)`][Hypermap.node_map_and_darts;POWER;I_DEF;o_DEF]
THEN SYM_DICH_TAC 0
THEN REWRITE_TAC[Lvducxu.HYP_MAPS_INVS]
THEN MRESAL_TAC Hypermap.inverse_power_function[`dart H`;`face_map H `;`SUC x'`;`(inverse (face_map H) POWER y') (inverse (face_map H) x)`;`x`][Hypermap.face_map_and_darts;POWER;I_DEF;o_DEF]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Hypermap_and_fan.INVERSE_ADD_EXPONENTS
[`SUC x'`;`SUC y'`;`face_map H`;`dart H`][Hypermap.face_map_and_darts;POWER;I_DEF;o_DEF;ARITH_RULE`SUC A<= SUC B<=> A<=B`]
THEN REMOVE_ASSUM_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[FUN_EQ_THM]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x`]
THEN REWRITE_TAC[ARITH_RULE`SUC A- SUC B= A-B`]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c:num. 3<=a/\ b<a ==> 0<a/\ b-c<a `)[`cf`;`x'`;`y'`]
THEN MRESA_TAC(ARITH_RULE`!b c:num. c<= b ==>  (0=b-c<=> b=c)`)[`x'`;`y':num`]
THEN MRESAL_TAC Hypermap_and_fan.ORBIT_MAP_INJ[`dart H`;`face_map H`;`x`;`0`;`x'-y':num`;`cf`;][Hypermap.face_map_and_darts;POWER;I_DEF;]
THEN MATCH_DICH_TAC 0
THEN EXPAND_TAC "cf"
THEN REWRITE_TAC[face]
THEN DICH_TAC(53-50)
THEN REWRITE_TAC[];


GSUBGOAL_THEN`(!x y. x IN (0.. PRE (cf)) /\ y IN (0.. PRE (cf)) /\ f x = f y  ==> x = y)`ASSUME_TAC
;


REPEAT STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!x y:num. x<=y\/ y<=x`)[`x'`;`y'`];

THAYTHE_TAC (40-36)[`y'`;`x'`]
;

THAYTHE_TAC (40-36)[`x'`;`y'`]
;


MRESAL_TAC CARD_IMAGE_EQ_INJ[`f`;`0..PRE cf`][FINITE_NUMSEG]
THEN GABBREV_TAC`s={x1 | ?i. i < cf /\
                x1 = complement H x (complement_index H x i + SUC 0)}`
THEN GSUBGOAL_THEN`IMAGE (\x. atom H L x) s=
{y | ?x'. y = atom H L x' /\ x' IN support_of_sequence (complement H x) n}`
ASSUME_TAC;


REWRITE_TAC[IMAGE]
THEN EXPAND_TAC"s"
THEN REWRITE_TAC[IN_ELIM_THM;support_of_sequence]
THEN ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC
THEN RESA_TAC;



GEXISTS_TAC`complement H x (complement_index H x i + SUC 0)`
THEN ASM_REWRITE_TAC[]
THEN GSUBGOAL_THEN`complement_index H x i + SUC 0<= SUC n` ASSUME_TAC
;

REWRITE_TAC[ARITH_RULE`a+ SUC 0<= SUC n<=> a<=n`]
THEN MRESA_TAC Hypermap.lemma_increasing_index[`H`;`x`;`i`;`cf`]
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC a<=  n<=> a<n`]
;


MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`complement_index H x i + SUC 0`;`n`]
;

GEXISTS_TAC`0`
THEN ASM_REWRITE_TAC[complement_cycle]
THEN MATCH_MP_TAC complement_cycle
THEN ASM_REWRITE_TAC[complement_cycle]
;




GEXISTS_TAC`(complement_index H x i+ SUC 0)`
THEN ASM_REWRITE_TAC[]
;


MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<=i`)[`i`]
;


DICH_TAC 1
THEN ASM_REWRITE_TAC[]
THEN THAYTHEL_TAC (43-10)[`0`][complement_index;POWER;I_DEF]
THEN STRIP_TAC
THEN GSUBGOAL_THEN`complement_index H x (PRE cf) + SUC 0<= SUC n` ASSUME_TAC
;



REWRITE_TAC[ARITH_RULE`a+ SUC 0<= SUC n<=> a<=n`]
THEN MRESA_TAC Hypermap.lemma_increasing_index[`H`;`x`;`PRE cf`;`cf`]
THEN DICH_TAC 0
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 0<a/\ 1<=a`)[`cf`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th]
THEN REWRITE_TAC[ARITH_RULE`a< SUC b<=> a<=b`]
THEN REWRITE_TAC[th;ARITH_RULE`a<=a:num`])
THEN STRIP_TAC
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC a<=  n<=> a<n`]
;


MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`complement_index H x (PRE cf) + SUC 0`;`n`]
;


GEXISTS_TAC`complement H x 0`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`PRE cf`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC complement_cycle[`n`;`H`;`x`]
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 0<a/\ 1<=a`)[`cf`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th]
THEN REWRITE_TAC[ARITH_RULE`a< SUC b<=> a<=b`]
THEN REWRITE_TAC[th;ARITH_RULE`a<=a:num`])
;

GEXISTS_TAC`complement H x (SUC (complement_index H x (PRE cf) ))`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`]
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 0<a/\ 1<=a`)[`cf`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
THEN STRIP_TAC;

GEXISTS_TAC`PRE cf`
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th]
THEN REWRITE_TAC[ARITH_RULE`a< SUC b<=> a<=b`]
THEN REWRITE_TAC[th;ARITH_RULE`a<=a:num`])
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
THEN THAYTHEL_TAC(50-12)[`PRE cf`;`SUC 0`][]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=>b=a`]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC 0=1/\ 1<=1/\ (1<a<=> 2<=a)`;POWER;I_DEF;o_DEF]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN DICH_TAC (49-8)
THEN REWRITE_TAC[Hypermap.lemma_node_nondegenerate]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[];



MATCH_MP_TAC Hypermap.lemma_identity_atom
THEN REWRITE_TAC[atom;IN_ELIM_THM;is_node_going]
THEN DICH_TAC(50-43)
THEN STRIP_TAC
THEN MRESA_TAC Hypermap.lemma_node_inverse_cycle[`H`;`x`]
THEN THAYTHE_TAC(51-10)[`PRE cf`]
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN DICH_TAC(51-49)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN MRESA_TAC complement_cycle[`n`;`H`;`x`]
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GABBREV_TAC`cn=CARD(node H x)`
THEN GEXISTS_TAC`PRE(PRE cn)`
THEN ASM_REWRITE_TAC[]
THEN GSUBGOAL_THEN`SUC (complement_index H x (PRE cf))+ PRE(PRE cn)= SUC n`
ASSUME_TAC;



MRESA_TAC Hypermap.LE_SUC_PRE[`complement_index H x cf`]
THEN REWRITE_TAC[ARITH_RULE`SUC a+ b= a+ SUC b`]
THEN DICH_TAC (54-48)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th] THEN ASSUME_TAC(th))
THEN REWRITE_TAC[complement_index]
THEN ASM_REWRITE_TAC[ARITH_RULE`a+b=a+c<=> b=c:num`]
THEN MATCH_MP_TAC Hypermap.LE_SUC_PRE
THEN MATCH_MP_TAC SUC_LE_PRE
THEN REWRITE_TAC[ARITH_RULE`SUC 1<=n<=> 2<=n`]
THEN DICH_TAC (54-8)
THEN REWRITE_TAC[Hypermap.lemma_node_nondegenerate]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x`];


MRESA_TAC(ARITH_RULE`!a b c. SUC a+b=SUC c /\ a+ SUC 0<= c==> 1<= b`)[`complement_index H x (PRE cf)`;`PRE (PRE cn)`;`n`] 
THEN MRESA_TAC lemma_samsara_power_add0[`complement H x`;`n`]
THEN THAYTHE_TAC 0[`SUC (complement_index H x (PRE cf))`;`PRE(PRE cn)`]
THEN REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<=i`)[`i'`]
;

ASM_REWRITE_TAC[POWER;I_DEF;o_DEF]
;


GSUBGOAL_THEN`2<= cn` ASSUME_TAC
;


DICH_TAC (58-8)
THEN REWRITE_TAC[Hypermap.lemma_node_nondegenerate]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x`]
;


MRESA_TAC (ARITH_RULE`!a b:num. a<=b ==> a=b\/ a< b`)[`i'`;`PRE(PRE cn)`]
;

MRESA_TAC(ARITH_RULE`!a. 2<=a==> 1<a`)[`cn`]
THEN THAYTHEL_TAC (61-11)[`PRE cf`;`SUC 0`][ARITH_RULE`SUC 0=1/\ 1<=1`]
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC a= a+1`]
THEN ASM_REWRITE_TAC[ARITH_RULE`a+1=SUC a`]
THEN DICH_TAC(61-51)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN DICH_TAC(61-50)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN REWRITE_TAC[ARITH_RULE`1= SUC 0`;POWER;I_DEF;o_DEF]
;

DICH_TAC(61-49)
THEN MRESA_TAC node_node_map_eq[`H`;`x`]
THEN MRESA_TAC Hypermap.lemma_node_inverse_cycle[`H`;`node_map H x`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN MRESA_TAC Hypermap.SUC_PRE_2[`cn`]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN ASM_REWRITE_TAC[Lvducxu.HYP_MAPS_INVS]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN REWRITE_TAC[];


MRESA_TAC(ARITH_RULE`!a b c d. a<b /\ c+b= SUC d ==> c+a<=d`)[`i'`;`PRE(PRE cn)`;`SUC (complement_index H x (PRE cf))`;`n`]
THEN MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN THAYTHE_TAC 0[`SUC (complement_index H x (PRE cf))`;`i'`]
THEN DICH_TAC(62-50)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC A+ B= A+ SUC B`]
THEN MRESA_TAC(ARITH_RULE`!a. 2<=a==> 1<=a`)[`cn`]
THEN MRESA_TAC Hypermap.SUC_PRE_2[`cn`]
THEN MRESA_TAC(ARITH_RULE`!a b. a<b==> SUC(SUC a)< SUC (SUC(b))`)[`i'`;`PRE(PRE cn)`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a< b`)[`SUC i'`;`cn`]
THEN THAYTHEL_TAC (66-11)[`PRE cf`;`SUC i'`][ARITH_RULE`1<= SUC a`]
THEN REWRITE_TAC[POWER;I_DEF;o_DEF];

MRESA_TAC lemma_complement_index_exists[`i`;`H`;`x`]
THEN GEXISTS_TAC`complement H x (complement_index H x i' + SUC 0)`
THEN STRIP_TAC;


GEXISTS_TAC`i'`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ a=b\/ b<a`)[`cf`;`i'`];


MRESA_TAC Hypermap.lemma_increasing_index[`H`;`x`;`cf`;`i'`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC (ARITH_RULE`!a b c i. SUC a<b /\ i=b+c/\1<=c==> a<  i`)[`n`;`complement_index H x i'`;`j`;`i`]
THEN DICH_TAC (50-42)
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 0
THEN ARITH_TAC;




DICH_TAC(48-45)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`(complement_index H x (CARD (face H x)))`]
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c. a= SUC b +c/\ 1<=c==> b<a`)[`i`;`n`;`j`]
THEN DICH_TAC(48-42)
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 0
THEN ARITH_TAC;


ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN MATCH_MP_TAC Hypermap.lemma_identity_atom
THEN REWRITE_TAC[atom;IN_ELIM_THM;is_node_going]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`PRE j`
THEN DICH_TAC (47-10)
THEN MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN DICH_TAC(47-41)
THEN RESA_TAC
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`j`]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+ SUC b<=c==> (a+ SUC 0)+b<=c`)[`complement_index H x i'`;`PRE j`;`n`]
THEN THAYTHE_ASM_TAC 3[`complement_index H x i'+ SUC 0`;`PRE j`]
THEN REPEAT STRIP_TAC
THEN REWRITE_TAC[ARITH_RULE`(a+ SUC 0)+b= a+ SUC b`]
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC(ARITH_RULE`!a b c d. a+ SUC b<=c /\ d<=b ==> (a+ SUC 0)+d<=c`)[`complement_index H x i'`;`PRE j`;`n`;`i''`]
THEN THAYTHE_ASM_TAC 3[`complement_index H x i'+ SUC 0`;`i''`]
THEN MRESA_TAC(ARITH_RULE`!a b. a< b/\ 1<=a==> 1<b`)[`j`;`CARD (node H ((inverse (face_map H) POWER SUC i') x))`]
THEN THAYTHEL_ASM_TAC (55-12)[`i'`;`SUC 0`][ARITH_RULE`SUC 0=1/\ 1<=1`]
THEN REWRITE_TAC[ARITH_RULE`(a+1)+b=a+ SUC b`]
THEN MRESA_TAC(ARITH_RULE`!a b c. a<= b /\ SUC b< c==> SUC a< c `)[`i''`;`PRE j`;`CARD (node H ((inverse (face_map H) POWER SUC i') x))`]
THEN THAYTHEL_ASM_TAC 1[`i'`;`SUC i''`][ARITH_RULE`1<= SUC a/\ 1<=1`]
THEN ASM_REWRITE_TAC[ARITH_RULE`1=SUC 0`;POWER;I_DEF;o_DEF];



GABBREV_TAC`g=(\x. atom H L x)`
THEN GSUBGOAL_THEN`!x y. x IN s /\ y IN s /\ g x = g y ==> x = y`ASSUME_TAC
;



EXPAND_TAC"s"
THEN EXPAND_TAC"g"
THEN ASM_REWRITE_TAC[IN_ELIM_THM]
THEN REPEAT RESA_TAC
;


GSUBGOAL_THEN`2<=CARD (node H ((inverse (face_map H) POWER SUC i) x))`ASSUME_TAC
;




DICH_TAC (47-8)
THEN REWRITE_TAC[Hypermap.lemma_node_nondegenerate]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN MATCH_MP_TAC Rnsyjxm.in_face_imp_in_dart
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[]
THEN MATCH_MP_TAC Hypermap.lemma_power_inverse_in_face
THEN ASM_REWRITE_TAC[Hypermap.face_refl]
;



GSUBGOAL_THEN`2<=CARD (node H ((inverse (face_map H) POWER SUC i') x))`ASSUME_TAC
;




DICH_TAC (48-8)
THEN REWRITE_TAC[Hypermap.lemma_node_nondegenerate]
THEN STRIP_TAC
THEN MATCH_DICH_TAC 0
THEN MATCH_MP_TAC Rnsyjxm.in_face_imp_in_dart
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[]
THEN MATCH_MP_TAC Hypermap.lemma_power_inverse_in_face
THEN ASM_REWRITE_TAC[Hypermap.face_refl]
;



DICH_TAC 2
THEN RESA_TAC
THEN MRESA_TAC atom_eq_in[`x'`;`H`;`L`;`y'`]
THEN DICH_TAC 0
THEN REWRITE_TAC[atom;IN_ELIM_THM;is_node_going]
THEN RESA_TAC
;

THAYTHEL_ASM_TAC 0[`k`][ARITH_RULE`a<=a:num`]
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[]
THEN THAYTHEL_ASM_TAC (51-13)[`i`;`SUC 0`][ARITH_RULE`1<= SUC 0 /\(SUC 0< a<=> 2<=a)`]
THEN THAYTHEL_ASM_TAC (0)[`i'`;`SUC 0`][ARITH_RULE`1<= SUC 0 /\(SUC 0< a<=> 2<=a)`]
THEN REWRITE_TAC[POWER;I_DEF;o_DEF]
THEN GABBREV_TAC`x1=inverse (face_map H) x`
THEN STRIP_TAC
THEN MRESA_TAC Hypermap.node_map_and_darts[`H`]
THEN MRESA_TAC PERMUTES_INVERSE_EQ[`node_map H`;`dart H`;]
THEN THAYTHE_TAC 0[`(inverse (node_map H) POWER k)
      (inverse (node_map H) ((inverse (face_map H) POWER i') x1))`;`(inverse (face_map H) POWER i) x1`]
THEN DICH_TAC(58-5)
THEN REWRITE_TAC[simple_hypermap]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`(inverse (face_map H) POWER i') x1`]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;`SUC 0`][Hypermap.face_refl;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x1`;`i'`][Hypermap.face_refl;POWER;o_DEF;I_DEF]
THEN DICH_TAC 2
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`(inverse (face_map H) POWER i') x1`]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x1`;`i`][Hypermap.face_refl;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`(inverse (face_map H) POWER i') x1`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_node[`H`;`(inverse (face_map H) POWER i') x1`;`(inverse (face_map H) POWER i') x1`;`SUC k`][Hypermap.node_refl]
THEN MRESAL_TAC Hypermap.lemma_in_node1[`H`;`(inverse (face_map H) POWER i') x1`;`(inverse (node_map H) POWER SUC k) ((inverse (face_map H) POWER i') x1)`][POWER;o_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A/\ x IN B==> x IN A INTER B`)[`(inverse (face_map H) POWER i) x1`;`node H ((inverse (face_map H) POWER i') x1)`;`face H x`][SET_RULE`a IN {b}<=> a=b`]
THEN DICH_TAC (65-54)
THEN RESA_TAC
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(RAND_CONV o ONCE_DEPTH_CONV)[th])
THEN REWRITE_TAC[];




THAYTHEL_ASM_TAC 0[`k`][ARITH_RULE`a<=a:num`]
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[]
THEN THAYTHEL_ASM_TAC (51-13)[`i`;`SUC 0`][ARITH_RULE`1<= SUC 0 /\(SUC 0< a<=> 2<=a)`]
THEN THAYTHEL_ASM_TAC (0)[`i'`;`SUC 0`][ARITH_RULE`1<= SUC 0 /\(SUC 0< a<=> 2<=a)`]
THEN REWRITE_TAC[POWER;I_DEF;o_DEF]
THEN GABBREV_TAC`x1=inverse (face_map H) x`
THEN STRIP_TAC
THEN MRESA_TAC Hypermap.node_map_and_darts[`H`]
THEN MRESA_TAC PERMUTES_INVERSE_EQ[`node_map H`;`dart H`;]
THEN THAYTHE_TAC 0[`(inverse (node_map H) POWER k)
      (inverse (node_map H) ((inverse (face_map H) POWER i) x1))`;`(inverse (face_map H) POWER i') x1`]
THEN DICH_TAC(58-5)
THEN REWRITE_TAC[simple_hypermap]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`(inverse (face_map H) POWER i) x1`]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;`SUC 0`][Hypermap.face_refl;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x1`;`i`][Hypermap.face_refl;POWER;o_DEF;I_DEF]
THEN DICH_TAC 2
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`(inverse (face_map H) POWER i) x1`]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x1`;`i'`][Hypermap.face_refl;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`(inverse (face_map H) POWER i) x1`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_node[`H`;`(inverse (face_map H) POWER i) x1`;`(inverse (face_map H) POWER i) x1`;`SUC k`][Hypermap.node_refl]
THEN MRESAL_TAC Hypermap.lemma_in_node1[`H`;`(inverse (face_map H) POWER i) x1`;`(inverse (node_map H) POWER SUC k) ((inverse (face_map H) POWER i) x1)`][POWER;o_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A/\ x IN B==> x IN A INTER B`)[`(inverse (face_map H) POWER i') x1`;`node H ((inverse (face_map H) POWER i) x1)`;`face H x`][SET_RULE`a IN {b}<=> a=b`]
THEN DICH_TAC (65-54)
THEN RESA_TAC
THEN POP_ASSUM(fun th-> GEN_REWRITE_TAC(RAND_CONV o ONCE_DEPTH_CONV)[th])
THEN REWRITE_TAC[];


DICH_TAC(43-36)
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESAL_TAC FINITE_IMAGE[`f`;`0..(PRE cf)`][FINITE_NUMSEG]
THEN MRESAL_TAC CARD_IMAGE_EQ_INJ[`g`;`s`][FINITE_NUMSEG;CARD_NUMSEG_1]
THEN MRESA_TAC CARD_NUMSEG[`0`;`PRE cf`]
THEN REWRITE_TAC[ARITH_RULE`(PRE cf + 1) - 0= SUC(PRE cf)`]
THEN MRESA_TAC(ARITH_RULE`!a. 3<=a==> 1<=a`)[`cf`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cf`]
;

REPEAT STRIP_TAC
;

REWRITE_TAC[SET_RULE`A={}<=> ~(?a. a IN A)`;INTER;IN_ELIM_THM; support_of_sequence;Hypermap.loop_of_face_rep]
THEN RESA_TAC
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[Hypermap.loop_of_face_rep]
THEN STRIP_TAC
THEN MRESA_TAC atom_refl[`H`;`L`;`complement H x i`]
THEN DICH_TAC 0
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`x1`]
THEN ASM_REWRITE_TAC[atom;IN_ELIM_THM;is_node_going;Hypermap.loop_of_face_rep;Hypermap.power_res_face_map]
THEN DICH_TAC (55-49)
THEN ASM_REWRITE_TAC[]
THEN REPEAT STRIP_TAC;


GSUBGOAL_THEN`complement H x i IN face H x1`ASSUME_TAC
;


ASM_REWRITE_TAC[Hypermap.lemma_in_face]
;

GSUBGOAL_THEN`complement H x i IN support_of_sequence (complement H x) n` ASSUME_TAC
;


ASM_REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[]
;

MRESA_TAC(SET_RULE`!a A B. a IN A/\ a IN B==> a IN A INTER B`)[`complement H x i`;`support_of_sequence (complement H x) n`;`face H x1`]
THEN DICH_TAC 0
THEN SET_TAC[];

MRESA_TAC Hypermap.face_map_restrict[`H`;`x`]
THEN MRESA_TAC Hypermap.inverse_power_function[`face H x1`;`res (face_map H) (face H x1)`;`k`;`complement H x i`;`x1`]
THEN DICH_TAC 0
THEN DICH_TAC(58-56)
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN SYM_DICH_TAC 0
THEN SIMP_TAC[lemma_inverse_res_power]
THEN STRIP_TAC;





GSUBGOAL_THEN`complement H x i IN face H x1`ASSUME_TAC
;


ASM_REWRITE_TAC[Hypermap.lemma_power_inverse_in_face2;]
;



GSUBGOAL_THEN`complement H x i IN support_of_sequence (complement H x) n` ASSUME_TAC
;


ASM_REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[]
;



MRESA_TAC(SET_RULE`!a A B. a IN A/\ a IN B==> a IN A INTER B`)[`complement H x i`;`support_of_sequence (complement H x) n`;`face H x1`]
THEN DICH_TAC 0
THEN SET_TAC[];



(*EXSISTS Y FROM L*)

GSUBGOAL_THEN`atom H L x1 IN IMAGE g s`ASSUME_TAC
;


ASM_REWRITE_TAC[IN_ELIM_THM]
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[];


DICH_TAC 0
THEN EXPAND_TAC"g"
THEN DICH_TAC(50-39)
THEN STRIP_TAC
THEN EXPAND_TAC"s"
THEN REWRITE_TAC[IMAGE;IN_ELIM_THM]
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`x'`
THEN ONCE_REWRITE_TAC[Hypermap.lemma_inverse_on_loop]
THEN ASM_REWRITE_TAC[atom_refl]
THEN GSUBGOAL_THEN`inverse (samsara (complement H x) n)
 (complement H x (complement_index H x i + SUC 0)) =
complement H x (complement_index H x i)`
ASSUME_TAC
;


DICH_TAC(53-10)
THEN MRESA_TAC Hypermap.lemma_samsara_permute[`complement H x`;`n`]
THEN MRESA_TAC PERMUTES_INVERSE_EQ[`samsara (complement H x) n`;`support_of_sequence (complement H x) n`]
THEN GSUBGOAL_THEN`complement_index H x i + SUC 0<= SUC n`ASSUME_TAC;



MATCH_MP_TAC(ARITH_RULE`a<=b==> a+ SUC 0<= SUC b`)
THEN MRESA_TAC Hypermap.lemma_increasing_index[`H`;`x`;`i`;`cf`]
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN DICH_TAC 0
THEN ARITH_TAC;


MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`complement_index H x i + SUC 0`;`n`]
;

MRESA_TAC lemma_samsara_power_add0[`complement H x`;`n`]
THEN THAYTHEL_TAC 0[`complement_index H x i`;`SUC 0`][ARITH_RULE`1<= SUC 0`;POWER;I_DEF;o_DEF]
THEN MRESA_TAC complement_cycle[`n`;`H`;`x`];


MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN THAYTHEL_TAC 0[`complement_index H x i`;`SUC 0`][ARITH_RULE`1<= SUC 0`;POWER;I_DEF;o_DEF]
;

POP_ASSUM(fun th-> REWRITE_TAC[th])
THEN DICH_TAC(53-10)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`;Lvducxu.HYP_MAPS_INVS]
THEN STRIP_TAC
;

STRIP_TAC
;


MATCH_MP_TAC Hypermap.lemma_power_inverse_in_face
THEN REWRITE_TAC [Hypermap.face_refl]
;

ASM_REWRITE_TAC[atom;IN_ELIM_THM;is_node_going]
THEN THAYTHE_TAC(53-10)[`i`]
THEN SYM_DICH_TAC 0
THEN GABBREV_TAC`y1=(inverse (face_map H) POWER SUC i) x`
THEN GABBREV_TAC`cn= CARD (node H y1)`
THEN MRESAL_TAC Hypermap.lemma_power_inverse_in_face[`H`;`x`;`x`;`SUC i`][Hypermap.face_refl]
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`y1`]
THEN MRESA_TAC is_restricted_card_node[`SUC i`;`x`;`H`;`y1`]
THEN MRESA_TAC complement_index_bound[`y1`;`cf`;`H`;`x`;`i`;`cn`;`n`]
THEN MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<= b`)[`SUC (complement_index H x i) + PRE (PRE cn)`;`n`];


MRESA_TAC(ARITH_RULE`!a. a=0\/ 1<=a`)[`PRE (PRE cn)`]
;

DICH_TAC 1
THEN ASM_REWRITE_TAC[ARITH_RULE`a+0=a/\ (SUC a= SUC b<=> a=b)`]
THEN RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`0`
THEN REWRITE_TAC[POWER;I_DEF]
THEN THAYTHEL_TAC (60-52)[`SUC i`][complement_index]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC SUC_LE_PRE[`cn`;`1`][ARITH_RULE`SUC 1=2`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`PRE cn`]
THEN SYM_DICH_TAC 0
THEN REWRITE_TAC[ARITH_RULE`a+ SUC 0 = SUC a/\ (a<=0<=> a=0)`]
THEN REPEAT RESA_TAC
THEN REWRITE_TAC[POWER;I_DEF]
;


MRESA_TAC lemma_samsara_power_add0[`complement H x`;`n`]
THEN THAYTHE_TAC 0[`SUC (complement_index H x i)`;`PRE(PRE cn)`]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`PRE(PRE cn)`
THEN ASM_REWRITE_TAC[]
THEN GSUBGOAL_THEN`complement_index H x i + PRE cn = SUC (complement_index H x i) + PRE (PRE cn)` ASSUME_TAC
;

REWRITE_TAC[ARITH_RULE`a+b= SUC a+ c<=> SUC c=b`]
THEN MRESAL_TAC SUC_LE_PRE[`cn`;`1`][ARITH_RULE`SUC 1=2`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`PRE cn`]
;

THAYTHEL_TAC(62-52)[`SUC i`][complement_index]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC complement_cycle[`n`;`H`;`x`];


REPEAT RESA_TAC
;


MRESA_TAC(ARITH_RULE`!a b:num. a<=b==> a=b\/ a<b`)[`i'`;`PRE(PRE cn)`]
;


MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN THAYTHE_TAC (67-11)[`i`;`SUC(PRE(PRE cn))`]
THEN DICH_TAC 0
THEN REWRITE_TAC[POWER;o_DEF]
THEN MRESAL_TAC SUC_LE_PRE[`cn`;`1`][ARITH_RULE`SUC 1=2`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`PRE cn`]
THEN MRESA_TAC(ARITH_RULE`!a. 2<= a==> 1<=a`)[`cn`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`cn`]
THEN ASM_REWRITE_TAC[ARITH_RULE`a<b <=> SUC a<=b`;ARITH_RULE`cn<=cn:num`];

MRESA_TAC(ARITH_RULE`!a b c n. a<b /\ c+b= SUC n==> c+a<=n`)[`i'`;`PRE(PRE cn)`;`SUC (complement_index H x i)`;`n`]
THEN MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 1<=i`)[`i'`];

ASM_REWRITE_TAC[POWER;I_DEF;o_DEF]
;

THAYTHE_TAC 1[`SUC (complement_index H x i)`;`i'`]
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN REWRITE_TAC[ARITH_RULE`SUC A+ B= A+ SUC B`]
THEN MRESA_TAC(ARITH_RULE`!a. 2<= a==> 1<=a`)[`cn`]
THEN MRESAL_TAC SUC_LE_PRE[`cn`;`1`][ARITH_RULE`SUC 1=2`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`PRE cn`]
THEN MRESA_TAC (ARITH_RULE`!a b. a<b==> SUC a<= SUC b`)[`i'`;`PRE(PRE cn)`]
THEN MRESA_TAC PRE_LT_LE[`cn`]
THEN THAYTHE_TAC 0[`SUC i'`]
THEN THAYTHEL_TAC(75-11)[`i`;`SUC i'`][ARITH_RULE`1<= SUC a`;POWER;o_DEF]
;

MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`PRE(PRE cn)`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN THAYTHE_TAC 0[`SUC (complement_index H x i)`;`PRE (PRE cn)`]
THEN REWRITE_TAC[ARITH_RULE`SUC a+b= a + SUC b`]
THEN MRESA_TAC(ARITH_RULE`!a. 2<= a==> 1<=a`)[`cn`]
THEN MRESAL_TAC SUC_LE_PRE[`cn`;`1`][ARITH_RULE`SUC 1=2`]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`PRE cn`]
THEN GSUBGOAL_THEN`complement_index H x i + PRE cn= complement_index H x (SUC i)`ASSUME_TAC;


ASM_REWRITE_TAC[complement_index];

ASM_REWRITE_TAC[]
;


REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a<= b/\ c+b<=d ==> c+a<=d`)[`i'`;`PRE(PRE cn)`;`SUC (complement_index H x i)`;`n`]
THEN MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN THAYTHE_TAC 0[`SUC (complement_index H x i)`;`i'`]
THEN REWRITE_TAC[ARITH_RULE`SUC a+b= a+ SUC b`]
THEN MRESA_TAC (ARITH_RULE`!a b. a<=b==> SUC a<= SUC b`)[`i'`;`PRE(PRE cn)`]
THEN MRESA_TAC PRE_LT_LE[`cn`]
THEN THAYTHE_TAC 0[`SUC i'`]
THEN THAYTHEL_ASM_TAC(69-11)[`i`;`SUC i'`][ARITH_RULE`1<= SUC i`]
THEN MRESA_TAC Hypermap.lemma_complement_path[`H`;`x`]
THEN ASM_REWRITE_TAC[POWER;o_DEF];


(* IN FACE *)

MRESA_TAC lemma_via_inverse_face_map[`H`;`x`;`x1`]
THEN MRESA_TAC(ARITH_RULE`!j. j=0\/ 1<=j`)[`j`];


REWRITE_TAC[POWER;I_DEF;o_DEF]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`;]
THEN THAYTHE_TAC(54-11)[`PRE cf`]
THEN GEXISTS_TAC`inverse (node_map H) x`
THEN ASM_REWRITE_TAC[]
THEN ONCE_REWRITE_TAC[Hypermap.lemma_inverse_on_loop]
THEN ASM_REWRITE_TAC[atom_refl;Lvducxu.HYP_MAPS_INVS]
THEN SYM_DICH_TAC 0;



GSUBGOAL_THEN`complement_index H x (PRE cf) + SUC 0<= SUC n`ASSUME_TAC;



MATCH_MP_TAC(ARITH_RULE`a<=b==> a+ SUC 0<= SUC b`)
THEN MRESA_TAC PRE_LT_LE[`cf`]
THEN THAYTHEL_TAC 0[`PRE cf`][ARITH_RULE`PRE cf <= PRE cf`]
THEN MRESA_TAC Hypermap.lemma_increasing_index[`H`;`x`;`PRE cf`;`cf`]
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN DICH_TAC 0
THEN ARITH_TAC;


GSUBGOAL_THEN`inverse (samsara (complement H x) n)
 (complement H x (complement_index H x (PRE cf) + SUC 0)) =
complement H x (complement_index H x (PRE cf))`
ASSUME_TAC
;


DICH_TAC(54-10)
THEN MRESA_TAC Hypermap.lemma_samsara_permute[`complement H x`;`n`]
THEN MRESA_TAC PERMUTES_INVERSE_EQ[`samsara (complement H x) n`;`support_of_sequence (complement H x) n`]
THEN MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`complement_index H x (PRE cf) + SUC 0`;`n`]
;

MRESA_TAC lemma_samsara_power_add0[`complement H x`;`n`]
THEN THAYTHEL_TAC 0[`complement_index H x (PRE cf)`;`SUC 0`][ARITH_RULE`1<= SUC 0`;POWER;I_DEF;o_DEF]
THEN MRESA_TAC complement_cycle[`n`;`H`;`x`];


MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN THAYTHEL_TAC 0[`complement_index H x (PRE cf)`;`SUC 0`][ARITH_RULE`1<= SUC 0`;POWER;I_DEF;o_DEF]
;

DICH_TAC 0
THEN REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`]
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[th])
THEN DICH_TAC(54-10)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`SUC(complement_index H x (PRE cf))`;`n`]
;

MRESA_TAC complement_cycle[`n`;`H`;`x`]
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN STRIP_TAC
THEN GEXISTS_TAC`0`
THEN ASM_REWRITE_TAC[];



STRIP_TAC
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN GEXISTS_TAC`SUC (complement_index H x (PRE cf))`
THEN ASM_REWRITE_TAC[];



REWRITE_TAC[POWER;I_DEF;o_DEF]
THEN MRESA_TAC Lvducxu.INVERSE_FACE_CYCLE[`x`;`H`;]
THEN MRESA_TAC Hypermap.LE_SUC_PRE[`j`]
THEN THAYTHE_TAC(55-11)[`PRE j`]
THEN GEXISTS_TAC`complement H x (SUC (complement_index H x (PRE j)))`
THEN ASM_REWRITE_TAC[]
THEN ONCE_REWRITE_TAC[Hypermap.lemma_inverse_on_loop]
THEN ASM_REWRITE_TAC[atom_refl;Lvducxu.HYP_MAPS_INVS]
THEN SYM_DICH_TAC 0;


 GSUBGOAL_THEN`complement_index H x (PRE j) + SUC 0<= SUC n`ASSUME_TAC;



MATCH_MP_TAC(ARITH_RULE`a<=b==> a+ SUC 0<= SUC b`)
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`j`;`cf`]
THEN MRESAL_TAC Hypermap.lemma_increasing_index[`H`;`x`;`PRE j`;`cf`][ARITH_RULE`a< b<=> SUC a<=b`]
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN DICH_TAC 0
THEN ARITH_TAC;





GSUBGOAL_THEN`inverse (samsara (complement H x) n)
 (complement H x (complement_index H x (PRE j) + SUC 0)) =
complement H x (complement_index H x (PRE j))`
ASSUME_TAC
;


DICH_TAC(55-10)
THEN MRESA_TAC Hypermap.lemma_samsara_permute[`complement H x`;`n`]
THEN MRESA_TAC PERMUTES_INVERSE_EQ[`samsara (complement H x) n`;`support_of_sequence (complement H x) n`]
THEN MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`complement_index H x (PRE j) + SUC 0`;`n`]
;

MRESA_TAC lemma_samsara_power_add0[`complement H x`;`n`]
THEN THAYTHEL_TAC 0[`complement_index H x (PRE j)`;`SUC 0`][ARITH_RULE`1<= SUC 0`;POWER;I_DEF;o_DEF]
THEN MRESA_TAC complement_cycle[`n`;`H`;`x`];


MRESA_TAC lemma_samsara_power_add[`complement H x`;`n`]
THEN THAYTHEL_TAC 0[`complement_index H x (PRE j)`;`SUC 0`][ARITH_RULE`1<= SUC 0`;POWER;I_DEF;o_DEF]
;

DICH_TAC 0
THEN REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`]
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[th])
THEN DICH_TAC(55-10)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`]THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[ARITH_RULE`a+ SUC 0=SUC a`]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. a<= SUC b==> a= SUC b\/ a<=b`)[`SUC(complement_index H x (PRE j))`;`n`]
;

MRESA_TAC complement_cycle[`n`;`H`;`x`]
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN STRIP_TAC
THEN GEXISTS_TAC`0`
THEN ASM_REWRITE_TAC[];



STRIP_TAC
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN GEXISTS_TAC`SUC (complement_index H x (PRE j))`
THEN ASM_REWRITE_TAC[];


MRESA_TAC lemma_via_inverse_face_map[`H`;`x`;`x1`]
THEN REWRITE_TAC[support_of_sequence;IN_ELIM_THM]
THEN GEXISTS_TAC`complement_index H x j`
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"n"
THEN MATCH_MP_TAC SUC_LE_PRE
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC a<=b<=> a<b`]
THEN MATCH_MP_TAC Hypermap.lemma_increasing_index THEN
ASM_REWRITE_TAC [];
]);;



let AUQTZYZ_concl = `!H (x:A) L1. is_restricted H /\ (x IN dart H)  /\ 
  (L1 = loop_of_face H x) ==>
  (?L2. is_normal H {L1,L2}  /\ 
    (path_of_loop L2 (complement H x 0) = complement H x) /\ 
     dih2k (quotient H {L1,L2}) (CARD (face H x)))`;;



let AUQTZYZ= prove_by_refinement(
AUQTZYZ_concl,
[

REPEAT RESA_TAC
THEN MRESAL_TAC EXISTS_PATH_COMPLEMENT[`H`;`x`][atoms_of_loop_rep]
THEN GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]
THEN GSUBGOAL_THEN`is_normal H {loop_of_face H x, L}` ASSUME_TAC;


REWRITE_TAC[is_normal]
THEN REPEAT RESA_TAC
;


POP_ASSUM MP_TAC
THEN REWRITE_TAC[SET_RULE`a IN {b,c}<=> a=b\/ a=c`]
THEN RESA_TAC;


REWRITE_TAC[Hypermap.loop_of_face_lemma]
;


POP_ASSUM MP_TAC
THEN REWRITE_TAC[SET_RULE`a IN {b,c}<=> a=b\/ a=c`]
THEN RESA_TAC;


GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[Hypermap.in_dart_of_loop]
THEN REWRITE_TAC[Hypermap.loop_of_face_rep;Hypermap.face_refl]
;


GEXISTS_TAC`complement H x 0`
THEN ASM_REWRITE_TAC[]
THEN ASM_REWRITE_TAC[complement;complement0;node_contour;POWER;I_DEF;Lunar_deform.IN_DART_PRESERVED]
;



POP_ASSUM MP_TAC
THEN REWRITE_TAC[SET_RULE`a IN {b,c}<=> a=b\/ a=c`]
THEN RESA_TAC;


REPLICATE_TAC 5(DICH_TAC 1
THEN STRIP_TAC
THEN REMOVE_ASSUM_TAC)
THEN GEXISTS_TAC`x`
THEN GEXISTS_TAC`face_map H x`
THEN ASM_REWRITE_TAC[Hypermap.in_dart_of_loop]
THEN REWRITE_TAC[Hypermap.loop_of_face_rep;Hypermap.face_refl]
THEN MRESAL_TAC Hypermap.lemma_in_face[`H`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MATCH_MP_TAC Hypermap.lemma_different_nodes
THEN DICH_TAC 13
THEN REWRITE_TAC[is_restricted;simple_hypermap]
THEN STRIP_TAC
THEN THAYTHEL_TAC(15-11)[`face_map H x`][Lunar_deform.IN_DART_PRESERVED;Rnsyjxm.face_face_map_eq]
THEN MRESA_TAC Hypermap.face_refl[`H`;`x`]
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A /\ x IN B==> x IN A INTER B`)[`x`;`node H (face_map H x)`;`face H x`][SET_RULE`a IN {b}<=> a=b`]
THEN POP_ASSUM(fun th-> MP_TAC(SYM th))
THEN REWRITE_TAC[]
THEN MATCH_MP_TAC CARD_FACE_LE3
THEN MATCH_DICH_TAC(17-14)
THEN ASM_REWRITE_TAC[];


GEXISTS_TAC`y`
THEN GEXISTS_TAC`z`
THEN ASM_REWRITE_TAC[]
;


DICH_TAC 2
THEN DICH_TAC 2
THEN REWRITE_TAC[SET_RULE`a IN {b,c}<=> a=b\/ a=c`]
THEN RESA_TAC
THEN RESA_TAC
THEN DICH_TAC 2
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN REPEAT STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!x A B. x IN A /\ x IN B==> x IN A INTER B`)[`x'`;`dart_of_loop L`;`face H x`][SET_RULE`a IN {b}<=> a=b`;SET_RULE`~(a IN {})`]
;




DICH_TAC 1
THEN DICH_TAC 1
THEN REWRITE_TAC[SET_RULE`a IN {b,c}<=> a=b\/ a=c`]
THEN RESA_TAC
;

ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN STRIP_TAC
THEN THAYTHEL_TAC (19-11)[`x'`;`y'`][in_dart_of_loop];

GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]
;


GEXISTS_TAC`loop_of_face H x`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
;


STRIP_TAC
THEN THAYTHE_TAC (19-10)[`x'`;`y'`]
;




GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]
;

GEXISTS_TAC`loop_of_face H x`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
;


ASM_REWRITE_TAC[Localization.dih2k]
THEN GABBREV_TAC`NF={loop_of_face H x, L}`
THEN MRESA_TAC Hypermap.lemma_quotient[`H`;`NF`]
THEN GSUBGOAL_THEN`(atoms_of_family H NF) = {y | ?x. y= atom H L x /\  in_dart_of_loop x L} UNION {y | ?x1. y=atom H (loop_of_face H x) x1 /\  in_dart_of_loop x1 (loop_of_face H x)}`
ASSUME_TAC;


REWRITE_TAC[Hypermap.atoms_of_family;]
THEN ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IN_ELIM_THM;UNION]
THEN GEN_TAC
THEN EQ_TAC;

EXPAND_TAC"NF"
THEN REWRITE_TAC[SET_RULE`a IN {b,c}<=> a=b\/ a=c`]
THEN REPEAT RESA_TAC
;

MATCH_MP_TAC (SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`x''`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 1
THEN RESA_TAC
;


MATCH_MP_TAC (SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x''`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 1
THEN RESA_TAC
;

RESA_TAC;


GEXISTS_TAC`L`
THEN GEXISTS_TAC`x''`
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];

GEXISTS_TAC`loop_of_face H x`
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];


MRESA_TAC FINITE_ATOM_LOOP[`H`;`L`]
THEN MRESA_TAC FINITE_ATOM_LOOP[`H`;`loop_of_face H x`]
THEN MRESA_TAC card_atom_loop_of_face[`H`;`x`]
THEN 
MRESAL_TAC Ysskqoy.CARD_UNION_EQ[`{y | ?x. y = atom H L x /\ in_dart_of_loop x L}`;`{y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)}`;`atoms_of_family H NF`]
[FINITE_UNION;ARITH_RULE`a+a=2*a`]
THEN STRIP_TAC;



GEN_TAC
THEN GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[UNION;]
THEN REWRITE_TAC[IN_ELIM_THM]
THEN RESA_TAC
;


MRESA_TAC(SET_RULE`! a b L. {a,b}=L==> a IN L /\ b IN L`)[`loop_of_face H x`;`L`;`NF`]
THEN MRESA_TAC Hypermap.lemmaQF[`H`;`NF`;`L`;`x''`]
THEN REWRITE_TAC[atoms_of_loop_rep;LET_DEF;LET_END_DEF]
THEN MATCH_MP_TAC(SET_RULE`A=B==> C UNION A= C UNION B`)
THEN REWRITE_TAC[IMAGE;IN_ELIM_THM]
THEN ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IMAGE;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC;


RESA_TAC
;




GSUBGOAL_THEN`?x. in_dart_of_loop x L/\ x1= node_map H (tail_of_atom H NF x)`ASSUME_TAC
;


DICH_TAC 0
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN STRIP_TAC
THEN THAYTHE_TAC (34-15)[`x1`]
THEN GEXISTS_TAC`inverse (node_map H) x1`
THEN ASM_REWRITE_TAC[]
THEN MATCH_MP_TAC(SET_RULE`a=b==> f b= f a`)
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`L`;`inverse (node_map H) x1`;`y'`][in_dart_of_loop]
THEN DICH_TAC (37-34)
THEN SET_TAC[];


DICH_TAC 0
THEN STRIP_TAC
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESA_TAC Hypermap.unique_n_quotient[`H`;`NF`;`L`;`loop_of_face H x`;`x''''`]
THEN GEXISTS_TAC`atom H L x''''`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`x''''`
THEN ASM_REWRITE_TAC[]
;



RESA_TAC
;

THAYTHE_TAC(35-14)[`x'''''`]
THEN MRESA_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`L`;`x'''''`;`y'`]
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th] THEN ASSUME_TAC (SYM(th)))
THEN STRIP_TAC
THEN GEXISTS_TAC`node_map H y'`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN MRESA_TAC Hypermap.unique_n_quotient[`H`;`NF`;`L`;`loop_of_face H x`;`x'''''`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
;




MRESA_TAC(SET_RULE`! a b L. {a,b}=L==> a IN L /\ b IN L`)[`loop_of_face H x`;`L`;`NF`]
THEN MRESA_TAC Hypermap.lemmaQF[`H`;`NF`;`loop_of_face H x`;`x1`]
THEN REWRITE_TAC[atoms_of_loop_rep;LET_DEF;LET_END_DEF]
THEN MATCH_MP_TAC(SET_RULE`A=B==> A UNION C= C UNION B`)
THEN REWRITE_TAC[IMAGE;IN_ELIM_THM]
THEN ONCE_REWRITE_TAC[EXTENSION]
THEN REWRITE_TAC[IMAGE;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC;



RESA_TAC
;


THAYTHE_TAC (34-14)[`x'''`]
THEN GEXISTS_TAC`atom H (loop_of_face H x)(node_map H y')`
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC;


GEXISTS_TAC`node_map H y'`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
;


MRESA_TAC lemma_atom_tail[`H`;`x`;`node_map H y'`]
THEN GABBREV_TAC`y1=node_map H y'`
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`loop_of_face H x`;`y1`;`y1`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl]
THEN DICH_TAC 0
THEN DICH_TAC 1
THEN STRIP_TAC
THEN POP_ASSUM(fun th -> REWRITE_TAC[SYM th] THEN ASSUME_TAC (SYM th))
THEN STRIP_TAC
THEN THAYTHEL_TAC(40-15)[`y1`][in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN MRESAL_TAC Hypermap.unique_n_quotient[`H`;`NF`;`loop_of_face H x`;`L`;`y1`][in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN MATCH_MP_TAC Hypermap.lemma_identity_atom
THEN ASM_REWRITE_TAC[];



RESA_TAC
;


GEXISTS_TAC`node_map H (tail_of_atom H NF x'''')`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep]
THEN STRIP_TAC
THEN MRESA_TAC lemma_atom_tail[`H`;`x`;`x''''`]
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`loop_of_face H x`;`x''''`;`x''''`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl]
THEN DICH_TAC 0
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th])
THEN RESA_TAC
THEN THAYTHEL_TAC(36-16)[`x''''`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl]
THEN MRESA_TAC Hypermap.unique_n_quotient[`H`;`NF`;`loop_of_face H x`;`L`;`x''''`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl];



STRIP_TAC;

REWRITE_TAC[Localization.has_orders]
THEN GSUBGOAL_THEN`{y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)} = face (quotient H NF) (atom H (loop_of_face H x) x)` ASSUME_TAC
;

MRESA_TAC(SET_RULE`!a b A. A={a,b}==> a IN A`)[`loop_of_face H x`;`L`;`NF`]
THEN MRESAL_TAC Hypermap.lemmaQF[`H`;`NF`;`loop_of_face H x`;`x`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN ONCE_REWRITE_TAC[EXTENSION;]
THEN REWRITE_TAC[IN_ELIM_THM]
THEN SET_TAC[];


STRIP_TAC;

DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o ONCE_DEPTH_CONV)[face]
THEN STRIP_TAC
THEN MRESA_TAC Hypermap.f_quotient_permute[`H`;`NF`]
THEN MRESAL_TAC Hypermap_and_fan.FINITE_ORBIT_MAP[`dart ((quotient H NF))`;`face_map (quotient H NF)`;`(atom H (loop_of_face H x) x)`;`CARD(face H x)`][FINITE_UNION]
THEN DICH_TAC 0
THEN DICH_TAC 1
THEN RESA_TAC
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN DICH_TAC(30-26)
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MATCH_MP_TAC(GEN_ALL CARD_ITER_K_EK_IMP_DIST_FUNTION)
THEN GEXISTS_TAC`atom H (loop_of_face H x) x`
THEN ASM_REWRITE_TAC[GSYM Wrgcvdr_cizmrrh.POWER_TO_ITER];


GSUBGOAL_THEN`{y | ?x. y = atom H L x /\ in_dart_of_loop x L} = face (quotient H NF) (atom H L ((complement H x 0)))` ASSUME_TAC
;

MRESA_TAC(SET_RULE`!a b A. A={a,b}==> b IN A`)[`loop_of_face H x`;`L`;`NF`]
THEN MRESAL_TAC Hypermap.lemmaQF[`H`;`NF`;`L`;`(complement H x 0)`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN ONCE_REWRITE_TAC[EXTENSION;]
THEN REWRITE_TAC[IN_ELIM_THM]
THEN SET_TAC[];




MRESA_TAC Hypermap.f_quotient_permute[`H`;`NF`]
THEN ASM_REWRITE_TAC[GSYM Wrgcvdr_cizmrrh.POWER_TO_ITER;]
THEN ONCE_REWRITE_TAC[FUN_EQ_THM]
THEN REWRITE_TAC[I_DEF]
THEN GEN_TAC
THEN MRESA_TAC(SET_RULE`!x A. x IN A\/ ~(x IN A)`)[`x'`;`face (quotient H NF) (atom H L (complement H x 0)) UNION
      face (quotient H NF) (atom H (loop_of_face H x) x)`];

DICH_TAC 0
THEN REWRITE_TAC[UNION;IN_ELIM_THM]
THEN STRIP_TAC
;

DICH_TAC(31-12)
THEN RES_TAC
THEN MRESA_TAC Lvducxu.FACE_CYCLE_CARD[`(atom H L (complement H x 0))`;`x'`;`quotient H NF`;]
;



DICH_TAC(31-26)
THEN RES_TAC
THEN MRESA_TAC Lvducxu.FACE_CYCLE_CARD[`(atom H (loop_of_face H x) x)`;`x'`;`quotient H NF`;]
;

MATCH_MP_TAC Hypermap.power_permutation_outside_domain
THEN GEXISTS_TAC`face (quotient H NF) (atom H L (complement H x 0)) UNION
      face (quotient H NF) (atom H (loop_of_face H x) x)`
THEN RESA_TAC;


STRIP_TAC;


REWRITE_TAC[Localization.has_orders;ARITH_RULE`0<i/\ i<2<=> i=SUC 0`]
THEN STRIP_TAC;


REPEAT RESA_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[GSYM Wrgcvdr_cizmrrh.POWER_TO_ITER;POWER;I_DEF;o_DEF;]
THEN ONCE_REWRITE_TAC[FUN_EQ_THM]
THEN REWRITE_TAC[NOT_FORALL_THM]
THEN GEXISTS_TAC`atom H (loop_of_face H x) x`
THEN GSUBGOAL_THEN`x IN darts_of_family NF`ASSUME_TAC
;

MATCH_MP_TAC Hypermap.lemma_in_support2
THEN GEXISTS_TAC`loop_of_face H x`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];


MRESA_TAC (SET_RULE`!a b L. L={a,b}==> a IN L`)[`loop_of_face H x`;`L`;`NF`]
THEN MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN THAYTHEL_TAC 0[`loop_of_face H x`;`x`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN MRESA_TAC Hypermap.e_quotient_via_atom_choice[`H`;`NF`;`x`]
THEN GSUBGOAL_THEN`loop_map (loop_of_face H x) x= face_map H x`ASSUME_TAC
;


ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN MRESAL_TAC Hypermap.power_res_face_map[`H`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
;


MRESAL_TAC Hypermap.lemma_head_of_atom_via_restricted[`H`;`NF`;`loop_of_face H x`;`x`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC(37)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC th
THEN REWRITE_TAC[is_restricted;Hypermap.edge_map_convolution]
THEN ASSUME_TAC th)
THEN RESA_TAC
THEN REWRITE_TAC[o_DEF]
THEN MRESAL_TAC Hypermap.lemma_in_face[`H`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN THAYTHE_TAC(47-15)[`face_map H x`]
THEN GSUBGOAL_THEN`atom_choice H NF (node_map H (face_map H x)) IN {y | ?x. y = atom H L x /\ in_dart_of_loop x L}`ASSUME_TAC;


REWRITE_TAC[IN_ELIM_THM]
THEN GEXISTS_TAC`(node_map H (face_map H x))`
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];

GSUBGOAL_THEN`atom H (loop_of_face H x) x IN {y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)}`ASSUME_TAC
;



REWRITE_TAC[IN_ELIM_THM]
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
;

STRIP_TAC
THEN MRESA_TAC(SET_RULE`!a A B. a IN A /\ a IN B==> a IN A INTER B`)[`atom_choice H NF (node_map H (face_map H x))`;`{y | ?x. y = atom H L x /\ in_dart_of_loop x L}`;`{y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)}`]
THEN DICH_TAC 0
THEN SET_TAC[];



REWRITE_TAC[GSYM Wrgcvdr_cizmrrh.POWER_TO_ITER;POWER;I_DEF;o_DEF;]
THEN ONCE_REWRITE_TAC[FUN_EQ_THM]
THEN REWRITE_TAC[I_DEF;ARITH_RULE`2= SUC(SUC 0)`;POWER;I_DEF;o_DEF]
THEN GEN_TAC
THEN MRESA_TAC(SET_RULE`!x A. x IN A\/ ~(x IN A)`)[`x'`;`{y | ?x. y = atom H L x /\ in_dart_of_loop x L} UNION
       {y | ?x1. y = atom H (loop_of_face H x) x1 /\
                 in_dart_of_loop x1 (loop_of_face H x)}`];



DICH_TAC 0
THEN REWRITE_TAC[UNION;IN_ELIM_THM]
THEN RESA_TAC;


GSUBGOAL_THEN`x'' IN darts_of_family NF`ASSUME_TAC
;


MATCH_MP_TAC Hypermap.lemma_in_support2
THEN GEXISTS_TAC`L`
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];


GSUBGOAL_THEN`atom_choice H NF x''=atom H L x''`ASSUME_TAC
;



MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];

MRESA_TAC Hypermap.e_quotient_via_atom_choice[`H`;`NF`;`x''`]
THEN THAYTHE_ASM_TAC(34-14)[`x''`]
THEN GABBREV_TAC`y1=inv_loop_map L y'`
THEN MRESA_TAC Hypermap.e_quotient_via_atom_choice[`H`;`NF`;`edge_map H (head_of_atom H NF x'')`]
THEN SYM_DICH_TAC(42-32)
THEN DICH_TAC(41)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC th
THEN REWRITE_TAC[is_restricted;plain_hypermap;o_DEF;]
THEN ASSUME_TAC th)
THEN RESA_TAC
THEN REWRITE_TAC[o_DEF]
THEN DICH_TAC(50-44)
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[FUN_EQ_THM;I_DEF]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`head_of_atom H NF x''`]
THEN MRESA_TAC Hypermap.atom_choice_at_margin[`H`;`NF`;`x''`]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0;








GSUBGOAL_THEN`x1 IN darts_of_family NF`ASSUME_TAC
;


MATCH_MP_TAC Hypermap.lemma_in_support2
THEN GEXISTS_TAC`loop_of_face H x`
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];


GSUBGOAL_THEN`atom_choice H NF x1=atom H (loop_of_face H x) x1`ASSUME_TAC
;



MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];

MRESA_TAC Hypermap.e_quotient_via_atom_choice[`H`;`NF`;`x1`]
THEN DICH_TAC (34-29)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC th THEN REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop] THEN ASSUME_TAC th)
THEN STRIP_TAC
THEN THAYTHE_ASM_TAC(35-15)[`x1`]
THEN DICH_TAC(39-30)
THEN RESA_TAC
THEN MRESA_TAC Hypermap.e_quotient_via_atom_choice[`H`;`NF`;`edge_map H (head_of_atom H NF (node_map H y'))`]
THEN DICH_TAC(42-30)
THEN RESA_TAC
THEN SYM_DICH_TAC(0)
THEN DICH_TAC(41)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC th
THEN REWRITE_TAC[is_restricted;plain_hypermap;o_DEF;]
THEN ASSUME_TAC th)
THEN RESA_TAC
THEN REWRITE_TAC[o_DEF]
THEN DICH_TAC(50-44)
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[FUN_EQ_THM;I_DEF]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`head_of_atom H NF x1`]
THEN MRESA_TAC Hypermap.atom_choice_at_margin[`H`;`NF`;`x1`]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0;


MRESA_TAC Hypermap.e_quotient_permute[`H`;`NF`]
THEN MRESAL_TAC Hypermap.power_permutation_outside_domain[`atoms_of_family H NF`;`e_quotient H NF`;`x'`;`SUC(SUC 0)`][POWER;I_DEF;o_DEF]
;


REWRITE_TAC[Localization.has_orders;ARITH_RULE`0<i/\ i<2<=> i=SUC 0`]
THEN STRIP_TAC;

REPEAT RESA_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[GSYM Wrgcvdr_cizmrrh.POWER_TO_ITER;POWER;I_DEF;o_DEF;]
THEN ONCE_REWRITE_TAC[FUN_EQ_THM]
THEN REWRITE_TAC[NOT_FORALL_THM]
THEN GEXISTS_TAC`atom H (loop_of_face H x) x`
THEN GSUBGOAL_THEN`x IN darts_of_family NF`ASSUME_TAC
;


MATCH_MP_TAC Hypermap.lemma_in_support2
THEN GEXISTS_TAC`loop_of_face H x`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN EXPAND_TAC"NF"
THEN SET_TAC[];



MRESA_TAC (SET_RULE`!a b L. L={a,b}==> a IN L/\ b IN L`)[`loop_of_face H x`;`L`;`NF`]
THEN MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN THAYTHEL_TAC 0[`loop_of_face H x`;`x`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN MRESA_TAC Hypermap.n_quotient_via_atom_choice[`H`;`NF`;`x`]
THEN MRESAL_TAC lemma_atom_tail[`H`;`x`;`x`][Hypermap.face_refl]
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`loop_of_face H x`;`x`;`x`]
[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN RESA_TAC
THEN THAYTHEL_TAC (37-16)[`x`][Hypermap.face_refl]
THEN MRESA_TAC Hypermap.first_unique_atom_choice[`H`;`NF`]
THEN THAYTHE_TAC 0[`L`;`node_map H x`]
THEN GSUBGOAL_THEN`atom H L (node_map H x) IN {y | ?x. y = atom H L x /\ in_dart_of_loop x L}` ASSUME_TAC;


ASM_REWRITE_TAC[IN_ELIM_THM]
THEN GEXISTS_TAC`node_map H x`
THEN ASM_REWRITE_TAC[];

GSUBGOAL_THEN`atom H (loop_of_face H x) x IN {y | ?x1. y = atom H (loop_of_face H x) x1 /\
                 in_dart_of_loop x1 (loop_of_face H x)}`ASSUME_TAC
;

ASM_REWRITE_TAC[IN_ELIM_THM]
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
;


STRIP_TAC
THEN MRESA_TAC(SET_RULE`!a A B. a IN A /\ a IN B==> a IN A INTER B`)[`atom H L (node_map H x)`;`{y | ?x. y = atom H L x /\ in_dart_of_loop x L}`;`{y | ?x1. y = atom H (loop_of_face H x) x1 /\
                in_dart_of_loop x1 (loop_of_face H x)}`]
THEN DICH_TAC 0
THEN SET_TAC[];




REWRITE_TAC[GSYM Wrgcvdr_cizmrrh.POWER_TO_ITER;POWER;I_DEF;o_DEF;]
THEN ONCE_REWRITE_TAC[FUN_EQ_THM]
THEN REWRITE_TAC[I_DEF;ARITH_RULE`2= SUC(SUC 0)`;POWER;I_DEF;o_DEF]
THEN GEN_TAC
THEN MRESA_TAC(SET_RULE`!x A. x IN A\/ ~(x IN A)`)[`x'`;`{y | ?x. y = atom H L x /\ in_dart_of_loop x L} UNION
       {y | ?x1. y = atom H (loop_of_face H x) x1 /\
                 in_dart_of_loop x1 (loop_of_face H x)}`];



DICH_TAC 0
THEN REWRITE_TAC[UNION;IN_ELIM_THM]
THEN RESA_TAC;



MRESA_TAC (SET_RULE`!a b L. L={a,b}==> a IN L/\ b IN L`)[`loop_of_face H x`;`L`;`NF`]
THEN THAYTHE_TAC (31-14)[`x''`]
THEN MRESA_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`L`;`x''`;`y'`]
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th] THEN ASSUME_TAC th)
THEN STRIP_TAC
THEN MRESA_TAC Hypermap.unique_n_quotient[`H`;`NF`;`L`;`loop_of_face H x`;`x''`]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN RESA_TAC
THEN MRESAL_TAC Hypermap.unique_n_quotient[`H`;`NF`;`loop_of_face H x`;`L`;`node_map H y'`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC 0
THEN MRESAL_TAC lemma_atom_tail[`H`;`x`;`node_map H y'`][Hypermap.face_refl]
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`loop_of_face H x`;`node_map H y'`;`node_map H y'`]
[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN RESA_TAC
THEN THAYTHEL_TAC(37-15)[`node_map H y'`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN RESA_TAC
THEN ONCE_REWRITE_TAC[SET_RULE`A=B<=> B=A`]
THEN MATCH_MP_TAC Hypermap.lemma_identity_atom
THEN ASM_REWRITE_TAC[];



MRESA_TAC (SET_RULE`!a b L. L={a,b}==> a IN L/\ b IN L`)[`loop_of_face H x`;`L`;`NF`]
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN STRIP_TAC
THEN MRESAL_TAC lemma_atom_tail[`H`;`x`;`x1`][Hypermap.face_refl]
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`loop_of_face H x`;`x1`;`x1`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHEL_TAC(32-16)[`x1`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN MRESAL_TAC Hypermap.unique_n_quotient[`H`;`NF`;`loop_of_face H x`;`L`;`x1`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN GABBREV_TAC`y1=node_map H x1`
THEN THAYTHEL_TAC(34-14)[`y1`]
[in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN MRESAL_TAC Hypermap.lemma_in_loop[`H`;`L`;`y1`;`y'`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN MRESAL_TAC Hypermap.lemma_tail_of_atom[`H`;`NF`;`L`;`y'`;`y'`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC 0
THEN DICH_TAC (38-35)
THEN STRIP_TAC
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Hypermap.change_parameters[`H`;`NF`;`L`;`y1`;`y'`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN STRIP_TAC
THEN MRESAL_TAC Hypermap.unique_n_quotient[`H`;`NF`;`L`;`loop_of_face H x`;`node_map H x1`][in_dart_of_loop;Hypermap.loop_of_face_rep;atom_refl;Hypermap.face_refl;atoms_of_loop]
THEN DICH_TAC(41)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC th THEN REWRITE_TAC[is_restricted;simple_hypermap]
THEN ASSUME_TAC th)
THEN STRIP_TAC
THEN MRESA_TAC Rnsyjxm.in_face_imp_in_dart[`x`;`H`;`x1`]
THEN THAYTHE_TAC(51-46)[`x1`]
THEN MRESA_TAC Hypermap.lemma_atom_sub_node[`H`;`L`;`y1`]
THEN MRESA_TAC(SET_RULE`!a A B. A SUBSET B /\ a IN A==> a IN B`)[`y'`;`atom H L y1`;`node H y1`]
THEN MRESA_TAC Hypermap.lemma_node_identity[`H`;`y1`;`y'`]
THEN MRESAL_TAC Hypermap.lemma_in_node1[`H`;`x1`;`x1`][Hypermap.node_refl]
THEN MRESA_TAC Hypermap.lemma_node_identity[`H`;`x1`;`y1`]
THEN MRESAL_TAC Hypermap.lemma_in_node1[`H`;`y'`;`y'`][Hypermap.node_refl]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Hypermap.lemma_face_identity[`H`;`x`;`x1`]
THEN DICH_TAC (56-34)
THEN RESA_TAC
THEN STRIP_TAC
THEN MRESAL_TAC(SET_RULE`!a A B. a IN A /\ a IN B==> a IN A INTER B`)[`node_map H y'`;`node H x1`;`face H x1`][IN_SING]
;


MRESA_TAC Hypermap.n_quotient_permute[`H`;`NF`;]
THEN MRESAL_TAC Hypermap.power_permutation_outside_domain[`atoms_of_family H NF`;`n_quotient H NF`;`x'`;`SUC(SUC 0)`][POWER;I_DEF;o_DEF]
;
]);;







 end;;



