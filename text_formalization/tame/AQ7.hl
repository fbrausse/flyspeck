(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Aq7= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;


let indexf_ytrans_eq_l_m1_v0=prove(  
`!L N r(x:A#A) w. ~(final_list L r)/\          good_list L /\
         good_list_nodes L /\
 marked_list L N r x /\
    next_el (r) x =w ==>
    indexf w (ytrans L N r x 0) r = (l'm L r x)`,

REPEAT RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN DICH_ASM_TAC 1[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z=prev_el r (ztrans L N r x 0)`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MATCH_MP_TAC Tame_list.next_eln_indexf
THEN DICH_ASM_TAC(14-6)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`r`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MP_TAC f_eq_next_el_x_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHEL_TAC 0[`l'm L r x`][ARITH_RULE`a<=a:num`]
THEN EXPAND_TAC"y"
THEN REWRITE_TAC[Tame_defs2.l_y;]
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC  next_el_power_rotate[`r`;`x`;`SUC (l'm L r x)`][POWER;o_DEF]
THEN MRESAL_TAC Tame_list.HQYMRTX1_list[`L`;`N`;`r`;`x`;][LET_THM]
THEN MRESAL_TAC min_not_eq_imp_eq[`l'm L r x`;`f_list L`;`next_el r`;`x`][Tame_defs2.l_m;LET_THM;Tame_list.POWER_TO_ITER]
THEN ASM_TAC
THEN STRIP_TAC
THEN REWRITE_TAC[Tame_defs2.l_m;LET_THM;GSYM Tame_list.POWER_TO_ITER]
THEN REPEAT RESA_TAC
THEN GABBREV_TAC`k=min_num
 {m | ~((next_el r POWER SUC (SUC m)) x =
        f_list L ((next_el r POWER SUC m) x))}`
THEN DICH_TAC(33-30)
THEN REWRITE_TAC[GSYM Tame_defs2.ztrans]
THEN STRIP_TAC
THEN GABBREV_TAC`z1=l'z L N r x`
THEN MRESAL_TAC Tame_list.indexf_n[`x`;`z1`;`r`][GSYM List_hypermap.dart_in_face;]
THEN MRESA_TAC(ARITH_RULE`!b a :num. a<=b\/ b<a`)[`k`;`sizel r`]
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`indexf x z1 r`]
THENL[

MRESA_TAC Tame_list.indexf0[`x`;`z1`;`r`]
THEN THAYTHEL_TAC (35-27)[`sizel r`][ARITH_RULE`1<=a<=> 0<a`;Tame_defs2.l_m;LET_THM;Tame_list.POWER_TO_ITER]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.l_m;LET_THM;GSYM Tame_list.POWER_TO_ITER]
THEN ASM_REWRITE_TAC[POWER;I_DEF;o_DEF;Tame_defs2.ztrans;GSYM sizel0_not_nil]
THEN MRESAL_TAC Dangeyj.mem_imp_not_nil[`r`;`y`][sizel0_not_nil]
THEN MRESA_TAC (ARITH_RULE`!a b. a<=b==>a<= SUC b`)[`sizel r`;`k`]
THEN THAYTHE_TAC (36-27)[`PRE(sizel r)`]
THEN MRESAL_TAC (GSYM Hypermap.LT_SUC_PRE)[`sizel r`][ARITH_RULE`SUC j< 1+ a+1<=> j< SUC a`]
THEN MRESA_TAC (ARITH_RULE`!a b. SUC a<=b==> a<= b`)[`PRE(sizel r)`;`k`]
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN DICH_TAC 2
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th]
THEN REWRITE_TAC[POWER;o_DEF]
THEN ASSUME_TAC(SYM th))
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC (38-24)
THEN RESA_TAC
THEN SYM_DICH_TAC 2
THEN MRESAL_TAC Pwssrat.next_el_sizel[`x`;`r`][GSYM List_hypermap.dart_in_face];


MRESAL_TAC Tame_list.indexf_lt_sizel[`r`;`x`;`z1`;][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf x z1 r`][ARITH_RULE`1<=a<=> 0<a`]
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a<b/\ b<=c==>a<=c/\ SUC a<=SUC c/\ SUC a<=c`)[`PRE(indexf x z1 r)`;`sizel r`;`k`]
THEN REPEAT RESA_TAC
THEN THAYTHEL_TAC (39-27)[`SUC(PRE(indexf x z1 r))`][ARITH_RULE`1<=a<=> 0<a`;Tame_defs2.l_m;LET_THM;]
THEN DICH_TAC 0
THEN REWRITE_TAC[GSYM Tame_defs2.ztrans]
THEN RESA_TAC
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHEL_TAC 0[`PRE(indexf x z1 r)`][ARITH_RULE`1<=a<=> 0<a`;Tame_defs2.l_m;LET_THM;GSYM Tame_list.POWER_TO_ITER]
THEN MRESAL_TAC  next_el_power_rotate[`r`;`x`;`indexf x z1 r`][POWER;o_DEF]
]);;




let indexf_const_le_indexf_ytrans_v0=prove(
`!L N d r (x:A#A). good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (r) /\
 MEM d (r) /\
indexf  w d  (r) <= indexf  w (ytrans L N r x 0) (r)
==>
 indexf  w d  (r) = indexf  w d  f`,

REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN DICH_ASM_TAC (7-2)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN DICH_ASM_TAC(18)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN DICH_TAC(25-7)
THEN RESA_TAC
THEN DICH_ASM_TAC(25-8)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`r`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC(indexf w d r)`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHEL_TAC 0[`indexf w d r`][ARITH_RULE`a<=a:num`;POWER;o_DEF;I_DEF]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN MRESA_TAC mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`;]
THEN MATCH_MP_TAC Tame_list.next_eln_indexf
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;`indexf w d r`]
THEN MRESA_TAC indexf_ytrans_eq_l_m_v0[`L`;`N`;`r`;`x`;`x`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`(ytrans L N r x 0)`]
THEN MP_TAC PPLHULJ_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`(ytrans L N r x 0)`]
THEN DICH_TAC 0
THEN DICH_TAC(42-25)
THEN ARITH_TAC);;



let indexf_y_le_z_in_r_0=prove(
`!L N r (x:A#A). good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (r)
==> indexf w (ytrans L N r x 0) (r)< indexf w (ztrans L N r x 0) (r)`,

REPEAT RESA_TAC
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w (ytrans L N r x 0) r`;`indexf w (ztrans L N r x 0) (r)`]
THEN GABBREV_TAC`y=(ytrans L N r x 0)`
THEN GABBREV_TAC`z=(ztrans L N r x 0)`
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC indexf_const_le_indexf_ytrans_v0[`w`;`f`;`L`;`N`;`z`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][]
THEN MRESAL_TAC indexf_const_le_indexf_ytrans_v0[`w`;`f`;`L`;`N`;`y`;`r`;`x`;][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`]);;




let AQ7_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
    MEM  x (rtrans L N r x 1)`;;



let AQ7=prove(AQ7_concl,

REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC Tame_list.betwn_cases[`r`;`y`;`x`;`z`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`y`;`x`;`z`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESAL_TAC indexf_y_le_z_in_r_0[`f`;`w`;`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y r `;` indexf w z r`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`y`;`x`;`z`;`r`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`r`][ARITH_RULE`a<=a+1/\ (a+b=a+c<=> b=c)`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a<c ==> 0<b`)[`indexf y x r `;` indexf x z r`;`indexf y z r`]
THEN DICH_TAC 1
THEN SYM_DICH_TAC 1
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b+c=d==> c<=d`)[`indexf w y r `;` indexf y x r`;`indexf x z r`;`indexf w z r`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`x`;`z`;`r`][ARITH_RULE`a<=a+1/\ (a+b=a+c<=> b=c)`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ 0<b ==> a<c`)[`indexf w x r `;` indexf x z r`;`indexf w z r`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`z`]
THEN MRESA_TAC Tame_list.indexf_prev[`x`;`w`;`r`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC);;










 end;;



