
needs "../glpk/tame_archive/lpproc.ml";;
(* good_list conversion and all definitions 
needs "../formal_lp/hypermap/computations/list_hypermap_computations.hl";;
*)

module Good_list_archive = struct


open Lpproc;;
(* open List_hypermap_computations;; *)
open List_conversions;;
open Hales_tactic;;

let archive_const_name = "tame_archive_lists";;

(* FAKE VERSION  *)

let archive_const_def =
    new_definition `(tame_archive_lists:(((num)list)list)list) = []`;;

let archive_const = lhand (concl archive_const_def);;

(*
let good_list_archive =
  let good_conv tm = 
    let raw_tm = rand tm in
      EQT_INTRO (eval_good_list0 raw_tm (eval_list_of_darts raw_tm)) in
  let eq_th = AP_TERM `ALL (good_list:((num)list)list->bool)` archive_const_def in
  let th1 = EQT_ELIM (all_conv_univ good_conv (rand (concl eq_th))) in
    EQ_MP (SYM eq_th) th1;;
*)

let good_list_archive = prove_by_refinement(
  `ALL good_list tame_archive_lists`,
  (* {{{ proof *)
  [
  BY(REWRITE_TAC[archive_const_def;ALL])
  ]);;
  (* }}} *)


end;;

      
