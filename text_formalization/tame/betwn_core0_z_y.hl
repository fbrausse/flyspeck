(* ========================================================================== *)
(* FlxSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Betwn_core0_z_y= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;
open Aq8;;
open More_lemma2;;
open Betwn_corek_z_x;;






let uniq_fst_find_face=prove(`     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) 
==> uniq(MAP FST (find_face L x))`,
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`k= transform_count L N r x`
THEN DICH_ASM_TAC (6-3)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN ASM_REWRITE_TAC[]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`nk`;`rk`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L rk`][Tame_list.MEMf_MAP;]
THEN DICH_ASM_TAC(28-21)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MRESA_TAC core_final[`nk`;`x`;`L`;`rk`]
THEN DICH_TAC(39-28)
THEN ASM_REWRITE_TAC[]
THEN REMOVE_ASSUM_TAC
THEN SYM_DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core;Tame_list.lower_case;Seq.map_rot;Seq.rot_uniq]
);;




let mem_betwn_core0_z_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
     (!i. SUC i < k /\  ~(FST (ztrans L N r x i) = FST (ytrans L N r x (SUC i))) ==> (!d. MEM d (betwn (find_face L x) (ztrans L N r x i) (ytrans L N r x (SUC i))) <=> MEM d (betwn r (ztrans L N r x i) (ytrans L N r x (SUC i)))))`,
[


REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x i`
THEN GABBREV_TAC`yi=ytrans L N r x i`
THEN GABBREV_TAC`ys=ytrans L N r x (SUC i)`
THEN GABBREV_TAC`rs=rtrans L N r x (SUC i)`
THEN GABBREV_TAC`ns=ntrans L N r x (SUC i)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`ns`;`rs`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 0
THEN EXPAND_TAC"rs"
THEN REWRITE_TAC[GSYM Tame_defs2.ytrans]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN ASM_REWRITE_TAC[]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(43-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(56-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;

SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

DICH_ASM_TAC (61-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(68-62)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zi`;`ys`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zi`;`ys`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zi`;`ys`;`r`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`zi`;`d`;`ys`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`zi`;`d`;`ys`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`ys`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys f`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;I_DEF;o_DEF]
THEN MRESA_TAC indexf3_final_lemmas[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC indexf_z_lt_sizel_ytran[`k`;`i`;`w`;`zi`;`ys`;`f`;`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core]
THEN MRESAL_TAC Seq.size_map[`(FST o HD):(A#A)list->A`;`parts L r`][Tame_list.lower_case]
THEN MRESA_TAC Tame_list.parts_all_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.size_flatten_le[`parts L r`]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<c`)[`indexf zi ys f`;`sizel(parts L r)`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zi ys f`;`zi`;`ys`;`r`]
THEN EQ_TAC;



RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf zi d f`;`indexf zi ys f`]
THEN DICH_TAC(93-78)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`zi`;`ys`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi d f`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`indexf zi d f`;`indexf zi ys f`;`sizel r`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`r`;`indexf zi d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zi d f`;`zi`;`d`;`r`];



RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf zi d r`;`indexf zi ys f`]
THEN DICH_TAC(93-79)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`zi`;`ys`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`r`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi d r`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;I_DEF;o_DEF]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`f`;`indexf zi d r`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`ys`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`indexf zi d r`;`indexf zi ys f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zi d r`;`zi`;`d`;`f`]
]);;




let last_betwn_core0_z_y=prove_by_refinement(`!L N r x:A#A. 
 good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
     (!i. SUC i < k /\  ~(FST (ztrans L N r x i) = FST (ytrans L N r x (SUC i))) ==> LAST (betwn (find_face L x) (ztrans L N r x i) (ytrans L N r x (SUC i))) = LAST (betwn r (ztrans L N r x i) (ytrans L N r x (SUC i))))`,
[

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x i`
THEN GABBREV_TAC`yi=ytrans L N r x i`
THEN GABBREV_TAC`ys=ytrans L N r x (SUC i)`
THEN GABBREV_TAC`rs=rtrans L N r x (SUC i)`
THEN GABBREV_TAC`ns=ntrans L N r x (SUC i)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`ns`;`rs`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 0
THEN EXPAND_TAC"rs"
THEN REWRITE_TAC[GSYM Tame_defs2.ytrans]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN ASM_REWRITE_TAC[]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(43-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(56-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;


SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

DICH_ASM_TAC (61-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(68-62)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zi`;`ys`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zi`;`ys`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zi`;`ys`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`ys`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys f`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;I_DEF;o_DEF]
THEN MRESA_TAC indexf3_final_lemmas[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC indexf_z_lt_sizel_ytran[`k`;`i`;`w`;`zi`;`ys`;`f`;`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core]
THEN MRESAL_TAC Seq.size_map[`(FST o HD):(A#A)list->A`;`parts L r`][Tame_list.lower_case]
THEN MRESA_TAC Tame_list.parts_all_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.size_flatten_le[`parts L r`]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf0[`zi`;`ys`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c/\ ~(a=0)==> a<c/\ 1<c`)[`indexf zi ys f`;`sizel(parts L r)`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zi ys f`;`zi`;`ys`;`r`];


MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn r zi ys = []`];

MRESA_TAC Tame_list.betwn_nil[`r`;`zi`;`ys`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zi`;`ys`;`r`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys f`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`zi`;`ys`];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn f zi ys = []`];

MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`ys`;]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b/\ ~(a=0)==> 1<b`)[`indexf zi ys f`;`sizel f`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`zi`;`ys`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zi`;`ys`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys r`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Tame_list.betwn_nil[`r`;`zi`;`ys`];



MRESA_TAC Aq23.next_last_betwn[`r`;`zi`;`ys`]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`zi`;`ys`]
THEN MRESAL_TAC Seq2.prev_next_id[`LAST (betwn r zi ys)`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`LAST (betwn f zi ys)`;`f`][]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN GABBREV_TAC`d=prev_el f ys`
THEN MRESAL_TAC Seq2.next_prev_id[`ys`;`f`][]
THEN MRESA_TAC Seq2.mem_prev_el[`ys`;`f`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`ys`;]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b/\ ~(a=0)==> 1<b`)[`indexf zi ys f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d`;`ys`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a. ~(a=0)==> 1<=a`)[`indexf zi ys f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zi`;`d`;`ys`;`f`][]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+1=b==> a<=b`)[`indexf zi d f`;`indexf zi ys f`;]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi d f`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`;ARITH_RULE`a<=a:num`]
THEN DICH_TAC(105-79)
THEN SYM_DICH_TAC(104-101)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+1=SUC a`;COM_POWER;I_DEF;o_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`d`;`r`][]
]);;



let betwn_betwn_core0_z_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
     (!i. SUC i < k /\  ~(FST (ztrans L N r x i) = FST (ytrans L N r x (SUC i))) ==> betwn (find_face L x) ((ztrans L N r x i)) (ytrans L N r x (SUC i))= betwn r (ztrans L N r x i) (ytrans L N r x (SUC i)))`,
[

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x i`
THEN GABBREV_TAC`yi=ytrans L N r x i`
THEN GABBREV_TAC`ys=ytrans L N r x (SUC i)`
THEN GABBREV_TAC`rs=rtrans L N r x (SUC i)`
THEN GABBREV_TAC`ns=ntrans L N r x (SUC i)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`ns`;`rs`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 0
THEN EXPAND_TAC"rs"
THEN REWRITE_TAC[GSYM Tame_defs2.ytrans]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN ASM_REWRITE_TAC[]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(43-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(56-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;

SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

DICH_ASM_TAC (61-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(68-62)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zi`;`ys`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zi`;`ys`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zi`;`ys`;`r`]
THEN MRESA_TAC mem_betwn_core0_z_y[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESA_TAC last_betwn_core0_z_y[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MATCH_MP_TAC Aq12.eq_last_next
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d=x'`;

MRESA_TAC Tame_list.indexf_n[`zi`;`ys`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys f`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;I_DEF;o_DEF]
THEN MRESA_TAC indexf3_final_lemmas[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC indexf_z_lt_sizel_ytran[`k`;`i`;`w`;`zi`;`ys`;`f`;`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core]
THEN MRESAL_TAC Seq.size_map[`(FST o HD):(A#A)list->A`;`parts L r`][Tame_list.lower_case]
THEN MRESA_TAC Tame_list.parts_all_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.size_flatten_le[`parts L r`]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf0[`zi`;`ys`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c/\ ~(a=0)==> a<c/\ 1<c`)[`indexf zi ys f`;`sizel(parts L r)`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zi ys f`;`zi`;`ys`;`r`];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn r zi ys = []`];


MRESA_TAC Tame_list.betwn_nil[`r`;`zi`;`ys`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zi`;`ys`;`r`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys f`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`zi`;`ys`];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn f zi ys = []`];

MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`ys`;]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b/\ ~(a=0)==> 1<b`)[`indexf zi ys f`;`sizel f`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`zi`;`ys`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zi`;`ys`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi ys r`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Tame_list.betwn_nil[`r`;`zi`;`ys`];


MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=LAST (betwn r zi ys)`];

MRESA_TAC Aq4.next_el_last_hd[`betwn r zi ys`]
THEN MRESA_TAC Aq4.next_el_last_hd[`betwn f zi ys`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`zi`;`ys`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`zi`;`ys`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC 0`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`SUC 0<=a<=> ~(a=0)`;ARITH_RULE`a<=a:num`];


MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`f`;`zi`;`ys`;`d`]
THEN MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`r`;`zi`;`ys`;`d`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`zi`;`ys`;`d`;`f`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`zi`;`ys`;`d`;`r`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`zi`;`d`;`ys`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b/\ SUC a<=b`)[`indexf zi d f`;`indexf zi ys f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`zi`;`ys`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi d f`;`i`;`L`;`N`;`r`;`x`][POWER;o_DEF;I_DEF;ARITH_RULE`SUC 0<=a<=> ~(a=0)`;ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC(indexf zi d f)`;`i`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF;I_DEF;ARITH_RULE`SUC 0<=a<=> ~(a=0)`;ARITH_RULE`a<=a:num`]
]);;


let final_betwn_core0_z_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
     (!i. SUC i < k /\  ~(FST (ztrans L N r x i) = FST (ytrans L N r x (SUC i))) ==>
	(betwn (core L r) (FST (ztrans L N r x (i))) (FST (ytrans L N r x (SUC i))) =
	    betwn (core L (find_face L x)) (FST (ztrans L N r x (i)))
	      (FST (ytrans L N r x (SUC i)))))`,
[

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x i`
THEN GABBREV_TAC`yi=ytrans L N r x i`
THEN GABBREV_TAC`ys=ytrans L N r x (SUC i)`
THEN GABBREV_TAC`rs=rtrans L N r x (SUC i)`
THEN GABBREV_TAC`ns=ntrans L N r x (SUC i)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`ns`;`rs`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 0
THEN EXPAND_TAC"rs"
THEN REWRITE_TAC[GSYM Tame_defs2.ytrans]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN ASM_REWRITE_TAC[]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(43-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(56-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;

SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

MRESAL_TAC Tame_list.final_list_parts[`L`;`f`][GSYM Seq.allP]
THEN ASM_REWRITE_TAC[Tame_defs2.core]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zi`;`ys`]
THEN MRESA_TAC uniq_fst_find_face[`N`;`r`;`L`;`x`]
THEN MRESAL_TAC uniq_imp_inj[`(FST):(A#A)->A`;`f`][Reduction2.trans0]
THEN MRESA_TAC Aq12.map_betwn[`f`;`zi`;`FST:A#A->A`;`ys`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC (65-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(72-66)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`zi`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`ys`;`L`;`r`]
THEN CHANGE_TAC`pz=p`
THEN CHANGE_TAC`py=p'`
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core;o_DEF;HD;ETA_AX]
THEN RESA_TAC
THEN MRESAL_TAC Aq12.FST_HD_MAP_betwn[`N`;`L`;`r`;`pz`;`py`;`parts L r`;`ys`;`zi`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC More_lemma1.parts_betwn[`N`;`parts L r`;`zi`;`ys`;`L`;`r`;`pz`;`py`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf0[`zi`;`ys`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`zi`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`ys`;`x`;`L`];



GSUBGOAL_THEN`LAST pz= zi`ASSUME_TAC;

MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC 0`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> ~(a=0)`;POWER;I_DEF;o_DEF]THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`r`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`zi`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC(90-76)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_TAC 0[`zi`]
THEN MRESA_TAC Tame_list.edge_nondeg_f_xor_ni[`L`;`zi`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`zi=LAST r`];

MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN MRESAL_TAC Tame_list.parts_all_nonnil[`L`;`r`][GSYM Seq.allP]
THEN THAYTHE_TAC 0[`LAST(parts L r)`]
THEN MRESA_TAC Aq23.LAST_FLATTEN_2[`parts L r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`LAST(parts L r)`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`pz`;`LAST(parts L r)`;`parts L r`;`zi`];

MRESA_TAC Aq12.condition_last_parts[`r`;`L`;`pz`;`zi`];



MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`ys= HD py`];

MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`py`]
THEN MRESA_TAC Aq4.prev_el_last_hd[`py`]
THEN GSUBGOAL_THEN`~(prev_el py ys = LAST py)`ASSUME_TAC;


SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`ys`;`py`][]
THEN MRESAL_TAC Seq2.next_prev_id[`HD py`;`py`][];

GABBREV_TAC`pd=prev_el py ys`
THEN MRESA_TAC Seq2.mem_prev_el[`ys`;`py`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`py`;`pd`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`py`;`ys`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`py`;`pd`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHE_TAC (49-43)[`pd`];

MRESAL_TAC Seq2.next_prev_id[`ys`;`py`][]
THEN DICH_TAC (91-88)
THEN RESA_TAC;

MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zi ys f`][ARITH_RULE` 1<=a <=> ~(a=0)`]
THEN GABBREV_TAC`n1=PRE (indexf zi ys f)`
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`ys`;]
THEN MRESA_TAC(ARITH_RULE`!a b c. ~(a=0) /\ a<b/\ SUC c=a==> c<=a/\ 1<b`)[`indexf zi ys f`;`sizel f`;`n1`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`n1`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> ~(a=0)`;POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`ys`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC n1`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;I_DEF;o_DEF]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN SYM_DICH_TAC(105-100)
THEN ASM_REWRITE_TAC[COM_POWER;I_DEF;o_DEF]
THEN REPEAT STRIP_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`(next_el f POWER n1) zi`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`r`][]
THEN DICH_TAC(108-105)
THEN RESA_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`f`][]
THEN MRESA_TAC Seq2.mem_prev_el[`ys`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`pd`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER n1) zi`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC next_core_FST[`(next_el r POWER n1) zi`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC mem_core[`N`;`ys`;`L`;`r`]
THEN MRESA_TAC Tame_list.next_el_refl[`FST ys`;`core L r`]
THEN MRESAL_TAC mem_core[`N`;`zi`;`L`;`r`][Seq.mem_seq1];

SYM_DICH_TAC 0
THEN MRESA_TAC  betwn_betwn_core0_z_y[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESAS_TAC parts_betwn_final[`L`;`f`;`zi`;`ys`][GSYM Seq.allP]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]]);;




let mem_betwn_d_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k)/\
next_el f x= w/\
(find_face L x)=f/\
 ~(FST d = FST (ytrans L N r x 0)) /\ indexf w d  f<= indexf w (ytrans L N r x 0) f/\ MEM d f==> 
(!d1. MEM d1 (betwn r d (ytrans L N r x 0)) <=> MEM d1 (betwn f d (ytrans L N r x 0)))
`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`y0=ytrans L N r x 0`
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;` 0`][List_hypermap.dart_in_face]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(33-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(46-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;

SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

MRESAL_TAC Tame_list.final_list_parts[`L`;`f`][GSYM Seq.allP]
THEN ASM_REWRITE_TAC[Tame_defs2.core]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`d`;`y0`]
THEN MRESA_TAC uniq_fst_find_face[`N`;`r`;`L`;`x`]
THEN MRESAL_TAC uniq_imp_inj[`(FST):(A#A)->A`;`f`][Reduction2.trans0]
THEN MRESA_TAC Aq12.map_betwn[`f`;`d`;`FST:A#A->A`;`y0`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC (55-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(72-66)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y0`;`r`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w y0 r`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESA_TAC Hojodcm.indexf_ytrans_eq_l_m_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d f`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d f`;`w`;`d`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`y0`;`L`;`r`]
THEN CHANGE_TAC`pz=p`
THEN CHANGE_TAC`py=p'`
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core;o_DEF;HD;ETA_AX]
THEN RESA_TAC
THEN MRESAL_TAC Aq12.FST_HD_MAP_betwn[`N`;`L`;`r`;`pz`;`py`;`parts L r`;`y0`;`d`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC More_lemma1.parts_betwn[`N`;`parts L r`;`d`;`y0`;`L`;`r`;`pz`;`py`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf0[`d`;`y0`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y0`;`x`;`L`];


MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+b=c/\ ~(b=0)==> SUC a<=c`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`];

MRESA_TAC Ohcgkfu.uniq_betwn[`d`;`y0`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`d`;`y0`;`r`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`d`;`d1`;`y0`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`d`;`d1`;`y0`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c==> d=b`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`;`indexf d y0 r`]
THEN EQ_TAC;

RESA_TAC
THEN DICH_TAC(98-94)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`d`;`y0`;`d1`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf d d1 r`;`indexf d y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`d`;`d1`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ d+c=e==> b<=e/\ b<=c`)[`indexf d d1 r`;`indexf d1 y0 r`;`indexf d y0 f`;`indexf w d f`;`indexf w y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`d1`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ c<d==> a<=c/\ a<d`)[`indexf w d1 r`;`indexf d1 y0 r`;`indexf w y0 f`;`sizel f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d1`;`r`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d1 r`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`f`;`indexf w d1 r`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d1 r`;`w`;`d1`;`f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c==> b=d`)[`indexf w d1 r`;`indexf d1 y0 f`;`indexf w y0 f`;`indexf d1 y0 r`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`d`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. b+a=c/\ d+a=c==> b=d`)[`indexf d1 y0 r`;`indexf d d1 f`;`indexf d y0 f`;`indexf d d1 r`];

RESA_TAC
THEN DICH_TAC(98-93)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`d`;`y0`;`d1`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf d d1 f`;`indexf d y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`d`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ d+c=e==> b<=e/\ b<=c`)[`indexf d d1 f`;`indexf d1 y0 f`;`indexf d y0 f`;`indexf w d f`;`indexf w y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ c<d==> a<=c/\ a<d`)[`indexf w d1 f`;`indexf d1 y0 f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d1`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d1 f`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d1 f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d1 f`;`w`;`d1`;`r`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`d1`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c==> d=b`)[`indexf w d1 f`;`indexf d1 y0 f`;`indexf w y0 f`;`indexf d1 y0 r`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`d`;`d1`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. b+a=c/\ d+a=c==> d=b`)[`indexf d1 y0 f`;`indexf d d1 f`;`indexf d y0 f`;`indexf d d1 r`]
]);;





let last_betwn_d_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k)/\
next_el f x= w/\
(find_face L x)=f/\
 ~(FST d = FST (ytrans L N r x 0)) /\ indexf w d  f<= indexf w (ytrans L N r x 0) f/\ MEM d f==> LAST (betwn r d (ytrans L N r x 0))=LAST (betwn f d (ytrans L N r x 0))`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`y0=ytrans L N r x 0`
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;` 0`][List_hypermap.dart_in_face]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(33-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(46-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;


SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];


MRESAL_TAC Tame_list.final_list_parts[`L`;`f`][GSYM Seq.allP]
THEN ASM_REWRITE_TAC[Tame_defs2.core]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`d`;`y0`]
THEN MRESA_TAC uniq_fst_find_face[`N`;`r`;`L`;`x`]
THEN MRESAL_TAC uniq_imp_inj[`(FST):(A#A)->A`;`f`][Reduction2.trans0]
THEN MRESA_TAC Aq12.map_betwn[`f`;`d`;`FST:A#A->A`;`y0`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC (55-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(72-66)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y0`;`r`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w y0 r`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESA_TAC Hojodcm.indexf_ytrans_eq_l_m_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d f`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d f`;`w`;`d`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`y0`;`L`;`r`]
THEN CHANGE_TAC`pz=p`
THEN CHANGE_TAC`py=p'`
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core;o_DEF;HD;ETA_AX]
THEN RESA_TAC
THEN MRESAL_TAC Aq12.FST_HD_MAP_betwn[`N`;`L`;`r`;`pz`;`py`;`parts L r`;`y0`;`d`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC More_lemma1.parts_betwn[`N`;`parts L r`;`d`;`y0`;`L`;`r`;`pz`;`py`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf0[`d`;`y0`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y0`;`x`;`L`];

MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d e. a+b=c/\ ~(b=0)/\ c<d/\ c<e==> SUC a<=c/\ 1<d/\ 1<e`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`;`sizel r`;`sizel f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c==> d=b`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`;`indexf d y0 r`];


MRESA_TAC Ohcgkfu.uniq_betwn[`d`;`y0`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`d`;`y0`;`r`];




MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn r d y0 = []`];

MRESA_TAC Tame_list.betwn_nil[`r`;`d`;`y0`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d`;`y0`;`r`]
THEN MRESA_TAC Tame_list.indexf1[`d`;`y0`;`f`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`d`;`y0`];


MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn f d y0 = []`];

MRESA_TAC Tame_list.betwn_nil[`f`;`d`;`y0`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d`;`y0`;`f`]
THEN MRESA_TAC Tame_list.indexf1[`d`;`y0`;`r`]
THEN MRESA_TAC Tame_list.betwn_nil[`r`;`d`;`y0`];

MRESA_TAC Aq23.next_last_betwn[`r`;`d`;`y0`]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`d`;`y0`]
THEN MRESAL_TAC Seq2.prev_next_id[`LAST (betwn r d y0)`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`LAST (betwn f d y0)`;`f`][]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN GABBREV_TAC`d1=prev_el f y0`
THEN MRESAL_TAC Seq2.next_prev_id[`y0`;`f`][]
THEN MRESA_TAC Seq2.mem_prev_el[`y0`;`f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d1`;`y0`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a. ~(a=0)==> 1<=a`)[`indexf d y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`d`;`d1`;`y0`;`f`][]
THEN MRESA_TAC Tame_list.indexf_n[`d`;`d1`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d. a+1=b/\ c+b=d==> 1<=d`)[`indexf d d1 f`;`indexf d y0 f`;`indexf w d f`;`indexf w y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b. a+1=b==> a<=b`)[`indexf w d1 f`;`indexf w y0 f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d1`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d1 f`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d1 f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d1 f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d1 f`;`w`;`d1`;`r`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`d1`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c==> b=d`)[`indexf w d1 f`;`indexf d1 y0 r`;`indexf w y0 f`;`1`]
THEN MRESA_TAC Tame_list.indexf1[`d1`;`y0`;`r`]
THEN MRESAL_TAC Seq2.prev_next_id[`d1`;`r`][]
]);;




let betwn_d_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k)/\
next_el f x= w/\
(find_face L x)=f/\
 ~(FST d = FST (ytrans L N r x 0)) /\ indexf w d  f<= indexf w (ytrans L N r x 0) f/\ MEM d f==> betwn r d (ytrans L N r x 0)=betwn f d (ytrans L N r x 0)`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`y0=ytrans L N r x 0`
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;` 0`][List_hypermap.dart_in_face]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(33-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(46-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;


SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

MRESAL_TAC Tame_list.final_list_parts[`L`;`f`][GSYM Seq.allP]
THEN ASM_REWRITE_TAC[Tame_defs2.core]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`d`;`y0`]
THEN MRESA_TAC uniq_fst_find_face[`N`;`r`;`L`;`x`]
THEN MRESAL_TAC uniq_imp_inj[`(FST):(A#A)->A`;`f`][Reduction2.trans0]
THEN MRESA_TAC Aq12.map_betwn[`f`;`d`;`FST:A#A->A`;`y0`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC (55-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(72-66)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y0`;`r`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w y0 r`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESA_TAC Hojodcm.indexf_ytrans_eq_l_m_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d f`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d f`;`w`;`d`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`y0`;`L`;`r`]
THEN CHANGE_TAC`pz=p`
THEN CHANGE_TAC`py=p'`
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core;o_DEF;HD;ETA_AX]
THEN RESA_TAC
THEN MRESAL_TAC Aq12.FST_HD_MAP_betwn[`N`;`L`;`r`;`pz`;`py`;`parts L r`;`y0`;`d`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC More_lemma1.parts_betwn[`N`;`parts L r`;`d`;`y0`;`L`;`r`;`pz`;`py`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf0[`d`;`y0`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y0`;`x`;`L`];


MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d e. a+b=c/\ ~(b=0)/\ c<d/\ c<e==> SUC a<=c/\ 1<d/\ 1<e`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`;`sizel r`;`sizel f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c==> d=b`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`;`indexf d y0 r`];

MRESA_TAC Ohcgkfu.uniq_betwn[`d`;`y0`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`d`;`y0`;`r`]
THEN MRESA_TAC mem_betwn_d_y[`k`;`w`;`f`;`d`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC last_betwn_d_y[`k`;`w`;`f`;`d`;`L`;`N`;`r`;`x`]
THEN MATCH_MP_TAC Aq12.eq_last_next
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d1=x'`;

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn r d y0 = []`];

MRESA_TAC Tame_list.betwn_nil[`r`;`d`;`y0`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d`;`y0`;`r`]
THEN MRESA_TAC Tame_list.indexf1[`d`;`y0`;`f`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`d`;`y0`];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn f d y0 = []`];


MRESA_TAC Tame_list.betwn_nil[`f`;`d`;`y0`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d`;`y0`;`f`]
THEN MRESA_TAC Tame_list.indexf1[`d`;`y0`;`r`]
THEN MRESA_TAC Tame_list.betwn_nil[`r`;`d`;`y0`];

MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d1=LAST (betwn r d y0)`];

MRESA_TAC Aq4.next_el_last_hd[`betwn r d y0`]
THEN MRESA_TAC Aq4.next_el_last_hd[`betwn f d y0`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`d`;`y0`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`d`;`y0`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`SUC(indexf w d f)`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`;COM_POWER;o_DEF;I_DEF];

MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`f`;`d`;`y0`;`d1`]
THEN MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`r`;`d`;`y0`;`d1`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`d`;`y0`;`d1`;`f`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`d`;`y0`;`d1`;`r`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`d`;`d1`;`y0`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b/\ SUC a<=b`)[`indexf d d1 f`;`indexf d y0 f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`d`;`y0`;`d1`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`d`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ d+c=e/\ SUC a<=c==> b<=e/\ 0<b`)[`indexf d d1 f`;`indexf d1 y0 f`;`indexf d y0 f`;`indexf w d f`;`indexf w y0 f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`d1`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a+b=c/\ 0<b==> a<=c/\ SUC a<=c`)[`indexf w d1 f`;`indexf d1 y0 f`;`indexf w y0 f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d1`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`(indexf w d1 f)`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d1 f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d1 f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d1 f`;`w`;`d1`;`r`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`SUC(indexf w d1 f)`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`;COM_POWER;o_DEF;I_DEF]
]);;




let betwn_core0_d_y=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k)/\
next_el f x= w/\
(find_face L x)=f/\
 ~(FST d = FST (ytrans L N r x 0)) /\ indexf w d  f<= indexf w (ytrans L N r x 0) f/\ MEM d f==>
	    betwn (core L r) (FST d)
	      (FST (ytrans L N r x (0)))
=betwn (core L (find_face L x)) (FST d)
	      (FST (ytrans L N r x 0)) `,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`y0=ytrans L N r x 0`
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;` 0`][List_hypermap.dart_in_face]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(38-32)[Tame_defs2.normal_list]
THEN DICH_ASM_TAC(33-2)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN MP_TAC (SET_RULE`rot n rk = f:(A#A)list
==> (?n1. f = rot n1 rk)`)
THEN ASM_REWRITE_TAC[]
THEN DISCH_TAC
THEN MRESAS_TAC Tame_list.rot_final_list[`L`;`rk`;`f`][]
THEN DICH_ASM_TAC(46-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN GSUBGOAL_THEN`(!x. MEM x f ==> MEM x (list_of_darts L))`ASSUME_TAC;

SYM_DICH_TAC(60-54)
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN DICH_TAC(59-42)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHES_TAC 0[`rk`][];

MRESAL_TAC Tame_list.final_list_parts[`L`;`f`][GSYM Seq.allP]
THEN ASM_REWRITE_TAC[Tame_defs2.core]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`d`;`y0`]
THEN MRESA_TAC uniq_fst_find_face[`N`;`r`;`L`;`x`]
THEN MRESAL_TAC uniq_imp_inj[`(FST):(A#A)->A`;`f`][Reduction2.trans0]
THEN MRESA_TAC Aq12.map_betwn[`f`;`d`;`FST:A#A->A`;`y0`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC (55-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(72-66)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y0`;`r`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w y0 r`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESA_TAC Hojodcm.indexf_ytrans_eq_l_m_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`y0`;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`indexf w d f`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d f`;`indexf w y0 f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d f`;`w`;`d`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`y0`;`L`;`r`]
THEN CHANGE_TAC`pz=p`
THEN CHANGE_TAC`py=p'`
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core;o_DEF;HD;ETA_AX]
THEN RESA_TAC
THEN MRESAL_TAC Aq12.FST_HD_MAP_betwn[`N`;`L`;`r`;`pz`;`py`;`parts L r`;`y0`;`d`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC More_lemma1.parts_betwn[`N`;`parts L r`;`d`;`y0`;`L`;`r`;`pz`;`py`][o_DEF;HD;ETA_AX]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Tame_list.indexf0[`d`;`y0`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y0`;`x`;`L`];


MRESAL_TAC Tame_list.indexf_add_left[`w`;`d`;`y0`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+b=c/\ ~(b=0)==> SUC a<=c`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`];


GSUBGOAL_THEN`LAST pz= d`ASSUME_TAC;

MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`SUC(indexf w d f)`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC(93-66)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_TAC 0[`d`]
THEN MRESA_TAC Tame_list.edge_nondeg_f_xor_ni[`L`;`d`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=LAST r`];

MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN MRESAL_TAC Tame_list.parts_all_nonnil[`L`;`r`][GSYM Seq.allP]
THEN THAYTHE_TAC 0[`LAST(parts L r)`]
THEN MRESA_TAC Aq23.LAST_FLATTEN_2[`parts L r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`LAST(parts L r)`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`pz`;`LAST(parts L r)`;`parts L r`;`d`];

MRESA_TAC Aq12.condition_last_parts[`r`;`L`;`pz`;`d`];



MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`y0= HD py`];

MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`py`]
THEN MRESA_TAC Aq4.prev_el_last_hd[`py`]
THEN GSUBGOAL_THEN`~(prev_el py y0 = LAST py)`ASSUME_TAC;


SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`y0`;`py`][]
THEN MRESAL_TAC Seq2.next_prev_id[`HD py`;`py`][];

GABBREV_TAC`pd=prev_el py y0`
THEN MRESA_TAC Seq2.mem_prev_el[`y0`;`py`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`py`;`pd`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`py`;`y0`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`py`;`pd`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHE_TAC (49-43)[`pd`];


MRESAL_TAC Seq2.next_prev_id[`y0`;`py`][]
THEN DICH_TAC (91-88)
THEN RESA_TAC;

MRESA_TAC(ARITH_RULE`!a b c. a+b=c/\ ~(b=0)==> ~(c=0)`)[`indexf w d f`;`indexf d y0 f`;`indexf w y0 f`]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf w y0 f`][ARITH_RULE` 1<=a <=> ~(a=0)`]
THEN GABBREV_TAC`n1=PRE (indexf w y0 f)`
THEN MRESA_TAC(ARITH_RULE`!a b c. ~(a=0) /\ a<b/\ SUC c=a==> c<=a/\ 1<b`)[`indexf w y0 f`;`sizel f`;`n1`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`n1`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y0`;`f`]
THEN MRESAL_TAC Aq12.next_el_power_trans_eq_f_v0[`SUC n1`;`w`;`L`;`N`;`r`;`x`][ARITH_RULE`A<=A:num`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN SYM_DICH_TAC(109-105)
THEN ASM_REWRITE_TAC[COM_POWER;I_DEF;o_DEF]
THEN REPEAT STRIP_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`(next_el f POWER n1) w`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`r`][]
THEN DICH_TAC(108-105)
THEN RESA_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`f`][]
THEN MRESA_TAC Seq2.mem_prev_el[`y0`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`pd`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER n1) w`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC next_core_FST[`(next_el r POWER n1) w`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC mem_core[`N`;`y0`;`L`;`r`]
THEN MRESA_TAC Tame_list.next_el_refl[`FST y0`;`core L r`]
THEN MRESAL_TAC mem_core[`N`;`d`;`L`;`r`][Seq.mem_seq1];

SYM_DICH_TAC 0
THEN MRESA_TAC betwn_d_y[`k`;`w`;`f`;`d`;`L`;`N`;`r`;`x`]
THEN MRESAS_TAC parts_betwn_final[`L`;`f`;`d`;`y0`][GSYM Seq.allP]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]
]);;



let betwn_core0_z_y=prove(`     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
     (!i. SUC i < k /\  ~(FST (ztrans L N r x i) = FST (ytrans L N r x (SUC i))) ==>
	(betwn (core L r) (FST (ztrans L N r x (i))) (FST (ytrans L N r x (SUC i))) =
	    betwn (core L (rtrans L N r x (SUC i))) (FST (ztrans L N r x (i)))
	      (FST (ytrans L N r x (SUC i)))))`,
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x i`
THEN GABBREV_TAC`yi=ytrans L N r x i`
THEN GABBREV_TAC`ys=ytrans L N r x (SUC i)`
THEN GABBREV_TAC`rs=rtrans L N r x (SUC i)`
THEN GABBREV_TAC`ns=ntrans L N r x (SUC i)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`i`][List_hypermap.dart_in_face]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`ns`;`rs`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 0
THEN EXPAND_TAC"rs"
THEN REWRITE_TAC[GSYM Tame_defs2.ytrans]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN MRESA_TAC final_betwn_core0_z_y[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESAL_TAC betwn_core0_d_y[`transform_count L ns rs x`;`w`;`f`;`zi`;`L`;`ns`;`rs`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 0
THEN EXPAND_TAC"rs"
THEN REWRITE_TAC[GSYM Tame_defs2.ytrans]
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`]
THEN RESA_TAC);;

 end;;



