open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Aq13= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;
open Aq8;;
open Aq12;;
open Tame_list;;


let next_mark_in_rtrans_suc=prove(`!L N r (x:A#A) f w.
         good_list L /\
         good_list_nodes L /\
                marked_list L N r x /\
                ~final_list L r /\
                find_face L x =f/\
                next_el f x=w
                ==>  MEM w (rtrans L N r x 1)`,
REPEAT RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;POWER;o_DEF;Tame_defs2.ytrans;ARITH_RULE`1=SUC 0`;I_DEF;LET_THM;Tame_defs2.split_normal_list;MEM_APPEND]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (l'z L N r x)`
THEN GABBREV_TAC`z=l'z L N r x`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESA_TAC next_mark_case_mem_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC next_mark_mem_r_trans_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf0[`w`;`y`;`r`]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN DICH_ASM_TAC(17-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_ASM_TAC (21-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(29-23)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;MEM_APPEND]
THEN DICH_TAC(36-9)
THEN REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ytrans;MEM_APPEND;Tame_defs2.ntrans]
THEN RESA_TAC);;




let lm_le_rtrans_suc=prove(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
~final_list L (rtrans L N r x 1)
==> l'm L r x<= l'm L (rtrans L N r x 1) x`,


REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el f x`
THEN DICH_ASM_TAC(9-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-1)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GEN_REWRITE_TAC(RAND_CONV o DEPTH_CONV)[Tame_defs2.l_m]
THEN MATCH_MP_TAC (GEN_ALL Qcdvkea.min_num_le)
THEN GEXISTS_TAC`(\m. ~(ITER (SUC (SUC m))
            (next_el (SND ((transform_list L x POWER 1) (N,r))))
            x =
            f_list L
            (ITER (SUC m)
             (next_el (SND ((transform_list L x POWER 1) (N,r))))
            x)))`
THEN REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN ONCE_REWRITE_TAC[POWER]
THEN MRESAL_TAC Aq10.AQ10[`L`;`N`;`r`;`x`][Tame_defs2.rtrans;o_DEF]
THEN REPEAT RESA_TAC
THENL[


MRESA_TAC power_next_s_list_eq_rtrans[`y`;`z`;`z1`;`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC(ARITH_RULE`!a b. a<b==> SUC a<= b/\ a<=b`)[`i`;`l'm L r x`]
THEN THAYTHEL_ASM_TAC 2[`SUC i`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN THAYTHEL_ASM_TAC 0[`i`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESAL_TAC Pwssrat.minnum_not[`l'm L r x`;`(\m. ~(ITER (SUC (SUC m)) (next_el r) x =
                  f_list L (ITER (SUC m) (next_el r) x)))`;`i`][Tame_defs2.l_m;GSYM Tame_list.POWER_TO_ITER;POWER;I_DEF;o_DEF];

DICH_TAC 0
THEN REWRITE_TAC[SET_RULE`~(A={})<=> ?a. a IN A`;IN_ELIM_THM]
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`(rtrans L N r x 1)`][GSYM Seq.allP;NOT_FORALL_THM;NOT_IMP]
THEN CHANGE_TAC `d=x'`
THEN MRESA_TAC next_mark_in_rtrans_suc[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`d`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN GABBREV_TAC`a=indexf w d (SND (split_normal_list L r (find_face L y) y z1))`
THEN GEXISTS_TAC`a`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC (30-26)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN MRESAL_TAC COM_POWER[`a`;`(\d. next_el (SND (split_normal_list L r (find_face L y) y z1)) d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`w`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN RESA_TAC]);;


let s_list_subset_s_list_rtrans=prove(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
~final_list L (rtrans L N r x 1)/\
MEM d (s_list L r x)
==> MEM d (s_list L (SND (split_normal_list L r f y z1)) x)`,

REPEAT RESA_TAC
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.s_list;MEM_MAP;Seq.mem_iota]
THEN RESA_TAC
THEN GEXISTS_TAC`x'`
THEN ASM_REWRITE_TAC[]
THEN CHANGE_TAC`n=x'`
THEN GABBREV_TAC`t=PRE n`
THEN MRESAL_TAC Hypermap.LT_SUC_PRE[`n`][ARITH_RULE`0<a<=> 1<=a`]
THEN DICH_TAC(13-10)
THEN ASM_REWRITE_TAC[ARITH_RULE`SUC a< 1+ b<=> a<b`]
THEN RESA_TAC
THEN MRESAL_TAC lm_le_rtrans_suc[`y`;`f`;`z`;`z1`;`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(13-0)[Tame_defs2.good_list]
THEN GABBREV_TAC`w=next_el f x`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC (22-14)
THEN RESA_TAC
THEN DICH_TAC 0
THEN DICH_TAC (21-13)
THEN ARITH_TAC);;

let cat_snd_split_normal_parts=prove_by_refinement(`
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x 
/\ ~final_list L r==>
parts L (SND (split_normal_list L r (find_face L (l'y L r x)) (l'y L r x) (prev_el r(l'z L N r x)) ))
= cat (parts L (APPEND [(l'z L N r x)] (APPEND (betwn r (l'z L N r x) (l'y L r x)) [(l'y L r x)])))(MAP (\x. [x]) (betwn (find_face L x) ((l'y L r x)) (l'z L N r x)))`,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC (1)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-5)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.quotient_list_core;MEM_MAP;Seq.mem_cat;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[Tame_defs2.core];



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn (find_face L y) y z = []`][Seq.mem_seq1;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;DE_MORGAN_THM;LAST_CLAUSES];


ASM_REWRITE_TAC[APPEND_NIL;MAP;Seq.cats0];



MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESAL_TAC snd_mem_rtran1[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;APPEND_NIL]
THEN MRESAL_TAC Tame_list.next_el_cat_last1[`APPEND [z] (APPEND (betwn r z y) [y])`;`(betwn f y z)`][GSYM Seq2.APPEND_cat;LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`y`;`z`]
THEN GSUBGOAL_THEN`~(next_el f y = f_list L (e_list y))`ASSUME_TAC;



MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESAS_TAC F_LIST_INJ[`L`;`y`;`e_list y`][List_hypermap.darts_of_list;IN_SET_OF_LIST;Tame_list.good_list_e_list;]
THEN DICH_TAC 0
THEN MRESA_TAC Tame_list.is_restricted_e_list_nondeg[`L`;`y`];



MRESAL_TAC Tame_list.parts_cat[`L`;`(APPEND (APPEND [z] (APPEND (betwn r z y) [y])) (betwn f y z))`;
`APPEND [z] (APPEND (betwn r z y) [y])`;`(betwn f y z)`;`y`][GSYM Seq2.APPEND_cat;LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST;MAP_APPEND]
THEN REWRITE_TAC[Seq2.APPEND_cat;Seq.cat_uniq]
THEN MRESAL_TAC parts_f_betwn_pure[`L`;`N`;`r`;`x`][GSYM MAP_o;o_DEF;HD]
]);;


let min_num_lt=prove(`min_num {m | P m} = n
       /\ (!i. i <= m ==> ~(P i))
/\ ~({m | P m}={})
==> m<n`,
REWRITE_TAC[SET_RULE`~(A={})<=> ?a. a IN A`]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Nuxcoea.MIN_LEAST[`{m | P m}`;`a`]
THEN DICH_TAC 1
THEN REWRITE_TAC[IN_ELIM_THM]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b \/ b<=a`)[`m`;`n`]
THEN THAYTHEL_ASM_TAC 4[`n`][ARITH_RULE`~(n<m)<=> m<=n`]);;


let lm_lt_rtrans_suc=prove_by_refinement(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
~final_list L (rtrans L N r x 1)
==> l'm L r x< l'm L (rtrans L N r x 1) x`,
[
REPEAT RESA_TAC
THEN MRESA_TAC lm_le_rtrans_suc[`y`;`f`;`z`;`z1`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b==> a<b\/ a=b`)[`l'm L r x`;`l'm L (rtrans L N r x 1) x`]
THEN MRESA_TAC Aq10.AQ10[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`(rtrans L N r x 1)`;`x`]
THEN THAYTHE_TAC 0[`l'm L r x`]
THEN GABBREV_TAC`w=next_el f x`
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(12-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(20-1)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC power_next_s_list_eq_rtrans[`y`;`z`;`z1`;`f`;`w`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_TAC 0[`l'm L (rtrans L N r x 1) x`][ARITH_RULE`a<=a:num`]
THEN GSUBGOAL_THEN`~({m | ~(ITER (SUC (SUC m)) (next_el (rtrans L N r x 1)) x =
               f_list L (ITER (SUC m) (next_el (rtrans L N r x 1)) x))} =
        {})`ASSUME_TAC;


REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN REWRITE_TAC[SET_RULE`~(A={})<=> ?a. a IN A`;IN_ELIM_THM]
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`(rtrans L N r x 1)`][GSYM Seq.allP;NOT_FORALL_THM;NOT_IMP]
THEN CHANGE_TAC `d=x'`
THEN MRESA_TAC next_mark_in_rtrans_suc[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`d`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN GABBREV_TAC`a=indexf w d (SND (split_normal_list L r (find_face L y) y z1))`
THEN GEXISTS_TAC`a`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC (30-26)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN MRESAL_TAC COM_POWER[`a`;`(\d. next_el (SND (split_normal_list L r (find_face L y) y z1)) d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`w`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN RESA_TAC;


MRESAL_TAC Tame_list.min_num_in[`{m | ~(ITER (SUC (SUC m)) (next_el (rtrans L N r x 1)) x =
                  f_list L (ITER (SUC m) (next_el (rtrans L N r x 1)) x))}`][GSYM Tame_defs2.l_m;IN_ELIM_THM]
THEN DICH_TAC 0
THEN REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MRESA_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN DICH_ASM_TAC(32-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`(ytrans L N r x 0)`;`r`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN GABBREV_TAC`a= l'm L (SND ((transform_list L x POWER 1) (N,r))) x`
THEN MRESAL_TAC COM_POWER[`a`;`(\d. next_el (SND ((transform_list L x POWER 1) (N,r))) d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`w`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN DICH_TAC(41-25)
THEN ASM_REWRITE_TAC[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`betwn f y z=[]`];

MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list]
THEN DICH_TAC 0
THEN MRESAL_TAC betwn_nil[`f`;`y`;`z`][APPEND_NIL]
THEN RESA_TAC
THEN MRESA_TAC Ncvibwu.next_el_last_hd[`y`;`z`;`betwn r z y`]
THEN MRESAL_TAC Hojodcm.mem_ytrans_list_of_darts_v0[`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;I_DEF;o_DEF];


REWRITE_TAC[Tame_list.lower_case]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list;Tame_list.lower_case]
THEN MRESAL_TAC last_cat[`cat (betwn r z y) [y]`;`[z]`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC last_cat[`[y]`;`(betwn r z y)`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC Tame_list.next_el_cat_last1[`(cat [z] (cat (betwn r z y) [y]))`;`(betwn f y z)`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`y`;`z`]
THEN MRESAL_TAC Hojodcm.mem_ytrans_list_of_darts_v0[`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;I_DEF;o_DEF]]);;



let y_in_s_list_suc=prove(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
next_el f x = w/\
~final_list L (rtrans L N r x 1)
==> MEM y (s_list L (rtrans L N r x 1) x)`,


REPEAT RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.s_list;MEM_MAP;Seq.mem_iota]
THEN MRESA_TAC lm_lt_rtrans_suc[`y`;`f`;`z`;`z1`;`L`;`N`;`r`; `x`]
THEN GEXISTS_TAC`SUC (l'm L r x)`
THEN ASM_REWRITE_TAC[ARITH_RULE`1<= SUC a/\ (SUC a< 1+b<=> a<b)`;POWER;o_DEF;I_DEF]
THEN ASM_REWRITE_TAC[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;Tame_list.lower_case]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN DICH_ASM_TAC(12-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_ASM_TAC (17-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(26-20)[Tame_defs2.normal_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`z`;`r`][Tame_defs2.ytrans]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`(ytrans L N r x 0)`;`r`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHEL_TAC 0[`l'm L r x`][ARITH_RULE`a<=a:num`;POWER;I_DEF;o_DEF]);;



let next_ytrans_eq_suc=prove(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
~final_list L (rtrans L N r x 1)
==> next_el (rtrans L N r x 1) y = f_list L y`,

REPEAT RESA_TAC
THEN DICH_ASM_TAC(8-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(16-1)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN DICH_ASM_TAC(21-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list]
THEN GABBREV_TAC`w=next_el f x`
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`betwn f y z=[]`]
THENL[
MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list]
THEN DICH_TAC 0
THEN MRESAL_TAC betwn_nil[`f`;`y`;`z`][APPEND_NIL]
THEN RESA_TAC
THEN MRESA_TAC Ncvibwu.next_el_last_hd[`y`;`z`;`betwn r z y`]
THEN MRESAL_TAC Hojodcm.mem_ytrans_list_of_darts_v0[`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;I_DEF;o_DEF];

REWRITE_TAC[Tame_list.lower_case]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list;Tame_list.lower_case]
THEN MRESAL_TAC last_cat[`cat (betwn r z y) [y]`;`[z]`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC last_cat[`[y]`;`(betwn r z y)`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC Tame_list.next_el_cat_last1[`(cat [z] (cat (betwn r z y) [y]))`;`(betwn f y z)`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`y`;`z`]
THEN MRESAL_TAC Hojodcm.mem_ytrans_list_of_darts_v0[`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;I_DEF;o_DEF]
]);;



let next_betwn_eq_suc=prove(`  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
~final_list L (rtrans L N r x 1)/\
MEM d (betwn f y z)
==> next_el (rtrans L N r x 1) d = f_list L d`,

REPEAT RESA_TAC
THEN DICH_ASM_TAC(9-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-1)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN DICH_ASM_TAC(21-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list]
THEN GABBREV_TAC`w=next_el f x`
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn f y z`;`d`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`LAST(betwn f y z)=d`]
THENL[

REWRITE_TAC[Tame_list.lower_case]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list;Tame_list.lower_case]
THEN MRESAL_TAC Tame_list.next_el_cat_last2[`(cat [z] (cat (betwn r z y) [y]))`;`(betwn f y z)`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
THEN MRESAL_TAC hd_cat[`[z]`;`cat (betwn r z y) [y]`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;HD]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`y`;`z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`y`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;I_DEF;o_DEF;List_hypermap.dart_in_face];

REWRITE_TAC[Tame_list.lower_case]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;Tame_defs2.split_normal_list;Tame_list.lower_case]
THEN MRESAL_TAC Tame_list.next_el_cat2[`d`;`(cat [z] (cat (betwn r z y) [y]))`;`(betwn f y z)`][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`f`;`y`;`z`;`d`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y`;`z`;`d`;`f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`y`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;I_DEF;o_DEF;List_hypermap.dart_in_face]]);;




let snd_split_at_rec_append=prove(`!b:(A)list. uniq(APPEND ((APPEND b [z])) a)
==>(SND (split_at_rec z [] (APPEND ( (APPEND b [z])) a)))=a`,

LIST_INDUCT_TAC
THEN REWRITE_TAC[APPEND;Tame_defs.split_at_rec;Seq.cons_uniq;MEM_APPEND;DE_MORGAN_THM;Seq.mem_seq1]
THEN RESA_TAC
THEN DICH_TAC 4
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.snd_split_at_rec_const[`z`;`(APPEND (APPEND t [z]) a)`;`[h]`;`[]:(A)list`]);;



let fst_split_at_rec_append=prove(`!b:(A)list. uniq(APPEND ((APPEND b [z])) a)
==>(FST (split_at_rec z [] (APPEND ( (APPEND b [z])) a)))=b`,

LIST_INDUCT_TAC
THEN REWRITE_TAC[APPEND;Tame_defs.split_at_rec;Seq.cons_uniq;MEM_APPEND;DE_MORGAN_THM;Seq.mem_seq1]
THEN RESA_TAC
THEN DICH_TAC 4
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.snd_split_at_rec_const[`z`;`(APPEND (APPEND t [z]) a)`;`[h]`;`[]:(A)list`]
THEN MRESA_TAC APPEND_ASSOC[`t`;`[z]`;`a`]
THEN MRESAL_TAC Dangeyj.APPEND_FST_SPLIT[`z`;`(APPEND (APPEND t [z]) a)`;`[h]`;`[]:(A)list`][APPEND_NIL;APPEND]
THEN MRESA_TAC Dangeyj.APPEND_FST_SPLIT[`z`;`APPEND [z] a`;`APPEND [h] t`;`[]:(A)list`]
);;



let  betwn_cat_ex1=prove(`!a. ~(MEM y a)/\ uniq(APPEND (APPEND [y] (APPEND b [z])) a)
       ==> betwn (APPEND (APPEND [y] (APPEND b [z])) a) z y=a `,


REWRITE_TAC[Tame_defs.betwn;LET_THM;Dangeyj.fst_snd_fun;IN_SET_OF_LIST;Tame_defs.split_at;DE_MORGAN_THM;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN DICH_TAC 0
THEN MRESA_TAC APPEND_ASSOC[`[y]`;`b`;`[z]`]
THEN RESA_TAC
THEN MRESA_TAC snd_split_at_rec_append[`z`;`a`;`APPEND [y] b`]
THEN DICH_TAC 1
THEN REWRITE_TAC[Tame_list.lower_case]
THEN REWRITE_TAC[Seq.cat_uniq;Seq.mem_seq1]
THEN RESA_TAC
THEN MRESAL_TAC fst_split_at_rec_append[`z`;`a`;`APPEND [y] b`][Tame_list.lower_case;Seq.cat_uniq;Seq.mem_seq1;]
THEN REWRITE_TAC[Seq.cat1s;Tame_defs.split_at_rec;Seq.cats0]
);;




let betwn_lt_rtrans_suc=prove_by_refinement(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
~final_list L (rtrans L N r x 1)/\
MEM d (betwn f y z)/\
 next_el f x=w
==> indexf w d (rtrans L N r x 1) < l'm L (rtrans L N r x 1) x`,
[


REPEAT RESA_TAC
THEN DICH_ASM_TAC(10-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(18-1)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN REWRITE_TAC[Tame_defs2.l_m]
THEN MATCH_MP_TAC(GEN_ALL min_num_lt)
THEN GEXISTS_TAC`(\m. ~(ITER (SUC (SUC m))
            (next_el (rtrans L N r x 1))
            x =
            f_list L
            (ITER (SUC m)
             (next_el (rtrans L N r x 1))
            x)))`
THEN REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN ONCE_REWRITE_TAC[POWER]
THEN ONCE_REWRITE_TAC[POWER]
THEN MRESAL_TAC Aq10.AQ10[`L`;`N`;`r`;`x`][o_DEF]
THEN RESA_TAC
;



INDUCT_TAC;


REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=y`];


MRESA_TAC next_ytrans_eq_suc[`f`;`z`;`z1`;`y`;`L`;`N`;`r`;` x`];


MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`r`]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC Tame_list.indexf0[`w`;`y`;`r`][ARITH_RULE`~(a=0)<=> 0<a`]
THEN MRESAL_TAC next_s_list_eq_rtrans[`z`;`z1`;`f`;`w`;`y`;`w`;`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHEL_TAC 0[`SUC 0`][ARITH_RULE`SUC 0<=a <=> 0<a`;POWER;I_DEF;o_DEF];


STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<= b==> a<=b`)[`i`;`indexf w d (rtrans L N r x 1)`]
THEN DICH_TAC 2
THEN RESA_TAC
THEN GABBREV_TAC`a=SUC i`
THEN MRESAL_TAC COM_POWER[`a`;`(\d. next_el (rtrans L N r x 1) d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`w`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN GABBREV_TAC`d1=(next_el (rtrans L N r x 1) POWER a) w`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ a=b\/ b<a `)[`a`;`indexf w y r`];



MRESAL_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`][Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.rtrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM]
THEN ASM_REWRITE_TAC[Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ztrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> SUC a<=b/\ a<=b`)[`a`;`indexf w y r`]
THEN MRESA_TAC power_next_s_list_eq_rtrans[`y`;`z`;`z1`;`f`;`w`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_ASM_TAC 0[`SUC a`][COM_POWER;o_DEF;I_DEF]
THEN THAYTHEL_ASM_TAC 0[`a`][COM_POWER;o_DEF;I_DEF]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`r`;`x`]
THEN THAYTHEL_ASM_TAC 0[`a`][POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN THAYTHEL_ASM_TAC 0[`SUC a`][COM_POWER;o_DEF;I_DEF];




MRESAL_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`][Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.rtrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM]
THEN ASM_REWRITE_TAC[Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ztrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM]
THEN STRIP_TAC
THEN MRESA_TAC power_next_s_list_eq_rtrans[`y`;`z`;`z1`;`f`;`w`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_ASM_TAC 0[`a`][ARITH_RULE`a<=a:num`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN DICH_ASM_TAC(38-12)[Tame_defs2.normal_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`y`;`r`][]
THEN MRESAL_TAC next_ytrans_eq_suc[`f`;`z`;`z1`;`y`;`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.rtrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM];




MRESAL_TAC Aq7.indexf_ytrans_eq_l_m1_v0[`L`;`N`;`r`;`x`;`w`][Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.rtrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM]
THEN ASM_REWRITE_TAC[Tame_defs2.ytrans;Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ztrans;Tame_defs2.ytrans;Tame_defs2.transform_list;LET_THM]
THEN STRIP_TAC
THEN MRESA_TAC power_next_s_list_eq_rtrans[`y`;`z`;`z1`;`f`;`w`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_ASM_TAC 0[`indexf w y r`][ARITH_RULE`a<=a:num`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC next_mark_mem_r_trans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`f`;`w`][]
THEN DICH_ASM_TAC(38-12)[Tame_defs2.normal_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`y`;`r`][]
THEN MRESA_TAC next_mark_in_rtrans_suc[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESAL_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN GSUBGOAL_THEN`MEM y (SND (split_normal_list L r (find_face L y) y z1))`ASSUME_TAC
;



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;MEM_APPEND;Seq.mem_seq1]
;



GSUBGOAL_THEN`MEM d (rtrans L N r x 1)
`ASSUME_TAC
;



ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;MEM_APPEND;Seq.mem_seq1;ARITH_RULE`1=SUC 0`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;MEM_APPEND;Seq.mem_seq1]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
;





MRESA_TAC Tame_list.indexf_lt_sizel[`(rtrans L N r x 1)`;`w`;`d`]
THEN DICH_TAC(51-30)
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a<b /\b<=c /\ c<d==> a<d/\ a<c/\ a<=c/\ b<d`)[`l'm L r x`;`a`;`indexf w d (rtrans L N r x 1)`;` sizel (rtrans L N r x 1)`]
THEN
MRESAL_TAC Tame_list.next_eln_indexf[`l'm L r x`;`w`;`y`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`]
THEN MRESA_TAC Tame_list.not_betwn2[`y`;`z`;`f`]
THEN DICH_TAC (57-47)
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list]
THEN RESA_TAC
THEN MRESA_TAC betwn_cat_ex1[`betwn r z y`;`y`;`z`;`betwn f y z`]
THEN MRESAL_TAC Tame_list.indexf_betwn_eq[`(rtrans L N r x 1)`;`y`;`d`;`z`]
[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
THEN DICH_TAC (65-55)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC
THEN DICH_TAC (65-53)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`d`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
THEN ASM_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN DICH_TAC(66-55)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_TAC THEN REWRITE_TAC[th]
THEN REPEAT RESA_TAC
THEN ASSUME_TAC th)
THEN DICH_TAC(66-58)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_TAC THEN REWRITE_TAC[th]
THEN REPEAT RESA_TAC
THEN ASSUME_TAC th)
THEN GABBREV_TAC`s=APPEND (APPEND [z] (APPEND (betwn r z y) [y])) (betwn f y z)`
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`s`;`a`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`d1`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
THEN DICH_TAC 0
THEN EXPAND_TAC "s"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`l'm L r x`;` a`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`a`;`w`;`d1`;`s`]
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ a+d=e/\ c<= e==> b<=d`)[`l'm L r x `;` indexf y d1 s`;` a`;`indexf y d s `;`indexf w d s`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b /\ b<c==> a< c`)[`indexf y d1 s `;`indexf y d s`;`indexf y z s`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y=d1`]
;



DICH_TAC(74-71)
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_list.indexf_refl[`d1`;`s`][ARITH_RULE`a+0=a`]
THEN STRIP_TAC
THEN DICH_TAC(75-50)
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;



MRESA_TAC Tame_list.indexf0[`y`;`d1`;`s`]
THEN DICH_TAC 0
THEN EXPAND_TAC "s"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[ARITH_RULE`~(a=0)<=> 0<a`]
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`s`;`y`;`d1`;`z`]
THEN DICH_TAC 0
THEN EXPAND_TAC "s"
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN ASM_REWRITE_TAC[ARITH_RULE`~(a=0)<=> 0<a`]
THEN RESA_TAC
THEN MRESAL_TAC next_betwn_eq_suc[`z1`;`f`;`y`;`z`;`d1`;`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM;ARITH_RULE`1=SUC 0`;Tame_defs2.split_normal_list;MEM_APPEND;Seq.mem_seq1]
;





REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN REWRITE_TAC[SET_RULE`~(A={})<=> ?a. a IN A`;IN_ELIM_THM]
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`(rtrans L N r x 1)`][GSYM Seq.allP;NOT_FORALL_THM;NOT_IMP]
THEN CHANGE_TAC `d1=x'`
THEN MRESA_TAC next_mark_in_rtrans_suc[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`d1`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN GABBREV_TAC`a=indexf w d1 (SND (split_normal_list L r (find_face L y) y z1))`
THEN GEXISTS_TAC`a`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC (30-26)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN MRESAL_TAC COM_POWER[`a`;`(\d. next_el (SND (split_normal_list L r (find_face L y) y z1)) d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`w`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN RESA_TAC]);;



let betwn_in_s_list_suc=prove(`
  !L N r (x:A#A).
~final_list L r /\
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
l'z L N r x = z /\
l'y L r x = y /\
find_face L x = f /\
prev_el r z = z1 /\
next_el f x = w/\
~final_list L (rtrans L N r x 1)/\
MEM d (betwn f y z)
==> MEM d (s_list L (rtrans L N r x 1) x)`,

REPEAT RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.s_list;MEM_MAP;Seq.mem_iota]
THEN MRESA_TAC betwn_lt_rtrans_suc[`z1`;`y`;`z`;`f`;`w`;`d`;`L`;`N`;`r`;`x`]
THEN GEXISTS_TAC`SUC(indexf w d (rtrans L N r x 1))`
THEN ASM_REWRITE_TAC[ARITH_RULE`1<= SUC a/\ (SUC a< 1+b<=> a<b)`;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Aq10.AQ10[`L`;`N`;`r`;`x`][o_DEF]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`(rtrans L N r x 1)`;`x`]
THEN DICH_ASM_TAC(13-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(21-1)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b. a<b:num==> a<=b`)[`indexf w d (rtrans L N r x 1) `;` l'm L (rtrans L N r x 1) x`]
THEN DICH_TAC (27-13)
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN RESA_TAC
THEN THAYTHE_TAC 0[`indexf w d (rtrans L N r x 1)`]
THEN MRESA_TAC next_mark_in_rtrans_suc[`L`;`N`;`r`;`x`;`f`;`w`]
THEN MRESA_TAC uniq_snd_split_norm[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_n[`w`;`d`;`(rtrans L N r x 1)`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list]
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_ASM_TAC(33-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;MEM_APPEND]
THEN RESA_TAC);;



let case_betwn_prev_el=prove(`~(y = z) /\ MEM y r /\ MEM z r /\ uniq r /\ MEM d (betwn r y z)
==> prev_el r d =y \/ MEM (prev_el r d) (betwn r y z)`,

REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`y`;`d`;`z`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`y`;`prev_el r d`;`z`]
THEN GABBREV_TAC`d1=prev_el r d`
THEN MRESA_TAC Seq2.next_prev_id[`d`;`r`]
THEN MRESA_TAC(SET_RULE`!A. A \/ ~A`)[`d1=y`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y`;`z`;`d`]
THEN MRESA_TAC Seq2.mem_prev_el[`d`;`r`]
THEN MRESA_TAC Tame_list.indexf0[`y`;`d1`;`r`]
THEN ASM_REWRITE_TAC[ARITH_RULE`0<a<=> ~(a=0)`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`y`;`z`;]
THEN MRESA_TAC(ARITH_RULE`!a b c. 0<a /\ a<b/\ b<c==> 1<c/\ 1<=a`)[`indexf y d r`;`indexf y z r`;`sizel r`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d1`;`d`;`r`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`y`;`d1`;`d`;`r`][]
THEN DICH_TAC (18-6)
THEN SYM_DICH_TAC 0
THEN ARITH_TAC);;




let AQ13_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
    ~final_list L (rtrans L N r x 1) ==>
     s_flag_list L (ntrans L N r x 1) (rtrans L N r x 1) x`;;






let AQ13=prove_by_refinement( AQ13_concl,
[


REPEAT RESA_TAC
THEN DICH_TAC 0
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN DICH_TAC(26-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN DICH_TAC (26-10)
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN RESA_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.s_flag_list]
THEN STRIP_TAC;




REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`l1=l'`
THEN DICH_TAC(43-10)
THEN ASM_REWRITE_TAC[Tame_defs2.s_flag_list]
THEN RESA_TAC
THEN MRESA_TAC exists_contour_combinatoric[`z`;`l1`;` l`;`u`;`v`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`];




REWRITE_TAC[Seq.mem_cat;]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`lp=y'`
THEN CHANGE_TAC`r1=r'`
THEN MRESAL_TAC Tame_list.MEM_replace[`r1`;`r`;`[SND (split_normal_list L r f y z1)]`;`N`][Seq.mem_seq1]
THEN DICH_TAC(43-10)
THEN ASM_REWRITE_TAC[Tame_defs2.s_flag_list]
THEN RESA_TAC
;




MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r1`;`p`]
THEN MRESA_TAC Tame_list.MEM_LAST[`p`]
THEN THAYTHE_TAC 1[`lp`]
THEN MRESA_TAC List_hypermap.uniq_flatten[`N`]
THEN MRESA_TAC Aq9.r_not_eq_snd_split_norm_v0[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Hojodcm.NOT_MEM_REPLACE[`r`;`[SND (split_normal_list L r f y z1)]`;`N`][Seq.mem_seq1]
THEN MRESA_TAC(SET_RULE`!a b c. MEM a b/\ ~(MEM c b)==> ~(a=c)`)[`r1`;`(replace r [SND (split_normal_list L r f y z1)] N)`;`r`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`r`;`r1`;`N`;`lp`]
THEN MRESA_TAC s_list_subset_r[`lp`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_TAC (55-43)[`r1`;`p`;`lp`][Seq.mem_cat]
;



MRESAL_TAC s_list_subset_s_list_rtrans[`z`;`e_list (LAST p)`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;



DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
THEN RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[Seq.mem_cat]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM3_replace
THEN ASM_REWRITE_TAC[Seq.mem_cat]
THEN STRIP_TAC
THEN DICH_TAC(59-56)
THEN ASM_REWRITE_TAC[]
;



MRESA_TAC Aq8.AQ_normal_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Aq8.snd_mem_rtran1[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`(ntrans L N r x 1)`;`r1`;`p`]
THEN MRESA_TAC Tame_list.MEM_LAST[`p`]
THEN THAYTHE_TAC 1[`lp`]
THEN MRESA_TAC List_hypermap.uniq_flatten[`N`]
THEN DICH_TAC 1
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM]
THEN ASM_REWRITE_TAC[LET_THM]
THEN STRIP_TAC
THEN DICH_TAC (53-38)
THEN ASM_REWRITE_TAC[]
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM]
THEN ASM_REWRITE_TAC[LET_THM]
THEN MRESA_TAC cat_snd_split_normal_parts[`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM]
THEN ASM_REWRITE_TAC[LET_THM]
THEN RESA_TAC
THEN REWRITE_TAC[Seq.mem_cat]
THEN RESA_TAC
;



DICH_TAC(54-46)
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM;MEM_APPEND]
THEN REWRITE_TAC[LET_THM;MEM_APPEND;Tame_list.lower_case;Seq.cat_uniq]
THEN RESA_TAC
THEN MRESAL_TAC Aq8.MEM_PARTS_IMP[`L`;`p`;`(APPEND [z] (APPEND (betwn r z y) [y]))`][Tame_list.lower_case;Seq.cat_uniq;Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN THAYTHE_TAC 0[`LAST p`]
THEN GSUBGOAL_THEN`MEM(LAST p) r`ASSUME_TAC;





DICH_TAC 0
THEN REWRITE_TAC[Seq.mem_cat;Seq.mem_seq1]
THEN RESA_TAC
;


MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`LAST p`]
;


MRESA_TAC Aq8.parts_mem_exists[`LAST p`;`L`;`r`]
THEN CHANGE_TAC`p1=p'`
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`lp= LAST p1`]
;



MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`MEM (LAST p1) (s_list L r x)`]
;



DICH_TAC(66-40)
THEN MRESAL_TAC s_list_subset_s_list_rtrans[`z`;`lp`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`]
[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;


THAYTHEL_TAC(66-43)[`r`;`p1`;`lp`][Seq.mem_cat;Seq.mem_seq1]
;




MRESAL_TAC s_list_subset_s_list_rtrans[`z`;`e_list lp`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`]
[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;



DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
THEN RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[Seq.mem_cat]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM3_replace
THEN ASM_REWRITE_TAC[Seq.mem_cat]
THEN STRIP_TAC
THEN DICH_TAC(59-56)
THEN ASM_REWRITE_TAC[]
;



MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`MEM p (parts L r)`]
;



MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p`;`p1`;`parts L r`;`lp`]
THEN DICH_TAC(68-64)
THEN RESA_TAC
;



GABBREV_TAC`s=cat [z] (cat (betwn r (z) y) [y])`
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`lp= LAST s`]
;



MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`LAST p = LAST r`]
;



MRESA_TAC LAST_parts[`N`;`L`;`parts L r`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN GABBREV_TAC`p2=LAST (parts L r)`
THEN MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p2`]
THEN MRESA_TAC Tame_list.MEM_LAST[`p2`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN DICH_TAC(78-63)
THEN RESA_TAC
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p1`;`p2`;`parts L r`;`lp`]
THEN DICH_TAC(79-63)
THEN RESA_TAC
;



MRESA_TAC condition_last_parts[`r`;`L`;`p1`;`LAST p`]
THEN DICH_TAC(70-52)
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`s`;`lp`]
THEN MRESA_TAC condition_last_parts[`s`;`L`;`p`;`LAST p`]
THEN DICH_TAC 0
THEN EXPAND_TAC"s"
THEN REWRITE_TAC[Seq.cat_uniq]
THEN RESA_TAC
;




MRESAL_TAC Aq8.next_cat_betwn_same[`z`;`y`;`s`;`r`;`lp`][Tame_list.lower_case]
THEN DICH_TAC (74-68)
THEN MRESAL_TAC last_cat[`(cat (betwn r z y) [y])`;`[z]`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC last_cat[` [y]`;`(betwn r z y)`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
;




MRESAL_TAC last_cat[`(cat (betwn r z y) [y])`;`[z]`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC last_cat[` [y]`;`(betwn r z y)`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
THEN DICH_TAC(71-40)
THEN RESA_TAC
THEN MRESAL_TAC y_in_s_list_suc[`z`;`z1`;`f`;`w`;`y`;`L`;`N`;`r`;`x`]
[Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;




DICH_TAC 0
THEN REWRITE_TAC[MEM_MAP]
THEN RESA_TAC
THEN CHANGE_TAC`d=x'`
THEN DICH_TAC(55-40)
THEN ASM_REWRITE_TAC[LAST];



MRESAL_TAC betwn_in_s_list_suc[`z1`;`w`;`f`;`y`;`z`;`d`;`L`;`N`;`r`;`x`]
[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]

;




DICH_TAC(44-39)
THEN REWRITE_TAC[Seq.mem_seq1]
THEN RESA_TAC
;





MRESA_TAC Aq8.AQ_normal_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Aq8.fst_mem_rtran1[`L`;`N`;`r`;`x`]
THEN MRESA_TAC uniq_fst_split_norm[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`(ntrans L N r x 1) `;`r1`;`p`]
THEN MRESA_TAC Tame_list.MEM_LAST[`p`]
THEN THAYTHE_TAC 1[`lp`]
THEN MRESA_TAC List_hypermap.uniq_flatten[`N`]
THEN DICH_TAC 1
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM]
THEN ASM_REWRITE_TAC[LET_THM]
THEN STRIP_TAC
THEN DICH_TAC (53-38)
THEN ASM_REWRITE_TAC[]
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM]
THEN ASM_REWRITE_TAC[LET_THM]
THEN MRESA_TAC cat_fst_split_normal_parts[`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM]
THEN ASM_REWRITE_TAC[LET_THM]
THEN RESA_TAC
THEN REWRITE_TAC[Seq.mem_cat]
THEN RESA_TAC
;





DICH_TAC 0
THEN REWRITE_TAC[Seq.mem_rev;Seq.mapP]
THEN RESA_TAC
THEN CHANGE_TAC`d=x'`
THEN REWRITE_TAC[Tame_list.lower_case]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC List_hypermap.good_list_uniq[`L`]
THEN DICH_ASM_TAC(58-3)[Hypermap.is_restricted]
THEN MRESAL_TAC Tame_list.simple_hypermap_uniq[`L`][List_hypermap.dart_in_face]
THEN MRESAL_TAC Tame_list.dart_of_card_node[`L`;`d`;`FST d`][List_hypermap.dart_in_face;Tame_defs2.facesAt_list;Tame_list.lower_case]
THEN MRESA_TAC Hojodcm.count_node_face[`d`;`L`]
THEN DICH_ASM_TAC(28-24)[Hypermap.lemma_node_nondegenerate]
THEN MRESA_TAC Lp_gen_theory.dart_list_all[`L`]
THEN THAYTHE_TAC 0[`(\d:A#A. (2 <= CARD (node (hypermap_of_list L) d)))`]
THEN THAYTHES_TAC 0[`d`][List_hypermap.dart_in_face;ARITH_RULE`SUC 0=1`]
THEN ONCE_REWRITE_TAC[MEM_EQ_UPT;]
THEN GABBREV_TAC`a=sizel (filter (MEM (FST d)) L)`
THEN MRESA_TAC Aq4.nil_upt[`a`]
THEN MRESAL_TAC Tame_list.LAST_MAP
[`(rev (upt 1 (sizel (filter (\t. t = FST d) (flatten L)))))`;`(\i. (n_list L POWER i) d)`][Aq4.nil_rev;Tame_list.lower_case]
THEN MRESA_TAC Tame_list.LAST_rev[`upt 1 a`]
THEN MRESA_TAC Aq4.HD_UPT[`a`]
THEN ASM_REWRITE_TAC[ARITH_RULE`1=SUC 0`;POWER;o_DEF;I_DEF;e_n_list]
THEN REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
THEN GABBREV_TAC`d1=prev_el f d`
THEN MRESA_TAC Seq2.next_prev_id[`d`;`f`]
THEN MRESA_TAC(SET_RULE`!A. A \/ ~A`)[`d1=y`];


MRESAL_TAC y_in_s_list_suc[`z`;`z1`;`f`;`w`;`y`;`L`;`N`;`r`;`x`]
[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;



MRESA_TAC case_betwn_prev_el[`d`;`f`;`y`;`z`]
THEN MRESAL_TAC betwn_in_s_list_suc[`z1`;`w`;`f`;`y`;`z`;`d1`;`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;




DICH_TAC(53-45)
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM;MEM_APPEND]
THEN REWRITE_TAC[LET_THM;MEM_APPEND;Tame_list.lower_case;Seq.cat_uniq]
THEN RESA_TAC
THEN MRESAL_TAC Aq8.MEM_PARTS_IMP[`L`;`p`;`APPEND [next_el r y] (APPEND (betwn r (next_el r y) z1) [z1])`;][Tame_list.lower_case;Seq.cat_uniq;Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN THAYTHE_TAC 0[`LAST p`]
THEN GSUBGOAL_THEN`MEM(LAST p) r`ASSUME_TAC
;



DICH_TAC 0
THEN REWRITE_TAC[Seq.mem_cat;Seq.mem_seq1]
THEN RESA_TAC;




MATCH_MP_TAC Seq2.mem_next_el
THEN ASM_REWRITE_TAC[];



MRESA_TAC Tame_list.betwn_mem[`r`;`next_el r y`;`z1`;`LAST p`]
;



MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
;



MRESA_TAC Aq8.parts_mem_exists[`LAST p`;`L`;`r`]
THEN CHANGE_TAC`p1=p'`
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`lp= LAST p1`];




MRESA_TAC s_list_not_in_fst[`z`;`lp`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o DEPTH_CONV)[Tame_defs2.split_normal_list;LET_THM;MEM_APPEND]
THEN ASM_REWRITE_TAC[LET_THM]
THEN DICH_TAC (64-50)
THEN RESA_TAC
THEN RESA_TAC
THEN THAYTHEL_TAC(65-41)[`r`;`p1`;`lp`][Seq.mem_cat] 
THEN MRESA_TAC s_list_in_rtrans[`z`;`e_list (LAST p)`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`]
THEN REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
;




MRESAL_TAC s_list_subset_s_list_rtrans[`z`;`(e_list (LAST p1))`;`f`;`y`;`z1`;`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;





DICH_TAC 1
THEN REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
THEN RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> B\/A`)
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[Seq.mem_cat]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM3_replace
THEN ASM_REWRITE_TAC[Seq.mem_cat]
THEN STRIP_TAC
THEN DICH_TAC(59-56)
THEN ASM_REWRITE_TAC[]
;



MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`MEM p (parts L r)`]
;



MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p`;`p1`;`parts L r`;`lp`]
THEN DICH_TAC(68-64)
THEN RESA_TAC
;



GABBREV_TAC`s=cat [next_el r y] (cat (betwn r (next_el r y) z1) [z1])`
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`lp= LAST s`];




MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`LAST p = LAST r`]
;



MRESA_TAC LAST_parts[`N`;`L`;`parts L r`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN GABBREV_TAC`p2=LAST (parts L r)`
THEN MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p2`]
THEN MRESA_TAC Tame_list.MEM_LAST[`p2`]
THEN MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN DICH_TAC(78-63)
THEN RESA_TAC
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p1`;`p2`;`parts L r`;`lp`]
THEN DICH_TAC(79-63)
THEN RESA_TAC
;





MRESA_TAC condition_last_parts[`r`;`L`;`p1`;`LAST p`]
THEN DICH_TAC(70-52)
THEN ASM_REWRITE_TAC[Tame_list.lower_case]
THEN RESA_TAC
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`s`;`lp`]
THEN MRESA_TAC condition_last_parts[`s`;`L`;`p`;`LAST p`]
THEN DICH_TAC 0
THEN EXPAND_TAC"s"
THEN REWRITE_TAC[Seq.cat_uniq]
THEN RESA_TAC
THEN GABBREV_TAC`y1=next_el r y`
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN MRESA_TAC FST_EQ_NEXT_YTRANS_v0[`y`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC FST_EQ_PREV_ZTRANS_v0[`z1`;`z`;`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y1 =z1`]
;


DICH_TAC(48-41)
THEN DICH_TAC(47-41)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC;




MRESAL_TAC Aq8.next_cat_betwn_same[`next_el r y`;`z1`;`s`;`r`;`lp`][Tame_list.lower_case]
THEN DICH_TAC (84-67)
THEN MRESAL_TAC last_cat[`(cat (betwn r y1 z1) [z1])`;`[y1]`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC last_cat[` [z1]`;`(betwn r y1 z1)`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST];




GABBREV_TAC`y1=next_el r y`
THEN MRESAL_TAC last_cat[`(cat (betwn r y1 z1) [z1])`;`[y1]`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil]
THEN MRESAL_TAC last_cat[` [z1]`;`(betwn r y1 z1)`;][Tame_list.cat_eq_nil;Ohcgkfu.sing_not_nil;LAST]
THEN DICH_TAC(72-68)
THEN RESA_TAC
THEN DICH_TAC(72-23)
THEN MRESA_TAC Seq2.mem_prev_el[`z`;`r`]
THEN MRESA_TAC Seq2.mem_next_el[`y`;`r`]
THEN DICH_TAC(73-20)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHEL_TAC 0[`z1`][Tame_defs2.one_step_list]
THEN MRESA_TAC prev_r_not_eq_f_v0[`z1`;`z`;`L`;`N`;`r`;`x`]
THEN STRIP_TAC
THEN REWRITE_TAC[Tame_defs2.final_dart_list;Seq2.mem_flatten;Seq.mem_filter]
;


MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN MRESA_TAC Tame_list.good_list_e_list[`L`;`z1`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`e_list z1`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESA_TAC List_hypermap.uniq_find_face[`e_list z1`;`L`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`e_list z1`;`(find_face L (e_list z1))`;`SUC 0`][GSYM List_hypermap.dart_in_face;POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`z`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`z`;`(e_list z1)`;`L`]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN DICH_TAC(82-78)
THEN RESA_TAC
THEN MRESA_TAC Seq2.prev_next_id[`e_list z1`;`f`]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`betwn f y z = []`];



MRESA_TAC betwn_nil[`f`;`y`;`z`]
THEN MRESA_TAC Seq2.prev_next_id[`y`;`f`]
THEN DICH_TAC(85-34)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN RESA_TAC
THEN DICH_TAC (85-83)
THEN MRESAL_TAC y_in_s_list_suc[`z`;`z1`;`f`;`w`;`y`;`L`;`N`;`r`;`x`]
[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
;



MRESA_TAC Aq23.next_last_betwn[`f`;`y`;`z`]
THEN MRESA_TAC Seq2.prev_next_id[`LAST (betwn f y z)`;`f`]
THEN MRESA_TAC Tame_list.MEM_LAST[`betwn f y z`]
THEN DICH_TAC(86-34)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN RESA_TAC
THEN DICH_TAC (85-83)
THEN MRESAL_TAC betwn_in_s_list_suc[`z1`;`w`;`f`;`y`;`z`;`LAST(betwn f y z)`;`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
]);;







 end;;





load_end __FILE__;;