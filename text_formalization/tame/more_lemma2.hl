open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FlxSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  More_lemma2 = struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;
open Aq8;;

let FST_next_face_eq_SND=prove(`!L N r x. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r x /\
     ~final_list L r
==> FST(next_el (find_face L x) x)=SND x`,
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN DICH_ASM_TAC (5-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(13-0)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_ASM_TAC(18-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_all_uniq[`L`]
THEN MRESA_TAC Tame_list.simple_hypermap_uniq[`L`]
THEN DICH_ASM_TAC(25-6)[Hypermap.is_restricted;]
THEN MRESA_TAC Tame_list.f_list_fst_snd[`L`;`x`]);;


let MEM_CORE=prove(`!L N r x k. 
MEM d r/\
     good_list L /\
     good_list_nodes L /\
     marked_list L N r x /\
     ~final_list L r
==> MEM (FST d) (core L r)`,
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN DICH_ASM_TAC (5-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(13-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN REWRITE_TAC[Tame_defs2.core]
THEN DICH_ASM_TAC(17-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`][MEM_MAP]
THEN GEXISTS_TAC`p`
THEN ASM_REWRITE_TAC[o_DEF]);;


let prev_core_x=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r x /\
     ~final_list L r
==> prev_el (core L r) (FST(next_el (find_face L x) x))=FST x`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN DICH_ASM_TAC (5-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(13-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC MEM_CORE[`w`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC More_lemma1.sym_power_prev_next[`(core L r)`;`SUC 0`;`FST w`;`FST x`][POWER;I_DEF;o_DEF]
THEN REWRITE_TAC[Tame_defs2.core]
THEN DICH_ASM_TAC(23-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`x`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`w`;`L`;`r`]
THEN CHANGE_TAC`pw=p'`
THEN DICH_TAC (33-17)
THEN REWRITE_TAC[Tame_defs2.core]
THEN STRIP_TAC
THEN MRESA_TAC uniq_imp_inj[`(FST o HD):(A#A)list->A`;`parts L r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.uniq_parts[`L`;`r`]
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`x`][MEM_MAP]
THEN MRESA_TAC Tame_list.next_el_MEM_map[`(parts L r)`;`p`;`(FST o HD):(A#A)list->A`]
THEN DICH_TAC 0
THEN REWRITE_TAC[o_DEF]
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`pw`;`w`][MEM_MAP]
THEN MATCH_MP_TAC(SET_RULE`!a b f. a=b==> f a= f b`)
THEN MATCH_MP_TAC(SET_RULE`!a b f. a=b==> f a= f b`)
THEN MRESA_TAC Tame_list.f_list_quotient_alt[`L`;`N`;`r`;`r`;`p`;`pw`]
THEN MRESA_TAC Tame_list.is_restricted_e_list_nondeg[`L`;`x`]
THEN DICH_ASM_TAC(41-6)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.edge_nondeg_f_xor_ni[`L`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`x=LAST r`]
THENL[

MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN MRESAL_TAC Tame_list.parts_all_nonnil[`L`;`r`][GSYM Seq.allP]
THEN THAYTHE_TAC 0[`LAST(parts L r)`]
THEN MRESA_TAC Aq23.LAST_FLATTEN_2[`parts L r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`LAST(parts L r)`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p`;`LAST(parts L r)`;`parts L r`;`x`]
THEN SYM_DICH_TAC 2
THEN SYM_DICH_TAC (58-52)
THEN ASM_REWRITE_TAC[];

MRESA_TAC Aq12.condition_last_parts[`r`;`L`;`p`;`x`]
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]]);;



let prev_el_core_all_x=prove(`!L N r x k. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
    (!v. 
	     (prev_el (core L r) v,v = x)  ==>
	     (!i. i < k ==> prev_el (core L (rtrans L N r x i)) v,v = x ))`,

REPEAT RESA_TAC
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC prev_core_x[`L`;`(ntrans L N r x i)`;`(rtrans L N r x i)`;`x`]
THEN MRESA_TAC prev_core_x[`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN DICH_TAC(10-6)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th] THEN ASM_REWRITE_TAC[]
THEN ASSUME_TAC(th)
THEN ASM_REWRITE_TAC[])
THEN DICH_ASM_TAC (10-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC MEM_CORE[`w`;`L`;`N`;`r`;`x`]
THEN STRIP_TAC
THEN MRESA_TAC Seq2.next_prev_id[`FST w`;`core L r`]
THEN MRESA_TAC Seq2.next_prev_id[`v`;`core L r`]
THEN DICH_TAC (31-9)
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN GEN_REWRITE_TAC(RAND_CONV o ONCE_DEPTH_CONV)[GSYM PAIR]
THEN REWRITE_TAC[PAIR_EQ]
THEN DICH_TAC(31-9)
THEN GEN_REWRITE_TAC(LAND_CONV o RAND_CONV o ONCE_DEPTH_CONV)[GSYM PAIR]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC);;



let v_final_lemmas=prove(`!L N r x k. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     ~final_list L r /\
     (transform_count L N r x = k) ==>
    (!v. 
	     (prev_el (core L r) v,v = x)  ==>
	     (!i. i < k ==> prev_el (core L (rtrans L N r x i)) v,v = x )
/\ (FST (next_el (find_face L x) x) = v))`,

REPEAT RESA_TAC
THENL[
MRESA_TAC prev_el_core_all_x[`L`;`N`;`r`;`x`;`k`]
THEN THAYTHE_TAC 0[`v`]
THEN THAYTHE_TAC 0[`i`];
MRESA_TAC FST_next_face_eq_SND[`L`;`N`;`r`;`x`]
THEN DICH_TAC 1
THEN GEN_REWRITE_TAC(LAND_CONV o RAND_CONV o ONCE_DEPTH_CONV)[GSYM PAIR]
THEN REWRITE_TAC[PAIR_EQ]
THEN RESA_TAC]);;




let next_core_FST=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r x /\
     ~final_list L r /\
MEM d r
/\ f_list L d= next_el r d
==> next_el (core L r) (FST d)=FST (next_el r d)`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN DICH_ASM_TAC (7-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(15-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`d`;`r`]
THEN MRESA_TAC MEM_CORE[`next_el r d`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN REWRITE_TAC[Tame_defs2.core]
THEN DICH_ASM_TAC(23-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`next_el r d`;`L`;`r`]
THEN CHANGE_TAC`pn=p'`
THEN DICH_TAC (33-17)
THEN REWRITE_TAC[Tame_defs2.core]
THEN STRIP_TAC
THEN MRESA_TAC uniq_imp_inj[`(FST o HD):(A#A)list->A`;`parts L r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.uniq_parts[`L`;`r`]
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`][MEM_MAP]
THEN MRESA_TAC Tame_list.next_el_MEM_map[`(parts L r)`;`p`;`(FST o HD):(A#A)list->A`]
THEN DICH_TAC 0
THEN REWRITE_TAC[o_DEF]
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`pn`;`next_el r d`][MEM_MAP]
THEN MATCH_MP_TAC(SET_RULE`!a b f. a=b==> f a= f b`)
THEN MATCH_MP_TAC(SET_RULE`!a b f. a=b==> f a= f b`)
THEN MRESA_TAC Tame_list.f_list_quotient_alt[`L`;`N`;`r`;`r`;`p`;`pn`]
THEN DICH_TAC(42-28)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_TAC 0[`d`]
THEN MRESA_TAC Tame_list.is_restricted_e_list_nondeg[`L`;`d`]
THEN DICH_ASM_TAC(44-8)[Hypermap.is_restricted]
THEN MRESA_TAC Tame_list.edge_nondeg_f_xor_ni[`L`;`d`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=LAST r`]
THENL[
MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN MRESAL_TAC Tame_list.parts_all_nonnil[`L`;`r`][GSYM Seq.allP]
THEN THAYTHE_TAC 0[`LAST(parts L r)`]
THEN MRESA_TAC Aq23.LAST_FLATTEN_2[`parts L r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`LAST(parts L r)`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p`;`LAST(parts L r)`;`parts L r`;`d`]
THEN SYM_DICH_TAC 2
THEN SYM_DICH_TAC (58-52)
THEN ASM_REWRITE_TAC[];

MRESA_TAC Aq12.condition_last_parts[`r`;`L`;`p`;`d`]
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]]);;



let next_power_core=prove_by_refinement(`!n. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
n<= indexf w (ytrans L N r x 0) r/\
(find_face L x)=f/\
next_el f x=w
==> (next_el (core L r) POWER n) (FST x)=FST ((next_el r POWER n) x)`,
[
INDUCT_TAC;

REWRITE_TAC[POWER;I_DEF;o_DEF];

REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!A B. SUC A<= B==> A<=B`)[`n`;`indexf w (ytrans L N r x 0) r`]
THEN DICH_TAC(8)
THEN RESA_TAC
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN GABBREV_TAC`d=(next_el r POWER n) x`
THEN MATCH_MP_TAC next_core_FST
THEN GEXISTS_TAC`N`
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[]
THEN DICH_ASM_TAC (9-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-11)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`r`;`n`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Kbwpbhq.next_el_power_trans_eq_f[`n`;`w`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]THEN DICH_TAC 0
THEN DICH_TAC(25-7)
THEN REWRITE_TAC[Reduction2.trans0]
THEN RESA_TAC
THEN STRIP_TAC
THEN DICH_ASM_TAC(26-0)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESAL_TAC COM_POWER[`n`;`(\d. next_el r d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`x`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN MRESAL_TAC COM_POWER[`n`;`(\d. next_el f d)`][o_DEF;POWER;I_DEF;GSYM Seq.eq_ext]
THEN THAYTHEL_TAC 0[`x`][I_DEF]
THEN DICH_TAC 0
THEN REWRITE_TAC[BETA_THM;ETA_AX]
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 1<=a`)[`n`];

EXPAND_TAC"d"
THEN POP_ASSUM(fun th-> REWRITE_TAC[th;POWER;I_DEF;o_DEF])
THEN ASM_REWRITE_TAC[];

MRESA_TAC Hypermap.LE_SUC_PRE[`n`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<=b==> a<=b`)[`PRE n`;`indexf w (l'y L r x) r`]
THEN MRESAL_TAC Kbwpbhq.next_el_power_trans_eq_f[`PRE n`;`w`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Reduction2.marked_x_find_face[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`f`;` n`][I_DEF;o_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN DICH_TAC(39-8)
THEN DICH_TAC 4
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN SYM_DICH_TAC 2
THEN RESA_TAC
THEN DICH_TAC(37-19)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_TAC 0[`d`]
THEN STRIP_TAC
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
]);;



let next_power_core_w=prove(`!n. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
n<= indexf w (ytrans L N r x 0) r/\
(find_face L x)=f/\
next_el f x=w
==> (next_el (core L r) POWER n) (FST w)=FST ((next_el r POWER n) w)`,
INDUCT_TAC
THENL[


REWRITE_TAC[POWER;I_DEF;o_DEF];


REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!A B. SUC A<= B==> A<=B`)[`n`;`indexf w (ytrans L N r x 0) r`]
THEN DICH_TAC(8)
THEN RESA_TAC
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN GABBREV_TAC`d=(next_el r POWER n) w`
THEN MATCH_MP_TAC next_core_FST
THEN GEXISTS_TAC`N`
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[]
THEN DICH_ASM_TAC (9-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-11)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`r`;`n`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Kbwpbhq.next_el_power_trans_eq_f[`n`;`w`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_TAC 0
THEN DICH_TAC(25-7)
THEN REWRITE_TAC[Reduction2.trans0]
THEN RESA_TAC
THEN STRIP_TAC
THEN DICH_ASM_TAC(26-0)[Tame_defs2.good_list]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`r`;` SUC 0`][I_DEF;o_DEF;List_hypermap.dart_in_face;POWER]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`r`;` n`][I_DEF;o_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC(33-4)
THEN REWRITE_TAC[Reduction2.trans0]
THEN RESA_TAC
THEN MRESAL_TAC Kbwpbhq.next_el_power_trans_eq_f[`SUC n`;`w`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0;COM_POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Reduction2.marked_x_find_face[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;` n`][I_DEF;o_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]

]);;


let indexf_y_lt_sizel=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     ~final_list L r/\
(find_face L x)=f/\
next_el f x=w
  ==>
indexf w (ytrans L N r x 0) r < sizel (core L r)`,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC (6-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(13-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC MEM_CORE[`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN REWRITE_TAC[Tame_defs2.core]
THEN DICH_TAC (22-17)
THEN REWRITE_TAC[Tame_defs2.core]
THEN STRIP_TAC
THEN MRESAL_TAC uniq_imp_inj[`(FST o HD):(A#A)list->A`;`parts L r`][Tame_list.lower_case;Reduction2.trans0]
THEN MRESA_TAC Seq.size_map[`(FST o HD):(A#A)list->A`;`parts L r`]
THEN GABBREV_TAC`y=l'y L r x`
THEN MRESA_TAC Tame_list.card_le_size[`parts L r`]
THEN GSUBGOAL_THEN`{p| ?d. (p=[d]) /\ MEM d r /\ indexf w d r< indexf w y r} SUBSET (set_of_list (parts L r))`ASSUME_TAC;



REWRITE_TAC[SUBSET;IN_ELIM_THM;IN_SET_OF_LIST]
THEN REPEAT RESA_TAC
THEN DICH_ASM_TAC(29-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`d= LAST p`]
;



MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`d`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`]
THEN MRESA_TAC Seq2.mem_next_el[`d`;`p`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`next_el r d`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 1
THEN STRIP_TAC
THEN MRESA_TAC next_core_FST[`d`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`0`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN MRESAL_TAC Kbwpbhq.next_el_const_le_indexf_y0[`w`;`d`;`L`;`N`;`r`;`x`][Reduction2.trans0]
THEN DICH_TAC 3
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Tame_list.next_el_refl[`FST d`;`core L r`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`y`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;



MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`d= HD p`]
;



MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.prev_el_last_hd[`p`]
THEN GSUBGOAL_THEN`~(prev_el p d = LAST p)`ASSUME_TAC
;


SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN MRESAL_TAC Seq2.next_prev_id[`HD p`;`p`][]
;




GABBREV_TAC`pd=prev_el p d`
THEN MRESA_TAC Seq2.mem_prev_el[`d`;`p`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`pd`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`pd`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHE_TAC (49-43)[`pd`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`0`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN MRESA_TAC(ARITH_RULE(`!a. a=0\/ 1<=a`))[`indexf w d r`]
;



MRESA_TAC Tame_list.indexf0[`w`;`d`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN DICH_TAC(54-11)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC (52-46)
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`x`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`r`][]
THEN MRESA_TAC prev_core_x[`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`FST w`;`core L r`][]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o LAND_CONV o ONCE_DEPTH_CONV)[Tame_defs2.core]
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.next_el_refl[`FST w`;`core L r`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o LAND_CONV o ONCE_DEPTH_CONV)[Tame_defs2.core]
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`y`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;




MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`d`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf w d r`;`sizel r`]
THEN MRESA_TAC Tame_list.next_el_indexf[`pd`;`d`;`r`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`pd`;`d`;`r`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a +1=b /\ b<c==> a<c`)[`indexf w pd r`;`indexf w d r`;`indexf w y r`]
THEN MRESAL_TAC Kbwpbhq.next_el_const_le_indexf_y0[`w`;`pd`;`L`;`N`;`r`;`x`][Reduction2.trans0]
THEN MRESA_TAC next_core_FST[`pd`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.next_el_refl[`FST d`;`core L r`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o LAND_CONV o ONCE_DEPTH_CONV)[Tame_defs2.core]
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`y`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;



MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.next_el_last_hd[`p`]
THEN MRESA_TAC Tame_list.next_el_refl[`d`;`p`]
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[];



MRESA_TAC(ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf w y r`]
;



REWRITE_TAC[ARITH_RULE`0<a<=> ~(a=0)`;Seq.size_eq0]
THEN DICH_ASM_TAC(28-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`];



MRESA_TAC Hypermap.LE_SUC_PRE[`indexf w y r`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> (!x. x<=a<=> x<b)`)[`PRE(indexf w y r)`;`(indexf w y r)`];



GSUBGOAL_THEN`(!x1 y1.
           (0 <= x1 /\ x1 < indexf w y r) /\
           (0 <= y1 /\ y1 < indexf w y r) /\
           [(next_el r POWER x1) w] = [(next_el r POWER y1) w]
           ==> x1 = y1)`ASSUME_TAC
;




REPEAT RESA_TAC
THEN MRESA_TAC Seq.mem_seq1[`(next_el r POWER y1) w`;`(next_el r POWER x1) w`;]
THEN DICH_TAC 0
THEN REWRITE_TAC[ Seq.mem_seq1]
THEN STRIP_TAC
THEN DICH_ASM_TAC(36-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`x1`][POWER;I_DEF;o_DEF]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`y`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`x1`;`indexf w y r`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`w`;`(next_el r POWER x1) w`;`r`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`y1`;`indexf w y r`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`y1`;`w`;`(next_el r POWER y1) w`;`r`]
;



MRESAL_TAC CARD_IMAGE_INJ[`(\n. [(next_el r POWER n)w])`;`0..(PRE(indexf w y r))`][FINITE_NUMSEG;CARD_NUMSEG;IN_NUMSEG;IMAGE;ARITH_RULE`(a+1)-0=SUC a`]
THEN GSUBGOAL_THEN`{p | ?d. p = [d] /\ MEM d r /\ indexf w d r < indexf w y r}= {p | ?x1. (0 <= x1 /\ x1 < indexf w y r) /\ p = [(next_el r POWER x1) w]}`ASSUME_TAC
;



REWRITE_TAC[EXTENSION;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC
THEN RESA_TAC;


GEXISTS_TAC`indexf w d r`
THEN ASM_REWRITE_TAC[ARITH_RULE`0<=a`]
THEN DICH_ASM_TAC(35-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`r`];


GEXISTS_TAC`(next_el r POWER x1) w`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`x1`][POWER;I_DEF;o_DEF]
THEN DICH_ASM_TAC(36-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`y`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`x1`;`indexf w y r`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`w`;`(next_el r POWER x1) w`;`r`]
;


DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN STRIP_TAC;


MRESAL_TAC CARD_SUBSET[`{p | ?d. p = [d] /\ MEM d r /\ indexf w d r < indexf w y r}`;`set_of_list (parts L r)`][FINITE_SET_OF_LIST]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b==> b<=a\/ a<b`)[`indexf w y r`;` CARD (set_of_list (parts L r))`];



MRESAL_TAC CARD_SUBSET_LE[`{p | ?d. p = [d] /\ MEM d r /\ indexf w d r < indexf w y r}`;`set_of_list (parts L r)`][FINITE_SET_OF_LIST]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`y`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN GABBREV_TAC`z=l'z L N r x`
THEN DICH_ASM_TAC(45-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`z`;`L`;`r`]
THEN GSUBGOAL_THEN`p IN set_of_list (parts L r)`ASSUME_TAC;


ASM_REWRITE_TAC[IN_SET_OF_LIST]
;


DICH_TAC 0
THEN SYM_DICH_TAC(53-35)
THEN REWRITE_TAC[IN_ELIM_THM]
THEN RESA_TAC
THEN DICH_TAC (55-52)
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Aq7.indexf_y_le_z_in_r_0[`f`;`w`;`L`;`N`;`r`;`x`][Reduction2.trans0]
THEN DICH_TAC 0
THEN ARITH_TAC;



DICH_TAC 0
THEN DICH_TAC(33-26)
THEN ARITH_TAC
]);;



let indexf1_final_lemmas=prove(`!L N r x. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     ~final_list L r  ==>
(indexf (FST (next_el (find_face L x) x)) (FST (ytrans L N r x 0)) (core L r) =
         indexf (next_el (find_face L x) x) (ytrans L N r x 0) (find_face L x))`,
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w (ytrans L N r x 0) f`;`FST w`;`(FST (ytrans L N r x 0))`;`(core L r)`]
THEN MATCH_DICH_TAC 0
THEN DICH_ASM_TAC (6-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(13-0)[Tame_defs2.good_list]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC MEM_CORE[`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Hojodcm.ytrans_mem_rtrans_v0[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC MEM_CORE[`(ytrans L N r x 0)`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Pbflhet.properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN GABBREV_TAC`y=l'y L r x`
THEN DICH_ASM_TAC(29-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y`;`r`]
THEN MRESAL_TAC next_power_core_w[`N`;`f`;`x`;`L`;`r`;`w`;`indexf w (l'y L r x) r`][Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC indexf_y_lt_sizel[`f`;`w`;`L`;`N`;`r`;`x`][Reduction2.trans0;ARITH_RULE`a<=a:num`]);;


let next_core_FST_SYM=prove(`!L N r d:A#A. 
 is_edge_nondegenerate (hypermap_of_list L)/\
 good_list L /\
     good_list_nodes L /\
    normal_list L N /\
    MEM r N /\
    MEM d r /\
     f_list L d= next_el r d/\
uniq(core L r)
==> next_el (core L r) (FST d)=FST (next_el r d)`,
REPEAT RESA_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.core]
THEN STRIP_TAC
THEN DICH_ASM_TAC(6-2)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`d`]
THEN MRESA_TAC Tame_list.uniq_parts[`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC uniq_imp_inj[`(FST o HD):(A#A)list->A`;`parts L r`]
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`][MEM_MAP]
THEN MRESA_TAC Tame_list.next_el_MEM_map[`(parts L r)`;`p`;`(FST o HD):(A#A)list->A`]
THEN DICH_TAC 0
THEN REWRITE_TAC[o_DEF]
THEN RESA_TAC
THEN MRESA_TAC Seq2.mem_next_el[`d`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`next_el r d`;`L`;`r`]
THEN CHANGE_TAC`pn=p'`
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`pn`;`next_el r d`][MEM_MAP]
THEN MATCH_MP_TAC(SET_RULE`!a b f. a=b==> f a= f b`)
THEN MATCH_MP_TAC(SET_RULE`!a b f. a=b==> f a= f b`)
THEN DICH_TAC(27-11)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_TAC 0[`d`]
THEN MRESA_TAC Tame_list.edge_nondeg_f_xor_ni[`L`;`d`]
THEN DICH_ASM_TAC(29-1)[Tame_defs2.good_list]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=LAST r`]
THENL[
MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN MRESAL_TAC Tame_list.parts_all_nonnil[`L`;`r`][GSYM Seq.allP]
THEN THAYTHE_TAC 0[`LAST(parts L r)`]
THEN MRESA_TAC Aq23.LAST_FLATTEN_2[`parts L r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`LAST(parts L r)`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`p`;`LAST(parts L r)`;`parts L r`;`d`]
THEN MRESA_TAC Tame_list.f_list_quotient_alt[`L`;`N`;`r`;`r`;`p`;`pn`]
THEN SYM_DICH_TAC (42-39)
THEN SYM_DICH_TAC (41-34)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC (40-33)
THEN ASM_REWRITE_TAC[];

MRESA_TAC Aq12.condition_last_parts[`r`;`L`;`p`;`d`]
THEN MRESA_TAC Tame_list.f_list_quotient_alt[`L`;`N`;`r`;`r`;`p`;`pn`]
THEN SYM_DICH_TAC (1)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 2
THEN ASM_REWRITE_TAC[]]);;


let next_power_core_pre=prove_by_refinement(`!n. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r (x:A#A) /\
     (transform_count L N r x = k) /\
0<k /\
n<= indexf zk w f/\
find_face L x=f/\
ztrans L N r x (PRE k) = zk/\
next_el f x=w
==> (next_el (core L r) POWER n) (FST zk)=FST ((next_el r POWER n) zk)`,
[
INDUCT_TAC;

REWRITE_TAC[POWER;I_DEF;o_DEF];

REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!A B. SUC A<= B==> A<=B`)[`n`;`indexf zk w f`]
THEN DICH_TAC(10)
THEN RESA_TAC
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN GABBREV_TAC`d=(next_el r POWER n) zk`
THEN MATCH_MP_TAC next_core_FST
THEN GEXISTS_TAC`N`
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`r`;`n`][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`SUC n`;`k`;`L`;`N`;`r`;`x`][COM_POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;` n`;`k`;`L`;`N`;`r`;`x`][COM_POWER;I_DEF;o_DEF]
THEN MRESA_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`]
THEN THAYTHE_TAC 0[`PRE k`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`n`][POWER;I_DEF;o_DEF]
THEN DICH_ASM_TAC(22-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
]);;




let indexf_y_lt_sizel_pre=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k) /\
0<k ==>
     indexf ((ztrans L N r x (PRE k))) x (find_face L x)<  sizel (core L r) `,
[

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_ASM_TAC (9-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(16-0)[Tame_defs2.good_list]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC MEM_CORE[`zk`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN DICH_TAC (32-27)
THEN REWRITE_TAC[Tame_defs2.core]
THEN STRIP_TAC
THEN MRESAL_TAC uniq_imp_inj[`(FST o HD):(A#A)list->A`;`parts L r`][Tame_list.lower_case;Reduction2.trans0]
THEN MRESA_TAC Seq.size_map[`(FST o HD):(A#A)list->A`;`parts L r`]
THEN MRESA_TAC Tame_list.card_le_size[`parts L r`]
THEN DICH_ASM_TAC(35-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN GSUBGOAL_THEN`{p| ?d. (p=[d]) /\ MEM d f /\ 0<indexf zk d f/\indexf zk d f< indexf zk w f} SUBSET (set_of_list (parts L r))`ASSUME_TAC;





REWRITE_TAC[SUBSET;IN_ELIM_THM;IN_SET_OF_LIST]
THEN REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b/\ SUC a<=b`)[`indexf zk d f `;` indexf zk w f`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`indexf zk d f`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`r`;`indexf zk d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`d= LAST p`]
;




MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`d`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`]
THEN MRESA_TAC Seq2.mem_next_el[`d`;`p`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`next_el r d`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 1
THEN STRIP_TAC
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`SUC(indexf zk d f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC next_core_FST[`d`;`L`;`N`;`r`;`x`]
THEN DICH_TAC (65-62)
THEN RESA_TAC
THEN DICH_TAC 1
THEN RESA_TAC
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Tame_list.next_el_refl[`FST d`;`core L r`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`(l'y L r x)`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;





MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`d= HD p`]
;



MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.prev_el_last_hd[`p`]
THEN GSUBGOAL_THEN`~(prev_el p d = LAST p)`ASSUME_TAC
;



SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN MRESAL_TAC Seq2.next_prev_id[`HD p`;`p`][]
;






GABBREV_TAC`pd=prev_el p d`
THEN MRESA_TAC Seq2.mem_prev_el[`d`;`p`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`pd`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`pd`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHE_TAC (65-59)[`pd`]
;



MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zk d f`][ARITH_RULE` 1<=a<=> 0<a`]
THEN GABBREV_TAC`n=PRE (indexf zk (LAST p) f)`
THEN DICH_TAC(67-49)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 1
THEN REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zk d f`][ARITH_RULE` 1<=a<=> 0<a`]
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a=b/\ b<c==> a<=c`)[`n`;`indexf zk d f`;`indexf zk w f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`PRE(indexf zk d f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN DICH_TAC(69-48)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 2
THEN REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`n`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el r POWER n) zk`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el r POWER n) zk`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`r`;`n`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC next_core_FST[`(next_el r POWER n) zk`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`(next_el r POWER n) zk`;`r`][]
THEN DICH_TAC (76-73)
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Tame_list.next_el_refl[`FST d`;`core L r`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`(l'y L r x)`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;



MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.next_el_last_hd[`p`]
THEN MRESA_TAC Tame_list.next_el_refl[`d`;`p`]
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[];





MRESA_TAC(ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk x f`]
;




REWRITE_TAC[ARITH_RULE`0<a<=> ~(a=0)`;Seq.size_eq0]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`];




GSUBGOAL_THEN`(!x1 y1.
           (0 < x1 /\ x1 < indexf zk w f) /\
           (0 < y1 /\ y1 < indexf zk w f) /\
           [(next_el f POWER x1) zk] = [(next_el f POWER y1) zk]
           ==> x1 = y1)`ASSUME_TAC
;



REPEAT RESA_TAC
THEN MRESA_TAC Seq.mem_seq1[`(next_el f POWER y1) zk`;`(next_el f POWER x1) zk`;]
THEN DICH_TAC 0
THEN REWRITE_TAC[ Seq.mem_seq1]
THEN STRIP_TAC
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`x1`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`x1`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`zk`;`(next_el f POWER x1) zk`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`y1`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`y1`;`zk`;`(next_el f POWER y1) zk`;`f`]
;



MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk w f`]
;



MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`f`]
THEN MRESAL_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN THAYTHE_TAC 0[`PRE k`]
THEN DICH_TAC(0)
THEN ARITH_TAC;



MRESA_TAC Hypermap.LE_SUC_PRE[`indexf zk w f`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> (!x. x<=a<=> x<b)`)[`PRE(indexf zk w f)`;`(indexf zk  w f)`];



MRESAL_TAC CARD_IMAGE_INJ[`(\n. [(next_el f POWER n)zk])`;`1..(PRE(indexf zk w f))`][FINITE_NUMSEG;CARD_NUMSEG;IN_NUMSEG;IMAGE;ARITH_RULE`(a+1)=SUC a`;ARITH_RULE`1<=a <=> 0<a`]
THEN GSUBGOAL_THEN`{p | ?d. p = [d] /\ MEM d f /\ 0< indexf zk d f /\ indexf zk d f < indexf zk w f}= {p | ?x1. (0 < x1 /\ x1 < indexf zk w f) /\ p = [(next_el f POWER x1) zk]}`ASSUME_TAC
;




REWRITE_TAC[EXTENSION;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC
THEN RESA_TAC;



GEXISTS_TAC`indexf zk d  f`
THEN ASM_REWRITE_TAC[ARITH_RULE`0<=a`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`f`];




GEXISTS_TAC`(next_el f POWER x1) zk`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`x1`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`x1`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`zk`;`(next_el f POWER x1) zk`;`f`]
;




DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN STRIP_TAC;




MRESAL_TAC CARD_SUBSET[`{p | ?d. p = [d] /\
               MEM d f /\
               0 < indexf zk d f /\
               indexf zk d f < indexf zk w f}`;`set_of_list (parts L r)`][FINITE_SET_OF_LIST]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b==> b<=a\/ a<b`)[`indexf zk w f-1`;` CARD (set_of_list (parts L r))`];






MRESAL_TAC CARD_SUBSET_LE[`{p | ?d. p = [d] /\
               MEM d f /\
               0 < indexf zk d f /\
               indexf zk d f < indexf zk w f}`;`set_of_list (parts L r)`][FINITE_SET_OF_LIST]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`l'y L r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z=l'z L N r x`
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`w`;`L`;`r`]
THEN GSUBGOAL_THEN`p IN set_of_list (parts L r)`ASSUME_TAC;



ASM_REWRITE_TAC[IN_SET_OF_LIST]
;



DICH_TAC 0
THEN SYM_DICH_TAC(66-51)
THEN REWRITE_TAC[IN_ELIM_THM]
THEN RESA_TAC
THEN DICH_TAC (67-63)
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN ARITH_TAC;



MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`x`;`w`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b. a+1=b==> a=b-1`)[`indexf zk x f`;`indexf zk w f`]
THEN DICH_TAC (55-50)
THEN DICH_TAC (54-35)
THEN ARITH_TAC;
]);;


let indexf2_final_lemmas=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k) /\
0<k ==>
     (indexf (FST (ztrans L N r x (PRE k))) (FST x) (core L r) =
         indexf (ztrans L N r x (PRE k)) x (find_face L x))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zk x f`;`FST zk`;`(FST x)`;`(core L r)`]
THEN MATCH_DICH_TAC 0
THEN DICH_ASM_TAC (9-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(16-0)[Tame_defs2.good_list]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC MEM_CORE[`zk`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC indexf_y_lt_sizel_pre[`k`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk w f`]
THENL[
MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`f`]
THEN MRESAL_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN THAYTHE_TAC 0[`PRE k`]
THEN DICH_TAC(0)
THEN ARITH_TAC;

MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`x`;`w`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b. a+1=b==> a<=b`)[`indexf zk x f`;`indexf zk w f`]
THEN MRESA_TAC next_power_core_pre[`N`;`k`;`f`;`x`;`w`;`L`;`r`;`zk`;`indexf zk x f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`indexf zk x f`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`x`;`f`]]);;




let next_power_core_ytran=prove_by_refinement(
`!n. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r (x:A#A) /\
     (transform_count L N r x = k) /\
SUC i<k/\
n<= indexf zi yi f/\
find_face L x=f/\
ztrans L N r x (i) = zi/\
ytrans L N r x (SUC i) = yi/\
next_el f x=w
==> (next_el (core L r) POWER n) (FST zi)=FST ((next_el r POWER n) zi)`,
[
INDUCT_TAC;


REWRITE_TAC[POWER;I_DEF;o_DEF];


REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!A B. SUC A<= B==> A<=B`)[`n`;`indexf zi yi f`]
THEN DICH_TAC(11)
THEN RESA_TAC
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN GABBREV_TAC`d=(next_el r POWER n) zi`
THEN MATCH_MP_TAC next_core_FST
THEN GEXISTS_TAC`N`
THEN GEXISTS_TAC`x`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> 0<b/\ a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`r`;`n`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`n`;`i`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC n`;`i`;`L`;`N`;`r`;`x`][COM_POWER;I_DEF;o_DEF]
THEN MRESA_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`i`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`f`;`n`][POWER;I_DEF;o_DEF]
THEN DICH_ASM_TAC(24-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
]);;



let indexf_z_lt_sizel_ytran=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r (x:A#A) /\
     (transform_count L N r x = k) /\
SUC i<k/\
find_face L x=f/\
ztrans L N r x (i) = zi/\
ytrans L N r x (SUC i) = yi/\
next_el f x=w
==>
indexf zi yi f<  sizel (core L r) `,
[

REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> 0<b/\ a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_ASM_TAC (13-2)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(21-0)[Tame_defs2.good_list]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC MEM_CORE[`zi`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC MEM_CORE[`yi`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESAL_TAC next_power_core_ytran[`k`;`N`;`i`;`yi`;`f`;`x`;`w`;`L`;`r`;`zi`;`indexf zi yi f`][ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`i`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`yi`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi yi f`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`]
THEN DICH_TAC (38-32)
THEN REWRITE_TAC[Tame_defs2.core]
THEN STRIP_TAC
THEN MRESAL_TAC uniq_imp_inj[`(FST o HD):(A#A)list->A`;`parts L r`][Tame_list.lower_case;Reduction2.trans0]
THEN MRESA_TAC Seq.size_map[`(FST o HD):(A#A)list->A`;`parts L r`]
THEN MRESA_TAC Tame_list.card_le_size[`parts L r`]
THEN DICH_ASM_TAC(41-16)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN GSUBGOAL_THEN`{p| ?d. (p=[d]) /\ MEM d f /\ 0< indexf zi d f /\indexf zi d f< indexf zi yi f} SUBSET (set_of_list (parts L r))`ASSUME_TAC
;




REWRITE_TAC[SUBSET;IN_ELIM_THM;IN_SET_OF_LIST]
THEN REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b/\ SUC a<=b`)[`indexf zi d f `;` indexf zi yi f`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESA_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi d f`;`i`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`r`;`indexf zi d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Aq8.parts_mem_exists[`d`;`L`;`r`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`d= LAST p`]
;






MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`d`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`]
THEN MRESA_TAC Seq2.mem_next_el[`d`;`p`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`next_el r d`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 1
THEN STRIP_TAC
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC(indexf zi d f)`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC next_core_FST[`d`;`L`;`N`;`r`;`x`]
THEN DICH_TAC (65-62)
THEN RESA_TAC
THEN DICH_TAC 1
THEN RESA_TAC
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Tame_list.next_el_refl[`FST d`;`core L r`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`(l'y L r x)`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;




MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`d= HD p`]
;




MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.prev_el_last_hd[`p`]
THEN GSUBGOAL_THEN`~(prev_el p d = LAST p)`ASSUME_TAC
;



SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN MRESAL_TAC Seq2.next_prev_id[`HD p`;`p`][]
;




GABBREV_TAC`pd=prev_el p d`
THEN MRESA_TAC Seq2.mem_prev_el[`d`;`p`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`pd`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`d`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`pd`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHE_TAC (65-59)[`pd`]
;





MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zi d f`][ARITH_RULE` 1<=a<=> 0<a`]
THEN GABBREV_TAC`n=PRE (indexf zi (LAST p) f)`
THEN DICH_TAC(67-49)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 1
THEN REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zi d f`][ARITH_RULE` 1<=a<=> 0<a`]
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a=b/\ b<c==> a<=c`)[`n`;`indexf zi d f`;`indexf zi yi f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`PRE(indexf zi d f)`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN DICH_TAC(69-48)
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 2
THEN REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`f`;`n`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el r POWER n) zi`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el r POWER n) zi`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`r`;`n`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC next_core_FST[`(next_el r POWER n) zi`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Seq2.next_prev_id[`d`;`p`][]
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`(next_el r POWER n) zi`;`r`][]
THEN DICH_TAC (76-73)
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Tame_list.next_el_refl[`FST d`;`core L r`]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`(l'y L r x)`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
;



MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.next_el_last_hd[`p`]
THEN MRESA_TAC Tame_list.next_el_refl[`d`;`p`]
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[];




MRESA_TAC Aq8.parts_mem_exists[`zi`;`L`;`r`]
THEN GSUBGOAL_THEN`p IN set_of_list (parts L r)`ASSUME_TAC;




ASM_REWRITE_TAC[IN_SET_OF_LIST]
;


GSUBGOAL_THEN`~(p IN {p | ?d. p = [d] /\
               MEM d f /\
               0 < indexf zi d f /\
               indexf zi d f < indexf zi yi f})`ASSUME_TAC
;




REWRITE_TAC[IN_ELIM_THM]
THEN RESA_TAC
THEN DICH_TAC(54-49)
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN RESA_TAC
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`f`]
THEN ARITH_TAC
;





GSUBGOAL_THEN`(!x1 y1.
           (0 < x1 /\ x1 < indexf zi yi f) /\
           (0 < y1 /\ y1 < indexf zi yi f) /\
           [(next_el f POWER x1) zi] = [(next_el f POWER y1) zi]
           ==> x1 = y1)`ASSUME_TAC
;




REPEAT RESA_TAC
THEN MRESA_TAC Seq.mem_seq1[`(next_el f POWER y1) zi`;`(next_el f POWER x1) zi`;]
THEN DICH_TAC 0
THEN REWRITE_TAC[ Seq.mem_seq1]
THEN STRIP_TAC
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`f`;`x1`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`yi`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`x1`;`indexf zi yi f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`zi`;`(next_el f POWER x1) zi`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`y1`;`indexf zi yi f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`y1`;`zi`;`(next_el f POWER y1) zi`;`f`]
;


MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zi yi f`]
;



MRESA_TAC Tame_list.indexf0[`zi`;`yi`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`yi`;`f`]
THEN REWRITE_TAC[ARITH_RULE`0<a<=> ~(a=0)`;Seq.size_eq0]
THEN MATCH_MP_TAC Tame_list.parts_nonnil
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
;




MRESA_TAC Hypermap.LE_SUC_PRE[`indexf zi yi f`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> (!x. x<=a<=> x<b)`)[`PRE(indexf zi yi f)`;`(indexf zi  yi f)`];






MRESAL_TAC CARD_IMAGE_INJ[`(\n. [(next_el f POWER n)zi])`;`1..(PRE(indexf zi yi f))`][FINITE_NUMSEG;CARD_NUMSEG;IN_NUMSEG;IMAGE;ARITH_RULE`(a+1)=SUC a`;ARITH_RULE`1<=a <=> 0<a`]
THEN GSUBGOAL_THEN`{p | ?d. p = [d] /\ MEM d f /\ 0< indexf zi d f /\ indexf zi d f < indexf zi yi f}= {p | ?x1. (0 < x1 /\ x1 < indexf zi yi f) /\ p = [(next_el f POWER x1) zi]}`ASSUME_TAC
;



REWRITE_TAC[EXTENSION;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC
THEN RESA_TAC;




GEXISTS_TAC`indexf zi d  f`
THEN ASM_REWRITE_TAC[ARITH_RULE`0<=a`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`];




GEXISTS_TAC`(next_el f POWER x1) zi`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zi`;`f`;`x1`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`yi`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`x1`;`indexf zi yi f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`zi`;`(next_el f POWER x1) zi`;`f`]
;




DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN STRIP_TAC;




GSUBGOAL_THEN`{p | ?d. p = [d] /\
               MEM d f /\
               0 < indexf zi d f /\
               indexf zi d f < indexf zi yi f} SUBSET
      set_of_list (parts L r) DELETE p`ASSUME_TAC
;


REWRITE_TAC[SUBSET;DELETE;]
THEN REPEAT RESA_TAC
THEN REWRITE_TAC[IN_ELIM_THM]
THEN DICH_TAC(57-47)
THEN REWRITE_TAC[SUBSET]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x'`]
THEN STRIP_TAC
THEN DICH_TAC 2
THEN RESA_TAC;



MRESAL_TAC CARD_DELETE[`p`;`set_of_list (parts L r)`][FINITE_SET_OF_LIST;FINITE_DELETE]
THEN MRESAL_TAC CARD_SUBSET[`{p | ?d. p = [d] /\
               MEM d f /\
               0 < indexf zi d f /\
               indexf zi d f < indexf zi yi f}`;`set_of_list (parts L r) DELETE p`][FINITE_SET_OF_LIST;FINITE_DELETE]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b==> b<=a\/ a<b`)[`indexf zi yi f-1`;` CARD (set_of_list (parts L r))-1`];




MRESAL_TAC CARD_SUBSET_LE[`{p | ?d. p = [d] /\
               MEM d f /\
               0 < indexf zi d f /\
               indexf zi d f < indexf zi yi f}`;`set_of_list (parts L r) DELETE p`][FINITE_SET_OF_LIST;FINITE_DELETE]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`l'y L r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z=l'z L N r x`
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`i`]
THEN GABBREV_TAC`ys=(ytrans L N r x i)`
THEN MRESA_TAC Aq8.parts_mem_exists[`ys`;`L`;`r`]
THEN GSUBGOAL_THEN`p' IN set_of_list (parts L r) DELETE p`ASSUME_TAC
;


ASM_REWRITE_TAC[IN_SET_OF_LIST;DELETE;IN_ELIM_THM]
THEN STRIP_TAC
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p'`;`ys`][MEM_MAP]
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p'`;`zi`][MEM_MAP]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC Tame_list.QRDYXYJ_list[`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`][GSYM Tame_defs2.ytrans;GSYM Tame_defs2.ztrans]
;



DICH_TAC 0
THEN SYM_DICH_TAC(80-61)
THEN REWRITE_TAC[IN_ELIM_THM]
THEN RESA_TAC
THEN DICH_TAC (67-63)
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN STRIP_TAC 
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf zi ys f`;`indexf zi yi f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`i`][List_hypermap.dart_in_face]
THEN MRESAL_TAC Tame_list.indexf_add_left[`zi`;`ys`;`yi`;`f`][]
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`yi`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w ys f`;`indexf w zi f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`ys`;`zi`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`indexf w ys f`;`indexf w zi f`;`indexf w yi f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`ys`;`yi`;`f`][]
THEN DICH_TAC 0
THEN SYM_DICH_TAC (92-89)
THEN SYM_DICH_TAC (91-90)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+b=(a+c)+d<=> b=c+d:num`] 
THEN SYM_DICH_TAC (90-85)
THEN ASM_REWRITE_TAC[ARITH_RULE`a=b+c+a<=> b=0/\ c=0:num`] 
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf0[`ys`;`zi`;`f`]
THEN DICH_TAC(92-85)
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;



MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a-1< b-1==> a<b`)[`indexf zi yi f`;`CARD (set_of_list (parts L r))`]
THEN DICH_TAC 0
THEN DICH_TAC(60-40)
THEN ARITH_TAC
]);;


let indexf3_final_lemmas=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k) 
==> 
(!i. SUC i < k
      ==> indexf (FST (ztrans L N r x i)) (FST (ytrans L N r x (SUC i))) (core L r) =
          indexf (ztrans L N r x i) (ytrans L N r x (SUC i)) (find_face L x))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x (i)`
THEN GABBREV_TAC`yi=ytrans L N r x (SUC i)`
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> 0<b/\ a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zi yi f`;`FST zi`;`(FST yi)`;`(core L r)`]
THEN MATCH_DICH_TAC 0
THEN DICH_ASM_TAC (14-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(21-0)[Tame_defs2.good_list]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC MEM_CORE[`zi`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC MEM_CORE[`yi`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESAL_TAC next_power_core_ytran[`k`;`N`;`i`;`yi`;`f`;`x`;`w`;`L`;`r`;`zi`;`indexf zi yi f`][ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`i`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`yi`;`f`]
THEN MRESAL_TAC Kbwpbhq.betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi yi f`;`i`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC indexf_z_lt_sizel_ytran[`k`;`i`;`w`;`zi`;`yi`;`f`;`L`;`N`;`r`;`x`]
);;


let indexf_ztrans_lt_find_face=prove(`!L N r x.
         good_list L /\
         good_list_nodes L /\
         marked_list L N r x /\
         ~final_list L r /\
         find_face L x = f /\
         next_el f x = w
         ==> (!i.  i < transform_count L N r x
                  ==> indexf w (ztrans L N r x 0) f <=
                      indexf w (ztrans L N r x i) f)`,
REPEAT GEN_TAC
THEN RESA_TAC
THEN INDUCT_TAC
THENL[
ARITH_TAC;

RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!A B. SUC A< B==> A<B`)[`i`;`transform_count L N r x`]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`SUC i`]
THEN THAYTHE_TAC 0[`SUC i`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN ARITH_TAC]);;



let indexf4_final_lemmas=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k) 
==> 
(!i. SUC i < k
       ==> indexf (ytrans L N r x 0) (ztrans L N r x i) (find_face L x) <=
       indexf (ytrans L N r x 0) (ytrans L N r x (SUC i)) (find_face L x))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x (i)`
THEN GABBREV_TAC`yi=ytrans L N r x (SUC i)`
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> 0<b/\ a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z=l'z L N r x`
THEN MRESA_TAC More_lemma1.indexf_ztrans_lt[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 0<i`)[`i`]
THENL[


POP_ASSUM(fun th-> ASM_TAC THEN REWRITE_TAC[th;Reduction2.trans0] THEN REPEAT RESA_TAC THEN ASSUME_TAC th)
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`]
THEN THAYTHEL_TAC 0[`0`][Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`i`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`i`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face;Reduction2.trans0]
THEN DICH_ASM_TAC(22-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`yi`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`zi`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`indexf w y f`;`indexf w zi f`;`indexf w yi f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`yi`;`f`][]
THEN DICH_TAC(34-14)
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 1
THEN ARITH_TAC;

THAYTHEL_TAC 1[`i`][Reduction2.trans0]
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`]
THEN THAYTHEL_TAC 0[`0`][Reduction2.trans0]
THEN MRESA_TAC indexf_ztrans_lt_find_face[`w`;`f`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_TAC 0[`i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`indexf w y f`;`indexf w z f`;`indexf w zi f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<=c==> a<=c`)[`indexf w y f`;`indexf w zi f`;`indexf w yi f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`i`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`i`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`i`][GSYM List_hypermap.dart_in_face;Reduction2.trans0]
THEN DICH_ASM_TAC(27-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`0`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`yi`;`f`][]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`yi`;`f`][]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`zi`;`f`][]
THEN DICH_TAC 1
THEN SYM_DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN ARITH_TAC]);;


let indexf_ytrans_lt_find_face=prove(
`!L N r x.
         good_list L /\
         good_list_nodes L /\
         marked_list L N r x /\
         ~final_list L r /\
         find_face L x = f /\
         next_el f x = w
         ==> (!i.  i < transform_count L N r x
                  ==> indexf w (ytrans L N r x 0) f <=
                      indexf w (ytrans L N r x i) f)`,

REPEAT GEN_TAC
THEN RESA_TAC
THEN INDUCT_TAC
THENL[
ARITH_TAC;

RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!A B. SUC A< B==> A<B`)[`i`;`transform_count L N r x`]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN THAYTHE_TAC 0[`i`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN DICH_TAC 3
THEN ARITH_TAC]);;



let indexf5_final_lemmas=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k) 
==> (!i. SUC i < k
       ==> indexf (ytrans L N r x 0) (ytrans L N r x (SUC i)) (find_face L x) <=
       indexf (ytrans L N r x 0) (ztrans L N r x (SUC i)) (find_face L x))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zi=ztrans L N r x (SUC i)`
THEN GABBREV_TAC`yi=ytrans L N r x (SUC i)`
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> 0<b/\ a<b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`SUC i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z=l'z L N r x`
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN THAYTHEL_TAC 0[`SUC i`][GSYM List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESA_TAC indexf_ytrans_lt_find_face[`w`;`f`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_TAC 0[`SUC i`][Reduction2.trans0]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<=c`)[`indexf w y f`;`indexf w yi f`;`indexf w (ztrans L N r x (SUC i)) f`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`SUC i`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`0`][List_hypermap.dart_in_face;Reduction2.trans0]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`SUC i`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`SUC i`][GSYM List_hypermap.dart_in_face;Reduction2.trans0]
THEN DICH_ASM_TAC(24-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> b<=c`)[`indexf w y f`;`indexf w yi f`;`indexf w (ztrans L N r x (SUC i)) f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`yi`;`f`][]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`yi`;`(ztrans L N r x (SUC i))`;`f`][]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`zi`;`f`][]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ARITH_TAC);;





let indexf6_final_lemmas=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k 
==>(indexf (next_el (find_face L x) x) (ztrans L N r x (PRE k)) (find_face L x) <=
	 indexf (next_el (find_face L x) x) x (find_face L x))`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESAL_TAC (ARITH_RULE`!a. a=0\/ ~(a=0)`)[`indexf w zk f`][ARITH_RULE`0<=a`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=zk`];

MRESAL_TAC Tame_list.indexf_refl[`w`;`f`][ARITH_RULE`0<=a`];

DICH_ASM_TAC(20-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_ASM_TAC (24-3)[Tame_defs2.marked_list;];


MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=x`];

DICH_TAC (32-29)
THEN RESA_TAC
THEN DICH_ASM_TAC(32-25)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Tame_list.next_el_refl[`x`;`r`]
THEN DICH_TAC (39-14)
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN STRIP_TAC
THEN DICH_TAC (39-19)
THEN ASM_REWRITE_TAC[Seq.mem_seq1];

MRESA_TAC Tame_list.indexf_antisym[`w`;`zk`;`f`]
THEN MRESA_TAC Tame_list.indexf_antisym[`w`;`x`;`f`]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`zk`;]
THEN MRESA_TAC(ARITH_RULE`!a b:num. ~(a=0)/\ a<b==> 1<b/\ 1<=a`)[`indexf w zk f `;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN DICH_TAC(39-34)
THEN SYM_DICH_TAC(38-33)
THEN ASM_REWRITE_TAC[]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a+1=b+c/\ ~(c=0)==> b<=a`)[`indexf w x f`;` indexf w zk f `;` indexf zk w f`]
THEN MATCH_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]]);;



let indexf7_final_lemmas=prove(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k 
==>(indexf (next_el (find_face L x) x) (ytrans L N r x 0) (find_face L x) <=
         indexf (next_el (find_face L x) x) (ztrans L N r x (PRE k)) (find_face L x))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z=l'z L N r x`
THEN MRESA_TAC indexf_ztrans_lt_find_face[`w`;`f`;`L`;`N`;`r`;`x`]
THEN THAYTHEL_TAC 0[`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`]
THEN THAYTHEL_TAC 0[`0`][Reduction2.trans0]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC);;



let next_power_core_w_face=prove(`!n. 
     good_list L /\
     good_list_nodes L /\
     marked_list L N r (x:A#A) /\
     ~final_list L r /\
n<= indexf w (ytrans L N r x 0) f/\
(find_face L x)=f/\
next_el f x=w
==> (next_el (core L r) POWER n) (FST w)=FST ((next_el f POWER n) w)`,
REWRITE_TAC [Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN REPEAT RESA_TAC
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC Pbflhet.indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`(ytrans L N r x 0)`;`r`;`x`;`0`][Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC Kbwpbhq.next_el_power_trans_eq_f[`n`;`w`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]THEN SYM_DICH_TAC 0
THEN MATCH_MP_TAC next_power_core_w
THEN ASM_REWRITE_TAC [Reduction2.trans0;ARITH_RULE`a<=a:num`]);;



let indexf1_final_lemmas_face=prove(`!L N r x. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     ~final_list L r 
/\ MEM d (find_face L x) 
/\ indexf (next_el (find_face L x) x) d (find_face L x)<= indexf (next_el (find_face L x) x) (ytrans L N r x 0) (find_face L x)
 ==>
(indexf (FST (next_el (find_face L x) x)) (FST d) (core L r) =
         indexf (next_el (find_face L x) x) d (find_face L x))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d f`;`FST w`;`(FST d)`;`(core L r)`]
THEN MATCH_DICH_TAC 0
THEN DICH_ASM_TAC (8-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(15-0)[Tame_defs2.good_list]
THEN MRESA_TAC MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESA_TAC MEM_CORE[`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Hojodcm.ytrans_mem_rtrans_v0[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC MEM_CORE[`(ytrans L N r x 0)`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Pbflhet.properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN GABBREV_TAC`y=l'y L r x`
THEN DICH_ASM_TAC(29-7)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`y`;`r`]
THEN MRESAL_TAC next_power_core_w[`N`;`f`;`x`;`L`;`r`;`w`;`indexf w (l'y L r x) r`][Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC indexf_y_lt_sizel[`f`;`w`;`L`;`N`;`r`;`x`][Reduction2.trans0;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC MEM_CORE[`d`;`L`;`N`;`r`;`x`]
THEN DICH_TAC(41-6)
THEN REWRITE_TAC[Reduction2.trans0]
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b /\ b<c==> a<c`)[`indexf w d f`;`indexf w y r`;`sizel(core L r)`]
THEN MRESAL_TAC next_power_core_w_face[`N`;`x`;`L`;`r`;`f`;`w`;`indexf w d f`][GSYM Reduction3.trans_add;ARITH_RULE`0+i=i`;Reduction2.trans0]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.next_el_power_trans_eq_f[`indexf w d f`;`w`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d f`][POWER;I_DEF;o_DEF]
);;



let indexf8_final_lemmas=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)
==>(!i. 0 < i /\ i < k ==>
	 (next_el (core L (rtrans L N r x i)) (FST (ztrans L N r x (PRE i))) =
		FST (ytrans L N r x i) <=>
		  next_el (core L r) (FST (ztrans L N r x (PRE i))) = FST (ytrans L N r x i)) )`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zp=ztrans L N r x (PRE i)`
THEN MRESA_TAC(ARITH_RULE`!a b. 0<a /\ a<b==> 0<b/\ a<=b`)[`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`i`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a=b /\ b<c==> a<c`)[`PRE i`;`i`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE i`][Reduction2.trans0]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;` i`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE i`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`i`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE i`][GSYM List_hypermap.dart_in_face]
THEN GABBREV_TAC`yi=ytrans L N r x (i)`
THEN MRESA_TAC indexf3_final_lemmas[`k`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`PRE i`]
THEN MRESA_TAC Reduction3.transform_count_add[`L`;`N`;`r`;`x`;]
THEN THAYTHE_TAC 0[`i`]
THEN GABBREV_TAC`a=k-i:num`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC indexf1_final_lemmas[`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`][GSYM Reduction3.trans_add;ARITH_RULE`0+i=i`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`PRE i`]
THEN MRESAL_TAC next_power_core_w_face[`ntrans L N r x i`;`x`;`L`;`rtrans L N r x i`;`f`;`w`;`indexf w zp f`][GSYM Reduction3.trans_add;ARITH_RULE`0+i=i`]
THEN MRESAL_TAC indexf1_final_lemmas_face[`zp`;`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`][GSYM Reduction3.trans_add;ARITH_RULE`0+i=i`]
THEN MRESAL_TAC Pplhulj.ytran_me_f[`L`;`N`;`r`;`x`;`f`;`i`][List_hypermap.dart_in_face]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zp`;`yi`;`f`][]
THEN MRESAL_TAC Tame_list.indexf_add_left[`FST w`;`FST zp`;`FST yi`;`core L (rtrans L N r x i)`][]
THEN DICH_TAC 0
THEN MRESA_TAC next_mark_mem_r_trans_v0[`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`;`f`;`w`]
THEN MRESA_TAC MEM_CORE[`w`;`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`]
THEN DICH_ASM_TAC(35-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`zp`;`f`]
THEN DICH_TAC(40-30)
THEN RESA_TAC
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`FST w`;`core L (rtrans L N r x i)`;`indexf w zp f`
][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC next_power_core_w_face[`ntrans L N r x i`;`x`;`L`;`rtrans L N r x i`;`f`;`w`;`indexf w yi f`][GSYM Reduction3.trans_add;ARITH_RULE`0+i=i`;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`yi`;`f`]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`FST w`;`core L (rtrans L N r x i)`;`indexf w yi f`
][POWER;I_DEF;o_DEF]
THEN SYM_DICH_TAC(44-32)
THEN REWRITE_TAC[ARITH_RULE`a+b=a+c<=> b=c:num`]
THEN STRIP_TAC
THEN EQ_TAC;


STRIP_TAC
THEN DICH_ASM_TAC (45-27)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L (rtrans L N r x i)`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`indexf w zp f=0`];


MRESA_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN THAYTHEL_TAC 0[`PRE i`][GSYM List_hypermap.dart_in_face;Reduction2.trans0]
THEN DICH_TAC 0
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_lt_sizel[`(core L (rtrans L N r x i)) `;`(FST w)`;`(FST zp)`;]
THEN MRESA_TAC(ARITH_RULE`!a b:num. ~(a=0)/\ a<b==> 1<b/\ 1<=a`)[`indexf w zp f `;`sizel (core L (rtrans L N r x i))`]
THEN MRESA_TAC Tame_list.next_el_indexf[`FST zp`;`FST yi`;`(core L (rtrans L N r x i))`]
THEN MATCH_MP_TAC Tame_list.indexf1
THEN ASM_REWRITE_TAC[]
THEN DICH_ASM_TAC (58-3)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC MEM_CORE[`zp`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC MEM_CORE[`yi`;`L`;`N`;`r`;`x`];


DICH_ASM_TAC (44-3)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM 
Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC MEM_CORE[`zp`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC MEM_CORE[`yi`;`L`;`N`;`r`;`x`]
THEN STRIP_TAC
THEN MRESAL_TAC Dangeyj.mem_imp_not_nil[`core L r`;`FST yi`][GSYM Seq.size_eq0]
THEN MRESAL_TAC(ARITH_RULE`!a. ~(a=0)==> a=1\/ 1<a`)[`sizel(core L r)`][Seq2.size1_eq];

MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MRESAL_TAC MEM_CORE[`l'y L r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC MEM_CORE[`l'z L N r x`;`L`;`N`;`r`;`x`][Seq.mem_seq1];



MRESA_TAC Tame_list.next_el_indexf[`FST zp`;`FST yi`;`(core L r)`]
THEN MATCH_MP_TAC Tame_list.indexf1
THEN ASM_REWRITE_TAC[]
THEN DICH_ASM_TAC (59-27)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`ntrans L N r x i`;`rtrans L N r x i`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L (rtrans L N r x i)`][Tame_list.MEMf_MAP;]
]);;


 end;;





load_end __FILE__;;