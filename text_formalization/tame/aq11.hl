open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Aq11= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;


let e_list_not_mem_final=prove(`
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x
/\ ~(final_list L r)
==>
  ~(MEM (e_list x) r)  `,


REPEAT RESA_TAC
THEN DICH_TAC 0
THEN DICH_ASM_TAC (1)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-5)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN DICH_TAC(26-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN DICH_TAC(26-9)
THEN ASM_REWRITE_TAC[LET_THM]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC Seq2.prev_next_id[`x`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`w`;`x`;`L`]
THEN MRESA_TAC List_hypermap.n_list[`L`;`w`]
THEN DICH_TAC(41-9)
THEN ASM_REWRITE_TAC[LET_THM]
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Aq1.next_mark_mem_r_trans_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN GSUBGOAL_THEN`MEM w (flatten N)`ASSUME_TAC
THENL[

REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[];

THAYTHEL_TAC (42-21)[`w`][SUBSET]
THEN MRESAL_TAC Lebhirj.FST_N_LIST_POWER[`L`;`SUC 0`;`w`][POWER;I_DEF;o_DEF;List_hypermap.dart_in_face]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESAL_TAC Tame_list.n_list_ext_n_list[`w`;`L`][List_hypermap.dart_in_face]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`w`;`L`;`SUC 0`][List_hypermap.darts_of_list;IN_SET_OF_LIST;List_hypermap.dart_in_face;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.MEM_hypermap_of_list_node[`L`;`w`;`n_list L w`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC(48-42)[`n_list L w`][IN_SET_OF_LIST;]
THEN MRESA_TAC Tame_list.mem_find_list1[`N`;`n_list L w`]
THEN STRIP_TAC
THEN MRESA_TAC List_hypermap.mem_find_list[`n_list L w`;`N`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`r`;`(find_list N (n_list L w))`;`N`;`n_list L w`]
THEN DICH_TAC (52-39)
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]]);;


let e_list_mem_flatten=prove(`
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x
/\ ~(final_list L r)
==>
 MEM (e_list x) (flatten N) `,



REPEAT RESA_TAC
THEN DICH_ASM_TAC (1)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-5)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN DICH_TAC(26-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN DICH_TAC(26-9)
THEN ASM_REWRITE_TAC[LET_THM]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC Seq2.prev_next_id[`x`;`f`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`w`;`x`;`L`]
THEN MRESA_TAC List_hypermap.n_list[`L`;`w`]
THEN DICH_TAC(41-9)
THEN ASM_REWRITE_TAC[LET_THM]
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESA_TAC Aq1.next_mark_mem_r_trans_v0[`L`;`N`;`r`;`x`;`f`;`w`]
THEN GSUBGOAL_THEN`MEM w (flatten N)`ASSUME_TAC
THENL[
REWRITE_TAC[Seq2.mem_flatten]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[];

THAYTHEL_TAC (42-21)[`w`][SUBSET]
THEN MRESAL_TAC Lebhirj.FST_N_LIST_POWER[`L`;`SUC 0`;`w`][POWER;I_DEF;o_DEF;List_hypermap.dart_in_face]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESAL_TAC Tame_list.n_list_ext_n_list[`w`;`L`][List_hypermap.dart_in_face]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`w`;`L`;`SUC 0`][List_hypermap.darts_of_list;IN_SET_OF_LIST;List_hypermap.dart_in_face;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.MEM_hypermap_of_list_node[`L`;`w`;`n_list L w`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC(48-42)[`n_list L w`][IN_SET_OF_LIST;Seq2.mem_flatten]

]);;




let find_list_e_not_r=prove(`
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x
/\ ~(final_list L r)
==>
  ~((find_list N (e_list x))=r)  `,

REPEAT RESA_TAC
THEN DICH_TAC 0
THEN MRESA_TAC e_list_mem_flatten[`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.mem_find_list1[`N`;`e_list x`]
THEN MRESA_TAC  e_list_not_mem_final[`L`;`N`;`r`;`x`]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]);;


let find_list_e_list_const=prove(`
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x 
/\  ~final_list L r
==>
(find_list (ntrans L N r x 1) (e_list x)) =(find_list N (e_list x))    `,

REPEAT STRIP_TAC
THEN GABBREV_TAC`f1=find_list N (e_list x)`
THEN MRESA_TAC e_list_mem_flatten[`L`;`N`;`r`;`x`]
THEN MRESA_TAC find_list_e_not_r[`L`;`N`;`r`;`x`]
THEN MRESA_TAC List_hypermap.mem_find_list[`e_list x`;`N`]
THEN MRESA_TAC Aq9.element_in_ntrans_suc[`f1`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.mem_find_list1[`N`;`e_list x`]
THEN MATCH_MP_TAC Tame_list.find_list_uniq
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Aq1.AQ1[`L`;`N`;`r`;`x`]);;





let AQ11_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
    final_list L (find_list (ntrans L N r x 1) (e_list x))`;;

let AQ11=prove( AQ11_concl,

REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN DICH_TAC(26-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN DICH_TAC(26-9)
THEN ASM_REWRITE_TAC[LET_THM]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN MRESAL_TAC find_list_e_list_const[`L`;`N`;`r`;`x`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;ARITH_RULE`1=SUC 0`;LET_THM;Seq2.APPEND_cat]);;

 end;;





load_end __FILE__;;