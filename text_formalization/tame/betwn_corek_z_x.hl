open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FlxSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


(* module Betwn_corek_z_x = struct *)

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;
open Aq8;;
open More_lemma2;;



let betwn_final_list=prove(`     good_list L /\
uniq r/\ final_list L r/\ MEM x r/\ MEM y r /\ MEM z r
/\ ~(y=z)/\ MEM x (list_of_darts L)
==>  betwn (find_face L x) y z=betwn r y z`,
REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.final_list_rot[`L`;`r`;`x`]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b \/ b<=a`)[`n`;`sizel r`]
THENL[
MRESA_TAC Reduction2.betwn_rot[`y`;`z`;`r`;`n`];
MRESA_TAC Seq.rot_oversize[`n`;`r`]]);;



let all_rot=prove(`all (\x. P x) (rot n r)<=>all (\x. P x) r
`,
REWRITE_TAC[GSYM Seq.allP;Seq.mem_rot]);;



let parts_rot=prove(`good_list L /\
           all (\x. MEM x (list_of_darts L)) r /\
           is_edge_nondegenerate (hypermap_of_list L) /\
uniq r/\ final_list L r
==> parts L (rot n r) = rot n (parts L r)`,
REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.final_list_parts[`L`;`r`]
THEN MRESAL_TAC Tame_list.rot_final_list[`L`;`r`;`rot n r`][SET_RULE`(?n'. rot n r = rot n' r)`]
THEN MRESAL_TAC Tame_list.final_list_parts[`L`;`rot n r`][Seq.rot_uniq;all_rot]
THEN REWRITE_TAC[Tame_defs2.core;Tame_list.lower_case;GSYM Seq.map_rot]
);;


let core_rot=prove(`good_list L /\
           all (\x. MEM x (list_of_darts L)) r /\
           is_edge_nondegenerate (hypermap_of_list L) /\
uniq r/\ final_list L r
==> core L (rot n r) = rot n  (core L r)`,
SIMP_TAC[Tame_defs2.core;Tame_list.lower_case;GSYM Seq.map_rot;parts_rot]
);;


let mem_core=prove(`normal_list L N /\
         good_list L /\ MEM r N/\ uniq r /\ MEM y r==> MEM (FST y) (core L r)`,
REWRITE_TAC[Tame_defs2.core]
THEN RESA_TAC
THEN MRESA_TAC Aq8.parts_mem_exists[`y`;`L`;`r`]
THEN MRESAL_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`y`][MEM_MAP]
THEN GEXISTS_TAC`p`
THEN ASM_REWRITE_TAC[o_DEF]);;



let core_final_list=prove(`good_list L /\
         all (\x. MEM x (list_of_darts L)) f /\
         is_edge_nondegenerate (hypermap_of_list L) /\
         final_list L f /\
         uniq f
==> core L f= MAP FST f`,
REPEAT RESA_TAC
THEN MRESAL_TAC Tame_list.final_list_parts[`L`;`f`][Tame_defs2.core;]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN SIMP_TAC[o_DEF;HD;ETA_AX]);;



let core_final=prove(`    good_list L /\
      marked_list L N r x/\
 final_list L r
==> core L r= MAP FST r`,

REPEAT RESA_TAC
THEN DICH_ASM_TAC(2-1)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(13-7)[Tame_defs2.normal_list]
THEN DICH_TAC(1)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_ASM_TAC 0[`x`]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Tame_list.final_list_rot[`L`;`r`;`x`]
THEN DICH_ASM_TAC(19-3)[Hypermap.is_restricted]
THEN MRESAS_TAC core_final_list[`L`;`r`][GSYM Seq.allP]);;



let indexf_size_ztran_pre=prove_by_refinement(`!L N r x. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k /\
              ~(FST (ztrans L N r x (PRE k)) = FST x)
==> indexf (ztrans L N r x (PRE k)) (next_el (find_face L x) x) (find_face L x)< sizel r`,
[


REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_ASM_TAC (10-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zk`;`x`]
THEN DICH_ASM_TAC(31-11)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN GSUBGOAL_THEN`{d| MEM d f /\indexf zk d f<= indexf zk w f} SUBSET (set_of_list r)`ASSUME_TAC;


REWRITE_TAC[SUBSET;IN_SET_OF_LIST;IN_ELIM_THM]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d=x'`
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk d f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`r`;`indexf zk d f`][POWER;I_DEF;o_DEF];


MRESA_TAC Tame_list.card_le_size[`r`];


GSUBGOAL_THEN`(!x1 y1.
           (0 <= x1 /\ x1 <= indexf zk w f) /\
           (0 <= y1 /\ y1 <= indexf zk w f) /\
           (next_el f POWER x1) zk = (next_el f POWER y1) zk
           ==> x1 = y1)`ASSUME_TAC;


REPEAT RESA_TAC
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`x1`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`x1`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`zk`;`(next_el f POWER x1) zk`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`y1`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`y1`;`zk`;`(next_el f POWER y1) zk`;`f`];


MRESAL_TAC CARD_IMAGE_INJ[`(\n. (next_el f POWER n)zk)`;`0..(indexf zk w f)`][FINITE_NUMSEG;CARD_NUMSEG;IN_NUMSEG;IMAGE;ARITH_RULE`(a+1)=SUC a`;ARITH_RULE`1<=a <=> 0<a`]
THEN GSUBGOAL_THEN`{d | ?x1. (0 <= x1 /\ x1 <= indexf zk w f) /\ d = (next_el f POWER x1) zk}={d | MEM d f /\ indexf zk d f <= indexf zk w f}`ASSUME_TAC;

REWRITE_TAC[EXTENSION;IN_ELIM_THM]
THEN GEN_TAC
THEN EQ_TAC
THEN RESA_TAC;

MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`x1`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`x1`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`x1`;`zk`;`(next_el f POWER x1) zk`;`f`];

GEXISTS_TAC`indexf zk x' f`
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`x'`;`f`]
THEN ARITH_TAC;

MRESAL_TAC CARD_SUBSET[`{d | MEM d f /\ indexf zk d f <= indexf zk w f}`;`set_of_list (r)`][FINITE_SET_OF_LIST]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[ARITH_RULE`a-0=a`]
THEN DICH_TAC 2
THEN ARITH_TAC]);;




let mem_betwn_pre_face=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k /\
              ~(FST (ztrans L N r x (PRE k)) = FST x)
==> (!x'. MEM x' (betwn (find_face L x) (ztrans L N r x (PRE k)) x) <=> MEM x' (betwn r (ztrans L N r x (PRE k)) x))`,
[


REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_ASM_TAC (10-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zk`;`x`]
THEN DICH_ASM_TAC(31-11)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zk`;`x`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zk`;`x`;`r`]
THEN CHANGE_TAC`d=x'`
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`zk`;`d`;`x`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`zk`;`d`;`x`];


MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk w f`];


MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`f`]
THEN MRESAL_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN THAYTHE_TAC 0[`PRE k`]
THEN DICH_TAC(0)
THEN ARITH_TAC;


MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN MRESA_TAC indexf_size_ztran_pre[`k`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`x`;`w`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+1=b/\ b<c==> a<=b/\ a<c`)[`indexf zk x f`;`indexf zk w f`;`sizel r`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`x`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zk x f`;`zk`;`x`;`r`]
THEN EQ_TAC
THEN RESA_TAC;


MRESA_TAC(ARITH_RULE`!a b c. a+1=b/\ c<a==> c<=b`)[`indexf zk x f`;`indexf zk w f`;`indexf zk d f`]
THEN DICH_TAC(55-40)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`zk`;`x`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk d f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`r`;`indexf zk d f`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf zk d f`;`indexf zk w f`;`sizel r`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zk d f`;`zk`;`d`;`r`];



MRESA_TAC(ARITH_RULE`!a b c. a+1=b/\ c<a==> c<=b`)[`indexf zk x f`;`indexf zk w f`;`indexf zk d r`]
THEN DICH_TAC(55-41)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`zk`;`x`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`r`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk d r)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN POP_ASSUM(fun th-> ASSUME_TAC(SYM th))
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`indexf zk d r`][POWER;I_DEF;o_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf zk d r`;`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf zk d r`;`zk`;`d`;`f`]
]);;



let last_betwn_pre_face=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k /\
              ~(FST (ztrans L N r x (PRE k)) = FST x)
==> LAST (betwn (find_face L x) (ztrans L N r x (PRE k)) x) = LAST (betwn r (ztrans L N r x (PRE k)) x)`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_ASM_TAC (10-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zk`;`x`]
THEN DICH_ASM_TAC(31-11)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zk`;`x`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zk`;`x`;`r`]
THEN MRESA_TAC mem_betwn_pre_face[`k`;`L`;`N`;`r`;`x`];

MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk w f`];


MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`f`]
THEN MRESAL_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN THAYTHE_TAC 0[`PRE k`]
THEN DICH_TAC(0)
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN MRESA_TAC indexf_size_ztran_pre[`k`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`x`;`w`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+1=b/\ b<c==> a<=b/\ a<c/\ 1<c`)[`indexf zk x f`;`indexf zk w f`;`sizel r`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`x`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF];


MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn r zk x = []`];


MRESA_TAC Tame_list.betwn_nil[`r`;`zk`;`x`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zk`;`x`;`r`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x r)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`zk`;`x`];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn f zk x = []`];


MRESA_TAC Tame_list.betwn_nil[`f`;`zk`;`x`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zk`;`x`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
THEN MRESA_TAC Tame_list.betwn_nil[`r`;`zk`;`x`];

MRESA_TAC Aq23.next_last_betwn[`r`;`zk`;`x`]
THEN MRESA_TAC Aq23.next_last_betwn[`f`;`zk`;`x`]
THEN MRESAL_TAC Seq2.prev_next_id[`LAST (betwn r zk x)`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`LAST (betwn f zk x)`;`f`][]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN GABBREV_TAC`d=prev_el f x`
THEN MRESAL_TAC Seq2.next_prev_id[`x`;`f`][]
THEN MRESA_TAC Seq2.mem_prev_el[`x`;`f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`d`;`x`;`f`]
THEN MRESA_TAC Tame_list.indexf0[`zk`;`x`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a. ~(a=0)==> 1<=a`)[`indexf zk x f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`d`;`x`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+1=b/\ b+1=c==> a<=c/\ a<c/\ 1<c`)[`indexf zk d f`;`indexf zk x f`;`indexf zk w f`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk d f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
THEN DICH_TAC(67-51)
THEN SYM_DICH_TAC(66-61)
THEN ASM_REWRITE_TAC[ARITH_RULE`a+1=SUC a`;COM_POWER;I_DEF;o_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`d`;`r`][]
]);;



let betwn_pre_face=prove_by_refinement(`!L N r x:A#A. 
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k /\
              ~(FST (ztrans L N r x (PRE k)) = FST x)
==> betwn (find_face L x) (ztrans L N r x (PRE k)) x= betwn r (ztrans L N r x (PRE k)) x`,
[


REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN DICH_ASM_TAC (10-3)[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(17-0)[Tame_defs2.good_list]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zk`;`x`]
THEN DICH_ASM_TAC(31-11)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zk`;`x`;`f`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`zk`;`x`;`r`]
THEN MRESA_TAC mem_betwn_pre_face[`k`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC last_betwn_pre_face[`k`;`L`;`N`;`r`;`x`]
THEN MATCH_MP_TAC Aq12.eq_last_next
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN CHANGE_TAC`d=x'`;


MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk w f`];


MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`f`]
THEN MRESAL_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN THAYTHE_TAC 0[`PRE k`]
THEN DICH_TAC(0)
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN MRESA_TAC indexf_size_ztran_pre[`k`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`x`;`w`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b c. a+1=b/\ b<c==> a<=b/\ a<c/\ 1<c`)[`indexf zk x f`;`indexf zk w f`;`sizel r`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`x`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn r zk x = []`];


MRESA_TAC Tame_list.betwn_nil[`r`;`zk`;`x`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zk`;`x`;`r`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x r)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
THEN MRESA_TAC Tame_list.betwn_nil[`f`;`zk`;`x`];

MRESA_TAC (SET_RULE`!A. A\/ ~A`)[`betwn f zk x = []`];

MRESA_TAC Tame_list.betwn_nil[`f`;`zk`;`x`]
THEN MRESA_TAC Tame_list.next_el_indexf[`zk`;`x`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
THEN MRESA_TAC Tame_list.betwn_nil[`r`;`zk`;`x`];

MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=LAST (betwn r zk x)`];

MRESA_TAC Aq4.next_el_last_hd[`betwn r zk x`]
THEN MRESA_TAC Aq4.next_el_last_hd[`betwn f zk x`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`f`;`zk`;`x`]
THEN MRESA_TAC Dangeyj.HD_BETWN2[`r`;`zk`;`x`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`SUC 0`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`];

MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`f`;`zk`;`x`;`d`]
THEN MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`r`;`zk`;`x`;`d`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`zk`;`x`;`d`;`f`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`zk`;`x`;`d`;`r`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`zk`;`d`;`x`]
THEN MRESA_TAC(ARITH_RULE`!a b c. a<b/\ b+1=c==> a<=c/\ SUC a<=c`)[`indexf zk d f`;`indexf zk x f`;`indexf zk w f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`zk`;`x`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`d`;`f`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`indexf zk d f`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`SUC(indexf zk d f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0<=a<=> 1<=a:num`;COM_POWER;o_DEF;I_DEF;ARITH_RULE`1= SUC 0`]
]);;


let parts_betwn_final=prove(`     good_list L /\
      all (\x. MEM x (list_of_darts L)) r /\
         is_edge_nondegenerate (hypermap_of_list L) 
/\ uniq r/\ final_list L r
/\ MEM y r /\ MEM z r
/\ ~(y= z)
==> parts L (betwn r y z)= MAP (\x. [x]) (betwn r y z)`,
REPEAT RESA_TAC
THEN MATCH_MP_TAC Tame_list.parts_impure
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`y`;`z`;`r`]
THEN REPEAT RESA_TAC
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`x=LAST(betwn r y z)`]
THEN MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`r`;`y`;`z`;`x`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`y`;`z`;`x`;`r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`y`]
THEN MRESA_TAC Tame_list.final_list_parts[`L`;`r`]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`y`;`z`;`x`]
THEN MRESAL_TAC Tame_list.parts_next_last[`L`;`r`][GSYM Seq.allP;MEM_MAP]
THEN THAYTHES_TAC 0[`[x]`][SET_RULE`MEM x r==> (?x'. MEM x' r /\ [x] = [x'])`;LAST]
THEN THAYTHEL_TAC 0[`x`][Seq.mem_seq1]
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`r`][GSYM Seq.allP;MEM_MAP]
THEN THAYTHE_TAC 0[`x`]
THEN SYM_DICH_TAC 0
THEN MATCH_MP_TAC Tame_list.edge_nondeg_f_xor_ni
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC(16-1)
THEN REWRITE_TAC[GSYM Seq.allP;MEM_MAP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`x`]);;



let betwn_corek_z_x=prove_by_refinement(`!L N r (x:num#num).
   // newvertex_prepped L N r x /\
    T /\
     good_list L /\
     good_list_nodes L /\
     is_restricted (hypermap_of_list L) /\
     marked_list L N r x /\
     (transform_count L N r x = k)/\
0<k /\
              ~(FST (ztrans L N r x (PRE k)) = FST x)
==>(betwn (core L (rtrans L N r x k)) (FST (ztrans L N r x (PRE k))) (FST x) =
	 betwn (core L r) (FST (ztrans L N r x (PRE k))) (FST x))`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`zk=ztrans L N r x (PRE k)`
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN MRESAL_TAC Reduction2.transform_assumption_v2_lemma[`L`][]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`k`][ARITH_RULE`1<=k<=> 0<k`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`PRE k`;`k`]
THEN MRESAL_TAC Kbwpbhq.transform_count_not[`L`;`N`;`r`;`x`;`PRE k`][Reduction2.trans0]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`PRE k`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC List_hypermap.dart_in_face[`x`;`L`]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`f`]
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN DICH_ASM_TAC (19-3)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC More_lemma2.MEM_CORE[`x`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC More_lemma2.MEM_CORE[`zk`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Ohcgkfu.uniq_betwn[`FST zk`;`FST x`;`core L r`]
THEN MRESAL_TAC Kbwpbhq.final_list_transform_count[`k`;`L`;`N`;`r`;`x`; ][Reduction2.trans0;ARITH_RULE`~(a=0)<=>0<a `]
THEN ASM_REWRITE_TAC[]
THEN GABBREV_TAC`rk=rtrans L N r x k`
THEN GABBREV_TAC`nk=ntrans L N r x k`
THEN MRESA_TAC Reduction3.AQIUNPP[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`nk`;`rk`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L rk`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Reduction4.final_assumption_zpre_core_k[`L`;`N`;`r`;`x`;`k`]
THEN DICH_ASM_TAC(44-36)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`nk`;`rk`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rk`;`x`][]
THEN DICH_TAC(51-20)
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[Seq.mem_rot]
THEN RESA_TAC
THEN MRESA_TAC core_final[`nk`;`x`;`L`;`rk`]
THEN DICH_TAC(51-42)
THEN RESA_TAC
THEN MRESA_TAC(SET_RULE`!a b. ~(FST a= FST b)==> ~(a=b)`)[`zk`;`x`]
THEN MRESAL_TAC uniq_imp_inj[`(FST):(num#num)->num`;`rk`][Reduction2.trans0]
THEN MRESA_TAC Aq12.map_betwn[`rk`;`zk`;`FST:num#num->num`;`x`]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC betwn_final_list[`L`;`x`;`rk`;`zk`;`x`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(53-20)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`x`;`L`;`r`]
THEN MRESA_TAC Aq8.parts_mem_exists[`zk`;`L`;`r`]
THEN CHANGE_TAC`pz=p'`
THEN DICH_TAC(63-27)
THEN ASM_REWRITE_TAC[Tame_defs2.core]
THEN RESA_TAC
THEN MRESA_TAC Aq12.FST_HD_MAP_betwn[`N`;`L`;`r`;`pz`;`p`;`parts L r`;`x`;`zk`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(63-3)[Hypermap.is_restricted]
THEN MRESA_TAC More_lemma1.parts_betwn[`N`;`parts L r`;`zk`;`x`;`L`;`r`;`pz`;`p`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Pplhulj.ztran_me_f[`f`;`L`;`N`;`r`;`x`;`PRE k`][List_hypermap.dart_in_face]
THEN THAYTHEL_TAC 0[`PRE k`][GSYM List_hypermap.dart_in_face]
THEN DICH_ASM_TAC(73-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`zk`;`x`;`L`];

MRESA_TAC (ARITH_RULE`!a. a=0\/ 1<=a`)[`indexf zk w f`];

MRESA_TAC Tame_list.indexf0[`zk`;`w`;`f`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`f`]
THEN MRESAL_TAC Pplhulj.PPLHULJ3[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Reduction2.trans0]
THEN THAYTHE_TAC 0[`PRE k`]
THEN DICH_TAC(0)
THEN ARITH_TAC;


GSUBGOAL_THEN`LAST pz= zk`ASSUME_TAC;

MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`x`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`SUC 0`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`SUC 0=1`;POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`r`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`zk`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC(82-56)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`r`]
THEN THAYTHE_TAC 0[`zk`]
THEN MRESA_TAC Tame_list.edge_nondeg_f_xor_ni[`L`;`zk`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`zk=LAST r`];

MRESA_TAC Tame_list.parts_flatten[`L`;`r`]
THEN MRESA_TAC Tame_list.parts_nonnil[`L`;`r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`parts L r`]
THEN MRESAL_TAC Tame_list.parts_all_nonnil[`L`;`r`][GSYM Seq.allP]
THEN THAYTHE_TAC 0[`LAST(parts L r)`]
THEN MRESA_TAC Aq23.LAST_FLATTEN_2[`parts L r`]
THEN MRESA_TAC Tame_list.MEM_LAST[`LAST(parts L r)`]
THEN MRESA_TAC List_hypermap.uniq_sublist_unique[`pz`;`LAST(parts L r)`;`parts L r`;`zk`];

MRESA_TAC Aq12.condition_last_parts[`r`;`L`;`pz`;`zk`];

MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`x= HD p`];

MRESA_TAC Tame_list.parts_uniq_nonnil[`L`;`N`;`r`;`p`]
THEN MRESA_TAC Aq4.prev_el_last_hd[`p`]
THEN GSUBGOAL_THEN`~(prev_el p x = LAST p)`ASSUME_TAC;


SYM_DICH_TAC 0
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.next_prev_id[`x`;`p`][]
THEN MRESAL_TAC Seq2.next_prev_id[`HD p`;`p`][];

GABBREV_TAC`pd=prev_el p x`
THEN MRESA_TAC Seq2.mem_prev_el[`x`;`p`]
THEN MRESA_TAC Tame_list.next_el_parts_unlast[`L`;`r`;`p`;`pd`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`x`]
THEN MRESA_TAC Tame_list.parts_fst[`L`;`N`;`r`;`p`;`pd`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN THAYTHE_TAC (49-43)[`pd`];

MRESAL_TAC Seq2.next_prev_id[`x`;`p`][]
THEN DICH_TAC (91-88)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf0[`zk`;`x`;`f`];

MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zk x f`][ARITH_RULE` 1<=a <=> ~(a=0)`]
THEN GABBREV_TAC`n=PRE (indexf zk x f)`
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zk`;`w`;]
THEN MRESA_TAC(ARITH_RULE`!a b. 1<=a /\ a<b==> 1<b`)[`indexf zk w f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_el_indexf[`x`;`w`;`f`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`zk`;`x`;`w`;`f`][]
THEN MRESA_TAC(ARITH_RULE`!a b n. a+1=b/\ SUC n=a==> n<=b/\ a<=b`)[`indexf zk x f`;`indexf zk w f`;`n`]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`PRE(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Kbwpbhq.CASES2[`w`;`f`;`(indexf zk x f)`;`k`;`L`;`N`;`r`;`x`][ARITH_RULE`a<=a:num`;COM_POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN SYM_DICH_TAC(102-93)
THEN ASM_REWRITE_TAC[COM_POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Aq8.MEM_POWER_NEXT_EL[`zk`;`f`;`n`][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC Hypermap.LE_SUC_PRE[`indexf zk x f`][ARITH_RULE` 1<=a <=> ~(a=0)`]
THEN MRESA_TAC Tame_list.indexf_n[`zk`;`x`;`f`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN RESA_TAC
THEN STRIP_TAC
THEN MRESAL_TAC Seq2.prev_next_id[`pd`;`r`][]
THEN MRESAL_TAC Seq2.prev_next_id[`(next_el f POWER n) zk`;`r`][]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`pd`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER n) zk`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN MRESA_TAC Seq2.mem_prev_el[`x`;`r`]
THEN MRESA_TAC next_core_FST[`(next_el r POWER n) zk`;`L`;`N`;`r`;`x`]
THEN DICH_TAC 0
THEN DICH_TAC (109-88)
THEN RESA_TAC
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.quotient_all_uniq[`L`;`N`;`r`;`x`][Tame_list.quotient_list_core;GSYM Seq.allP]
THEN THAYTHES_TAC 0[`core L r`][Tame_list.MEMf_MAP;]
THEN MRESA_TAC Tame_list.next_el_refl[`FST x`;`core L r`]
THEN DICH_TAC(112-28)
THEN ASM_REWRITE_TAC[Seq.mem_seq1];

SYM_DICH_TAC 0
THEN MRESA_TAC betwn_pre_face[`k`;`L`;`N`;`r`;`x`]
THEN SYM_DICH_TAC 0
THEN MRESA_TAC betwn_final_list[`L`;`x`;`rk`;`zk`;`x`]
THEN DICH_TAC(80-45)
THEN REWRITE_TAC[Tame_defs2.loop_list;GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHE_TAC 0[`rk`]
THEN MRESAS_TAC parts_betwn_final[`L`;`rk`;`zk`;`x`][GSYM Seq.allP]
THEN ONCE_REWRITE_TAC[GSYM MAP_o]
THEN REWRITE_TAC[o_DEF;HD;ETA_AX]]);;

 (* end;; *)





load_end __FILE__;;