open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Obdatyb= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;


let EXSITS_MEM_LE_COUNT=prove_by_refinement(`!L N r x (d:A#A).
	transform_assumption_v2 L/\
 	  good_list L /\ good_list_nodes L /\
 	  marked_list L N r x /\
 	  MEM d f /\ MEM d (flatten N)/\
 transform_count L N r x =t /\
(find_face L x)=f/\
  next_el f x=w
==>
(!i.  indexf w d f <= indexf w (ytrans L N r x i) f  /\ i<t
 ==> MEM d r)`,
[

REPEAT GEN_TAC
THEN RESA_TAC
THEN INDUCT_TAC;

RESA_TAC
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`0`]
THEN MRESAL_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_TAC(15-9)
THEN RESA_TAC
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN DICH_ASM_TAC(16-1)[List_hypermap.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC next_el_power_trans_eq_f[`indexf w d f`;`w`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`r`;`indexf w d f`];


STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`t`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b\/ b<a`)[`indexf w d f`;`indexf w (ytrans L N r x i) f`];


DICH_TAC 4
THEN RESA_TAC;

MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w d f`;`indexf w zi f`];

MRESA_TAC not_in_ntrans_i[`w`;`f`;`d`;`i`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Dangeyj.DANGEYJ[`L`;`N`;`r`;`x`;`0`;`i`;][ARITH_RULE`0<=a`;SUBSET;IN_SET_OF_LIST]
THEN THAYTHEL_TAC 0[`d`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans];


MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`ys`;`f`] 
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ a+d=e/\ c<=e==> b<=d`)[`indexf w zi f`;`indexf zi d f`;`indexf w d f`;`indexf zi ys f`;` indexf w ys f`]
THEN DICH_ASM_TAC(31-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESA_TAC betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi  d f`;`i`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`r`;`indexf zi d f`]]);;



let OBDATYB = `!L N r x (d:A#A).
	transform_assumption_v2 L/\
 	  good_list L /\ good_list_nodes L /\
 	  marked_list L N r x /\
 	  MEM d (find_face L x) /\ MEM d (flatten N) ==> MEM d r`;;

let OBDATYB=prove_by_refinement(
 OBDATYB,
[

REPEAT RESA_TAC
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`transform_count L N r x`];

MRESAL_TAC final_list_transform_count[`0`;`L`;`N`;`r`;`x`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(24-1)[List_hypermap.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`w`;`x`;`L`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`r`;`indexf w d f`;`w`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC 2
THEN RESA_TAC;

GABBREV_TAC`t=transform_count L N r x`
THEN GABBREV_TAC`i=PRE t`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`t`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`i`;`t`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<=b\/ b<a`)[`indexf w d f`;`indexf w (ytrans L N r x (PRE t))  f`;];

MRESA_TAC EXSITS_MEM_LE_COUNT[`w`;`f`;`t`;`L`;`N`;`r`;`x`;`d`]
THEN THAYTHE_TAC 0[`PRE t`];

MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w d f`;`indexf w zi f`];

MRESA_TAC not_in_ntrans_i[`w`;`f`;`d`;`i`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Dangeyj.DANGEYJ[`L`;`N`;`r`;`x`;`0`;`i`;][ARITH_RULE`0<=a`;SUBSET;IN_SET_OF_LIST]
THEN THAYTHEL_TAC 0[`d`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans];


MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`] 
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=zi`];

DICH_TAC (2)
THEN RESA_TAC
THEN DICH_ASM_TAC(40-1)[List_hypermap.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`f`]
THEN DICH_TAC 5
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_antisym[`w`;`zi`;`f`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`d`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ a+d=e/\ c<e==> b<=d`)[`indexf w zi f`;`indexf zi d f`;`indexf w d f`;`indexf zi w f`;`sizel f`]
THEN DICH_ASM_TAC(43-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESAL_TAC CASES2[`w`;`f`;`(indexf zi d f)`;`t`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`r`;`indexf zi d f`]]);;


 end;;





load_end __FILE__;;