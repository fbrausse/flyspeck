(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Lebhirj= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;



let n_list_ext_n_list_power=prove(`!n. good_list L /\ MEM d (list_of_darts L)
           ==> (n_list L POWER n) d = (n_list_ext L POWER n) d`,
INDUCT_TAC
THENL[
REWRITE_TAC[POWER;I_DEF;o_DEF];

STRIP_TAC
THEN DICH_TAC 2
THEN RESA_TAC
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]
THEN MRESAL_TAC List_hypermap.list_ext_power_in_darts[`d`;`L`;`n`][List_hypermap.darts_of_list;IN_SET_OF_LIST]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=>b=a`]
THEN MATCH_MP_TAC Tame_list.n_list_ext_n_list
THEN ASM_REWRITE_TAC[]]);;


let FST_N_LIST_POWER=prove(`good_list L /\ MEM d (list_of_darts L)
           ==> FST ((n_list L POWER n) d) = FST d`,
RESA_TAC
THEN MRESA_TAC n_list_ext_n_list_power[`L`;`d`;`n`]
THEN MRESAL_TAC List_hypermap.fst_n_list_ext_power[`FST d`;`SND d`;`L`;`n`][List_hypermap.darts_of_list;IN_SET_OF_LIST]);;



let indexf_in_rtrans_suc_not_rtrans_new1=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> MEM d f/\
indexf w d f< indexf w (ztrans L N r x i) f
/\ indexf w (ytrans L N r x i) f< indexf w d f`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESAL_TAC in_rtrans_suc_not_rtrans_new[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MP_TAC PPLHULJ
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.ytrans;]
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN DICH_ASM_TAC(26-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`y`;`d`;`z`;`f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num . a+b=c /\ d+e=b==> e<=c`)[`indexf w y f`;`indexf y z f`;`indexf w z f`;`indexf y d f`;`indexf d z f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC Tame_list.indexf_add_right[`w`;`d`;`z`;`f`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d`;`z`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num . a+b=c /\ d+e=b/\ f+e=c/\ 0<d /\ d<b ==> f<c/\ a<f`)[`indexf w y f`;`indexf y z f`;`indexf w z f`;`indexf y d f`;`indexf d z f`;`indexf w d  f`]);;



let LEBHIRJ_concl = `!L N N' r r' x:A#A. 
transform_assumption_v2 L/\
  good_list L /\ good_list_nodes L /\
  marked_list L N r x /\
  ntrans L N r x 1 = N'/\
  rtrans L N r x 1 = r' ==>
  set_of_list (MAP FST (flatten N')) = 
      set_of_list (MAP FST (flatten N)) UNION
	set_of_list (MAP FST (filter (\d. ~(MEM d r)) r'))`;;


let LEBHIRJ=prove_by_refinement(
 LEBHIRJ_concl,
[

REWRITE_TAC[ARITH_RULE`1=SUC 0`]
THEN REPEAT RESA_TAC
THEN REWRITE_TAC[UNION;EXTENSION;IN_ELIM_THM;IN_SET_OF_LIST;MEM_MAP;Seq2.mem_flatten]
THEN GEN_TAC
THEN EQ_TAC;





RESA_TAC
THEN GABBREV_TAC`x1=x''`
THEN REMOVE_ASSUM_TAC
;




DICH_TAC 2
THEN EXPAND_TAC"N'"
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`]
;



RESA_TAC
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[]
;



REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC;



MRESAL_TAC Tame_list.MEM_replace[`l`;`r`;`[SND
        (split_normal_list L r (find_face L (l'y L r x)) (l'y L r x)
        (prev_el r (l'z L N r x)))]`;`N`][Seq.mem_seq1]
;


MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[]
;




DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.split_normal_list;LET_THM;MEM_APPEND;]
THEN STRIP_TAC
THEN DICH_TAC (10-5)
THEN ASM_REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC
;


MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`x1`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
;



MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`x1`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
;




MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`x1`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
;




MATCH_MP_TAC(SET_RULE`B==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[Seq.mem_filter]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(39-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(43-32)
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`x1`;`z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`x1`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf y x1 f`;`indexf y z f`]
THEN MRESA_TAC Tame_list.indexf_add_left[`y`;`x1`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c /\ d+e=b==> e<=c`)[`indexf w y f `;`indexf y z f `;` indexf w z f`;`indexf y x1 f `;`indexf x1 z f `]
THEN MRESA_TAC Tame_list.indexf_add_right[`w`;`x1`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num. a+b=c /\ d+e=b/\ f+e=c /\ 0<d /\ d<b==> a<f /\ f< c/\ f<=c`)[`indexf w y f `;`indexf y z f `;` indexf w z f`;`indexf y x1 f `;`indexf x1 z f `;`indexf w x1 f`]
THEN MRESAL_TAC Kbwpbhq.CASES1[`0`;`w`;`f`;`x1`;`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`x1`;`f`]
THEN MRESAL_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`0`;`indexf w x1 f`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
;






DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.split_normal_list;LET_THM;MEM_APPEND;]
THEN STRIP_TAC
THEN DICH_TAC (9-6)
THEN ASM_REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC
;




MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep;]
THEN DICH_ASM_TAC(21-14)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN DICH_TAC(35-8)
THEN ASM_REWRITE_TAC[Seq.mem_rev;Tame_list.lower_case;Seq2.mem_flatten]
THEN ASM_REWRITE_TAC[GSYM Tame_list.lower_case;MEM_MAP]
THEN RESA_TAC;






GABBREV_TAC`d=x''`
THEN DICH_ASM_TAC(38-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN DICH_TAC(42-35)
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d`;`z`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf y d f`;`indexf y z f`]
THEN MRESA_TAC Tame_list.indexf_add_left[`y`;`d`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c /\ d+e=b==> e<=c`)[`indexf w y f `;`indexf y z f `;` indexf w z f`;`indexf y d f `;`indexf d z f `]
THEN MRESA_TAC Tame_list.indexf_add_right[`w`;`d`;`z`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num. a+b=c /\ d+e=b/\ f+e=c /\ 0<d /\ d<b==> a<f /\ f< c/\ f<=c`)[`indexf w y f `;`indexf y z f `;` indexf w z f`;`indexf y d f `;`indexf d z f `;`indexf w d f`]
THEN MRESAL_TAC Kbwpbhq.CASES1[`0`;`w`;`f`;`d`;`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESAL_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`0`;`indexf w d f`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MATCH_MP_TAC(SET_RULE`B==> A\/B`)
THEN GEXISTS_TAC`d`
THEN ASM_REWRITE_TAC[Seq.mem_filter;Tame_list.lower_case]
THEN DICH_TAC(61-36)
THEN ASM_REWRITE_TAC[MEM_MAP]
THEN RESA_TAC 
THEN GABBREV_TAC`n=x'''`
THEN MATCH_MP_TAC FST_N_LIST_POWER
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`][List_hypermap.dart_in_face];





MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`z`;`y`;`x1`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MATCH_MP_TAC Seq2.mem_next_el
THEN ASM_REWRITE_TAC[];







MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.betwn_mem[`r`;`(next_el r y)`;` (prev_el r z)`;`x1`]
;





MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(23-16)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MATCH_MP_TAC Seq2.mem_prev_el
THEN ASM_REWRITE_TAC[];





RESA_TAC
;



EXPAND_TAC"N'"
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`]
;



GEXISTS_TAC`x''`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[]
;



GABBREV_TAC`x1=x''`
THEN MRESA_TAC(SET_RULE`!A. ~A\/A`)[`l=r`]
;



GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[MEM_APPEND]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM3_replace
THEN ASM_REWRITE_TAC[];









GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN DICH_ASM_TAC(19-13)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Dangeyj.SPLIT_NORMAL_LIST_CASES[`x1`;`L`;`l`;`(find_face L (l'y L r x))`;`(l'y L r x)`;`(prev_el r (l'z L N r x))`]
;



GEXISTS_TAC`FST
      (split_normal_list L r (find_face L (l'y L r x)) (l'y L r x)
      (prev_el r (l'z L N r x)))`
THEN ASM_REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
;




GEXISTS_TAC`SND
      (split_normal_list L r (find_face L (l'y L r x)) (l'y L r x)
      (prev_el r (l'z L N r x)))`
THEN ASM_REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
;





EXPAND_TAC"N'"
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.transform_list;LET_THM]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`]
;



GEXISTS_TAC`x''`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 2
THEN ASM_REWRITE_TAC[Seq.mem_filter]
THEN RESA_TAC
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN DICH_ASM_TAC(19-13)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESA_TAC Tame_list.final_list_power[`L`;`r`;`indexf w x'' f`;`x`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`SUC 0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN DICH_TAC(38-5)
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF;LET_THM]
THEN STRIP_TAC
THEN DICH_TAC(38-7)
THEN RESA_TAC;



GABBREV_TAC`x1=x''`
THEN DICH_TAC 3
THEN ASM_REWRITE_TAC[Seq.mem_filter]
THEN STRIP_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC Kbwpbhq.indexf_in_rtrans_suc_not_rtrans_new[`w`;`f`;`L`;`N`;`x1`;`r`;`x`;`0` ][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN GEXISTS_TAC`x1`
THEN ASM_REWRITE_TAC[]
THEN GEXISTS_TAC`SND
        (split_normal_list L r (find_face L (l'y L r x)) (l'y L r x)
        (prev_el r (l'z L N r x)))`
THEN ASM_REWRITE_TAC[MEM_APPEND]
THEN STRIP_TAC;





MATCH_MP_TAC(SET_RULE`A==> A\/B`)
THEN MATCH_MP_TAC Tame_list.MEM2_replace
THEN ASM_REWRITE_TAC[Seq.mem_seq1]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
;




REWRITE_TAC[Tame_defs2.split_normal_list;LET_THM;MEM_APPEND;]
;





MRESAL_TAC Tame_defs2.ztrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_defs2.ytrans[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep;]
THEN DICH_ASM_TAC(21-14)[Tame_defs2.normal_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN ASM_TAC
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN GABBREV_TAC`y=(l'y L r x)`
THEN GABBREV_TAC`z=(l'z L N r x)`
THEN DICH_TAC(32-11)
THEN RESA_TAC
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(38-1)[Tame_defs2.good_list]
THEN MRESAL_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`][MEM_APPEND;Seq.mem_seq1]
THEN MATCH_MP_TAC(SET_RULE`B==> A\/B`)
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.ytrans;Tame_defs2.rtrans;Tame_defs2.ntrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`x1`;`z`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`f`] 
THEN DICH_TAC(48-12)
THEN RESA_TAC
THEN DICH_TAC(48-12)
THEN RESA_TAC
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w x1 f`]
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans_new1[`w`;`f`;`L`;`N`;`x1`;`r`;`x`;`0` ][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`x1`;`f`] 
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN DICH_TAC 2
THEN DICH_TAC 2
THEN ARITH_TAC;
]);;



 end;;



