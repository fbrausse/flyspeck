open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Aq10= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;
open Kbwpbhq;;
open Hojodcm;;
open Aq1;;
open Aq23;;
open Aq4;;


let point_remark_mem_split=prove(`
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x /\
~(final_list L r) ==>
   MEM x (APPEND [ztrans L N r x 0] (APPEND (betwn r (ztrans L N r x 0) (l'y L r x)) [l'y L r x])) `,

REPEAT RESA_TAC
THEN DICH_ASM_TAC (1)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-5)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN DICH_TAC(28-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL]
THEN MRESA_TAC Tame_list.betwn_cases[`r`;`y`;`x`;`z`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`r`;`y`;`x`;`z`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Seq2.mem_next_el[`x`;`r`]
THEN MRESAL_TAC Aq7.indexf_y_le_z_in_r_0[`f`;`w`;`L`;`N`;`r`;`x`][Tame_defs2.ytrans;Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y r `;` indexf w z r`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`y`;`x`;`z`;`r`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`r`][ARITH_RULE`a<=a+1/\ (a+b=a+c<=> b=c)`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a<c ==> 0<b`)[`indexf y x r `;` indexf x z r`;`indexf y z r`]
THEN DICH_TAC 1
THEN SYM_DICH_TAC 1
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b+c=d==> c<=d`)[`indexf w y r `;` indexf y x r`;`indexf x z r`;`indexf w z r`]
THEN MRESAL_TAC Tame_list.indexf_add_right[`w`;`x`;`z`;`r`][ARITH_RULE`a<=a+1/\ (a+b=a+c<=> b=c)`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ 0<b ==> a<c`)[`indexf w x r `;` indexf x z r`;`indexf w z r`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`z`]
THEN MRESA_TAC Tame_list.indexf_prev[`x`;`w`;`r`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC);;



let AQ10_concl = `
  !L N r (x:A#A).
    good_list L /\ good_list_nodes L /\ marked_list L N r x ==>
    next_el (rtrans L N r x 1) x = f_list L x`;;

let AQ10=prove_by_refinement( AQ10_concl,
[
REPEAT RESA_TAC
THEN DICH_ASM_TAC (0)[Tame_defs2.marked_list;]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`y=l'y L r x`
THEN GABBREV_TAC`z1=prev_el r (ztrans L N r x 0)`
THEN GABBREV_TAC`z=ztrans L N r x 0`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`1=SUC 0`;Tame_defs2.transform_list;LET_THM]
THEN DICH_ASM_TAC(14-0)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(19-4)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x 0)`;`r`][Tame_defs2.ytrans]
THEN DICH_TAC(26-14)
THEN ASM_REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN RESA_TAC
THEN DICH_TAC(26-7)
THEN ASM_REWRITE_TAC[LET_THM]
THEN RESA_TAC
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`final_list L r`][Seq2.APPEND_cat;Seq.flatten_cat;Seq.cat_uniq]
THEN MP_TAC z_not_eq_ytrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ztrans;GSYM Seq.allP;Seq.mem_cat;List_hypermap.mem_not_nil;Seq.mem_seq1;Seq2.mem_flatten]
THEN MP_TAC mem_ztrans_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC ytrans_mem_rtrans_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;]
THEN MP_TAC mem_ytrans_list_of_darts_v0
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;][Tame_defs2.ytrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESAL_TAC PPLHULJ_v0[`L`;`N`;`r`;`x`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.ytrans;]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans;Seq.mem_filter;MEM_APPEND;Seq.mem_seq1;Tame_defs2.f_last;LAST_APPEND;APPEND_NIL;Tame_list.quotient_list_core;MEM_MAP;Seq.mem_cat;Seq.mem_seq1]
THEN REPEAT RESA_TAC
THEN MRESAL_TAC point_remark_mem_split[`L`;`N`;`r`;`x`][ Tame_defs2.ztrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Tame_defs2.rtrans]
THEN MRESA_TAC Tame_list.QRDYXYJ_list[`L`;`N`;`r`;`x`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`y =x`]
;



DICH_TAC 2
THEN RESA_TAC
;



MRESA_TAC Ohcgkfu.uniq_append_betwn[`r`;`z`;`y`]
THEN MRESAL_TAC Tame_list.next_el_cat1[`x`;`(APPEND [z] (APPEND (betwn r z y) [y]))`;`betwn f y z`][LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST;GSYM Seq2.APPEND_cat]
THEN SYM_DICH_TAC(47-7)
THEN DICH_TAC(46-38)
THEN ASM_REWRITE_TAC[MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC;


MRESAL_TAC Tame_list.next_el_cat_last1[`[z]`;`APPEND (betwn r z y) [y]`]
[LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST;GSYM Seq2.APPEND_cat]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`betwn r z y=[]`][APPEND;HD];


MRESAL_TAC Aq4.betwn_eq_nil[`z`;`y`;`r`][HD];


MRESAL_TAC Dangeyj.HD_BETWN2[`r`;`z`;`y`][HD_APPEND];


MRESAL_TAC Tame_list.next_el_cat2[`x`;`[z]`;`APPEND (betwn r z y) [y]`][LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST;GSYM Seq2.APPEND_cat;MEM_APPEND]
THEN MRESAL_TAC(SET_RULE`!A. A\/ ~A`)[`LAST(betwn r z y)=x`][APPEND;HD]
;



MRESA_TAC Dangeyj.mem_imp_not_nil[`betwn r z y`;`x`]
THEN MRESAL_TAC Tame_list.next_el_cat_last1[`betwn r z y`;`[y]`]
[LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST;GSYM Seq2.APPEND_cat;MEM_APPEND;Seq.cat_uniq]
THEN DICH_TAC 0
THEN DICH_TAC (49-44)
THEN REWRITE_TAC[Seq2.APPEND_cat;MEM_APPEND;Seq.cat_uniq;HD]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Aq23.next_last_betwn[`r`;`z`;`y`];


MRESA_TAC Ohcgkfu.uniq_betwn[`z`;`y`;`r`]
THEN MRESAL_TAC Tame_list.next_el_cat1[`x`;`betwn r z y`;`[y]`]
[LAST_APPEND;APPEND_EQ_NIL;Ohcgkfu.sing_not_nil;LAST;GSYM Seq2.APPEND_cat;MEM_APPEND;Seq.cat_uniq]
THEN MRESA_TAC Aq4.EQ_MEM_NEXT_EL_LAST[`r`;`z`;`y`;`x`]
THEN MRESA_TAC Ncvibwu.next_el_betwn_same[`z`;`y`;`x`;`r`]]);;



 end;;





load_end __FILE__;;