open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Pnxvwfs= struct


open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;

open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;

let ytrans_in_suc=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))
==> MEM (ytrans L N r x (SUC i)) (rtrans L N r x i)`,
REPEAT RESA_TAC
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`][]
THEN MRESAL_TAC Pbflhet.lt_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`(ytrans L N r x (SUC i))`;`r`;`x`;` i`][ARITH_RULE`~(a<a:num)`]);;


let indexf_y_le_z_in_r=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)
==> indexf w (ytrans L N r x i) (rtrans L N r x i)< indexf w (ztrans L N r x i) (rtrans L N r x i)`,
REPEAT RESA_TAC
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w (ytrans L N r x i) (rtrans L N r x i)`;`indexf w (ztrans L N r x i) (rtrans L N r x i)`]
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Pbflhet.indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`z`;`r`;`x`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESAL_TAC Pbflhet.indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`y`;`r`;`x`;`i`][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]);;

let ytran_suc_betwn_z_z_suc=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))
==>
indexf  (ztrans L N r x i) (ytrans L N r x (SUC i))  (rtrans L N r x i) 
< indexf  (ztrans L N r x i) (ztrans L N r x (SUC i))  (rtrans L N r x i) `,
REPEAT RESA_TAC
THEN MRESA_TAC ytrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pbflhet.ztrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`][]
THEN MRESA_TAC OHCGKFU[`L`;`N`;`r`;`x`;`(ytrans L N r x (SUC i))`;`i`]
THEN GABBREV_TAC`y=(ytrans L N r x i)`
THEN GABBREV_TAC`y0=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`z=(ztrans L N r x i)`
THEN GABBREV_TAC`z1=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`r1=(rtrans L N r x (i))`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN MRESA_TAC Pbflhet.ztran_suc_in_rtrans[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`SUC i`] 
THEN MRESA_TAC OHCGKFU[`L`;`N`;`r`;`x`;`z1`;`i`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN MRESAL_TAC Pbflhet.indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`y0`;`r`;`x`;`SUC i`][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(26-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`z`;`f`]
THEN MRESAL_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`i`;`indexf w (ztrans L N r x i) f`][ARITH_RULE`a<=a:num`]
THEN DICH_TAC (32-21)
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC (30-21)
THEN MRESA_TAC indexf_y_le_z_in_r[`f`;`w`;`L`;`N`;`r`;`x`;`SUC i`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`;`f`;`w`][]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`z`;`y0`;`r2`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\b<c==> b<=c/\ a<=c `)[`indexf w z r2 `;` indexf w y0 r2`;` indexf w z1 r2`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y0`;`z1`;`r2`] 
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`z`;`z1`;`r2`] 
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN DICH_TAC(35-30)
THEN SYM_DICH_TAC 2
THEN ARITH_TAC);;


let PNXVWFS1_concl = `!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x 
   ==>
 MEM (ytrans L N r x i) r`;;


let  PNXVWFS1=prove(PNXVWFS1_concl,

REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 0<i`)[`i`]
THENL[
MRESA_TAC Pbflhet.FINAL_LIST_INDUCT1[`L`;`N`;`r`;`x`;`i`]
THEN THAYTHEL_TAC 0[`0`][ARITH_RULE`0<=0`;POWER;o_DEF;I_DEF]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF];

GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`w=next_el f x `
THEN GABBREV_TAC`j=PRE i`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`i`]
THEN MRESA_TAC ytrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC ytran_suc_betwn_z_z_suc[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Pbflhet.ztrans_suc_in_ztran_w[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Pbflhet.w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`x`;`r`;`x`;`j`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<=c`)[`indexf (ztrans L N r x j) (ytrans L N r x i) (rtrans L N r x j)`;`
      indexf (ztrans L N r x j) (ztrans L N r x i) (rtrans L N r x j)`;
`indexf (ztrans L N r x j) w (rtrans L N r x j)`]
THEN GABBREV_TAC`y=(ytrans L N r x j)`
THEN GABBREV_TAC`z=(ztrans L N r x j)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`r1=(rtrans L N r x (j))`
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<=c==> a<=c`)[`indexf (ztrans L N r x j) (ytrans L N r x i) (rtrans L N r x j)`;
`indexf (ztrans L N r x j) w (rtrans L N r x j)`;`
      indexf (ztrans L N r x j) (ytrans L N r x 0) (rtrans L N r x j)`;]
THEN MRESA_TAC Pbflhet.PBFLHET[`L`;`N`;`(ytrans L N r x i)`;`r`;`(rtrans L N r x (PRE i))`;`w`;`x`;`PRE i`]]);;


let PNXVWFS2_concl = `!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x 
   ==>
 MEM (ztrans L N r x i) r`;;


let  PNXVWFS2=prove( PNXVWFS2_concl,
REPEAT RESA_TAC
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`w=next_el f x `
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Tame_list.indexf_refl[`(ztrans L N r x i)`;`(rtrans L N r x i)`]
THEN MRESAL_TAC Pbflhet.PBFLHET[`L`;`N`;`(ztrans L N r x i)`;`r`;`(rtrans L N r x i)`;`w`;`x`;`i`][ARITH_RULE`0<=a:num`]
);;


 end;;





load_end __FILE__;;