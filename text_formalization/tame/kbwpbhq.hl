open Native_strictbuild;;
load_begin();;

open Iter;;
open Products;;
open Permutations;;
open Misc;;
open Vectors;;
open Determinants;;
open Metric;;
open Topology;;
open Convex;;
open Polytope;;
open Integration;;
open Measure;;
open Complexes;;
open Transcendentals;;
open Realanalysis;;
open Geom;;
open Cross;;
open Flyspeck;;

(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Kbwpbhq= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;


open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;
open Pbflhet;;


let bounded_index_find_face=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L /\ 
marked_list L N r x /\
  next_el (find_face L x) x =w==>
(!i.  ~final_list L (rtrans L N r x (i)) ==> i <= indexf w (ztrans L N r x i) r)`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN INDUCT_TAC
THENL[
ARITH_TAC;

STRIP_TAC
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESA_TAC Diowaas.DIOWAAS[`w`;`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC Ryiuuvk.RYIUUVK[`w`;`L`;`N`;`r`;`x`;`i`]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC]);;



let KBWPBHQ0_concl =`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\ marked_list L N r x ==>
    ?i. final_list L (rtrans L N r x i)`;;


let KBWPBHQ0=prove( KBWPBHQ0_concl,

REPEAT RESA_TAC
THEN MRESA_TAC(SET_RULE`!A. ~A\/ A`)[`final_list L (rtrans L N r x (SUC (sizel r)))`]
THENL[
GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN MRESA_TAC bounded_index_find_face[`w`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`SUC (sizel r)`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`SUC (sizel r)`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`r`;`w`;`(ztrans L N r x (SUC (sizel r)))`]
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN ARITH_TAC;

GEXISTS_TAC`SUC(sizel r)`
THEN ASM_REWRITE_TAC[]]);;




let transform_count_not=prove(`j < transform_count L N r x ==> ~final_list L (rtrans L N r x j)`,
STRIP_TAC
THEN MRESAL_TAC minnum_not[`transform_count L N r x`;`(\i. final_list L (rtrans L N r x i))`;`j`][Tame_defs2.transform_count]);;


let lt_from_y_indexf_in_rtrans_suc_not_rtrans=prove_by_refinement( 
`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> indexf (ytrans L N r x (SUC i)) w (rtrans L N r x (SUC i))< indexf (ytrans L N r x (SUC i)) d (rtrans L N r x (SUC i))`,
[
REPEAT RESA_TAC
THEN MRESA_TAC lt_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`d`;`r`;`x`;` i`]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zs=(ztrans L N r x (SUC i))`
THEN GABBREV_TAC`rs=(rtrans L N r x (SUC i))`
THEN MRESA_TAC(ARITH_RULE`!a b :num. a<b==> a<=b`)[`indexf w d rs`;`indexf w ys rs`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`d`;`ys`;`rs`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a+b=c==> b<=c`)[`indexf w d rs `;` indexf d ys rs `;` indexf w ys rs`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=ys`];

DICH_TAC (21-9)
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;

MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=ys`];


DICH_TAC (22-9)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`ys`;`rs`]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_antisym[`d`;`ys`;`rs`]
THEN MRESA_TAC Tame_list.indexf_antisym[`w`;`ys`;`rs`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=e /\ c+d=e /\a<=c ==> d<b\/ d=b`)[`indexf d ys rs`;`indexf ys d rs`;`indexf w ys rs`;`indexf ys w rs`;` sizel rs`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`SUC i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(34-28)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (SUC i))`;`rs`]
THEN MRESA_TAC Tame_list.indexf_n[`ys`;`w`;`rs`]
THEN MRESA_TAC Tame_list.indexf_n[`ys`;`d`;`rs`]
THEN DICH_TAC(42-8)
THEN SYM_DICH_TAC 0
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]]);;



let mem_from_y_indexf_in_rtrans_suc_not_rtrans =prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x (SUC i))/\
   MEM d (rtrans L N r x (SUC i)) /\
 indexf (ytrans L N r x (SUC i)) d (rtrans L N r x (SUC i))<=
indexf (ytrans L N r x (SUC i)) w (rtrans L N r x (SUC i))
   ==>  (MEM d (rtrans L N r x i))`,
REWRITE_TAC[ARITH_RULE`a<=b:num <=> ~(b<a)`]
THEN REPEAT RESA_TAC
THEN MRESA_TAC lt_from_y_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`i`]);;



let indexf_ytrans_le_d_const =prove_by_refinement( `!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x /\
  next_el (find_face L x) x =w /\
MEM d (rtrans L N r x i)/\
indexf (ytrans L N r x i) d (rtrans L N r x i)<= indexf (ytrans L N r x i) w (rtrans L N r x i)
   ==>
MEM d r/\ indexf (ytrans L N r x i) d (rtrans L N r x i)=indexf (ytrans L N r x i) d r`,
[

REPEAT GEN_TAC
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 0<i`)[`i`];


MRESA_TAC Pbflhet.FINAL_LIST_INDUCT1[`L`;`N`;`r`;`x`;`i`]
THEN THAYTHEL_TAC 0[`0`][ARITH_RULE`0<=0`;POWER;o_DEF;I_DEF]
THEN DICH_TAC 3
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF];


GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`j=PRE i`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`i`]
THEN MRESA_TAC Pnxvwfs.ytrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Pnxvwfs.ytran_suc_betwn_z_z_suc[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Pbflhet.ztrans_suc_in_ztran_w[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Pbflhet.w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`x`;`r`;`x`;`j`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<=c/\ a<=b`)[`indexf (ztrans L N r x j) (ytrans L N r x i) (rtrans L N r x j)`;`
      indexf (ztrans L N r x j) (ztrans L N r x i) (rtrans L N r x j)`;
`indexf (ztrans L N r x j) w (rtrans L N r x j)`]
THEN GABBREV_TAC`y=(ytrans L N r x j)`
THEN GABBREV_TAC`z=(ztrans L N r x j)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN GABBREV_TAC`r1=(rtrans L N r x (j))`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a<b/\ b<c/\ c<=d ==> a<=d/\ a<c/\ b<=d`)[`indexf z yi r1`;`indexf z zi r1`;`indexf z w r1`;`indexf z y0 r1`;]
THEN MRESA_TAC Pbflhet.ztrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MRESA_TAC Pbflhet.ztran_suc_in_rtrans[`f`;`w`;`L`;`N`;`r`;`x`;`j`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`j`;`f`;`w`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`j`] 
THEN MRESA_TAC mem_from_y_indexf_in_rtrans_suc_not_rtrans[`f`;`w`;`L`;`N`;`d`;`r`;`x`;`j`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf z d r1`;`indexf z yi r1`];


MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c ==> a<=b/\ a<=c`)[`indexf z d r1`;`indexf z yi r1`;`indexf z w r1`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`d`;`L`;`N`;`w`;`r`;`x`;`j`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`yi`;`L`;`N`;`w`;`r`;`x`;`j`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`d`;`yi`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`d`;`w`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`yi`;`w`;`r1`]
THEN DICH_TAC 0
THEN DICH_TAC (44-28)
THEN DICH_TAC (43-36)
THEN SYM_DICH_TAC 1
THEN REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ (a+d)+e=c/\ a+d<c/\ a<a+d==> e<b /\0<e`)[`indexf z d r1`;`indexf d w ri`;`indexf z w r1`;`indexf d yi r1`;`indexf yi w ri`]
THEN MRESA_TAC Tame_list.indexf_add_left[`yi`;`d`;`w`;`ri`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a+b=c==> b<=c`)[`indexf yi d ri `;` indexf d w ri `;` indexf yi w ri`]
THEN DICH_TAC 0
THEN DICH_TAC 2
THEN ARITH_TAC;

MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`yi`;`L`;`N`;`d`;`r`;`x`;`j`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`yi`;`L`;`N`;`w`;`r`;`x`;`j`]
THEN DICH_TAC(40-7)
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`yi`;`d`;`r1`]
THEN MRESA_TAC Tame_list.indexf_add_left[`z`;`yi`;`w`;`r1`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num. a+b=c/\ a+d=e/\ b<=d/\ e<=f ==> c<=f`)[`indexf z yi r1 `;` indexf yi d r1 `;`indexf z d r1`;`indexf yi w r1 `;` indexf z w r1`;`indexf z y0 r1`]
THEN MRESA_TAC Pbflhet.PBFLHET_ALL[`(ytrans L N r x i)`;`L`;`N`;`d`;`r`;`(rtrans L N r x (PRE i))`;`w`;`x`;`PRE i`]
THEN THAYTHEL_TAC 0[`0`][ARITH_RULE`0<=a`]
THEN MRESA_TAC trans_indexf_suc[`f`;`w`;`z`;`yi`;`L`;`N`;`d`;`r`;`x`;`j`]
THEN SYM_DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN DICH_TAC 3
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]]);;





let next_eq_rtrans_r=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x /\
  next_el (find_face L x) x =w /\
 n<=indexf (ytrans L N r x i) w (rtrans L N r x i)
   ==>
 ((next_el (rtrans L N r x i))POWER n) (ytrans L N r x i) 
=  ((next_el r)POWER n) (ytrans L N r x i)`,

REPEAT RESA_TAC
THEN GABBREV_TAC`d=(next_el (rtrans L N r x i) POWER n) (ytrans L N r x i)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(20-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`yi`;`ri`;`n`]
THEN GABBREV_TAC`f=(find_face L x)`
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`ri`;`yi`;`w`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`n`;`indexf yi w ri`;` sizel ri`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`n`;`yi`;`d`;`ri`]
THEN MRESA_TAC indexf_ytrans_le_d_const[`w`;`d`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(44-37)[Tame_defs2.normal_list]
THEN DICH_TAC(49-38)
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (0))`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`yi`;`d`;`r`]);;


let next_ytrans_const=prove_by_refinement( `!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x 
   ==>
 next_el (rtrans L N r x i) (ytrans L N r x i) 
=  next_el r (ytrans L N r x i)`,
[
REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 0<i`)[`i`];

REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF];

GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ SUC 0<=a`)[`indexf (yi) w (ri)`];


MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf0[`yi`;`w`;`ri`]
THEN MRESAL_TAC (GSYM Hypermap.LT_SUC_PRE)[`i`][]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_refl[`w`;`r`]
THEN MRESAL_TAC Ryiuuvk.RYIUUVK[`w`;`L`;`N`;`r`;`x`;`PRE i`][ARITH_RULE`a<=0<=> a=0`]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`PRE i`]
THEN MRESA_TAC Diowaas.DIOWAAS[`w`;`L`;`N`;`r`;`x`;`PRE i`]
THEN DICH_TAC 0
THEN ARITH_TAC;



MRESAL_TAC next_eq_rtrans_r[`w`;`SUC 0`;`L`;`N`;`r`;`x`;`i`][POWER;o_DEF;I_DEF]
]);;



let final_list_transform_count=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\ marked_list L N r x /\ transform_count L N r x = t==> 
final_list L (rtrans L N r x t)`,

REPEAT RESA_TAC
THEN MRESA_TAC KBWPBHQ0[`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Nuxcoea.MIN_LEAST[`{i | final_list L (rtrans L N r x i)}`;`i`][IN_ELIM_THM;GSYM Tame_defs2.transform_count]);;


let indexf_next_el_le=prove_by_refinement(`!r. uniq r/\ MEM w r/\ MEM d r/\ indexf w d r< a==> indexf w (next_el r d) r<= a `,
[
REPEAT RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w (next_el r d) r`;`indexf w d r`];

DICH_TAC 0
THEN DICH_TAC 0
THEN ARITH_TAC;

MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`d`;`r`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`d`;`(next_el r d)`;`r`]
THEN MRESA_TAC Dangeyj.mem_imp_not_nil[`r`;`d`]
THEN MRESA_TAC Seq.size_eq0[`r`]
THEN MRESA_TAC (ARITH_RULE`!a. ~(a=0)==> a=1\/ 1<a`)[`sizel r`];

MRESA_TAC Seq2.size1_eq[`r`]
THEN DICH_TAC(10-1)
THEN DICH_TAC(9-1)
THEN ASM_REWRITE_TAC[Seq.mem_seq1;]
THEN REPEAT RESA_TAC
THEN ASM_REWRITE_TAC[Tame_list.next_el1]
THEN MRESAL_TAC Tame_list.indexf_refl[`x`;`[x]`][Seq.mem_seq1]
THEN ARITH_TAC;

MRESA_TAC Tame_list.next_el_indexf[`d`;`(next_el r d)`;`r`]
THEN SYM_DICH_TAC(4)
THEN ASM_REWRITE_TAC[]
THEN DICH_TAC 6
THEN ARITH_TAC]);;


let next_el_power_trans_eq_f=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
~final_list L (rtrans L N r x i)/\
  next_el (find_face L x) x =w/\
 n<=indexf w (ytrans L N r x i)  (rtrans L N r x i)
 ==>
((next_el (rtrans L N r x i))POWER n) w = ((next_el (find_face L x))POWER n) w`,

REPEAT RESA_TAC
THEN GABBREV_TAC`d=(next_el (rtrans L N r x i) POWER n) w`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(20-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN GABBREV_TAC`f=(find_face L x)`
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`ri`;`w`;`yi`]
THEN MRESAL_TAC indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`yi`;`r`;`x`;`i`][ARITH_RULE`a<=a:num`]
THEN DICH_TAC (34-6)
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`n`;`indexf w yi ri`;` sizel ri`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`ri`;`n`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`n`;`w`;`d`;`ri`]
THEN DICH_ASM_TAC(37-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN MRESAL_TAC indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Ncvibwu.indexf_ytrans_eq_l_m1[`L`;`N`;`r`;`x`;`i`;`w`]
THEN MRESA_TAC Ncvibwu.l_y_rep_power_le[`L`;`ri`;`x`]
THEN THAYTHEL_TAC 0[`indexf w d f`][POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[]
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th] THEN ASSUME_TAC(SYM th))
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC(indexf w d ri)`][POWER;o_DEF;I_DEF]
THEN RESA_TAC);;



let next_el_const_le_indexf_y0=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
MEM d r /\
indexf w d r  < indexf w (ytrans L N r x 0) r /\
0 < transform_count L N r x/\
  next_el (find_face L x) x =w
 ==>
(next_el r d = f_list L d)`,

REPEAT RESA_TAC
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`0`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w d r`;`indexf w y0 r`;]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC indexf_next_el_le[`w`;`d`;`indexf w y0 r`;`r`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`d`;`r`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MRESAL_TAC indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`0`]
[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_TAC(31-5)
THEN RESA_TAC
THEN DICH_TAC(31-10)
THEN RESA_TAC
THEN MRESAL_TAC next_el_power_trans_eq_f[`SUC (indexf w d r)`;`w`;`L`;`N`;`r`;`x`;`0`][COM_POWER;o_DEF]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;ARITH_RULE`SUC a<=b<=> a<b`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`r`]
THEN MRESAL_TAC next_el_power_trans_eq_f[`(indexf w d r)`;`w`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN DICH_ASM_TAC(32-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;][List_hypermap.dart_in_face]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`f`;`SUC (0)`]
[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`w`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`w`;`SUC(indexf w d f)`][COM_POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`w`;`indexf w d f`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN STRIP_TAC
THEN SYM_DICH_TAC 0);;



let indexf_const_le_f=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
~final_list L (rtrans L N r x i)/\
  next_el f x =w/\
(find_face L x)=f/\
 MEM d f/\
 indexf w d  f<=indexf w (ytrans L N r x i)  f
 ==>
indexf w  d (rtrans L N r x i) =indexf w d  f`,

REPEAT RESA_TAC
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MRESAL_TAC Pbflhet.indexf_const_le_indexf_ytrans[`w`;`f`;`L`;`N`;`(ytrans L N r x i)`;`r`;`x`;`i`][ARITH_RULE`a<=a:num`]
THEN DICH_ASM_TAC(13-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;][List_hypermap.dart_in_face]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`f`;`SUC (0)`]
[Tame_defs2.rtrans;POWER;o_DEF;I_DEF; List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESA_TAC next_el_power_trans_eq_f[`indexf w d f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;]
THEN DICH_ASM_TAC(41-35)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`ri`;`indexf w d f`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`ri`;`w`;`yi`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`indexf w d f`;`indexf w yi ri`;` sizel ri`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`indexf w d f`;`w`;`d`;`ri`]);;





let f_list_power_ytrans_not_mem_ntrans=prove( `!L N r (x:A#A) i. transform_assumption_v2 L /\
         good_list L /\
         good_list_nodes L /\
marked_list L N r x /\ ~(final_list L (rtrans L N r x i))
==> (!j.  j< l'p L ((ntrans L N r x i)) (rtrans L N r x i) x
==> ~(MEM ((f_list L POWER (SUC j)) (ytrans L N r x i)) (flatten (ntrans L N r x i))))`,
REPEAT RESA_TAC
THEN DICH_TAC 0
THEN REWRITE_TAC[Tame_defs2.ztrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=(l'y L r1 x)`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC minnum_not[`l'p L (ntrans L N r x i) r1 x`;`(\p. MEM ((f_list L POWER SUC p) (l'y L r1 x)) (flatten (ntrans L N r x i)))`;`j`][GSYM Tame_defs2.l_p]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[ Tame_defs2.l_p]
THEN MATCH_MP_TAC Ssrbool.contraNN
THEN ASM_REWRITE_TAC[Seq2.mem_flatten]
THEN RESA_TAC
THEN GEXISTS_TAC`l`
THEN ASM_REWRITE_TAC[]);;


let not_in_ntrans_i=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
  next_el f x=w/\
~final_list L (rtrans L N r x i)/\
indexf w d f< indexf w (ztrans L N r x i) f/\
indexf w (ytrans L N r x i) f < indexf w d f/\
MEM d f
==>  ~(MEM d (flatten (ntrans L N r x i)))`,

REPEAT RESA_TAC
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN GABBREV_TAC`ni=(ntrans L N r x (i))`
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w yi f`;`indexf w d f`;]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w yi f`;`indexf w zi f`;]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`yi`;`d`;`f`] 
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`yi`;`zi`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c /\ a+ d=e/\ a<c /\ c< e==> b<d/\ 0<b`)[`indexf w yi f `;`indexf yi d f `;` indexf w d f`;`indexf yi zi f `;`indexf w zi f `]
THEN DICH_ASM_TAC(25-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`yi`;`x`;`L`]
THEN MRESA_TAC Pwssrat.indexf_ytrans_suc_lp[`f`;`ri`;`L`;`N`;`r`;`x`;`i`;`ni`]
THEN MRESA_TAC Tame_list.indexf_n[`yi`;`d`;`f`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`yi`;`indexf yi d f`][POWER;I_DEF;o_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf yi d f`]
THEN MRESA_TAC f_list_power_ytrans_not_mem_ntrans[`L`;`N`;`r`;`x`;`i`]
THEN THAYTHE_TAC 0[`PRE (indexf yi d f)`]
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[ARITH_RULE`a<b<=> SUC a< SUC b`]
THEN ASM_REWRITE_TAC[]
THEN SYM_DICH_TAC 2
THEN ASM_REWRITE_TAC[]
THEN REPEAT RESA_TAC
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[]);;


let CASES1=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
  next_el f x=w/\
~final_list L (rtrans L N r x i)/\
indexf w d f< indexf w (ztrans L N r x i) f/\
indexf w (ytrans L N r x i) f < indexf w d f/\
MEM d f
==>  ~(MEM d r)`,

REPEAT RESA_TAC
THEN DICH_TAC 0
THEN MRESA_TAC not_in_ntrans_i[`w`;`f`;`d`;`i`;`L`;`N`;`r`;`x`]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Dangeyj.DANGEYJ[`L`;`N`;`r`;`x`;`0`;`i`][ARITH_RULE`0<=a`;SUBSET;IN_SET_OF_LIST]
THEN MATCH_DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;Seq2.mem_flatten]
THEN GEXISTS_TAC`r`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]);;


let betwn_ztran_ytrans_suc_const=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
  next_el f x=w/\
~final_list L (rtrans L N r x (SUC i))/\
n<= indexf (ztrans L N r x i) (ytrans L N r x (SUC i)) f
==>  ((next_el r)POWER n) (ztrans L N r x i) = ((next_el f)POWER n) (ztrans L N r x i)`,

REPEAT RESA_TAC
THEN GABBREV_TAC`d=(next_el f POWER n) (ztrans L N r x i)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(16-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`f`;`n`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`ys`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`n`;`indexf zi ys f`;` sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`n`;`zi`;`d`;`f`]
THEN GABBREV_TAC`rs=(rtrans L N r x (SUC i))`
THEN MRESAL_TAC indexf_const_le_f[`w`;`ys`;`f`;`L`;`N`;`r`;`x`;`SUC i`][ARITH_RULE`a<=a:num`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`ys`;`f`] 
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`ys`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ d<=b/\ c<e==> d+a<e/\ d+a<=c`)[`indexf w zi f`;`indexf zi ys f`;`indexf w ys f`;`n`;` sizel f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`zi`;`f`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`n+indexf w zi f`;`w`;`d`;`f`][Hypermap.lemma_add_exponent_function]
THEN MRESAL_TAC next_el_power_trans_eq_f[`(indexf w zi f)`;`w`;`L`;`N`;`r`;`x`;`SUC i`][Hypermap.lemma_add_exponent_function]
THEN MRESAL_TAC next_el_power_trans_eq_f[`(indexf w d f)`;`w`;`L`;`N`;`r`;`x`;`SUC i`][Hypermap.lemma_add_exponent_function]
THEN MRESAL_TAC indexf_const_le_f[`w`;`zi`;`f`;`L`;`N`;`r`;`x`;`SUC i`][ARITH_RULE`a<=a:num`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`;`f`;`w`][]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`][]
THEN MRESA_TAC Pbflhet.ztrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`ys`;`rs`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d:num. a+b=c/\ a+d=c ==> b=d `)[`indexf w zi f`;`indexf zi ys rs`;`indexf w ys f`;`indexf zi ys f`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Tame_list.indexf_refl[`(ztrans L N r x i)`;`ri`]
THEN MRESA_TAC Pnxvwfs.ytrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC trans_indexf_suc[`f`;`w`;`zi`;`zi`;`L`;`N`;`ys`;`r`;`x`;`i`][ARITH_RULE`0<=a`]
THEN MRESA_TAC Pnxvwfs.ytran_suc_betwn_z_z_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pbflhet.ztrans_suc_in_ztran_w[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pbflhet.w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`x`;`r`;`x`;`i`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`SUC i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN DICH_ASM_TAC(62-56)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (SUC i))`;`rs`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`rs`;`n`]
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][ARITH_RULE`~(a+b<b:num)`]
THEN MRESAL_TAC trans_indexf_suc[`f`;`w`;`zi`;`zi`;`L`;`N`;`d`;`r`;`x`;`i`][ARITH_RULE`0<=a`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`rs`;`zi`;`ys`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`n`;`indexf zi ys f`;` sizel rs`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`n`;`zi`;`d`;`rs`][]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<c`)[`n`;`indexf zi ys f`;` indexf zi (ztrans L N r x (SUC i)) ri`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`n`;` indexf zi (ztrans L N r x (SUC i)) ri`;`indexf zi w ri`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`n`;`indexf zi w ri`;`indexf zi (ytrans L N r x 0) ri`]
THEN MRESA_TAC Pbflhet.PBFLHET[`L`;`N`;`d`;`r`;`ri`;`w`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(44-37)[Tame_defs2.normal_list]
THEN DICH_TAC(49-38)
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (0))`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`r`]);;



let next_el_const_betwn_ztran_ytrans_suc=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
  next_el f x=w/\
~final_list L (rtrans L N r x (SUC i))/\
MEM d f /\
indexf (ztrans L N r x i) d f< indexf (ztrans L N r x i) (ytrans L N r x (SUC i)) f
 ==>
(next_el r d = f_list L d)`,
REPEAT RESA_TAC
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b/\ SUC a<=b`)[`indexf zi d f`;`indexf zi ys f`;]
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(18-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESA_TAC betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi  d f`;`i`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC betwn_ztran_ytrans_suc_const[`w`;`f`;`SUC(indexf zi  d f)`;`i`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]);;



let EXSITS_YTRANS_LE_COUNT=prove_by_refinement( 
`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
MEM d r/\
  MEM d f /\
 transform_count L N r x =t /\
~(next_el r d = f_list L d)/\
(find_face L x)=f/\
  next_el f x=w
==>
(!i. indexf w d f < indexf w (ytrans L N r x i) f  /\ i<t
==>  (?j. ytrans L N r x j =d /\ j<t))`,
[
REPEAT GEN_TAC
THEN RESA_TAC
THEN INDUCT_TAC;

RESA_TAC
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`0`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w d f`;`indexf w (ytrans L N r x 0) f`]
THEN MRESAL_TAC indexf_const_le_f[`w`;`d`;`f`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`]
THEN MRESAL_TAC indexf_const_le_f[`w`;`(ytrans L N r x 0)`;`f`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`a<=a:num`]
THEN MRESA_TAC next_el_const_le_indexf_y0[`w`;`d`;`L`;`N`;`r`;`x`];

STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`t`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ a=b\/ b<a`)[`indexf w d f`;`indexf w (ytrans L N r x i) f`];

DICH_TAC 4
THEN RESA_TAC;

GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(31-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;][List_hypermap.dart_in_face]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`f`;`SUC (0)`]
[Tame_defs2.rtrans;POWER;o_DEF;I_DEF; List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`(ytrans L N r x i)`;`f`];

MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w d f`;`indexf w zi f`];

MRESA_TAC CASES1[`i`;`w`;`f`;`d`;`L`;`N`;`r`;`x`];

MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`ys`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c /\ a+ d=e/\  c< e==> b<d`)[`indexf w zi f `;`indexf zi d f `;` indexf w d f`;`indexf zi ys f `;`indexf w ys f `]
THEN MRESA_TAC next_el_const_betwn_ztran_ytrans_suc[`w`;`i`;`f`;`d`;`L`;`N`;`r`;`x`]]);;



let in_rtrans_suc_not_rtrans_new=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> MEM d (betwn f (ytrans L N r x i) (ztrans L N r x i))`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN DICH_TAC 1
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN DICH_ASM_TAC(20-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN DICH_ASM_TAC(25-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MRESAL_TAC Seq2.next_prev_id[`(ztrans L N r x i)`;`r1`][Tame_defs2.ytrans]
THEN MP_TAC PPLHULJ
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.ytrans;]
THEN MRESAL_TAC List_hypermap.mem_find_face_imp_faces_eq[`y`;`x`;`L`][MEM_APPEND;Seq.mem_seq1]
THEN RESA_TAC
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN DICH_TAC(39-7)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.betwn_mem[`r1`;`z`;`y`;`d`]);;


let indexf_in_rtrans_suc_not_rtrans_new=prove(`!L N d r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
   find_face L x=f /\
   next_el f x=w /\
~final_list L (rtrans L N r x i)/\
   MEM d (rtrans L N r x (SUC i)) /\
 ~(MEM d (rtrans L N r x i))
   ==> indexf w d f< indexf w (ztrans L N r x i) f
/\ indexf w (ytrans L N r x i) f< indexf w d f`,
REPEAT GEN_TAC
THEN STRIP_TAC
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESAL_TAC in_rtrans_suc_not_rtrans_new[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN MP_TAC PPLHULJ
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][Tame_defs2.ztrans;Tame_defs2.ytrans;]
THEN MP_TAC z_not_eq_ytrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][Tame_defs2.ytrans;]
THEN DICH_ASM_TAC(26-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_add_betwn[`y`;`d`;`z`;`f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w y f`;`indexf w z f`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`y`;`z`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num . a+b=c /\ d+e=b==> e<=c`)[`indexf w y f`;`indexf y z f`;`indexf w z f`;`indexf y d f`;`indexf d z f`]
THEN MRESA_TAC Tame_list.betwn_mem[`f`;`y`;`z`;`d`]
THEN MRESA_TAC Tame_list.indexf_add_right[`w`;`d`;`z`;`f`]
THEN MRESA_TAC Tame_list.indexf_betwn_eq[`f`;`y`;`d`;`z`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e f:num . a+b=c /\ d+e=b/\ f+e=c/\ 0<d /\ d<b ==> f<c/\ a<f`)[`indexf w y f`;`indexf y z f`;`indexf w z f`;`indexf y d f`;`indexf d z f`;`indexf w d  f`]);;


let sizel_final_list_eq_f=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
 transform_count L N r x =t 
==> sizel(rtrans L N r x t)=sizel f`,
REPEAT RESA_TAC
THEN MRESAL_TAC final_list_transform_count[`t`;`L`;`N`;`r`;`x`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`t`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(43-37)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x t)`;`(rtrans L N r x t)`]
THEN MRESA_TAC Seq2.card_set_of_list_uniq[`rtrans L N r x t`]
THEN SYM_DICH_TAC 0
THEN DICH_ASM_TAC(21-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Seq2.card_set_of_list_uniq[`f`]
THEN SYM_DICH_TAC 0
THEN MATCH_MP_TAC(SET_RULE`!a b. a=b ==> f a= f b`)
THEN REWRITE_TAC[EXTENSION;IN_SET_OF_LIST]
THEN REPEAT GEN_TAC
THEN EQ_TAC
THENL[

RESA_TAC
THEN GABBREV_TAC`rt=(rtrans L N r x (t))`
THEN GABBREV_TAC`w=next_el f x`
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`t`;`f`;`w`][]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`w`;`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`x'`;`rt`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`(rtrans L N r x t)`;`indexf w x' rt`;`w`][List_hypermap.dart_in_face]
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[th])
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;`indexf w x' rt`];

REPEAT RESA_TAC
THEN GABBREV_TAC`rt=(rtrans L N r x (t))`
THEN GABBREV_TAC`w=next_el f x`
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`t`;`f`;`w`][]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`w`;`x`;`L`]
THEN MRESAL_TAC Tame_list.final_list_rot[`L`;`rt`;`w`][List_hypermap.dart_in_face]
THEN DICH_TAC (32-26)
THEN SYM_DICH_TAC 0
THEN RESA_TAC
THEN MRESA_TAC Seq.mem_rot[`n`;`rt`;`x'`]]);;


let CASES2=prove_by_refinement( 
`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
  next_el f x=w/\
0<t/\
 transform_count L N r x =t /\
n<= indexf (ztrans L N r x (PRE t)) w f
==>  ((next_el r)POWER n) (ztrans L N r x (PRE t)) = ((next_el f)POWER n) (ztrans L N r x (PRE t))`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`i=PRE t`
THEN GABBREV_TAC`d=(next_el f POWER n) (ztrans L N r x i)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`t`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`i`;`t`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`PRE t`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(20-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`f`;`n`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`zi`;`f`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=zi`];

DICH_TAC (28-20)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`f`]
THEN ARITH_TAC;

MRESA_TAC(ARITH_RULE`!a b :num. a<=b==> a<b\/a=b `)[`n`;`indexf zi w f`];


MRESA_TAC Tame_list.indexf_antisym[`w`;`zi`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d :num. a+b=c/\ d<b==> d+a<c/\ d<c`)[`indexf w zi f`;`indexf zi w f`;` sizel f`;`n`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`n+indexf w zi f`;`w`;`d`;`f`][Hypermap.lemma_add_exponent_function]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`][ARITH_RULE`a<=b+a:num`;ARITH_RULE` a+b=c+a<=>b=c:num`] 
THEN MRESA_TAC Pbflhet.ztrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC final_list_transform_count[`t`;`L`;`N`;`r`;`x`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`t`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(43-37)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x t)`;`(rtrans L N r x t)`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`zi`;`x`;`L`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`(rtrans L N r x t)`;`n`;`zi`][List_hypermap.dart_in_face]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans_new[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][ARITH_RULE`~(a+b<b:num)`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Tame_list.indexf_refl[`(ztrans L N r x i)`;`ri`]
THEN MRESAL_TAC trans_indexf_suc[`f`;`w`;`zi`;`zi`;`L`;`N`;`d`;`r`;`x`;`i`]
[ARITH_RULE`0<=a`]
THEN GABBREV_TAC`rt=(rtrans L N r x (t))`
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`;`f`;`w`][]
THEN MRESAL_TAC trans_indexf_suc[`f`;`w`;`zi`;`zi`;`L`;`N`;`w`;`r`;`x`;`i`]
[ARITH_RULE`0<=a`]
THEN MRESA_TAC sizel_final_list_eq_f[`t`;`f`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`indexf zi d f`;`zi`;`d`;`rt`][Hypermap.lemma_add_exponent_function]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`w`;`f`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`(rtrans L N r x t)`;`indexf zi w f`;`zi`][List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`w`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`indexf zi w f`;`zi`;`w`;`rt`][Hypermap.lemma_add_exponent_function]
THEN MRESA_TAC Pbflhet.w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`x`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<=c==> a<=c`)[`n`;`indexf zi w ri`;`indexf zi (ytrans L N r x 0) ri`]
THEN MRESA_TAC Pbflhet.PBFLHET[`L`;`N`;`d`;`r`;`ri`;`w`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(44-37)[Tame_defs2.normal_list]
THEN DICH_TAC(49-38)
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (0))`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`r`];

DICH_TAC (29-10)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`w`;`f`];


MRESA_TAC Tame_list.indexf_antisym[`w`;`zi`;`f`]
THEN MRESA_TAC(ARITH_RULE`!a b c d :num. a+b=c/\ d<b==> d+a<c/\ d<c`)[`indexf w zi f`;`indexf zi w f`;` sizel f`;`n`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`n+indexf w zi f`;`w`;`d`;`f`][Hypermap.lemma_add_exponent_function]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`][ARITH_RULE`a<=b+a:num`;ARITH_RULE` a+b=c+a<=>b=c:num`] 
THEN MRESA_TAC Pbflhet.ztrans_in_suc[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC final_list_transform_count[`t`;`L`;`N`;`r`;`x`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`t`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;]
THEN DICH_ASM_TAC(43-37)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x t)`;`(rtrans L N r x t)`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`zi`;`x`;`L`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`(rtrans L N r x t)`;`n`;`zi`][List_hypermap.dart_in_face]
THEN DICH_TAC 2
THEN RESA_TAC
THEN MRESAL_TAC indexf_in_rtrans_suc_not_rtrans_new[`w`;`f`;`L`;`N`;`d`;`r`;`x`;`i`][ARITH_RULE`~(a+b<b:num)`]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Tame_list.indexf_refl[`(ztrans L N r x i)`;`ri`]
THEN MRESAL_TAC trans_indexf_suc[`f`;`w`;`zi`;`zi`;`L`;`N`;`d`;`r`;`x`;`i`]
[ARITH_RULE`0<=a`]
THEN GABBREV_TAC`rt=(rtrans L N r x (t))`
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESAL_TAC trans_indexf_suc[`f`;`w`;`zi`;`zi`;`L`;`N`;`w`;`r`;`x`;`i`]
[ARITH_RULE`0<=a`]
THEN MRESA_TAC sizel_final_list_eq_f[`t`;`f`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`indexf zi d f`;`zi`;`d`;`rt`][Hypermap.lemma_add_exponent_function]
THEN DICH_TAC(64-59)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`zi`;`w`]
THEN DICH_TAC 1
THEN RESA_TAC
THEN MRESA_TAC Pbflhet.w_betwn_ztrans_ytran0[`f`;`w`;`L`;`N`;`x`;`r`;`x`;`i`]
THEN MRESA_TAC Pbflhet.PBFLHET[`L`;`N`;`d`;`r`;`ri`;`w`;`x`;`i`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(44-37)[Tame_defs2.normal_list]
THEN DICH_TAC(49-38)
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (0))`;`r`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`r`]]);;


let next_el_const_betwn_ztran_w_suc=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
  MEM d f /\
0<t /\
 transform_count L N r x =t /\
(find_face L x)=f/\
  next_el f x=w/\
 indexf w (ztrans L N r x (PRE t)) f <= indexf w d f 
==>  (next_el r d = f_list L d)`,
REPEAT RESA_TAC
THEN GABBREV_TAC`i=PRE t`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`t`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`i`;`t`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`PRE t`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(20-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`][]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=zi`]
THENL[

DICH_TAC (27-20)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`f`]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_antisym[`w`;`zi`;`f`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`d`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ a+d=e/\ c<e==> b<=d/\ SUC b<=d`)[`indexf w zi f`;`indexf zi d f`;`indexf w d f`;`indexf zi w f`;` sizel f`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESAL_TAC CASES2[`w`;`f`;`(indexf zi d f)`;`t`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN MRESAL_TAC CASES2[`w`;`f`;`SUC (indexf zi d f)`;`t`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`d`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`d`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]]);;



let KBWPBHQ1_concl = `!L N r (x:A#A) u. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
  MEM u r /\ MEM u (find_face L x) ==>
  ((?i. ytrans L N r x i= u /\ i < transform_count L N r x) <=> 
     ~(next_el (find_list N u) u = f_list L u))`;;



let  KBWPBHQ1=prove_by_refinement( 
KBWPBHQ1_concl,
[
REPEAT RESA_TAC
THEN EQ_TAC
THEN RESA_TAC;

MRESAL_TAC minnum_not[`transform_count L N r x`;`(\i. final_list L (rtrans L N r x i))`;`i`][Tame_defs2.transform_count]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.find_list_uniq[`N`;`r`;`u`]
THEN MRESA_TAC next_ytrans_const[`L`;`N`;`r`;`x`;`i`]
THEN SYM_DICH_TAC 0;

GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`ri`][GSYM Seq.allPn]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;]
THEN DICH_ASM_TAC(41-35)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`x'`;`ri`]
THEN DICH_TAC(48-32)
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN RESA_TAC
THEN GSUBGOAL_THEN`(indexf w x' ri) IN {m | ~(ITER (SUC (SUC m)) (next_el ri) x =
                f_list L (ITER (SUC m) (next_el ri) x))}`ASSUME_TAC;


REWRITE_TAC[IN_ELIM_THM]
THEN REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN GEN_REWRITE_TAC(RAND_CONV o DEPTH_CONV)[POWER;o_DEF;I_DEF]
THEN ASM_REWRITE_TAC[COM_POWER]
THEN DICH_ASM_TAC(46-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN ASM_REWRITE_TAC[];


MRESAL_TAC Nuxcoea.MIN_LEAST[`{m | ~(ITER (SUC (SUC m)) (next_el ri) x =
                f_list L (ITER (SUC m) (next_el ri) x))}`;`(indexf w x' ri)`][GSYM Tame_defs2.l_m]
THEN DICH_TAC 1
THEN REWRITE_TAC[IN_ELIM_THM;GSYM Tame_list.POWER_TO_ITER;]
THEN MRESAL_TAC Pwssrat.l_y_rep_power[`L`;`ri`;`x`][GSYM Tame_list.POWER_TO_ITER;GSYM Tame_defs2.ytrans;COM_POWER;o_DEF]
THEN REWRITE_TAC[COM_POWER;o_DEF]
THEN SYM_DICH_TAC 0
THEN EXPAND_TAC"u"
THEN EXPAND_TAC"yi"
THEN REWRITE_TAC[Tame_defs2.ytrans;]
THEN ASM_REWRITE_TAC[];



MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.find_list_uniq[`N`;`r`;`u`]
THEN DICH_TAC(22-6)
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`transform_count L N r x`]
;


MRESAL_TAC final_list_transform_count[`0`;`L`;`N`;`r`;`x`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(24-1)[List_hypermap.good_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`x`;`L`]
THEN MRESAL_TAC f_list_power_next_el[`L`;`u`;`SUC 0`][List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`r`;`SUC 0`;`u`][List_hypermap.dart_in_face]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 3
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF];


GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`t=transform_count L N r x`
THEN GABBREV_TAC`i=PRE t`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`t`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`i`;`t`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b\/ a=b\/ b<a`)[`indexf w u f`;`indexf w (ytrans L N r x (PRE t))  f`;];


MRESA_TAC EXSITS_YTRANS_LE_COUNT[`w`;`f`;`u`;`t`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`PRE t`];

GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(31-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;][List_hypermap.dart_in_face]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`f`;`SUC (0)`]
[Tame_defs2.rtrans;POWER;o_DEF;I_DEF; List_hypermap.dart_in_face]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`u`;`f`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`(ytrans L N r x i)`;`f`];


MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ b<=a`)[`indexf w u f`;`indexf w zi f`];

MRESA_TAC CASES1[`i`;`w`;`f`;`u`;`L`;`N`;`r`;`x`];

MRESA_TAC next_el_const_betwn_ztran_w_suc[`t`;`w`;`f`;`u`;` L`;`N`;`r`;`x`]]);;



let change_next_prev=prove(`uniq r /\ MEM x r /\ next_el r x =y==> prev_el r y = x`,
RESA_TAC
THEN SYM_DICH_TAC 0
THEN ASM_SIMP_TAC[Seq2.prev_next_id]);;



let prev_el_const_ztran_rtrans=prove_by_refinement( `!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x 
   ==>
prev_el (rtrans L N r x i) (ztrans L N r x i)  
=  prev_el r (ztrans L N r x i)  `,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Pnxvwfs.indexf_y_le_z_in_r[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b :num. a<b==> a<=b`)[`indexf w yi ri`;`indexf w zi ri`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`yi`;`zi`;`ri`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ a+c=b==> 0<c`)[`indexf w yi ri`;`indexf w zi ri`;`indexf yi zi ri`]
THEN MRESAL_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf yi zi ri`][]
THEN GABBREV_TAC`n=PRE (indexf yi zi ri)`
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`n`;`indexf yi zi ri`]
THEN GABBREV_TAC`d=(next_el ri POWER n) (yi)`
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(20-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESA_TAC Tame_list.indexf_n[`yi`;`zi`;`ri`]
THEN DICH_TAC 0
THEN DICH_TAC(35-17)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th;COM_POWER;o_DEF]
THEN ASSUME_TAC th)
THEN STRIP_TAC
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=zi`];

DICH_TAC (37-13)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`ri`]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_antisym[`w`;`zi`;`ri`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=yi`];

MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_refl[`yi`;`f`]
THEN MRESAL_TAC properties_of_ytrans0[`w`;`f`;`L`;`N`;`r`;`x`;`i`][ARITH_RULE`a<=0<=> a=0`]
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN DICH_TAC(48-44)
THEN ASM_REWRITE_TAC[]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN STRIP_TAC
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN MRESA_TAC Tame_list.indexf0[`yi`;`y0`;`ri`]
THEN MRESA_TAC(ARITH_RULE`!i. i=0\/ 0<i`)[`i`];

EXPAND_TAC"ri"
THEN POP_ASSUM(fun th-> REWRITE_TAC[th;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]);

MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`i`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`PRE i`;]
THEN DICH_TAC 0
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`PRE i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`PRE i`;`f`;`w`]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 3
THEN SYM_DICH_TAC 4
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;


MRESA_TAC Tame_list.indexf_antisym[`w`;`yi`;`ri`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=e /\ c+d=e /\c<=a ==> b<=d`)[`indexf w zi ri`;`indexf zi w ri`;`indexf w yi ri`;`indexf yi w ri`;` sizel ri`]
THEN MRESA_TAC Tame_list.indexf_add_right[`yi`;`zi`;`w`;`ri`] 
THEN MRESA_TAC(ARITH_RULE`!a b c n:num. a+b=c/\ n<a ==>n<=c/\ SUC n<=c`)[`indexf yi zi ri`;`indexf zi w ri`;`indexf yi w ri`;`n`]
THEN MRESAL_TAC next_eq_rtrans_r[`w`;`n`;`L`;`N`;`r`;`x`;`i`][COM_POWER;o_DEF;I_DEF]
THEN MRESAL_TAC next_eq_rtrans_r[`w`;`SUC n`;`L`;`N`;`r`;`x`;`i`][COM_POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN STRIP_TAC
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(44-37)[Tame_defs2.normal_list]
THEN DICH_TAC(49-38)
THEN REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (0))`;`r`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS1[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`yi`;`r`;`n`]
THEN RESA_TAC
THEN MRESA_TAC change_next_prev[`r`;`zi`;`d`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`yi`;`ri`;`n`]
THEN MRESA_TAC change_next_prev[`ri`;`zi`;`d`]]);;



let prev_el_betwn_ztran_rtrans=prove( `!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x /\
next_el (find_face L x) x=w   ==>
MEM (prev_el (rtrans L N r x i) (ztrans L N r x i)) (rtrans L N r x i)/\
indexf w (prev_el (rtrans L N r x i) (ztrans L N r x i)) (rtrans L N r x i) < indexf w (ztrans L N r x i)  (rtrans L N r x i)
/\ indexf w (ytrans L N r x i)  (rtrans L N r x i)<= indexf w (prev_el (rtrans L N r x i) (ztrans L N r x i)) (rtrans L N r x i)
`,
REPEAT RESA_TAC
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC Pnxvwfs.indexf_y_le_z_in_r[`f`;`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC(ARITH_RULE`!a b :num. a<b==> a<=b`)[`indexf w yi ri`;`indexf w zi ri`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`yi`;`zi`;`ri`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ a+c=b==> 0<c`)[`indexf w yi ri`;`indexf w zi ri`;`indexf yi zi ri`]
THEN MRESAL_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf yi zi ri`][]
THEN GABBREV_TAC`n=PRE (indexf yi zi ri)`
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`n`;`indexf yi zi ri`]
THEN GABBREV_TAC`d=(next_el ri POWER n) (yi)`
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(20-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESA_TAC Tame_list.indexf_n[`yi`;`zi`;`ri`]
THEN DICH_TAC 0
THEN DICH_TAC(35-17)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> ASM_REWRITE_TAC[SYM th;COM_POWER;o_DEF]
THEN ASSUME_TAC th)
THEN STRIP_TAC
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`yi`;`ri`;`n`]
THEN MRESA_TAC change_next_prev[`ri`;`zi`;`d`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`yi`;`ri`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`ri`;`w`;`zi`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ d<b/\ c<e==> d+a<e/\ d+a<=c`)[`indexf w yi ri`;`indexf yi zi ri`;`indexf w zi ri`;`n`;` sizel ri`]
THEN MRESAL_TAC Tame_list.next_eln_indexf[`n+indexf w yi ri`;`w`;`d`;`ri`][Hypermap.lemma_add_exponent_function]
THEN DICH_TAC(43-15)
THEN DICH_TAC(42-17)
THEN ARITH_TAC);;


let prev_el_betwn_ztran_ytrans_on_f=prove_by_refinement(
`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x /\
(find_face L x)=f/\
next_el f x=w   ==>
MEM (prev_el f (ztrans L N r x i)) f /\
indexf w (prev_el f (ztrans L N r x i)) f < indexf w (ztrans L N r x i)  f
/\ (indexf w (ytrans L N r x i)  f< indexf w (prev_el f (ztrans L N r x i)) f\/ prev_el f (ztrans L N r x i)= (ytrans L N r x i) )
`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> 0<b`)[`indexf w yi f`;`indexf w zi f`]
THEN MRESAL_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf w zi f`][]
THEN GABBREV_TAC`n=PRE (indexf w zi f)`
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`n`;`indexf w zi f`]
THEN GABBREV_TAC`d=(next_el f POWER n) (w)`
THEN DICH_ASM_TAC(18-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;`n`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`zi`]
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<b/\ b<c==> a<c`)[`n`;`indexf w zi f`;`sizel f`]
THEN MRESA_TAC Tame_list.next_eln_indexf[`n`;`w`;`d`;`f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`zi`;`f`]
THEN DICH_TAC 0;

SYM_DICH_TAC(26-15)
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN RESA_TAC
THEN MRESA_TAC change_next_prev[`f`;`zi`;`d`];


SYM_DICH_TAC(26-15)
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN RESA_TAC
THEN MRESA_TAC change_next_prev[`f`;`zi`;`d`]
THEN ARITH_TAC;


DICH_TAC(26-15)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th] 
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF;I_DEF]
THEN ASSUME_TAC(SYM th))
THEN STRIP_TAC
THEN MRESA_TAC change_next_prev[`f`;`zi`;`d`]
THEN DICH_TAC (28-12)
THEN RESA_TAC
THEN MRESA_TAC (ARITH_RULE`!a b:num. b< SUC a==> b<a\/ b=a`)[`n`;`indexf w yi f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`yi`;`f`]
THEN POP_ASSUM(fun th-> ASM_TAC THEN REWRITE_TAC[th]
THEN REPEAT RESA_TAC)]);;





let prev_not_in_suc_or_ytrans=prove_by_refinement(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x /\
next_el (find_face L x) x=w   ==>
~(MEM (prev_el (rtrans L N r x i) (ztrans L N r x i)) (rtrans L N r x (SUC i))) \/ (prev_el (rtrans L N r x i) (ztrans L N r x i))= (ytrans L N r x i)
`,
[
REPEAT RESA_TAC
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN GABBREV_TAC`d=prev_el ri zi`
THEN MRESA_TAC prev_el_betwn_ztran_rtrans[`w`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC PWSSRAT[`L`;`N`;`r`;`x`;`d`;`i`]
THEN MP_TAC ytrans_mem_rtrans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`][]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MP_TAC mem_ztrans_rtrans
THEN RESA_TAC
THEN THAYTHE_TAC 0[`L`;`N`;`r`;`x`;`i`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a<=b/\ b<c==> a<=c`)[`indexf w yi ri`;`indexf w d ri`;`indexf w zi ri`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`yi`;`zi`;`ri`] 
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`yi`;`d`;`ri`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ a+d=e/\ c<e==> b<=d/\ SUC b<=d`)[`indexf w yi ri`;`indexf yi d ri`;`indexf w d ri`;`indexf yi zi ri`;` indexf w zi ri`]
THEN MRESA_TAC Tame_list.indexf_add_left[`yi`;`d`;`zi`;`ri`] 
THEN MRESA_TAC(ARITH_RULE`!a b c:num. a+b=c==> b<=c`)[`indexf yi d ri `;` indexf d zi ri `;` indexf yi zi ri`]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`yi=zi`];

DICH_TAC (25-22)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`ri`]
THEN ARITH_TAC;


MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`d=zi`];

DICH_TAC (26-12)
THEN ASM_REWRITE_TAC[]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_antisym[`yi`;`zi`;`ri`]
THEN MRESA_TAC Tame_list.indexf_antisym[`d`;`zi`;`ri`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=e /\ c+d=e /\c<=a ==> b<d\/ b=d`)[`indexf yi zi ri`;`indexf zi yi ri`;`indexf d zi ri`;`indexf zi d ri`;` sizel ri`]
THEN ASM_REWRITE_TAC[ARITH_RULE`~(a<=b)<=> b<a:num`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(20-14)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`yi`;`ri`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`ri`]]);;



let prev_mem_r_suc=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
~final_list L (rtrans L N r x i)/\
marked_list L N r x /\
(find_face L x)=f/\
next_el f x=w   ==>
MEM (prev_el f (ztrans L N r x i)) (rtrans L N r x (SUC i))
`,
REPEAT RESA_TAC
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN GABBREV_TAC`d=prev_el f zi`
THEN MRESA_TAC prev_el_betwn_ztran_ytrans_on_f[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC (ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w d f`;`indexf w (ztrans L N r x i) f`]
THEN DICH_ASM_TAC(14-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;][List_hypermap.dart_in_face]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN MRESA_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`i`;`indexf w d f`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_TAC(25-14)
THEN RESA_TAC
THEN DICH_TAC(25-21)
THEN RESA_TAC);;

let change_f_list_prev_el=prove(`uniq (list_of_darts L) /\ MEM y (list_of_darts L) /\ f_list L y =x ==> prev_el (find_face L x) x =y`,
REPEAT RESA_TAC
THEN MRESAL_TAC Pwssrat.find_face_f_list_power[`SUC 0`;`L`;`y`][POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`y`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN SYM_DICH_TAC 0
THEN STRIP_TAC
THEN GABBREV_TAC`f=(find_face L x)`
THEN MATCH_MP_TAC Seq2.prev_next_id
THEN EXPAND_TAC"f"
THEN MATCH_MP_TAC List_hypermap.uniq_find_face
THEN ASM_REWRITE_TAC[]);;



let prev_el_const_le_indexf_y0=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
MEM d f /\
0< indexf w d f /\
indexf w d f  <= indexf w (ytrans L N r x 0) f /\
0 < transform_count L N r x/\
(find_face L x)=f/\
  next_el f x =w
==>  f_list L(prev_el r d)=  d
`,
REPEAT RESA_TAC
THEN GABBREV_TAC`y0=(ytrans L N r x 0)`
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`0`]
THEN MRESAL_TAC indexf_const_le_f[`w`;`d`;`f`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`0`;`f`;`w`]
THEN MRESAL_TAC indexf_const_le_f[`w`;`(ytrans L N r x 0)`;`f`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans;ARITH_RULE`a<=a:num`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_TAC(31-5)
THEN RESA_TAC
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf w d f`]
THEN GABBREV_TAC`j=PRE (indexf w d f)`
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a=b/\ b<=c==> a<=c`)[`j`;`indexf w d f`;`indexf w y0 f`]
THEN MRESAL_TAC next_el_power_trans_eq_f[`j`;`w`;`L`;`N`;`r`;`x`;`0`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESAL_TAC next_el_power_trans_eq_f[`SUC j`;`w`;`L`;`N`;`r`;`x`;`0`][]
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(37-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`]
THEN DICH_TAC (43-34)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th] THEN ASSUME_TAC (SYM th))
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]
THEN STRIP_TAC
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`r`;`j`]
THEN MRESA_TAC change_next_prev[`r`;`d`;`(next_el f POWER j) w`]
THEN DICH_TAC (46-42)
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`w`;`f`;`j`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el f POWER j) w`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER j) w`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]);;



let prev_el_const_betwn_ztran_ytrans_suc=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
(find_face L x)=f/\
  next_el f x=w/\
~final_list L (rtrans L N r x (SUC i))/\
MEM d f /\
indexf (ztrans L N r x i) d f<= indexf (ztrans L N r x i) (ytrans L N r x (SUC i)) f/\
0<indexf (ztrans L N r x i) d f
 ==>
f_list L(prev_el r d)=  d`,

REPEAT RESA_TAC
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC Qcdvkea.FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(17-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESA_TAC betwn_ztran_ytrans_suc_const[`w`;`f`;`indexf zi  d f`;`i`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf zi d f`]
THEN GABBREV_TAC`j=PRE (indexf zi d f)`
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a=b/\ b<=c==> a<=c`)[`j`;`indexf zi d f`;`indexf zi ys f`]
THEN MRESAL_TAC betwn_ztran_ytrans_suc_const[`w`;`f`;`j`;`i`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN DICH_TAC(27-23)
THEN DICH_TAC(26-23)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> MP_TAC (SYM th))
THEN RESA_TAC
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]
THEN STRIP_TAC
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`0`;`f`;`w`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`r`;`j`]
THEN MRESA_TAC change_next_prev[`r`;`d`;`(next_el f POWER j) zi`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`f`;`j`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el f POWER j) zi`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER j) zi`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC (50-22)
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]);;




let EXSITS_ZTRANS_LE_COUNT=prove_by_refinement( `!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
MEM d r/\
  MEM d f /\
 transform_count L N r x =t /\
~(f_list L(prev_el r d)=  d)/\
(find_face L x)=f/\
  next_el f x=w
==>
(!i. 0< indexf w d f /\ indexf w d f <= indexf w (ytrans L N r x i) f  /\ i<t
==>  (?j. ztrans L N r x j =d /\ j<t))`,
[
REPEAT GEN_TAC
THEN RESA_TAC
THEN INDUCT_TAC;

RESA_TAC
THEN MRESA_TAC prev_el_const_le_indexf_y0[`f`;`w`;`d`;`L`;`N`;`r`;`x`];

STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a<b==> a<b`)[`i`;`t`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b\/ b<a`)[`indexf w d f`;`indexf w (ytrans L N r x i) f`];

DICH_TAC 5
THEN RESA_TAC;


MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`SUC i`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Qcdvkea.QCDVKEA[`L`;`N`;`r`;`f`;`w`;`x`;`i`;]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ a=b\/ b<a`)[`indexf w d f`;`indexf w zi f`];

MRESA_TAC CASES1[`i`;`w`;`f`;`d`;`L`;`N`;`r`;`x`];

GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[]
THEN DICH_ASM_TAC(26-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`zi`;`f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`d`;`f`];


MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w zi f `;` indexf w d f`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`] 
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`SUC i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_add_left[`w`;`zi`;`ys`;`f`] 
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+c=b/\ a<b/\ a+d=e/\b<=e==> 0< c/\ c<=d`)[`indexf w zi f `;` indexf w d f`;`indexf zi d f`;`indexf zi ys f`;`indexf w ys f`]
THEN MRESA_TAC prev_el_const_betwn_ztran_ytrans_suc[`w`;`i`;`f`;`d`;`L`;`N`;`r`;`x`]]);;



let prev_el_const_betwn_ztran_w_suc=prove(`!L N r (x:A#A). transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
  MEM d f /\
0<t /\
 transform_count L N r x =t /\
(find_face L x)=f/\
  next_el f x=w/\
 indexf w (ztrans L N r x (PRE t)) f < indexf w d f 
==> f_list L(prev_el r d)=  d`,

REPEAT RESA_TAC
THEN GABBREV_TAC`i=PRE t`
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`t`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`i`;`t`]
THEN MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`PRE t`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN DICH_ASM_TAC(20-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b==> a<=b`)[`indexf w zi f`;`indexf w d f`]
THEN MRESAL_TAC Tame_list.indexf_add_left[`w`;`zi`;`d`;`f`][]
THEN MRESA_TAC(SET_RULE`!A. A\/ ~A`)[`w=zi`]
THENL[

DICH_TAC (28-20)
THEN ASM_REWRITE_TAC[]
THEN MRESA_TAC Tame_list.indexf_refl[`zi`;`f`]
THEN ARITH_TAC;

MRESA_TAC Tame_list.indexf_antisym[`w`;`zi`;`f`]
THEN MRESA_TAC Tame_list.indexf_lt_sizel[`f`;`w`;`d`]
THEN MRESA_TAC(ARITH_RULE`!a b c d e:num. a+b=c/\ a+d=e/\ c<e/\a<c==> 0<b/\ b<=d/\ SUC b<=d`)[`indexf w zi f`;`indexf zi d f`;`indexf w d f`;`indexf zi w f`;` sizel f`]
THEN GABBREV_TAC`j= PRE(indexf zi d f)`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`indexf zi d f`]
THEN MRESA_TAC(ARITH_RULE`!a b c. SUC a=b/\ b<=c ==> a<b/\ a<=c`)[`j`;`indexf zi d f`;`indexf zi w f`]
THEN MRESA_TAC Tame_list.indexf_n[`zi`;`d`;`f`]
THEN MRESAL_TAC CASES2[`w`;`f`;`(indexf zi d f)`;`t`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN MRESAL_TAC CASES2[`w`;`f`;`j`;`t`;`L`;`N`;`r`;`x`][COM_POWER;o_DEF]
THEN DICH_TAC 1
THEN DICH_TAC (39-35)
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[SYM th] THEN ASSUME_TAC (SYM th))
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Pnxvwfs.PNXVWFS2[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`r`;`j`]
THEN STRIP_TAC
THEN MRESA_TAC change_next_prev[`r`;`d`;`(next_el f POWER j) zi`]
THEN MRESA_TAC Pwssrat.MEM_POWER_NEXT_EL[`zi`;`f`;`j`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el f POWER j) zi`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER j) zi`;`SUC 0`][POWER;o_DEF;I_DEF;List_hypermap.dart_in_face]
THEN DICH_TAC (62-37)
THEN ASM_REWRITE_TAC[COM_POWER;o_DEF]]);;




let KBWPBHQ2_concl = `!L N r (x:A#A) u. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L/\
marked_list L N r x /\
  MEM u r /\ MEM u (find_face L x) ==>
  ((?i. ztrans L N r x i=u /\ i < transform_count L N r x) <=> 
     ~(f_list L (prev_el (find_list N u) u) = u))`;;

let KBWPBHQ2=prove_by_refinement( 
KBWPBHQ2_concl,
[

REPEAT RESA_TAC
THEN EQ_TAC
THEN RESA_TAC;


MRESAL_TAC minnum_not[`transform_count L N r x`;`(\i. final_list L (rtrans L N r x i))`;`i`][Tame_defs2.transform_count]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.find_list_uniq[`N`;`r`;`u`]
THEN MRESA_TAC prev_el_const_ztran_rtrans[`L`;`N`;`r`;`x`;`i`]
THEN SYM_DICH_TAC 0
THEN GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`;

MRESA_TAC prev_mem_r_suc[`w`;`f`;`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC prev_not_in_suc_or_ytrans[`w`;`L`;`N`;`r`;`x`;`i`];

STRIP_TAC
THEN DICH_ASM_TAC(29-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC (41-35)[Tame_defs2.normal_list]
THEN DICH_TAC (1)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`(rtrans L N r x i)`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN MRESA_TAC prev_el_betwn_ztran_rtrans[`w`;`L`;`N`;`r`;`x`;`i`]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`prev_el (rtrans L N r x i) u`][Tame_defs2.loop_list]
THEN MRESAL_TAC change_f_list_prev_el[`L`;`u`;`prev_el (rtrans L N r x i) u`][ ]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`x`;`L`]
THEN DICH_TAC 4
THEN RESA_TAC
THEN DICH_TAC(55-28)
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[];


STRIP_TAC
THEN DICH_ASM_TAC(29-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC mem_ytrans_list_of_darts[`L`;`N`;`r`;`x`;`i`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`x`;`L`]
THEN MRESAL_TAC change_f_list_prev_el[`L`;`u`;`prev_el (rtrans L N r x i) u`][ ]
THEN MRESA_TAC Seq2.next_prev_id[`u`;`f`]
THEN DICH_TAC 0
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;]
THEN DICH_ASM_TAC(41-35)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`ri`]
THEN MRESA_TAC Seq2.next_prev_id[`u`;`rtrans L N r x i`]
THEN SYM_DICH_TAC 0
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`ri`][GSYM Seq.allPn]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`i`;`f`;`w`][]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`x'`;`ri`]
THEN DICH_TAC(2)
THEN POP_ASSUM(fun th-> ONCE_REWRITE_TAC[SYM th])
THEN RESA_TAC
THEN GSUBGOAL_THEN`(indexf w x' ri) IN {m | ~(ITER (SUC (SUC m)) (next_el ri) x =
                f_list L (ITER (SUC m) (next_el ri) x))}`ASSUME_TAC;


REWRITE_TAC[IN_ELIM_THM]
THEN REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN GEN_REWRITE_TAC(RAND_CONV o DEPTH_CONV)[POWER;o_DEF;I_DEF]
THEN ASM_REWRITE_TAC[COM_POWER]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN ASM_REWRITE_TAC[];


MRESAL_TAC Nuxcoea.MIN_LEAST[`{m | ~(ITER (SUC (SUC m)) (next_el ri) x =
                f_list L (ITER (SUC m) (next_el ri) x))}`;`(indexf w x' ri)`][GSYM Tame_defs2.l_m]
THEN DICH_TAC 1
THEN REWRITE_TAC[IN_ELIM_THM;GSYM Tame_list.POWER_TO_ITER;]
THEN MRESAL_TAC Pwssrat.l_y_rep_power[`L`;`ri`;`x`][GSYM Tame_list.POWER_TO_ITER;GSYM Tame_defs2.ytrans;COM_POWER;o_DEF]
THEN REWRITE_TAC[COM_POWER;o_DEF]
THEN SYM_DICH_TAC 0
THEN EXPAND_TAC"u"
THEN EXPAND_TAC"yi"
THEN REWRITE_TAC[Tame_defs2.ytrans;]
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN ONCE_REWRITE_TAC[SET_RULE`a=b<=> b=a`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`yi`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`yi`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN EXPAND_TAC"u"
THEN EXPAND_TAC"yi"
THEN REWRITE_TAC[Tame_defs2.ytrans;]
THEN RESA_TAC
THEN SYM_DICH_TAC 0
THEN ASM_REWRITE_TAC[];

MRESAL_TAC Tame_list.AQIUNPP3[`L`;`0`;`N`;`r`;`x`][LET_THM;]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;Tame_defs2.rtrans;POWER;o_DEF;I_DEF;Tame_defs2.ntrans]
THEN DICH_ASM_TAC(19-12)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.find_list_uniq[`N`;`r`;`u`]
THEN DICH_TAC(22-6)
THEN RESA_TAC
THEN MRESA_TAC(ARITH_RULE`!a. a=0\/ 0<a`)[`transform_count L N r x`];


MRESAL_TAC final_list_transform_count[`0`;`L`;`N`;`r`;`x`][Tame_defs2.rtrans;POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(24-1)[List_hypermap.good_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC Seq2.mem_prev_el[`u`;`r`]
THEN DICH_TAC (10)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`r`][Tame_defs2.loop_list]
THEN DICH_TAC (0)
THEN REWRITE_TAC[GSYM Seq.allP]
THEN STRIP_TAC
THEN THAYTHEL_TAC 0[`prev_el r u`][Tame_defs2.loop_list]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`x`;`L`]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`u`;`prev_el r u`;`L`]
THEN MRESA_TAC Seq2.next_prev_id[`u`;`r`]
THEN MRESAL_TAC Tame_list.final_list_power[`L`;`r`;`SUC 0`;`prev_el r 
u`][POWER;o_DEF;I_DEF]
THEN MRESA_TAC List_hypermap.uniq_find_face[`(prev_el r u)`;`L`]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`(prev_el r u)`;`(find_face L (prev_el r u))`;`SUC 0`][GSYM List_hypermap.dart_in_face;POWER;o_DEF;I_DEF]
THEN DICH_TAC 0
THEN DICH_TAC 1
THEN STRIP_TAC
THEN POP_ASSUM(fun th-> REWRITE_TAC[th] THEN ASSUME_TAC (SYM th))
THEN ASM_REWRITE_TAC[]
THEN RESA_TAC
THEN DICH_TAC 5
THEN RESA_TAC
THEN DICH_TAC 2
THEN POP_ASSUM(fun th-> REWRITE_TAC[th] THEN ASSUME_TAC (SYM th))
THEN RESA_TAC
THEN MRESAL_TAC f_list_power_next_el[`L`;`prev_el r u`;`SUC 0`][List_hypermap.dart_in_face;POWER;o_DEF;I_DEF];

GABBREV_TAC`w=next_el (find_face L x) x`
THEN GABBREV_TAC`f=(find_face L x)`
THEN GABBREV_TAC`t=transform_count L N r x`
THEN GABBREV_TAC`i=PRE t`
THEN MRESA_TAC (GSYM Hypermap.LT_SUC_PRE)[`t`]
THEN MRESA_TAC(ARITH_RULE`!a b. SUC a=b==> a<b`)[`i`;`t`]
THEN MRESA_TAC (ARITH_RULE`!a:num. a=0\/ 0<a`)[`indexf w u f`];



MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC Tame_list.indexf0[`w`;`u`;`f`]
THEN DICH_ASM_TAC(32-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;I_DEF;o_DEF]
THEN DICH_TAC(38-12)
THEN RESA_TAC
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`N`;`r`]
THEN MRESA_TAC change_next_prev[`r`;`u`;`x`]
THEN DICH_TAC(40-21)
THEN ASM_REWRITE_TAC[];

MRESA_TAC (ARITH_RULE`!a b:num. a<=b\/ b<a`)[`indexf w u f`;`indexf w (ytrans L N r x (PRE t))  f`;];


MRESA_TAC EXSITS_ZTRANS_LE_COUNT[`w`;`f`;`u`;`t`;`L`;`N`;`r`;`x`]
THEN THAYTHE_TAC 0[`PRE t`];

MRESA_TAC transform_count_not[`L`;`N`;`r`;`x`;`i`]
THEN GABBREV_TAC`yi=(ytrans L N r x i)`
THEN GABBREV_TAC`ys=(ytrans L N r x (SUC i))`
THEN GABBREV_TAC`zi=(ztrans L N r x i)`
THEN GABBREV_TAC`ri=(rtrans L N r x (i))`
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<b\/ a=b\/ b<a`)[`indexf w u f`;`indexf w zi f`];

MRESA_TAC CASES1[`i`;`w`;`f`;`u`;`L`;`N`;`r`;`x`];



GEXISTS_TAC`i`
THEN ASM_REWRITE_TAC[]
THEN DICH_ASM_TAC(37-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC Pplhulj.mem_next_mark_inface[`f`;`w`;`L`;`N`;`r`;`x`]
THEN MRESA_TAC PPLHULJ[`L`;`N`;`r`;`x`;`x`;`i`;`f`;`w`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`zi`;`f`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`u`;`f`];

MRESA_TAC prev_el_const_betwn_ztran_w_suc[`t`;`w`;`f`;`u`;`L`;`N`;`r`;`x`]
]);;

 end;;





load_end __FILE__;;