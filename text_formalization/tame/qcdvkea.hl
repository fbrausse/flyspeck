(* ========================================================================== *)
(* FLYSPECK - BOOK FORMALIZATION                                              *)
(*                                                                            *)
(* Chapter: Local Fan                                              *)
(* Author: Hoang Le Truong                                        *)
(* Date: 2012-04-01                                                           *)
(* ========================================================================= *)


(*
remaining conclusions from appendix to Local Fan chapter
*)


module  Qcdvkea= struct

open Truong_tactic;;
open Hypermap;;
open Import_tame_classification;;

open Auqtzyz;;
open List_hypermap;;

open Rxokskc;;
open Dangeyj;;

open Pwssrat;;
open Ohcgkfu;;
open Pplhulj;;


let min_num_le=prove(`min_num {m | P m} = n
       /\ (!i. i < m ==> ~(P i))
/\ ~({m | P m}={})
==> m<=n`,
REWRITE_TAC[SET_RULE`~(A={})<=> ?a. a IN A`]
THEN REPEAT RESA_TAC
THEN MRESA_TAC Nuxcoea.MIN_LEAST[`{m | P m}`;`a`]
THEN DICH_TAC 1
THEN REWRITE_TAC[IN_ELIM_THM]
THEN STRIP_TAC
THEN MRESA_TAC(ARITH_RULE`!a b:num. a<=b \/ b<a`)[`m`;`n`]
THEN THAYTHE_TAC 4[`n`]);;


let FINAL_LIST_INDUCT=prove(`!L N r (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L   /\   marked_list L N r x /\ ~final_list L (rtrans L N r x (SUC i))
==> ~final_list L (rtrans L N r x (i))`,
REPEAT RESA_TAC
THEN DICH_TAC 0
THEN DICH_TAC 0
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MATCH_MP_TAC Ssrbool.contraNN
THEN RESA_TAC);;


let QCDVKEA_concl = `!L N r f w (x:A#A) i. transform_assumption_v2 L /\ good_list L /\ good_list_nodes L /\ ~final_list L (rtrans L N r x (SUC i)) /\
  marked_list L N r x /\
   find_face L x = f /\
   next_el f x =w ==>
  indexf w (ztrans L N r x i) f <= indexf w (ytrans L N r x (SUC i)) f`;;


let  QCDVKEA= prove(QCDVKEA_concl,

REPEAT GEN_TAC
THEN STRIP_TAC
THEN MRESA_TAC FINAL_LIST_INDUCT[`L`;`N`;`r`;`x`;`i`;]
THEN ASM_REWRITE_TAC[Tame_defs2.rtrans;Tame_defs2.transform_list;COM_POWER;o_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN ASM_REWRITE_TAC[Tame_defs2.transform_list;LET_THM;Tame_defs2.split_normal_list;GSYM Tame_defs2.ztrans]
THEN GABBREV_TAC`r1=(rtrans L N r x i)`
THEN GABBREV_TAC`r2=(rtrans L N r x (SUC i))`
THEN GABBREV_TAC`y=l'y L r1 x`
THEN GABBREV_TAC`z1=prev_el r1 (ztrans L N r x i)`
THEN GABBREV_TAC`z=ztrans L N r x i`
THEN REWRITE_TAC[MEM_APPEND;Seq.mem_seq1;]
THEN MRESA_TAC Pplhulj.indexf_ytrans_eq_l_m[`L`;`N`;`r`;`x`;`(ytrans L N r x i)`;`SUC i`;`f`;`w`]
THEN MRESAL_TAC min_num_le[`(\m. ~(ITER (SUC (SUC m)) (next_el r2) x =
                f_list L (ITER (SUC m) (next_el r2) x)))`;`indexf w z f`;`l'm L r2 x`][GSYM Tame_defs2.l_m]
THEN MATCH_DICH_TAC 0
THEN REWRITE_TAC[GSYM Tame_list.POWER_TO_ITER]
THEN STRIP_TAC
THENL[

REPEAT RESA_TAC
THEN MRESA_TAC (ARITH_RULE`!a b. a<b==> SUC a<=b /\ a<=b`)[`i'`;`indexf w z f`]
THEN MRESA_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`i`;`SUC i'`]
THEN MRESA_TAC Ncvibwu.NCVIBWU[`L`;`N`;`r`;`f`;`w`;`x`;`i`;`i'`]
THEN ASM_REWRITE_TAC[POWER;o_DEF;I_DEF]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`SUC i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(37-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN DICH_ASM_TAC(43-31)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (SUC i))`;`r2`]
THEN DICH_ASM_TAC(49-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`;`f`;`w`][Tame_defs2.ytrans;]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`((next_el f POWER i') w)`;`r2`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`((next_el f POWER (SUC i')) w)`;`r2`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o LAND_CONV o DEPTH_CONV)[POWER;o_DEF;I_DEF]
THEN RESA_TAC
THEN REWRITE_TAC[COM_POWER;o_DEF]
THEN MRESAL_TAC Pwssrat.MEM_POWER_NEXT_EL[`x`;`find_face L x`;`SUC i'`][POWER;I_DEF;o_DEF;GSYM List_hypermap.dart_in_face]
THEN MRESA_TAC List_hypermap.mem_find_face_imp_faces_eq[`(next_el f POWER i') w`;`x`;`L`]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`(next_el f POWER i') w`;`SUC 0`][POWER;I_DEF;o_DEF;List_hypermap.dart_in_face];



ONCE_REWRITE_TAC[SET_RULE`(A={})<=> ~(?a. a IN A)`]
THEN STRIP_TAC
THEN DICH_TAC 1
THEN DICH_TAC 0
THEN REWRITE_TAC[NOT_EXISTS_THM;IN_ELIM_THM]
THEN STRIP_TAC
THEN MRESAL_TAC Tame_defs2.final_list[`L`;`r2`][GSYM Seq.allPn]
THEN DICH_ASM_TAC(24-10)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x i)`;`r1`]
THEN MP_TAC Ncvibwu.next_mark_mem_r_trans
THEN RESA_TAC
THEN THAYTHEL_TAC 0[`L`;`N`;`r`;`x`;`SUC i`;`f`;`w`][Tame_defs2.ytrans;]
THEN MRESAL_TAC Tame_list.AQIUNPP3[`L`;`SUC i`;`N`;`r`;`x`][LET_THM]
THEN DICH_ASM_TAC 0[Tame_defs2.marked_list;transform_list_power_rep]
THEN DICH_ASM_TAC(39-33)[Tame_defs2.normal_list]
THEN MRESA_TAC Tame_list.uniq_flatten_uniq[`(ntrans L N r x (SUC i))`;`r2`]
THEN MRESA_TAC Tame_list.indexf_n[`w`;`x'`;`r2`]
THEN THAYTHE_TAC(46-22)[`indexf w x' r2`]
THEN DICH_TAC 0
THEN GEN_REWRITE_TAC(LAND_CONV o RAND_CONV o DEPTH_CONV)[POWER;o_DEF;I_DEF]
THEN ASM_REWRITE_TAC[]
THEN GEN_REWRITE_TAC(LAND_CONV o LAND_CONV o ONCE_DEPTH_CONV)[COM_POWER;o_DEF;I_DEF]
THEN DICH_ASM_TAC(45-1)[Tame_defs2.good_list]
THEN MRESA_TAC List_hypermap.uniq_find_face[`x`;`L`]
THEN MRESA_TAC marked_list_of_dart[`L`;`N`;`r`;`x`;]
THEN MRESAL_TAC Pwssrat.f_list_power_next_el[`L`;`x`;`SUC 0`][POWER;o_DEF;I_DEF]
]);;



 end;;



